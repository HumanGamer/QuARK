[[user32.dll]]

[CreateWindowEx,CreateWindowExA,CreateWindowExW]
CreateWindowEx creates an overlapped, pop-up, or child window with an extended style.
The returned window handle must be freed with DestroyWindow or by passing a
WM_DESTROY message to the default window procedure.

[CreateWindow,CreateWindowA,CreateWindowW]
CreateWindow creates an overlapped, pop-up, or child window.
The returned window handle must be freed with DestroyWindow or by passing a
WM_DESTROY message to the default window procedure.


[CreateMDIWindow,CreateMDIWindowA,CreateMDIWindowW]
CreateMDIWindow creates a multiple document interface (MDI) child window.
The returned window handle must be freed with DestroyWindow or by passing a
WM_DESTROY message to the default window procedure.


[CreateDialogParam,CreateDialogParamA,CreateDialogParamW]
CreateDialogParam creates a modeless dialog box from a dialog box template resource.
The returned window handle must be freed with DestroyWindow or by passing a
WM_DESTROY message to the default window procedure.

[CreateDialogIndirectParam,CreateDialogIndirectParamA,CreateDialogIndirectParamW]
CreateDialogIndirectParam creates a modeless dialog box from a dialog box template in memory.
The returned window handle must be freed with DestroyWindow or by passing
a WM_DESTROY message to the default window procedure.

[CreateMenu]
CreateMenu creates a menu.
The returned menu handle must be freed with DestroyMenu when no longer needed.

[LoadMenu,LoadMenuA,LoadMenuW]
LoadMenu loads the specified menu resource from a module file.
The returned menu handle must be freed with DestroyMenu when no longer needed.

[LoadMenuIndirect,LoadMenuIndirectA,LoadMenuIndirectW]
LoadMenuIndirect loads the specified menu template in memory.
The returned menu handle must be freed with DestroyMenu when no longer needed.


[CreatePopupMenu]
CreatePopupMenu creates a drop-down menu, submenu, or shortcut menu.
The returned menu handle must be freed with DestroyMenu when no longer needed.

[LoadImage,LoadImageA,LoadImageW]
LoadImage creates a new image (icon, cursor, or bitmap) from a resource.
The returned image handle must be freed with DestroyIcon(icons), DestroyCursor(cursors)
or DeleteObject(bitmaps).

[CopyImage]
CopyImage creates a new image (icon, cursor, or bitmap) and copies the attributes
of the specified image to the new one.
The returned image handle must be freed with DestroyIcon (icons), DestroyCursor(cursors)
or DeleteObject(bitmaps).


[GetIconInfo]
GetIconInfo retrieves information about the specified icon or cursor.
The hbmMask and hbmColor members of the ICONINFO structure must be freed with
DeleteObject when no longer needed.

[CreateIcon]
GetIconInfo creates an icon that has the specified size, colors, and bit patterns.
The returned icon handle must be freed with DestroyIcon when no longer needed.

[LoadIcon,LoadIconA,LoadIconW]
LoadIcon loads the specified icon resource from a module resource.
The returned icon handle must be freed with DestroyIcon when no longer needed.

[CreateIconFromResource]
CreateIconFromResource creates an icon or cursor from resource bits describing the icon.
The returned icon handle must be freed with DestroyIcon when no longer needed.

[CreateIconFromResourceEx]
CreateIconFromResourceEx creates an icon or cursor from resource bits describing the icon.
The returned icon handle must be freed with DestroyIcon when no longer needed.

[CreateIconIndirect]
CreateIconIndirect creates an icon or cursor from an ICONINFO structure.
The returned icon handle must be freed with DestroyIcon when no longer needed.

[CopyIcon]
CopyIcon copies an icon.
The returned icon handle must be freed with DestroyIcon when no longer needed.

[CreateCursor]
CreateCursor creates a cursor having the specified size, bit patterns, and hot spot.
The returned cursor handle must be freed with DestroyCursor when no longer needed.

[CopyCursor]
CopyCursor copies a cursor.
The returned cursor handle must be freed with DestroyCursor when no longer needed.

[LoadCursorFromFile,LoadCursorFromFileA,LoadCursorFromFileW]
LoadCursorFromFile creates a cursor based on data contained in a file.
The returned cursor handle must be freed with DestroyCursor when no longer needed.

[LoadCursor,LoadCursorA,LoadCursorW]
LoadCursor loads the specified cursor resource from a module resource.
The returned cursor handle must be freed with DestroyCursor when no longer needed.


[CreateAcceleratorTable,CreateAcceleratorTableA,CreateAcceleratorTableW]
CreateAcceleratorTable creates an accelerator table.
The returned accelerator table handle must be freed with DestroyAcceleratorTable
when no longer needed.

[SetTimer]
SetTimer creates a timer with the specified time-out value.
The returned timer must be freed with KillTimer when no longer needed.


[CreateWindowStation,CreateWindowStationA,CreateWindowStationW]
CreateWindowStation creates a window station object.
The returned window station object must be freed with CloseWindowStation when no longer needed.

[OpenWindowStation,OpenWindowStationA,OpenWindowStationW]
OpenWindowStation returns a handle to an existing window station.
The returned window station object must be freed with CloseWindowStation when no longer needed.

[LoadKeyboardLayout,LoadKeyboardLayoutA,LoadKeyboardLayoutW]
LoadKeyboardLayout loads a new keyboard layout into the system.
The returned keyboard layout object must be freed with UnloadKeyboardLayout when no longer needed.


[LoadBitmap,LoadBitmapA,LoadBitmapW]
LoadBitmap loads the specified bitmap resource from a module resource.
The returned bitmap handle must be freed with DeleteObject when no longer needed.


[GetWindowDC]
GetWindowDC retrieves the device context (DC) for the entire window
(including title bar, menus, and scroll bars).
The returned device context handle must be freed with ReleaseDC when no longer needed.

[GetDC]
GetDC retrieves a handle of a display device context (DC) for the client area of the specified window.
The returned device context handle must be freed with ReleaseDC when no longer needed.

[GetDCEx]
GetDCEx retrieves the handle of a display device (DC) context for the specified window.
The returned device context handle must be freed with ReleaseDC when no longer needed.


