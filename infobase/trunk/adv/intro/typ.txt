title: Guide to Typ's
author: Decker

Here is a list of the most common used Typ's in .QRK :form definitions.

<table border=1 cellpadding=2 cellspacing=0>
<tr><th width=10%>Typ's</th><th width=40%>Description</th><th width=50%>Example</th></tr>

<tr><td align=center>
E[-R]
</td><td valign=top>
<b>Entry field</b>.<br>
This is the default type, if Typ="..." is not given.<br>
The last "R" (at third position) means Read/Only<br>
</td><td>
<pre>
targetname: = { Typ="E" Txt="&" }
target: = { Txt="&" }
</pre>
</td></tr>

<tr><td align=center>
EF[R]<br>
EF[999]
</td><td valign=top>
<b>Entry field containing Float(s)</b>.<br>
The last "R" (at third position) means Read/Only<br>
</td><td>
<pre>
.
</pre>
</td></tr>

<tr><td align=center>
ED[L]<br>
</td><td valign=top>
<b>Entry field containing Directory-path (with browse button)</b>.<br>
The last "L" (at third position) means only the last foldername of the path is to be used.<br>
</td><td>
<pre>
SourceDir: = { Typ="ED" Hint="Full directory-path" }
GameMod: = { Typ="EDL" Hint="Modification folder" }
</pre>
</td></tr>

<tr><td align=center>
ET<br>
</td><td valign=top>
<b>Entry field containing Texture-name (with browse button)</b>.<br>
Opens the texture-browser, if the browse button is pressed.<br>
</td><td>
<pre>
Texture: = { Typ="ET" Hint="Choose texture" }
</pre>
</td></tr>

<tr><td align=center>
EP<br>
</td><td valign=top>
<b>Entry field containing Path and File-name (with browse button)</b>.<br>
Opens a file-dialog, so the user can choose a filename.
</td><td>
<pre>
QBSP1: = { Typ="EP" Txt="Path to QBSP" DefExt="exe" }
LIGHT1: = { Typ="EP" Txt="Path to QRAD3" DefExt="exe" }
</pre>
</td></tr>

<tr><td align=center>
EP<br>
specifics<br>
</td><td valign=top>
<b>This is a list of specifics that effect the path<br>
handling for the Typ="EP" above</b>.
</td><td>
<pre>
1) <b>Typ="EP"</b> opens the file browser window.
2) <b>Txt="Path to QBSP"</b> gives the title at the top of the window.
3) <b>DefExt="md2; map; pcx"</b> sets the type of file/files to accept.
4) <b>BasePath="$Game"</b> sets the Directory that the browser window
                           will start with.
                      $Game will be converted to the game
                           directory... for example "C:\Quake2".
5) <b>CutPath="$Game\?\"</b> will be cut off the beginning of the
                           full path string.
                      $Game is the same as above.
                      ? means that there HAS to be a directory.
                      * means that there may or may not be a
                           directory and only stands for ONE
                           directory. For example
               "$Game\?\sprites\*\" accepts all of the following:
                           C:\Quake2\baseq2\sprites\abc.spr
                           C:\Quake2\xyz\sprites\xyz\abc.spr
                      but not:
                           C:\Quake2\baseq2\sprites\a\b\c\abc.spr
6) <b>DirSep="/"</b> Quake games use '/' as path separator. Using this
                   this  specific will convert all the "\" to "/".
7) <b>AugPath="../ "</b>  will augment the modified path and add ../ to
                           it at the beginning. The DirSep specific 
                           above does not effect this specific,
                           so proper coding should be used.
</pre>
</td></tr>

<tr><td align=center>
EQ<br>
</td><td valign=top>
<b>Entry field with direction button</b>.<br>
Displays entry field for two floating point entries and 
4-way directional button as pressed gives floating point entries.<br>
</td><td>
<pre><br>
<img align=left>EQ_btn.png</img>
</br>
<br>
offset: = { Txt = "Offset" Typ="EQ" Hint="x, y offsets" }
</br>
</pre>
</td></tr>

<tr><td align=center>
EU<br>
</td><td valign=top>
<b>Entry field with increase/decrease button</b>.<br>
Displays entry field for single digit entry and 
increase/decrease button as pressed gives single digit entry.<br>
</td><td>
<pre><br>
<img align=left>EU_btn.png</img>
</br>
<br>
tilt: = { Txt = "Tilt" Typ="EU" Hint="`tilt' angle, in degrees." }
</br>
</pre>
</td></tr>

<tr><td align=center>
X&lt;value&gt;
</td><td valign=top>
<b>Checkbox</b>, which sets the bits according to &lt;value&gt;.<br>
The same specificname may appear, with different &lt;values&gt;, so each bit in the specific can be controlled individually.<br>
Usually used together with a Cap="...", to tell what the bit controls.
</td><td>
<pre>
spawnflags: = { Typ="X1" Cap="Ambush" Txt="&" }
spawnflags: = { Typ="X2" Cap="On Trigger" Txt="&" }
spawnflags: = { Typ="X128" Cap="X Axis" Txt="&" }
</pre>
</td></tr>

<tr><td align=center>
C
</td><td valign=top>
<b>Combo box</b>.<br>
A predefined list of choices and their values. To use this type, the <i>items</i> and <i>values</i> must also be set, as can be seen in the example.<br>
Each choice in the list will be indicated by a newline ($0D), except for the last choice!
</td><td>
<pre>
mylist: = { Typ="C" Txt="&"
  items =
      "Choice 1" $0D
      "Choice 2" $0D
      "Choice 3"
  values =
      "1" $0D
      "2" $0D
      "3"
}
</pre>
</td></tr>

<tr><td align=center>
B
</td><td valign=top>
<b>Pushbutton</b>.<br>
Usually used to activate a second spec/arg view (a :form), which contains other spec/args thats more specialized for some purpose.<br>
The Cap="..." controls the text in the pushbutton.
</td><td>
<pre>
more: = { Typ="B" Txt="Specialize"
  Cap = "Push..."
  Form = "specialize_this:form"
}
</pre>
</td></tr>

<tr><td align=center>
L[N[4]]
</td><td valign=top>
<b>Color-picker pushbutton</b>.<br>
A pushbutton which shows the choosen color, and when activated, will bring up a color dialog.<br>
If only Typ="L" is given, the resulting RGB values, will be in range 0 - 255.<br>
If Typ="LN" is given, the RGB values will be normalized to range 0.0 - 1.0.<br>
If Typ="LN4" or Typ="L 4" is given, there will be created a fourth value, which controls the brightness of the light. This however, must be changed using a second spec/arg pair, with Typ="E".
</td><td>
<pre>
_color: = { Typ="L" Txt="&" }
_light: = { Typ="LN" Txt="&" }
light: = { Typ="L 4" Txt="&" }
_lightbright: = { Typ="LN4" Txt="&" }

//To view the exact values, create a
//second spec/arg pair
color: = { Txt="&" Typ="L" } //Pushbutton
color: = { Txt="&" } //Entryfield
</pre>
</td></tr>

<tr><td align=center>
S
</td><td valign=top>
<b>Seperator</b>.
</td><td>
<pre>
sep: = { Typ="S" }
</pre>
</td></tr>

<!--
<tr><td align=center>
</td><td valign=top>
</td><td>
<pre>
</pre>
</td></tr>
-->

</table>
