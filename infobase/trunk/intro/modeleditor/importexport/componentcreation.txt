title: Creating a Component in the Code
author: cdunde

In one of our previous functions, <a href="#import_md2_model2">import_md2_model</a>,
we had the data to create a component returned to that function.
Here we will look at its code, which is shown below, to see exactly how that is written.
<code>
    # Now we can name our component that will be imported.
    Component = quarkx.newobj(name + ':mc')
    Component['skinsize'] = skinsize
    Component['Tris'] = Tris
    Component['show'] = chr(1)
    sdogroup = quarkx.newobj('SDO:sdo')
    Component.appenditem(sdogroup)
    Component.appenditem(skingroup)
    skeletongroup = quarkx.newobj('Skeleton:bg')
    Component.appenditem(framesgroup)
    Component.appenditem(skeletongroup)
</code>

Just under the above code in the <g>QuArK\plugins\ie_md2_import.py</g> file you will see this code.
<code>
    ### Use the 'ModelRoot' below to test opening the QuArK's Model Editor with,
    ### needs to be qualified with main menu item.
    ModelRoot = quarkx.newobj('Model:mr')
  #  ModelRoot.appenditem(Component)
</code>
Right now that last line is <g>commented out</g> to keep it from actually working to avoid any errors.
But as mentioned some time ago, this will be used in the future to open the editor with directly
using an imported model and should therefore be added to your code now.