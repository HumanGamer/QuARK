title: What QuArK expects to find from Python
author: Armin Rigo

When QuArK starts, it initializes the Python interpreter and loads the package called quarkpy. This should be a subdirectory in the directory that contains quark.exe. Once this package (i.e. the file quarkpy\__init__.py) has been loaded, QuArK calls its function RunQuArK(). See the file __init__.py for more details about the start-up process.

To answer to user actions, QuArK needs to call Python code. This is usually done by setting some variables that QuArK knows how to read so that they point to a Python function. In some cases, however, this is not possible; these cases are handled by the module qmacro.py which contains functions with special names, all beginning with MACRO_. See below for a list of all macros that QuArK expects to find there.

QuArK exposes all its features to Python code through the built-in module quarkx. Constant values and various utilities are found in the Python modules qutils.py and qeditor.py.

For examples about all the following stuff, see the .py files included with QuArK.
