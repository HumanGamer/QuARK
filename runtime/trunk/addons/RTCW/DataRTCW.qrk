QQRKSRC1
// Configuration file for RTCW

//$Header$
// ----------- REVISION HISTORY ------------
//$Log$
//Revision 1.4  2002/04/29 00:16:49  tiglari
//altered texture loading to use GtkRadiant clean shaders
//
//Revision 1.3  2002/04/28 11:40:18  tiglari
//Modifications to get RTCW support working better
//
//Revision 1.2  2002/02/05 18:32:38  decker_dk
//Corrected default room textures, and converted GTKRadiant's Wolf_Entites.def file to this file.
//
//Revision 1.1  2001/12/05 20:38:04  decker_dk
//Added RTCW (Return To Castle Wolfenstein)
//

{
  QuArKProtected = "1"
  Description = "Base RTCW data"

  RTCW setup.qctx =
  {
    Game = "RTCW"
    HTML = "help/index.html"
    Palette = $0000000F0F0F1F1F1F2F2F2F3F3F3F4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9BAB
     $ABABBBBBBBCBCBCBDBDBDBEBEBEB634B235B431F533F1F4F3B1B47371B3F2F173B2B1733
     $27132F23132B1F13271B0F23170F1B130B170F0B130F070F0B075F5F6F5B5B675B535F57
     $4F5B534B534F474B473F433F3B3B3B3737332F2F2F2B2B2727272323231B1B1B17171713
     $13138F77537B6343735B3B674F2FCF974BA77B3B8B672F6F5327EB9F27CB8B23AF771F93
     $631B774F175B3B0F3F270B231707A73B2B9F2F23972B1B8B27137F1F0F73170B67170757
     $13004B0F00430F003B0F00330B002B0B00230B001B07001307007B5F4B7357436B533F67
     $4F3B5F4737574333533F2F4B372B4333273F2F2337271B2F2317271B131F170F170F0B0F
     $0B076F3B175F3717532F17432B17372313271B0F1B130B0F0B07B35B4FBF7B6FCB9B93D7
     $BBB7CBD7DFB3C7D39FB7C387A7B77397A75B879B47778B2F677F17536F134B670F435B0B
     $3F5307374B072F3F072733001F2B00171F000F1300070B0000008B5757834F4F7B474773
     $43436B3B3B6333335B2F2F572B2B4B23233F1F1F331B1B2B13131F0F0F130B0B0B070700
     $0000979F7B8F9773878B6B7F8363777B5F7373576B6B4F6363475B5B434F4F3B43433337
     $372B2F2F2323231B1717130F0F0B9F4B3F9343378B3B2F7F3727772F236B2B1B63231757
     $1F134F1B0F43170B37130B2B0F071F0B071707000B0000000000777BCF6F73C3676BB763
     $63A75B5B9B53578F4B4F7F4747733F3F673737572F2F4B27273F231F2F1B1723130F170B
     $07079BAB7B8F9F6F8797637B8B5773834B6777435F6F3B5767334B5B273F4F1B3743132F
     $3B0B232F071B23001317000B0F0000FF0023E70F3FD31B53BB275FA72F5F8F335F7B33FF
     $FFFFFFFFD3FFFFA7FFFF7FFFFF53FFFF27FFEB1FFFD717FFBF0FFFAB07FF9300EF7F00E3
     $6B00D35700C74700B73B00AB2B009B1F008F17007F0F007307005F00004700002F00001B
     $0000EF00003737FFFF00000000FF2B2B231B1B1713130FEB977FC373539F57337B3F1BEB
     $D3C7C7AB9BA78B77876B579F5B53
    ShaderFiles: =
    {
      scripts/shaderlist.txt =
      {
        Data =
            "// Created by QuArK"$0D0A
            "// All shaders are extracted to a single file called 'quark.shader'"$0D0A
            "quark"$0D0A
      }
      scripts/shaderlist.txt =     // 2nd case: if there is no shader in the map
      {
        Data =
            "// Created by QuArK"$0D0A
            "// No shader in this map"$0D0A
      }
    }

    TextureFlags:form =     // a form for setting Quake 2 texture flags on polyhedron faces
    {
      Style = "5"
      Reset: =       // Reset button
      {
        Cap = "Reset to default"      // button caption
        Typ = "B"                     // "B"utton
        Hint = "Reset all flags to the texture's default"
        Delete: =
        {
          Flags = ""          // the button deletes these Specifics
          Contents = ""
          Value = ""
        }
      }
      Contents:={Cap="detail"         Typ="X134217728" Hint="for small, detail brushes that QVIS3 can ignore"}
    }
  }

  NewFiles.qtx =
  {
    ToolBox = "New files..."
    Root = "RTCW file types.qtxfolder"

    RTCW file types.qtxfolder =
    {
      Pk3.pk3 = { }
    }
  }

// Basic Map! With some modifications by Maleficus!
  NewMap:incl =
  {
    Game = "RTCW"
    Root = "worldspawn:b"

// Maleficus: gotta show all those newbie mappers how to caulk! :)
// Its best to caulk ALL unseen faces! This reduces compile times, and the size
// of the .bsp file

    worldspawn:b =
    {
      Border walls:g =
      {
        East wall:p =
        {
          west:f =
          {
            v = '256 192 -96 256 96 -96 256 192 0'
            tex = "xlab_wall/xconcrete_c53b"
          }
          east:f =
          {
            v = '272 -192 -96 272 -64 -96 272 -192 32'
            tex = "common/caulk"
          }
          south:f =
          {
            v = '256 -192 -96 288 -192 -96 256 -192 32'
            tex = "common/caulk"
          }
          north:f =
          {
            v = '272 192 -96 240 192 -96 272 192 32'
            tex = "common/caulk"
          }
          down:f =
          {
            v = '256 192 -96 288 192 -96 256 64 -96'
            tex = "common/caulk"
          }
          up:f =
          {
            v = '256 -192 96 288 -192 96 256 -64 96'
            tex = "common/caulk"
          }
        }
        West wall:p =
        {
          west:f =
          {
            v = '-272 192 -96 -272 64 -96 -272 192 32'
            tex = "common/caulk"
          }
          east:f =
          {
            v = '-256 -192 -96 -256 -96 -96 -256 -192 0'
            tex = "xlab_wall/xconcrete_c53b"
          }
          south:f =
          {
            v = '-272 -192 -96 -240 -192 -96 -272 -192 32'
            tex = "common/caulk"
          }
          north:f =
          {
            v = '-256 192 -96 -288 192 -96 -256 192 32'
            tex = "common/caulk"
          }
          down:f =
          {
            v = '-272 192 -96 -240 192 -96 -272 64 -96'
            tex = "common/caulk"
          }
          up:f =
          {
            v = '-272 -192 96 -240 -192 96 -272 -64 96'
            tex = "common/caulk"
          }
        }
        North wall:p =
        {
          west:f =
          {
            v = '-256 208 -96 -256 176 -96 -256 208 32'
            tex = "common/caulk"
          }
          east:f =
          {
            v = '256 192 -96 256 224 -96 256 192 32'
            tex = "common/caulk"
          }
          south:f =
          {
            v = '-256 192 -96 -128 192 -96 -256 192 0'
            tex = "xlab_wall/xconcrete_c53b"
          }
          north:f =
          {
            v = '256 208 -96 128 208 -96 256 208 32'
            tex = "common/caulk"
          }
          down:f =
          {
            v = '-256 208 -96 -128 208 -96 -256 176 -96'
            tex = "common/caulk"
          }
          up:f =
          {
            v = '-256 192 96 -128 192 96 -256 224 96'
            tex = "common/caulk"
          }
        }
        South wall:p =
        {
          west:f =
          {
            v = '-256 -192 -96 -256 -224 -96 -256 -192 32'
            tex = "common/caulk"
          }
          east:f =
          {
            v = '256 -208 -96 256 -176 -96 256 -208 32'
            tex = "common/caulk"
          }
          south:f =
          {
            v = '-256 -208 -96 -128 -208 -96 -256 -208 32'
            tex = "common/caulk"
          }
          north:f =
          {
            v = '256 -192 -96 128 -192 -96 256 -192 0'
            tex = "xlab_wall/xconcrete_c53b"
          }
          down:f =
          {
            v = '-256 -192 -96 -128 -192 -96 -256 -224 -96'
            tex = "common/caulk"
          }
          up:f =
          {
            v = '-256 -208 96 -128 -208 96 -256 -176 96'
            tex = "common/caulk"
          }
        }
        Sky:p =
        {
          west:f =
          {
            v = '-256 0 272 -256 -128 272 -256 0 400'
            tex = "skies/a_skybox"
          }
          east:f =
          {
            v = '256 0 272 256 128 272 256 0 400'
            tex = "skies/a_skybox"
          }
          south:f =
          {
            v = '432 -192 272 560 -192 272 432 -192 400'
            tex = "skies/a_skybox"
          }
          north:f =
          {
            v = '432 192 272 304 192 272 432 192 400'
            tex = "skies/a_skybox"
          }
          down:f =
          {
            v = '432 0 96 560 0 96 432 -128 96'
            tex = "skies/a_skybox"
          }
          up:f =
          {
            v = '432 0 112 560 0 112 432 128 112'
            tex = "skies/a_skybox"
          }
        }
        Floor:p =
        {
          west:f =
          {
            v = '-256 0 272 -256 -128 272 -256 0 400'
            tex = "common/caulk"
          }
          east:f =
          {
            v = '256 0 272 256 128 272 256 0 400'
            tex = "common/caulk"
          }
          south:f =
          {
            v = '432 -192 272 560 -192 272 432 -192 400'
            tex = "common/caulk"
          }
          north:f =
          {
            v = '432 192 272 304 192 272 432 192 400'
            tex = "common/caulk"
          }
          down:f =
          {
            v = '432 0 -112 560 0 -112 432 -128 -112'
            tex = "common/caulk"
          }
          up:f =
          {
            v = '432 0 -96 560 0 -96 432 128 -96'
            tex = "xlab_floor/xfloor_c07"
          }
        }
      }
      info_player_start:e =
      {
        origin = "-144 0 -64"
        angle = "360"
      }
      info_player_deathmatch:e =
      {
        origin = "144 0 -64"
        angle = "0"
      }
      light:e =
      {
        origin = "144 0 0"
        light = "300"
        _color = "1 1 1"
      }
      light:e =
      {
        origin = "-144 0 0"
        light = "300"
        _color = "1 1 1"
      }
    }
  }

  Textures.qtx =
  {
    Toolbox = "Texture Browser..."
    Root = "RTCW Textures and Shaders.qtxfolder"

    RTCW Textures and Shaders.qtxfolder =
    {
      Main (GtkRadiant clean).osfolder =
      {
        path = "Main"
      }
//      All shaders from pk3s.osfolder =
//      {
/        path = "Main"
//        allshaders = "1"
//      }
    }
  }

  t_originpoly:incl =
  {
    ORIGIN:p =
    {
      east:f = { v = '8 0 0 8 64 0 8 0 64' tex = "common/origin" }
      west:f = { v = '-8 0 0 -8 -64 0 -8 0 64' tex = "common/origin" }
      north:f = { v = '0 8 0 -64 8 0 0 8 64' tex = "common/origin" }
      south:f = { v = '0 -8 0 64 -8 0 0 -8 64' tex = "common/origin" }
      up:f = { v = '0 0 24 64 0 24 0 64 24' tex = "common/origin" }
      down:f = { v = '0 0 -24 64 0 -24 0 -64 -24' tex = "common/origin" }
    }
    poly:p =
    {
      east:f = { v = '32 -32 -32 32 96 -32 32 -32 96' tex = "[auto]" }
      west:f = { v = '-32 -32 -32 -32 -32 96 -32 96 -32' tex = "[auto]" m = "1" }
      north:f = { v = '-32 32 -32 -32 32 96 96 32 -32' tex = "[auto]" m = "1" }
      south:f = { v = '-32 -32 -32 96 -32 -32 -32 -32 96' tex = "[auto]" }
      up:f = { v = '-32 -32 32 96 -32 32 -32 96 32' tex = "[auto]" }
      down:f = { v = '-32 -32 -32 -32 96 -32 96 -32 -32' tex = "[auto]" m = "1" }
    }
  }

  RTCWEntities.qtx =
  {
    ToolBox = "New map items..."
    Root = "RTCW Entities.qtxfolder"

    RTCW Entities.qtxfolder =
    {
      ;desc = "Created from wolf_entities.def"
      ai_* entities.qtxfolder =
      {
        ai_american:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_blackguard:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_boss_heinrich:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_boss_helga:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_civilian:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_eliteguard:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_femzombie:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_loper:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_marker:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_partisan:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_protosoldier:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_soldier:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_supersoldier:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_trigger:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        ai_venom:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_warzombie:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ai_zombie:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      alarm_* entities.qtxfolder =
      {
        alarm_box:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
      }
      ammo_* entities.qtxfolder =
      {
        ammo_127mm:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_30cal:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_30cal_large:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_30cal_small:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_45cal:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_45cal_large:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_45cal_small:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_792mm:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_792mm_large:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_792mm_small:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_9mm:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_9mm_large:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_9mm_small:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_cell:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_dynamite:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_fuel:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_grenades:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_grenades_american:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        ammo_panzerfaust:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      camera_* entities.qtxfolder =
      {
        camera_cam:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        camera_reset_player:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
      }
      func_* entities.qtxfolder =
      {
        func_bobbing:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_button:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_door:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_door_rotating:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_explosive:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_group:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_invisible_user:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_leaky:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_pendulum:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_plat:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_rotating:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_static:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        func_timer:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        func_train_rotating:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
      }
      holdable_* entities.qtxfolder =
      {
        holdable_11:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        holdable_12:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        holdable_13:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        holdable_14:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        holdable_15:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        holdable_book1:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        holdable_book2:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        holdable_book3:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        holdable_medkit:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        holdable_stamina:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        holdable_wine:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      info_* entities.qtxfolder =
      {
        info_camp:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        info_notnull:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        info_notnull_big:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        info_null:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        info_player_checkpoint:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        info_player_deathmatch:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        info_player_intermission:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        info_player_start:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      item_* entities.qtxfolder =
      {
        item_armor_body:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_armor_body_hang:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_armor_head:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_clipboard:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_health:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_health_breadandmeat:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_health_large:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_health_small:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_health_turkey:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_health_wall:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_health_wall_box:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_stamina_brandy:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_stamina_stein:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        item_treasure:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      key_* entities.qtxfolder =
      {
        key_7:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_binocs:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_chalice2:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_eye3:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_key10:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_key11:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_key12:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_key13:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_key14:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_key15:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_key16:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_key8:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_key9:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_radio4:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_satchelcharge5:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        key_skull1:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      misc_* entities.qtxfolder =
      {
        misc_bubbles16:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_bubbles32:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_bubbles64:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_bubbles8:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_firetrails:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_flak:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_gamemodel:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_grabber_trap:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_light_surface:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_mg42:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_model:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_portal_camera:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_portal_surface:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_snow128:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_snow256:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_snow32:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_snow64:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_spawner:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_spotlight:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_teleporter_dest:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_vis_dummy:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        misc_vis_dummy_multiple:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      other entities.qtxfolder =
      {
        corona:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        dlight:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        light:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        lightJunior:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        worldspawn:b =
        {
        }
      }
      path_* entities.qtxfolder =
      {
        path_corner:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      props_* entities.qtxfolder =
      {
        props_58x112tablew:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        props_bench:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        props_box_32:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_box_48:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_box_64:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_castlebed:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        props_chair:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_chair_chat:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_chair_chatarm:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_chair_hiback:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_chair_side:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_crate_32:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_crate_32x64:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        props_crate_64:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_damageinflictor:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_decoration:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_decoration_scale:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_decorBRUSH:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        props_desklamp:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_dust:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_ExploPart:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_FireColumn:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_flamebarrel:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_flamethrower:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_footlocker:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_gunsparks:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_locker_tall:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        props_radio:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        props_radioSEVEN:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        props_shard_generator:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_skyportal:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_smokedust:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_snowGenerator:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        props_sparks:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_statue:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        props_statueBRUSH:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
      }
      screen_* entities.qtxfolder =
      {
        screen_fade:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      script_* entities.qtxfolder =
      {
        script_camera:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        script_model_med:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        script_mover:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        script_multiplayer:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      shooter_* entities.qtxfolder =
      {
        shooter_grenade:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        shooter_mortar:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        shooter_rocket:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        shooter_sniper:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        shooter_tesla:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        shooter_zombiespit:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      sniper_* entities.qtxfolder =
      {
        sniper_brush:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
      }
      target_* entities.qtxfolder =
      {
        target_alarm:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_autosave:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_counter:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_delay:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_effect:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_fog:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_give:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_kill:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_laser:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_location:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_lock:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_print:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_push:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_relay:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_remove_powerups:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_rumble:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_score:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_script_trigger:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_smoke:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_speaker:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        target_teleporter:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      team_* entities.qtxfolder =
      {
        team_CTF_blueflag:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        team_CTF_blueplayer:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        team_CTF_bluespawn:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        team_CTF_redflag:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        team_CTF_redplayer:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        team_CTF_redspawn:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        team_WOLF_checkpoint:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        team_WOLF_objective:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
      trigger_* entities.qtxfolder =
      {
        trigger_aidoor:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        trigger_always:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        trigger_deathCheck:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        trigger_flagonly:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        trigger_hurt:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        trigger_multiple:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        trigger_objective_info:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        trigger_once:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        trigger_push:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
        trigger_teleport:b =
        {
          angle = "360"
          ;incl = "defpoly"
        }
      }
      weapon_* entities.qtxfolder =
      {
        weapon_colt:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_fg42:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_flamethrower:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_knife:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_luger:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_mauserRifle:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_mp40:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_panzerfaust:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_silencer:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_sniperScope:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_snooperrifle:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_sten:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_tesla:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_thompson:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
        weapon_venom:e =
        {
          angle = "360"
          origin = "0 0 0"
        }
      }
    }
  }
  Entity Forms.fctx =
  {
    ai_soldier:form =
    {
      help = "soldier entity"$0D22"skin"$22" the .skin file to use for this ch"
       "aracter (must exist in the player characters directory, otherwise 'inf"
       "antryss/default' is used)"$0D22"head"$22" the .skin file to use for hi"
       "s head (must exist in the pc's dir, otherwise 'default' is used)"$0D22
       "ainame"$22" name of AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_american:form =
    {
      help = "american entity"$0D22"skin"$22" the .skin file to use for this c"
       "haracter (must exist in the player characters directory, otherwise 'am"
       "erican/default' is used)"$0D22"head"$22" the .skin file to use for his"
       " head (must exist in the pc's dir, otherwise 'default' is used)"$0D22"a"
       "iname"$22" name of AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_zombie:form =
    {
      help = "zombie entity"$0D22"skin"$22" the .skin file to use for this cha"
       "racter (must exist in the player characters directory, otherwise 'zomb"
       "ie/default' is used)"$0D22"head"$22" the .skin file to use for his hea"
       "d (must exist in the pc's dir, otherwise 'default' is used)"$0D22"aina"
       "me"$22" name of AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "PortalZombie"
      }
    }
    ai_warzombie:form =
    {
      help = "warrior zombie entity"$0D22"skin"$22" the .skin file to use for "
       "this character (must exist in the player characters directory, otherwi"
       "se 'warrior/default' is used)"$0D22"head"$22" the .skin file to use fo"
       "r his head (must exist in the pc's dir, otherwise 'default' is used)"$0D
       $22"ainame"$22" name of AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "PortalZombie"
      }
    }
    ai_femzombie:form =
    {
      help = "zombie entity"$0D22"skin"$22" the .skin file to use for this cha"
       "racter (must exist in the player characters directory, otherwise 'femz"
       "ombie/default' is used)"$0D22"head"$22" the .skin file to use for his "
       "head (must exist in the pc's dir, otherwise 'default' is used)"$0D22"a"
       "iname"$22" name of AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_venom:form =
    {
      help = "venom entity"$0D22"skin"$22" the .skin file to use for this char"
       "acter (must exist in the player characters directory, otherwise 'venom"
       "/default' is used)"$0D22"head"$22" the .skin file to use for his head "
       "(must exist in the pc's dir, otherwise 'default' is used)"$0D22"ainame"
       $22" name of AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_loper:form =
    {
      help = "loper entity"$0D22"skin"$22" the .skin file to use for this char"
       "acter (must exist in the player characters directory, otherwise 'loper"
       "/default' is used)"$0D22"head"$22" the .skin file to use for his head "
       "(must exist in the pc's dir, otherwise 'default' is used)"$0D22"ainame"
       $22" name of AI"
      bbox = '-32 -32 -24 32 32 48'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_boss_helga:form =
    {
      help = "helga entity"$0D22"skin"$22" the .skin file to use for this char"
       "acter (must exist in the player characters directory, otherwise 'helga"
       "/default' is used)"$0D22"head"$22" the .skin file to use for his head "
       "(must exist in the pc's dir, otherwise 'default' is used)"$0D22"ainame"
       $22" name of AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_boss_heinrich:form =
    {
      help = "heinrich entity"$0D22"skin"$22" the .skin file to use for this c"
       "haracter (must exist in the player characters directory, otherwise 'he"
       "lga/default' is used)"$0D22"head"$22" the .skin file to use for his he"
       "ad (must exist in the pc's dir, otherwise 'default' is used)"$0D22"ain"
       "ame"$22" name of AI"
      bbox = '-32 -32 -24 32 32 156'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_partisan:form =
    {
      help = $22"skin"$22" the .skin file to use for this character (must exis"
       "t in the player characters directory, otherwise 'partisan/default' is "
       "used)"$0D22"head"$22" the .skin file to use for his head (must exist i"
       "n the pc's dir, otherwise 'default' is used)"$0D22"ainame"$22" name of"
       " AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_civilian:form =
    {
      help = $22"skin"$22" the .skin file to use for this character (must exis"
       "t in the player characters directory, otherwise 'civilian/default' is "
       "used)"$0D22"head"$22" the .skin file to use for his head (must exist i"
       "n the pc's dir, otherwise 'default' is used)"$0D22"ainame"$22" name of"
       " AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_eliteguard:form =
    {
      help = "elite guard entity"$0D22"skin"$22" the .skin file to use for thi"
       "s character (must exist in the player characters directory, otherwise "
       "'eliteguard/default' is used)"$0D22"head"$22" the .skin file to use fo"
       "r his head (must exist in the pc's dir, otherwise 'default' is used)"$0D
       $22"ainame"$22" name of AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_supersoldier:form =
    {
      help = "supersoldier entity"$0D22"skin"$22" the .skin file to use for th"
       "is character (must exist in the player characters directory, otherwise"
       " 'supersoldier/default' is used)"$0D22"head"$22" the .skin file to use"
       " for his head (must exist in the pc's dir, otherwise 'default' is used"
       ")"$0D22"ainame"$22" name of AI"
      bbox = '-32 -32 -24 32 32 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_protosoldier:form =
    {
      help = "protosoldier entity"$0D22"skin"$22" the .skin file to use for th"
       "is character (must exist in the player characters directory, otherwise"
       " 'protosoldier/default' is used)"$0D22"head"$22" the .skin file to use"
       " for his head (must exist in the pc's dir, otherwise 'default' is used"
       ")"$0D22"ainame"$22" name of AI"
      bbox = '-32 -32 -24 32 32 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_blackguard:form =
    {
      help = "black guard entity"$0D22"skin"$22" the .skin file to use for thi"
       "s character (must exist in the player characters directory, otherwise "
       "'blackguard/default' is used)"$0D22"head"$22" the .skin file to use fo"
       "r his head (must exist in the pc's dir, otherwise 'default' is used)"$0D
       $22"ainame"$22" name of AI"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NoRevive"
      }
    }
    ai_marker:form =
    {
      help = "AI marker"
      bbox = '-18 -18 -24 18 18 48'
      spawnflags: =
      {
        typ = "X1"
        cap = "NODROP"
      }
    }
    ai_trigger:form =
    {
      help = "Triggered only by the player touching it"$0D22"wait"$22" : Secon"
       "ds between triggerings, -1 = one time only (default)."$0D22"ainame"$22
       " : name of AI to target (use "$22"player"$22" for the.. player)"$0D22"t"
       "arget"$22" : trigger identifier for that AI script"
      spawnflags: =
      {
        typ = "X1"
        cap = "Startoff"
      }
    }
    item_clipboard:form =
    {
      help = $22"model"$22" - model to display in the world.  defaults to 'mod"
       "els/powerups/clipboard/clipboard.md3' (the clipboard laying flat is 'c"
       "lipboard2.md3')"$0D22"popup"$22" - menu to popup.  no default since yo"
       "u won't want the same clipboard laying around. (clipboard will display"
       " a 'put popup here' message)"$0D22"notebookpage"$22" - when clipboard "
       "is picked up, this page (menu) will be added to your notebook (FIXME: "
       "TODO: more info goes here)"$0D"We currently use:"$0D"clip_interrogatio"
       "n"$0D"clip_codeddispatch"$0D"clip_alertstatus"$0D"-------- MODEL FOR R"
       "ADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/"
       "powerups/clipboard/clipboard.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "PERSISTANT"
      }
    }
    item_treasure:form =
    {
      help = "Items the player picks up that are just used to tally a score at"
       " end-level"$0D22"model"$22" defaults to 'models/powerups/treasure/gold"
       "bar.md3'"$0D22"noise"$22" sound to play on pickup.  defaults to 'sound"
       "/pickup/treasure/gold.wav'"$0D22"message"$22" what to call the item wh"
       "en it's picked up.  defaults to "$22"Treasure Item"$22" (SA: temp)"$0D
       "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/treasure/goldbar.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
    }
    item_health_small:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/health/health_s.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_health:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/health/health_m.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_health_large:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/health/health_l.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_health_turkey:form =
    {
      help = "multi-stage health item."$0D"gives amount on first use based on "
       "skill:"$0D"skill 1: 50"$0D"skill 2: 50"$0D"skill 3: 50"$0D"skill 4: 40"
       $0D"skill 5: 30"$0D"then gives 15 on "$22"finishing up"$220D"player wil"
       "l only eat what he needs.  health at 90, turkey fills up and leaves re"
       "mains (leaving 15).  health at 5 you eat the whole thing."$0D"--------"
       " MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="
       $22"models/powerups/health/health_t1.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_health_breadandmeat:form =
    {
      help = "multi-stage health item."$0D"amount on first use is based on ski"
       "ll:"$0D"then gives 10 on "$22"finishing up"$220D"-------- MODEL FOR RA"
       "DIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/p"
       "owerups/health/health_b1.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_health_wall_box:form =
    {
      help = "single use health with dual state model."$0D"please set the susp"
       "ended flag to keep it from falling on the ground"$0D"defaults to 50 pt"
       "s health"$0D"-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KE"
       "Y --------"$0D"model="$22"models/powerups/health/health_wallbox.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_health_wall:form =
    {
      help = "defaults to 50 pts health"$0D"you will probably want to check th"
       "e 'suspended' box to keep it from falling to the ground"$0D"-------- M"
       "ODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22
       "models/powerups/health/health_w.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_stamina_stein:form =
    {
      help = "defaults to 30 sec stamina boost"$0D"-------- MODEL FOR RADIANT "
       "ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/powerup"
       "s/instant/stamina_stein.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_stamina_brandy:form =
    {
      help = "defaults to 30 sec stamina boost"$0D"-------- MODEL FOR RADIANT "
       "ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/powerup"
       "s/instant/stamina_brandy1.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_armor_body:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/armor/armor_body1.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_armor_body_hang:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/armor/armor_body2.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    item_armor_head:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/armor/armor_head1.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_knife:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/knife/knife.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_luger:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/luger/luger.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_mauserRifle:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/mauser/mauser.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_thompson:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/thompson/thompson.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_sten:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/sten/sten.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_colt:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/colt/colt.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_mp40:form =
    {
      help = $22"stand"$22" values:"$0D"no value:    laying in a default posit"
       "ion on it's side (default)"$0D"2:            upright, barrel pointing "
       "up, slightly angled (rack mount)"$0D"-------- MODEL FOR RADIANT ONLY -"
       " DO NOT SET THIS AS A KEY --------"$0D"model="$22"models\weapons2\mp40"
       "\mp40.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_fg42:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/fg42/fg42.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_silencer:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/sp5/sp5.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_panzerfaust:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/panzerfaust/pf.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_venom:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/venom/pu_venom.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_flamethrower:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/flamethrower/pu_flamethrower.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_tesla:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/tesla/pu_tesla.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_sniperScope:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/mauser/pu_mauser_scope.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    weapon_snooperrifle:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/weapons2/garand/garand.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_9mm_small:form =
    {
      help = "used by: Luger pistol, MP40 machinegun"$0D"-------- MODEL FOR RA"
       "DIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/p"
       "owerups/ammo/am9mm_s.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_9mm:form =
    {
      help = "used by: Luger pistol, MP40 machinegun"$0D"-------- MODEL FOR RA"
       "DIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/p"
       "owerups/ammo/am9mm_m.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_9mm_large:form =
    {
      help = "used by: Luger pistol, MP40 machinegun"$0D"-------- MODEL FOR RA"
       "DIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/p"
       "owerups/ammo/am9mm_l.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_45cal_small:form =
    {
      help = "used by: Thompson, Colt"$0D"-------- MODEL FOR RADIANT ONLY - DO"
       " NOT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/ammo/am"
       "45cal_s.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_45cal:form =
    {
      help = "used by: Thompson, Colt"$0D"-------- MODEL FOR RADIANT ONLY - DO"
       " NOT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/ammo/am"
       "45cal_m.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_45cal_large:form =
    {
      help = "used by: Thompson, Colt"$0D"-------- MODEL FOR RADIANT ONLY - DO"
       " NOT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/ammo/am"
       "45cal_l.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_792mm_small:form =
    {
      help = "used by: Mauser rifle, FG42"$0D"-------- MODEL FOR RADIANT ONLY "
       "- DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/amm"
       "o/am792mm_s.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_792mm:form =
    {
      help = "used by: Mauser rifle, FG42"$0D"-------- MODEL FOR RADIANT ONLY "
       "- DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/amm"
       "o/am792mm_m.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_792mm_large:form =
    {
      help = "used by: Mauser rifle, FG42"$0D"-------- MODEL FOR RADIANT ONLY "
       "- DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/amm"
       "o/am792mm_l.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_30cal_small:form =
    {
      help = "used by: Garand rifle"$0D"-------- MODEL FOR RADIANT ONLY - DO N"
       "OT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/ammo/am30"
       "cal_s.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_30cal:form =
    {
      help = "used by: Garand rifle"$0D"-------- MODEL FOR RADIANT ONLY - DO N"
       "OT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/ammo/am30"
       "cal_m.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_30cal_large:form =
    {
      help = "used by: Garand rifle"$0D"-------- MODEL FOR RADIANT ONLY - DO N"
       "OT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/ammo/am30"
       "cal_l.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_127mm:form =
    {
      help = "used by: Venom gun"$0D"-------- MODEL FOR RADIANT ONLY - DO NOT "
       "SET THIS AS A KEY --------"$0D"model="$22"models/powerups/ammo/am127mm"
       ".md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_grenades:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/ammo/amgren_bag.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_grenades_american:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/ammo/amgrenus_bag.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_dynamite:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/ammo/dynamite.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_cell:form =
    {
      help = "used by: Tesla"$0D"Boosts recharge on Tesla"$0D"-------- MODEL F"
       "OR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22"mod"
       "els/powerups/ammo/amcell.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_fuel:form =
    {
      help = "used by: Flamethrower"$0D"-------- MODEL FOR RADIANT ONLY - DO N"
       "OT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/ammo/amfu"
       "el.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    ammo_panzerfaust:form =
    {
      help = "used by: German Panzerfaust"$0D"-------- MODEL FOR RADIANT ONLY "
       "- DO NOT SET THIS AS A KEY --------"$0D"model="$22"models/powerups/amm"
       "o/ampf.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_medkit:form =
    {
      help = "pickup sound : "$22"sound/pickup/holdable/get_medkit.wav"$220D"u"
       "se sound : "$22"sound/pickup/holdable/get_medkit.wav"$220D"-------- MO"
       "DEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22
       "models/powerups/holdable/medkit.md3"$22
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_wine:form =
    {
      help = "pickup sound : "$22"sound/pickup/holdable/get_wine.wav"$220D"use"
       " sound : "$22"sound/pickup/holdable/use_wine.wav"$220D"-------- MODEL "
       "FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"model="$22"mo"
       "dels/powerups/holdable/wine.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_stamina:form =
    {
      help = "Protection from fatigue"$0D"Using the "$22"sprint"$22" key will "
       "not fatigue the character"$0D"pickup sound : "$22"sound/pickup/holdabl"
       "e/get_stamina.wav"$220D"use sound : "$22"sound/pickup/holdable/use_sta"
       "mina.wav"$220D"-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A "
       "KEY --------"$0D"model="$22"models/powerups/holdable/stamina.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_book1:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/holdable/venom_book.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_book2:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/holdable/paranormal_book.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_book3:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/holdable/zemphr_book.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_11:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/holdable/11.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_12:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/holdable/12.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_13:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/holdable/13.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_14:form =
    {
      help = "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY -----"
       "---"$0D"model="$22"models/powerups/holdable/14.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    holdable_15:form =
    {
      help = "/"$0D"{"$0D22"holdable_15"$22","$0D22"sound/pickup/holdable/get_"
       "15.wav"$22","$0D"{"$0D22"models/powerups/holdable/15.md3"$22","$0D"0, "
       "0, 0"$0D",    0 },"$0D22"icons/15"$22",                // icon"$0D"NUL"
       "L,                            // ammo icon"$0D22"15"$22",             "
       "       // pickup"$0D"1,"$0D"IT_HOLDABLE,"$0D"HI_15,"$0D"0,"$0D2222",  "
       "                              // precache"$0D22"sound/pickup/holdable/"
       "use_15.wav"$22",    // sounds"$0D"{0,0,0,0,0}"$0D"},"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_skull1:form =
    {
      help = "key 1"$0D"pickup sound : "$22"sound/pickup/keys/skull.wav"$220D"-"
       "------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/skull.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_chalice2:form =
    {
      help = "key 2"$0D"pickup sound : "$22"sound/pickup/keys/chalice.wav"$220D
       "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/chalice.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_eye3:form =
    {
      help = "key 3"$0D"pickup sound : "$22"sound/pickup/keys/eye.wav"$220D"--"
       "------ MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D"m"
       "odel="$22"models/powerups/keys/eye.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_radio4:form =
    {
      help = "key 4"$0D"pickup sound : "$22"sound/pickup/keys/radio.wav"$220D"-"
       "------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/radio_port.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_satchelcharge5:form =
    {
      help = "key 5"$0D"pickup sound : "$22"sound/pickup/keys/satchelcharge.wa"
       "v"$220D"-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ---"
       "-----"$0D"model="$22"models/powerups/keys/satchel_charge.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_binocs:form =
    {
      help = "Binoculars."$0D"pickup sound : "$22"sound/pickup/keys/binocs.wav"
       $220D"-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ------"
       "--"$0D"model="$22"models/powerups/keys/binoculars.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_7:form =
    {
      help = "key 7"$0D"pickup sound : "$22"sound/pickup/keys/key7.wav"$220D"-"
       "------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/key7.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_key8:form =
    {
      help = "key 8"$0D"pickup sound : "$22"sound/pickup/keys/key8.wav"$220D"-"
       "------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/key.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_key9:form =
    {
      help = "key 9"$0D"pickup sound : "$22"sound/pickup/keys/key9.wav"$220D"-"
       "------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/key.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_key10:form =
    {
      help = "key 10"$0D"pickup sound : "$22"sound/pickup/keys/key10.wav"$220D
       "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/key.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_key11:form =
    {
      help = "key 11"$0D"pickup sound : "$22"sound/pickup/keys/key11.wav"$220D
       "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/key.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_key12:form =
    {
      help = "key 12"$0D"pickup sound : "$22"sound/pickup/keys/key12.wav"$220D
       "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/key.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_key13:form =
    {
      help = "key 13"$0D"pickup sound : "$22"sound/pickup/keys/key13.wav"$220D
       "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/key.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_key14:form =
    {
      help = "key 14"$0D"pickup sound : "$22"sound/pickup/keys/key14.wav"$220D
       "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/key.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_key15:form =
    {
      help = "key 15"$0D"pickup sound : "$22"sound/pickup/keys/key15.wav"$220D
       "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/key.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    key_key16:form =
    {
      help = "key 16"$0D"pickup sound : "$22"sound/pickup/keys/key16.wav"$220D
       "-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------"$0D
       "model="$22"models/powerups/keys/key.md3"$22
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "SUSPENDED"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SPIN"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "RESPAWN"
      }
    }
    alarm_box:form =
    {
      help = "You need to have an origin brush as part of this entity"$0D"curr"
       "ent alarm box model is (8 x 16 x 28)"$0D22"health"$22" defaults to 10"$0D
       $22"noise"$22" the sound to play over the system (this would be the sir"
       "en sound)"$0D"START_ON means the button is pushed in, any dlights are "
       "cycling, and alarms are sounding"$0D22"team"$22" key/value is valid fo"
       "r teamed alarm boxes"$0D"teamed alarm_boxes work in tandem (switches/l"
       "ights syncronize)"$0D"target a box to dlights to have them activate/de"
       "activate with the system (use a stylestring that matches the cycletime"
       " for the alarmbox sound)"$0D"alarm sound locations are also placed in "
       "the dlights, so wherever you place an attached dlight, you will hear t"
       "he alarm"$0D"model: the model used is "$22"models/mapobjects/electroni"
       "cs/alarmbox.md3"$220D"place the origin at the center of your trigger b"
       "ox"
      spawnflags: =
      {
        typ = "X1"
        cap = "START_ON"
      }
    }
    info_player_deathmatch:form =
    {
      help = "potential spawning position for deathmatch games."$0D"The first "
       "time a player enters the game, they will be at an 'initial' spot."$0D"T"
       "argets will be fired when someone spawns in on them."$0D22"nobots"$22" "
       "will prevent bots from using this spot."$0D22"nohumans"$22" will preve"
       "nt non-bots from using this spot."$0D"If the start position is targeti"
       "ng an entity, the players camera will start out facing that ent (like "
       "an info_notnull)"
      bbox = '-16 -16 -24 16 16 32'
      spawnflags: =
      {
        typ = "X1"
        cap = "initial"
      }
    }
    info_player_checkpoint:form =
    {
      help = "these are start points /after/ the level start"$0D"the letter (a"
       " b c d) designates the checkpoint that needs to be complete in order t"
       "o use this start position"
      bbox = '-16 -16 -24 16 16 32'
      spawnflags: =
      {
        typ = "X1"
        cap = "a"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "b"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "c"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "d"
      }
    }
    info_player_start:form =
    {
      help = "equivelant to info_player_deathmatch"
      bbox = '-16 -16 -24 16 16 32'
    }
    info_player_intermission:form =
    {
      help = "The intermission will be viewed from this point.  Target an info"
       "_notnull for the view direction."$0D"AXIS        This intermission poi"
       "nt will be used if Axis win the match"$0D"ALLIED        This intermiss"
       "ion point will be used if Allies win the match"
      bbox = '-16 -16 -24 16 16 32'
      spawnflags: =
      {
        typ = "X1"
        cap = "AXIS"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "ALLIED"
      }
    }
    func_group:form =
    {
      help = "Used to group brushes together just for editor convenience.  The"
       "y are turned into normal brushes by the utilities."
    }
    info_camp:form =
    {
      help = "Used as a positional target for calculations in the utilities (s"
       "potlights, etc), but removed during gameplay."
      bbox = '-4 -4 -4 4 4 4'
    }
    info_null:form =
    {
      help = "Used as a positional target for calculations in the utilities (s"
       "potlights, etc), but removed during gameplay."
      bbox = '-4 -4 -4 4 4 4'
    }
    info_notnull:form =
    {
      help = "Used as a positional target for in-game calculation, like jumppa"
       "d targets."$0D"target_position does the same thing"
      bbox = '-4 -4 -4 4 4 4'
    }
    info_notnull_big:form =
    {
      help = "info_notnull with a bigger box for ease of positioning"
      bbox = '-16 -16 -24 16 16 32'
    }
    light:form =
    {
      help = "Non-displayed light."$0D22"light"$22" overrides the default 300 "
       "intensity."$0D"Nonlinear checkbox gives inverse square falloff instead"
       " of linear"$0D"Angle adds light:surface angle calculations (only valid"
       " for "$22"Linear"$22" lights) (wolf)"$0D"Lights pointed at a target wi"
       "ll be spotlights."$0D22"radius"$22" overrides the default 64 unit radi"
       "us of a spotlight at the target point."$0D22"fade"$22" falloff/radius "
       "adjustment value. multiply the run of the slope by "$22"fade"$22" (1.0"
       "f default) (only valid for "$22"Linear"$22" lights) (wolf)"$0D22"q3map"
       "_non-dynamic"$22" specifies that this light should not contribute to t"
       "he world's 'light grid' and therefore will not light dynamic models in"
       " the game.(wolf)"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "nonlinear"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "angle"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "negative_spot"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "negative_point"
      }
      spawnflags: =
      {
        typ = "X16"
        cap = "q3map_non"
      }
      spawnflags: =
      {
        typ = "X64"
        cap = "dynamic"
      }
    }
    lightJunior:form =
    {
      help = "Non-displayed light that only affects dynamic game models, but d"
       "oes not contribute to lightmaps"$0D22"light"$22" overrides the default"
       " 300 intensity."$0D"Nonlinear checkbox gives inverse square falloff in"
       "stead of linear"$0D"Angle adds light:surface angle calculations (only "
       "valid for "$22"Linear"$22" lights) (wolf)"$0D"Lights pointed at a targ"
       "et will be spotlights."$0D22"radius"$22" overrides the default 64 unit"
       " radius of a spotlight at the target point."$0D22"fade"$22" falloff/ra"
       "dius adjustment value. multiply the run of the slope by "$22"fade"$22" "
       "(1.0f default) (only valid for "$22"Linear"$22" lights) (wolf)"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "nonlinear"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "angle"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "negative_spot"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "negative_point"
      }
    }
    misc_teleporter_dest:form =
    {
      help = "Point teleporters at these."$0D"Now that we don't have teleport "
       "destination pads, this is just"$0D"an info_notnull"
      bbox = '-32 -32 -24 32 32 -16'
    }
    misc_grabber_trap:form =
    {
      help = "fields:"$0D22"adist"$22"  - radius of 'wakeup' box.  player pass"
       "ing closer than distance activates grabber (def: 64)"$0D22"bdist"$22" "
       " - radius of 'attack' box.  player passing into this gets a swipe.  (d"
       "ef: 32)"$0D22"health"$22" - how much damage grabber can take after 'wa"
       "keup' (def: 100)"$0D22"range"$22"  - when attacking, how far from the "
       "origin the grabber can strike (def: 64)"$0D22"dmg"$22"    - max damage"
       " to give on a successful strike (def: 10)"$0D22"wait"$22"   - how long"
       " to wait between strikes if the player stays within the 'attack' box ("
       "def: see below)"$0D"If you do not set a "$22"wait"$22" value, then it "
       "will default to the duration of the animations.  (so since the first a"
       "ttack animation is 11 frames long and plays at 15 fps, the default wai"
       "t after using attack 1 would be 11/15, or 0.73 seconds)"$0D"grabber me"
       "dia:"$0D"model - "$22"models/misc/grabber/grabber.md3"$220D"wake sound"
       " - "$22"models/misc/grabber/grabber_wake.wav"$220D"attack sound - "$22
       "models/misc/grabber/grabber_attack.wav"$220D"pain sound - "$22"models/"
       "misc/grabber/grabber_pain.wav"$220D"The current frames are:"$0D"first "
       "frame"$0D"|   length"$0D"|   looping frames"$0D"|   fps"$0D"|   damage"
       " at frame"$0D"|"$0D"0   6   6   5   0  (main idle)"$0D"5   21  21  7  "
       " 0  (random idle)"$0D"25  11  10  15  7  (attack big swipe)"$0D"35  16"
       "  0   15  6  (attack small swipe)"$0D"50  16  0   15  7  (attack grab)"
       $0D"66  1   1   15  0  (starting position)"
      bbox = '-8 -8 -8 8 8 8'
    }
    misc_spotlight:form =
    {
      help = $22"target"$22" - .camera (spline) file for light to track.  do n"
       "ot specify file extension."$0D"BACK_AND_FORTH - when end of target spl"
       "ine is hit, reverse direction rather than looping (looping is default)"
       $0D"( /\ not active yet /\ )"
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "START_ON"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "BACK_AND_FORTH"
      }
    }
    misc_model:form =
    {
      help = $22"model"$22"        arbitrary .md3 file to display"$0D22"models"
       "cale"$22"    scale multiplier (defaults to 1x)"$0D22"modelscale_vec"$22
       "    scale multiplier (defaults to 1 1 1, scales each axis as requested"
       ")"$0D22"modelscale_vec"$22" - Set scale per-axis.  Overrides "$22"mode"
       "lscale"$22", so if you have both, the "$22"modelscale"$22" is ignored"
      bbox = '-16 -16 -16 16 16 16'
    }
    misc_gamemodel:form =
    {
      help = "md3 placed in the game at runtime (rather than in the bsp)"$0D22
       "model"$22"            arbitrary .md3 file to display"$0D22"modelscale"$22
       "    scale multiplier (defaults to 1x, and scales uniformly)"$0D22"mode"
       "lscale_vec"$22"    scale multiplier (defaults to 1 1 1, scales each ax"
       "is as requested)"$0D22"trunk"$22"            diameter of solid core (u"
       "sed for trace visibility and collision (not ai pathing))"$0D22"trunkhe"
       "ight"$22"    height of trunk"$0D"ORIENT_LOD - if flagged, the entity w"
       "ill yaw towards the player when the LOD switches"$0D22"modelscale_vec"$22
       " - Set scale per-axis.  Overrides "$22"modelscale"$22", so if you have"
       " both, the "$22"modelscale"$22" is ignored"
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "ORIENT_LOD"
      }
    }
    misc_vis_dummy:form =
    {
      help = "If this entity is "$22"visible"$22" (in player's PVS) then it's "
       "target is forced to be active whether it is in the player's PVS or not"
       "."$0D"This entity itself is never visible or transmitted to clients."$0D
       "For safety, you should have each dummy only point at one entity (howev"
       "er, it's okay to have many dummies pointing at one entity)"
      bbox = '-8 -8 -8 8 8 8'
    }
    misc_vis_dummy_multiple:form =
    {
      help = "If this entity is "$22"visible"$22" (in player's PVS) then it's "
       "target is forced to be active whether it is in the player's PVS or not"
       "."$0D"This entity itself is never visible or transmitted to clients."$0D
       "This entity was created to have multiple speakers targeting it"
      bbox = '-8 -8 -8 8 8 8'
    }
    misc_light_surface:form =
    {
      help = "The surfaces nearest these entities will be the only surfaces li"
       "t by the targeting light"$0D"This must be within 64 world units of the"
       " surface to be lit!"
      bbox = '-8 -8 -8 8 8 8'
    }
    misc_portal_surface:form =
    {
      help = "The portal surface nearest this entity will show a view from the"
       " targeted misc_portal_camera, or a mirror view if untargeted."$0D"This"
       " must be within 64 world units of the surface!"
      bbox = '-8 -8 -8 8 8 8'
    }
    misc_portal_camera:form =
    {
      help = "The target for a misc_portal_director.  You can set either angle"
       "s or target another entity to determine the direction of view."$0D22"r"
       "oll"$22" an angle modifier to orient the camera around the target vect"
       "or;"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "slowrotate"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "fastrotate"
      }
    }
    shooter_mortar:form =
    {
      help = "Lobs a mortar so that it will pass through the info_notnull targ"
       "eted by this entity"$0D22"random"$22" the number of degrees of devianc"
       "e from the taget. (1.0 default)"$0D"if LAUNCH_FX is checked a smoke ef"
       "fect will play at the origin of this entity."$0D"if FLASH_FX is checke"
       "d a muzzle flash effect will play at the origin of this entity."
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "SMOKE_FX"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "FLASH_FX"
      }
    }
    shooter_rocket:form =
    {
      help = "Fires at either the target or the current direction."$0D22"rando"
       "m"$22" the number of degrees of deviance from the taget. (1.0 default)"
      bbox = '-16 -16 -16 16 16 16'
    }
    shooter_zombiespit:form =
    {
      help = "Fires at either the target or the current direction."$0D22"rando"
       "m"$22" the number of degrees of deviance from the taget. (1.0 default)"
      bbox = '-16 -16 -16 16 16 16'
    }
    shooter_tesla:form =
    {
      help = "START_ON means it starts out active, the default is to start off"
       " and fire when triggered"$0D"DLIGHT will have a built-in dlight flashi"
       "ng too (use color picker to set color of dlight. (def: blue) )"$0D22"s"
       "ticktime"$22" - how long each bolt should 'stick' to an impact point ("
       "def: .5)"$0D22"random"$22" - how far away to drift from the target. (d"
       "ef: 0.0)"$0D22"width"$22" - width of the bolts (def: 20)"$0D22"count"$22
       " - number of bolts to fire per impact point.  (def: 2)"$0D22"dlightsiz"
       "e"$22" - how big to make the attached light.  (def: 500)"
      bbox = '-16 -16 -16 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "START_ON"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "DLIGHT"
      }
    }
    shooter_grenade:form =
    {
      help = "Fires at either the target or the current direction."$0D22"rando"
       "m"$22" is the number of degrees of deviance from the taget. (1.0 defau"
       "lt)"
      bbox = '-16 -16 -16 16 16 16'
    }
    shooter_sniper:form =
    {
      help = "Fires at either the target or the current direction."$0D22"rando"
       "m"$22" is the number of degrees of deviance from the taget. (1.0 defau"
       "lt)"$0D22"damage"$22" the amount of damage sniper will cause when he h"
       "its his target default is 10"$0D22"radius"$22" is the dist the target "
       "would need to travel before sniper lost his beat default 256"$0D22"del"
       "ay"$22"     is the rate of fire defaults to 1 sec"
      bbox = '-16 -16 -16 16 16 16'
    }
    sniper_brush:form =
    {
      help = "this should be a volume that will encompase the area where the s"
       "niper target assigned to the"$0D"brush would fire at the player"
    }
    corona:form =
    {
      help = "Use color picker to set color or key "$22"color"$22".  values ar"
       "e 0.0-1.0 for each color (rgb)."$0D22"scale"$22" will designate a mult"
       "iplier to the default size.  (so 2.0 is 2xdefault size, 0.5 is half)"
      bbox = '-4 -4 -4 4 4 4'
      spawnflags: =
      {
        typ = "X1"
        cap = "START_OFF"
      }
    }
    dlight:form =
    {
      help = $22"style"$22": value is an int from 1-19 that contains a pre-def"
       "ined 'flicker' string."$0D22"stylestring"$22": set your own 'flicker' "
       "string.  (ex. "$22"klmnmlk"$22"). NOTE: this should be all lowercase"$0D
       "Stylestring characters run at 10 cps in the game. (meaning the alphabe"
       "t, at 24 characters, would take 2.4 seconds to cycle)"$0D22"offset"$22
       ": change the initial index in a style string.  So val of 3 in the abov"
       "e example would start this light at 'N'.  (used to get dlights using t"
       "he same style out of sync)."$0D22"atten"$22": offset from the alpha va"
       "lues of the stylestring.  stylestring of "$22"ddeeffzz"$22" with an at"
       "ten of -1 would result in "$22"ccddeeyy"$220D"Use color picker to set "
       "color or key "$22"color"$22".  values are 0.0-1.0 for each color (rgb)"
       "."$0D"FORCEACTIVE    - toggle makes sure this light stays alive in a m"
       "ap even if the user has r_dynamiclight set to 0."$0D"STARTOFF    - mea"
       "ns the dlight doesn't spawn in until ent is triggered"$0D"ONETIME     "
       "   - when the dlight is triggered, it will play through it's cycle onc"
       "e, then shut down until triggered again"$0D22"shader"$22" name of shad"
       "er to apply"$0D22"sound"$22" sound to loop every cycle (this actually "
       "just plays the sound at the beginning of each cycle)"$0D"styles:"$0D"1"
       " - "$22"mmnmmommommnonmmonqnmmo"$220D"2 - "$22"abcdefghijklmnopqrstuvw"
       "xyzyxwvutsrqponmlkjihgfedcba"$220D"3 - "$22"mmmmmaaaaammmmmaaaaaabcdef"
       "gabcdefg"$220D"4 - "$22"ma"$220D"5 - "$22"jklmnopqrstuvwxyzyxwvutsrqpo"
       "nmlkj"$220D"6 - "$22"nmonqnmomnmomomono"$220D"7 - "$22"mmmaaaabcdefgmm"
       "mmaaaammmaamm"$220D"8 - "$22"aaaaaaaazzzzzzzz"$220D"9 - "$22"mmamammmm"
       "ammamamaaamammma"$220D"10 - "$22"abcdefghijklmnopqrrqponmlkjihgfedcba"$22
       $0D"11 - "$22"mmnommomhkmmomnonmmonqnmmo"$220D"12 - "$22"kmamaamakmmmaa"
       "kmamakmakmmmma"$220D"13 - "$22"kmmmakakmmaaamammamkmamakmmmma"$220D"14"
       " - "$22"mmnnoonnmmmmmmmmmnmmmmnonmmmmmmm"$220D"15 - "$22"mmmmnonmmmmnm"
       "mmmmnonmmmmmnmmmmmmm"$220D"16 - "$22"zzzzzzzzaaaaaaaa"$220D"17 - "$22"z"
       "zzzzzzzaaaaaaaaaaaaaaaa"$220D"18 - "$22"aaaaaaaazzzzzzzzaaaaaaaa"$220D
       "19 - "$22"aaaaaaaaaaaaaaaazzzzzzzz"$22
      bbox = '-12 -12 -12 12 12 12'
      spawnflags: =
      {
        typ = "X1"
        cap = "FORCEACTIVE"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "STARTOFF"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "ONETIME"
      }
    }
    misc_snow256:form =
    {
      help = "health = density defaults to 32"
      bbox = '-256 -256 -16 256 256 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "TURBULENT"
      }
    }
    misc_snow128:form =
    {
      help = "health = density defaults to 32"
      bbox = '-128 -128 -16 128 128 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "TURBULENT"
      }
    }
    misc_snow64:form =
    {
      help = "health = density defaults to 32"
      bbox = '-64 -64 -16 64 64 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "TURBULENT"
      }
    }
    misc_snow32:form =
    {
      help = "health = density defaults to 32"
      bbox = '-32 -32 -16 32 32 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "TURBULENT"
      }
    }
    misc_bubbles8:form =
    {
      help = "health = density defaults to 32"
      bbox = '-8 -8 0 8 8 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "TURBULENT"
      }
    }
    misc_bubbles16:form =
    {
      help = "health = density defaults to 32"
      bbox = '-16 -16 0 16 16 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "TURBULENT"
      }
    }
    misc_bubbles32:form =
    {
      help = "health = density defaults to 32"
      bbox = '-32 -32 0 32 32 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "TURBULENT"
      }
    }
    misc_bubbles64:form =
    {
      help = "health = density defaults to 32"
      bbox = '-64 -64 0 64 64 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TURBULENT"
      }
    }
    misc_mg42:form =
    {
      help = "harc = horizonal fire arc Default is 115"$0D"varc = vertical fir"
       "e arc Default is 45"$0D"health = how much damage can it take default i"
       "s 50"$0D"damage = determines how much the weapon will inflict if a non"
       " player uses it"$0D22"accuracy"$22" all guns are 100% accurate an entr"
       "y of 0.5 would make it 50%"
      bbox = '-16 -16 -24 16 16 24'
      spawnflags: =
      {
        typ = "X1"
        cap = "HIGH"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NOTRIPOD"
      }
    }
    misc_flak:form =
    {
      bbox = '-32 -32 0 32 32 100'
    }
    misc_spawner:form =
    {
      help = "use the pickup name"$0D"when this entity gets used it will spawn"
       " an item"$0D"that matches its spawnitem field"$0D"e.i."$0D"spawnitem"$0D
       "9mm"
      bbox = '-8 -8 -8 8 8 8'
    }
    misc_firetrails:form =
    {
      help = "This entity must target the plane its going to be attached to"$0D
       "its use function will turn the fire stream effect on and off"$0D"an al"
       "ert entity call will kill it"
      bbox = '-16 -16 -16 16 16 16'
    }
    func_door:form =
    {
      help = "TOGGLE      wait in both the start and end states for a trigger "
       "event."$0D"START_OPEN  the door to moves to its destination when spawn"
       "ed, and operate in reverse.  It is used to temporarily or permanently "
       "close off an area when triggered (not useful for touch or takedamage d"
       "oors)."$0D"NOMONSTER   monsters will not trigger this door"$0D"SHOOT-T"
       "HRU    Bullets don't stop when they hit the door.  Set "$22"shoot_thru"
       "_scale"$22" with bullet damage scale (see below)"$0D22"key"$22"       "
       "-1 for locked, key number for which key opens, 0 for open.  default '0"
       "' unless door is targeted.  (trigger_aidoor entities targeting this do"
       "or do /not/ affect the key status)"$0D22"model2"$22"    .md3 model to "
       "also draw"$0D22"angle"$22"        determines the opening direction"$0D
       $22"targetname"$22" if set, no touch field will be spawned and a remote"
       " button or trigger field activates the door."$0D22"speed"$22"        m"
       "ovement speed (100 default)"$0D22"closespeed"$22" optional different m"
       "ovement speed for door closing"$0D22"wait"$22"      wait before return"
       "ing (3 default, -1 = never return)"$0D22"lip"$22"       lip remaining "
       "at end of move (8 default)"$0D22"dmg"$22"       damage to inflict when"
       " blocked (2 default)"$0D22"color"$22"     constantLight color"$0D22"li"
       "ght"$22"     constantLight radius"$0D22"health"$22"    if set, the doo"
       "r must be shot open"$0D22"team"$22"        team name.  other doors wit"
       "h same team name will open/close in syncronicity"$0D22"shoot_thru_scal"
       "e"$22"    Multiplier for how much damage bullets do that have passed t"
       "hrough the door.  Effectively how much damage the door 'absorbs'.  0.0"
       " - 1.0 (0.0 will turn SHOOT-THRU off, 1.0 is full damage)"$0D22"type"$22
       "        use sounds based on construction of door:"$0D"0 - nosound (def"
       "ault)"$0D"1 - metal"$0D"2 - stone"$0D"3 - lab"$0D"4 - wood"$0D"5 - iro"
       "n/jail"$0D"6 - portcullis"$0D"7 - wood (quiet)"
      spawnflags: =
      {
        typ = "X1"
        cap = "START_OPEN"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "TOGGLE"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "CRUSHER"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "TOUCH"
      }
      spawnflags: =
      {
        typ = "X16"
        cap = "SHOOT"
      }
      spawnflags: =
      {
        typ = "X64"
        cap = "THRU"
      }
    }
    func_plat:form =
    {
      help = "Plats are always drawn in the extended position so they will lig"
       "ht correctly."$0D22"lip"$22"        default 8, protrusion above rest p"
       "osition"$0D22"height"$22"    total height of movement, defaults to mod"
       "el height"$0D22"speed"$22"        overrides default 200."$0D22"dmg"$22
       "        overrides default 2"$0D22"model2"$22"    .md3 model to also dr"
       "aw"$0D22"color"$22"        constantLight color"$0D22"light"$22"       "
       " constantLight radius"
    }
    func_button:form =
    {
      help = "When a button is touched, it moves some distance in the directio"
       "n of it's angle, triggers all of it's targets, waits some time, then r"
       "eturns to it's original position where it can be triggered again."$0D22
       "model2"$22"    .md3 model to also draw"$0D22"angle"$22"        determi"
       "nes the opening direction"$0D22"target"$22"    all entities with a mat"
       "ching targetname will be used"$0D22"speed"$22"        override the def"
       "ault 40 speed"$0D22"wait"$22"        override the default 1 second wai"
       "t (-1 = never return)"$0D22"lip"$22"        override the default 4 pix"
       "el lip remaining at end of move"$0D22"health"$22"    if set, the butto"
       "n must be killed instead of touched"$0D22"color"$22"        constantLi"
       "ght color"$0D22"light"$22"        constantLight radius"
      spawnflags: =
      {
        typ = "X8"
        cap = "TOUCH"
      }
      spawnflags: =
      {
        typ = "X64"
        cap = "STAYOPEN"
      }
    }
    path_corner:form =
    {
      help = "Train path corners."$0D"Target: next path corner and other targe"
       "ts to fire"$0D22"speed"$22" speed to move to the next corner"$0D22"wai"
       "t"$22" seconds to wait before behining move to next corner"$0D22"count"
       "2"$22" used only in conjunction with the truck_cam to control playing "
       "of gear changes"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "STOP"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "END"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "REVERSE"
      }
    }
    func_train_rotating:form =
    {
      help = "*** use script_mover instead ***"$0D"A train is a mover that mov"
       "es between path_corner target points."$0D"This train can also rotate a"
       "long the X Y Z"$0D"Trains MUST HAVE AN ORIGIN BRUSH."$0D"The train spa"
       "wns at the first target it is pointing at."$0D22"model2"$22"    .md3 m"
       "odel to also draw"$0D22"dmg"$22"        default    2"$0D22"speed"$22" "
       "       default 100"$0D22"noise"$22"        looping sound to play when "
       "the train is in motion"$0D22"target"$22"    next path corner"$0D22"col"
       "or"$22"        constantLight color"$0D22"light"$22"        constantLig"
       "ht radius"$0D"On the path corner:"$0D"speed    departure speed from th"
       "at corner"$0D"rotate   angle change for X Y Z to next corner"$0D"durat"
       "ion duration for angle change (overrides speed)"
      spawnflags: =
      {
        typ = "X1"
        cap = "START_ON"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "TOGGLE"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "BLOCK_STOPS"
      }
    }
    func_leaky:form =
    {
      help = $22"type"$22" - leaks particles of this type"$0D"1:oil"$0D"2:wate"
       "r"$0D"3:steam"
    }
    func_static:form =
    {
      help = "A bmodel that just sits there, doing nothing.  Can be used for c"
       "onditional walls and models."$0D22"model2"$22"    .md3 model to also d"
       "raw"$0D22"color"$22"        constantLight color"$0D22"light"$22"      "
       "  constantLight radius"$0D22"start_invis"$22" will start the entity as"
       " non-existant"$0D"If targeted, it will toggle existance when triggered"
       $0D"pain will use its target"$0D"When using pain you will need to speci"
       "fy the delay time"$0D"value of 1 = 1 sec 2 = 2 sec so on..."$0D"defaul"
       "t is 1 sec you can use decimals"$0D"example :"$0D"delay"$0D"1.27"$0D"p"
       "ainEFX will spawn a shards"$0D"example:"$0D"shard"$0D"4"$0D"will spawn"
       " rubble"$0D"shard default is 4"$0D"shard ="$0D"shard_glass = 0,"$0D"sh"
       "ard_wood = 1,"$0D"shard_metal = 2,"$0D"shard_ceramic = 3,"$0D"shard_pe"
       "bbles = 4"
      spawnflags: =
      {
        typ = "X1"
        cap = "start_invis"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "pain"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "painEFX"
      }
    }
    func_rotating:form =
    {
      help = "You need to have an origin brush as part of this entity."$0D"The"
       " center of that brush will be the point around which it is rotated. It"
       " will rotate around the Z axis by default.  You can check either the X"
       "_AXIS or Y_AXIS box to change that."$0D22"model2"$22"    .md3 model to"
       " also draw"$0D22"speed"$22"        determines how fast it moves; defau"
       "lt value is 100."$0D22"dmg"$22"        damage to inflict when blocked "
       "(2 default)"$0D22"color"$22"        constantLight color"$0D22"light"$22
       "        constantLight radius"
      spawnflags: =
      {
        typ = "X1"
        cap = "START_ON"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "STARTINVIS"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "X_AXIS"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "Y_AXIS"
      }
    }
    func_bobbing:form =
    {
      help = "Normally bobs on the Z axis"$0D22"model2"$22"    .md3 model to a"
       "lso draw"$0D22"height"$22"    amplitude of bob (32 default)"$0D22"spee"
       "d"$22"        seconds to complete a bob cycle (4 default)"$0D22"phase"$22
       "        the 0.0 to 1.0 offset in the cycle to start at"$0D22"dmg"$22" "
       "       damage to inflict when blocked (2 default)"$0D22"color"$22"    "
       "    constantLight color"$0D22"light"$22"        constantLight radius"
      spawnflags: =
      {
        typ = "X1"
        cap = "X_AXIS"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "Y_AXIS"
      }
    }
    func_pendulum:form =
    {
      help = "You need to have an origin brush as part of this entity."$0D"Pen"
       "dulums always swing north / south on unrotated models.  Add an angles "
       "field to the model to allow rotation in other directions."$0D"Pendulum"
       " frequency is a physical constant based on the length of the beam and "
       "gravity."$0D22"model2"$22"    .md3 model to also draw"$0D22"speed"$22" "
       "       the number of degrees each way the pendulum swings, (30 default"
       ")"$0D22"phase"$22"        the 0.0 to 1.0 offset in the cycle to start "
       "at"$0D22"dmg"$22"        damage to inflict when blocked (2 default)"$0D
       $22"color"$22"        constantLight color"$0D22"light"$22"        const"
       "antLight radius"
    }
    func_door_rotating:form =
    {
      help = "You need to have an origin brush as part of this entity."$0D"The"
       " center of that brush will be the point around which it is rotated. It"
       " will rotate around the Z axis by default.  You can check either the X"
       "_AXIS or Y_AXIS box to change that (only one axis allowed. If both X a"
       "nd Y are checked, the default of Z will be used)."$0D"FORCE        doo"
       "r opens even if blocked"$0D"TAKE_KEY    removes the key from the playe"
       "rs inventory"$0D"SHOOT-THRU    Bullets don't stop when they hit the do"
       "or.  Set "$22"shoot_thru_scale"$22" with bullet damage scale (see belo"
       "w)"$0D22"key"$22"       -1 for locked, key number for which key opens,"
       " 0 for open.  default '0' unless door is targeted.  (trigger_aidoor en"
       "tities targeting this door do /not/ affect the key status)"$0D22"model"
       "2"$22"    .md3 model to also draw"$0D22"degrees"$22"   determines how "
       "many degrees it will turn (90 default)"$0D22"speed"$22"        movemen"
       "t speed (100 default)"$0D22"closespeed"$22" optional different movemen"
       "t speed for door closing"$0D22"time"$22"      how many milliseconds it"
       " will take to open 1 sec = 1000"$0D22"dmg"$22"       damage to inflict"
       " when blocked (2 default)"$0D22"color"$22"     constantLight color"$0D
       $22"light"$22"     constantLight radius"$0D22"shoot_thru_scale"$22"    "
       "Multiplier for how much damage bullets do that have passed through the"
       " door.  Effectively how much damage the door 'absorbs'.  0.0 - 1.0 (0."
       "0 will turn SHOOT-THRU off, 1.0 is full damage)"$0D22"type"$22"       "
       " use sounds based on construction of door:"$0D"0 - nosound (default)"$0D
       "1 - metal"$0D"2 - stone"$0D"3 - lab"$0D"4 - wood"$0D"5 - iron/jail"$0D
       "6 - portcullis"$0D"7 - wood (quiet)"$0D22"team"$22"        team name. "
       " other doors with same team name will open/close in syncronicity"
      spawnflags: =
      {
        typ = "X2"
        cap = "TOGGLE"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "X_AXIS"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "Y_AXIS"
      }
      spawnflags: =
      {
        typ = "X16"
        cap = "REVERSE"
      }
      spawnflags: =
      {
        typ = "X32"
        cap = "FORCE"
      }
      spawnflags: =
      {
        typ = "X64"
        cap = "STAYOPEN"
      }
      spawnflags: =
      {
        typ = "X128"
        cap = "TAKE_KEY"
      }
    }
    target_effect:form =
    {
      help = $22"mass"$22" defaults to 15.  This determines how much debris is"
       " emitted when it explodes.  (number of pieces)"$0D22"dmg"$22" defaults"
       " to 0.  damage radius blast when triggered"$0D22"type"$22" - if 'rubbl"
       "e' is specified, this is the model type ("$22"glass"$22", "$22"wood"$22
       ", "$22"metal"$22", "$22"gibs"$22", "$22"brick"$22", "$22"rock"$22", "$22
       "fabric"$22") default is "$22"wood"$22
      bbox = '-6 -6 -6 6 6 6'
      spawnflags: =
      {
        typ = "X1"
        cap = "TNT"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "explode"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "smoke"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "rubble"
      }
      spawnflags: =
      {
        typ = "X16"
        cap = "gore"
      }
      spawnflags: =
      {
        typ = "X32"
        cap = "lowgrav"
      }
      spawnflags: =
      {
        typ = "X64"
        cap = "debris"
      }
    }
    func_explosive:form =
    {
      help = "EXPLO only explosives can damage it rockets grendades etc"$0D"DY"
       "NOMITE only can be damaged by DY-NO-MITE!"$0D"Any brush that you want "
       "to explode or break apart.  If you want an explosion, set dmg and it w"
       "ill do a radius explosion of that amount at the center of the bursh."$0D
       "TOUCHABLE means automatic use on player contact."$0D"USESHADER will ap"
       "ply the shader used on the brush model to the debris."$0D"LOWGRAV spec"
       "ifies that the debris will /always/ fall slowly"$0D22"model2"$22" opti"
       "onal md3 to draw over the solid clip brush"$0D22"numLivingFrames"$22" "
       "- how many frames to loop while the ent is 'alive' (model should have "
       "two animations: living->dead. living always starts at frame '0')"$0D22
       "numDeadFrames"$22" - how many frames to play when the ent 'dies' ('nnn"
       "Frames' parameters must go together)"$0D22"wait"$22" - how long (in se"
       "conds) to leave the model after it's 'dead'.  '-1' leaves forever."$0D
       "NOTE: if you use model2, you must have an origin brush in the explosiv"
       "e with the center of the origin at the origin of the model"$0D22"item"$22
       " - when it explodes, pop this item out with the debirs (use QUAKED nam"
       "e. ex: "$22"item_health_small"$22")"$0D22"dmg"$22" - how much radius d"
       "amage should be done, defaults to 0"$0D22"health"$22" - defaults to 10"
       "0.  If health is set to '0' the brush will not be shootable."$0D22"tar"
       "getname"$22" - if set, no touch field will be spawned and a remote but"
       "ton or trigger field triggers the explosion."$0D22"type"$22" - type of"
       " debris ("$22"glass"$22", "$22"wood"$22", "$22"metal"$22", "$22"gibs"$22
       ", "$22"brick"$22", "$22"rock"$22", "$22"fabric"$22") default is "$22"w"
       "ood"$220D22"mass"$22" - defaults to 75.  This determines how much debr"
       "is is emitted when it explodes.  You get one large chunk per 100 of ma"
       "ss (up to 8) and one small chunk per 25 of mass (up to 16).  So 800 gi"
       "ves the most."$0D22"noise"$22" - sound to play when triggered.  The ex"
       "plosive will default to a sound that matches it's 'type'.  Use the sou"
       "nd name "$22"nosound"$22" (case in-sensitive) if you want it silent."$0D
       "the default sounds are:"$0D22"wood"$22"    - "$22"sound/world/boardbre"
       "ak.wav"$220D22"glass"$22"    - "$22"sound/world/glassbreak.wav"$220D22
       "metal"$22"    - "$22"sound/world/metalbreak.wav"$220D22"gibs"$22"    -"
       " "$22"sound/player/gibsplit1.wav"$220D22"brick"$22"    - "$22"sound/wo"
       "rld/brickfall.wav"$220D22"stone"$22"    - "$22"sound/world/stonefall.w"
       "av"$220D22"fabric"$22"    - "$22"sound/world/metalbreak.wav"$22"    //"
       " (SA) temp"$0D22"fxdensity"$22" size of explosion 1 - 100 (default is "
       "10)"
      spawnflags: =
      {
        typ = "X1"
        cap = "START_INVIS"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "TOUCHABLE"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "USESHADER"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "LOWGRAV"
      }
      spawnflags: =
      {
        typ = "X16"
        cap = "NOBLOCKAAS"
      }
      spawnflags: =
      {
        typ = "X32"
        cap = "EXPLO"
      }
      spawnflags: =
      {
        typ = "X64"
        cap = "DYNOMITE"
      }
    }
    func_invisible_user:form =
    {
      help = "when activated will use its target"$0D22"delay"$22" - time (in s"
       "econds) before it can be used again"$0D22"offnoise"$22" - specifies an"
       " alternate sound"$0D22"cursorhint"$22" - overrides the auto-location o"
       "f targeted entity (list below)"$0D"Normally when a player 'activates' "
       "this entity, if the entity has been turned 'off' (by a scripted comman"
       "d) you will hear a sound to indicate that you cannot activate the user"
       "."$0D"The sound defaults to "$22"sound/movers/invis_user_off.wav"$220D
       "NO_OFF_NOISE - no sound will play if the invis_user is used when 'off'"
       $0D"NOT_KICKABLE - kicking doesn't fire, only player activating"$0D22"c"
       "ursorhint"$22" cursor types: (probably more, ask sherman if you think "
       "the list is out of date)"$0D"they /don't/ need to be all uppercase"$0D
       "HINT_NONE"$0D"HINT_PLAYER"$0D"HINT_ACTIVATE"$0D"HINT_DOOR"$0D"HINT_DOO"
       "R_ROTATING"$0D"HINT_DOOR_LOCKED"$0D"HINT_DOOR_ROTATING_LOCKED"$0D"HINT"
       "_MG42"$0D"HINT_BREAKABLE"$0D"HINT_BREAKABLE_BIG"$0D"HINT_CHAIR"$0D"HIN"
       "T_ALARM"$0D"HINT_HEALTH"$0D"HINT_TREASURE"$0D"HINT_KNIFE"$0D"HINT_LADD"
       "ER"$0D"HINT_BUTTON"$0D"HINT_WATER"$0D"HINT_CAUTION"$0D"HINT_DANGER"$0D
       "HINT_SECRET"$0D"HINT_QUESTION"$0D"HINT_EXCLAMATION"$0D"HINT_CLIPBOARD"$0D
       "HINT_WEAPON"$0D"HINT_AMMO"$0D"HINT_ARMOR"$0D"HINT_POWERUP"$0D"HINT_HOL"
       "DABLE"$0D"HINT_INVENTORY"$0D"HINT_SCENARIC"$0D"HINT_EXIT"$0D"HINT_PLYR"
       "_FRIEND"$0D"HINT_PLYR_NEUTRAL"$0D"HINT_PLYR_ENEMY"$0D"HINT_PLYR_UNKNOW"
       "N"
      spawnflags: =
      {
        typ = "X1"
        cap = "STARTOFF"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "HAS_USER"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "NO_OFF_NOISE"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "NOT_KICKABLE"
      }
    }
    props_box_32:form =
    {
      bbox = '-16 -16 -16 16 16 16'
    }
    props_box_48:form =
    {
      bbox = '-24 -24 -24 24 24 24'
    }
    props_box_64:form =
    {
      bbox = '-32 -32 -32 32 32 32'
    }
    props_sparks:form =
    {
      help = "the default direction is strait up use info_no_null for alt dire"
       "ction"$0D"delay = how long till next spark effect"$0D"wait = life of t"
       "he spark with some random variance default 1.0 sec"$0D"health = random"
       " number of sparks upto specified amount default 8"$0D"start_size defau"
       "lt 8 along the x"$0D"end_size default 8 along the y"$0D"by changing th"
       "e size will change the spawn origin of the individual spark"$0D"ei 16 "
       "x 8 or 24 x 32 would cause the sparks to spawn that many units from"$0D
       "the origin"$0D"speed controls how quickly the sparks will travel defau"
       "lt is 2"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "ELECTRIC"
      }
    }
    props_gunsparks:form =
    {
      help = "the default direction is strait up use info_no_null for alt dire"
       "ction"$0D"this entity must be used to see the effect"$0D22"speed"$22" "
       "default is 20"$0D22"health"$22" number to spawn default is 4"
      bbox = '-8 -8 -8 8 8 8'
    }
    props_smokedust:form =
    {
      help = "health = how many pieces 16 is default"
      bbox = '-8 -8 -8 8 8 8'
    }
    props_dust:form =
    {
      help = "you should give this ent a target use a not null"$0D"or you coul"
       "d set its angles in the editor"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "WHITE"
      }
    }
    props_bench:form =
    {
      help = "requires an origin brush"$0D"health = 10 by default"
    }
    props_radio:form =
    {
      help = "requires an origin brush"$0D"health = defaults to 100"
    }
    props_radioSEVEN:form =
    {
      help = "requires an origin brush"$0D"health = defaults to 100"$0D"the mo"
       "dels dims are"$0D"x 32"$0D"y 136"$0D"z 32"$0D"if you want more explosi"
       "ons you'll need func explosive"$0D"it will fire all its targets upon d"
       "eath"
    }
    props_locker_tall:form =
    {
      help = "requires an origin brush"
    }
    props_chair_chat:form =
    {
      help = "point entity"$0D"health = default = 10"$0D"wait = defaults to 5 "
       "how many shards to spawn ( try not to exceed 20 )"$0D"shard ="$0D"shar"
       "d_glass = 0,"$0D"shard_wood = 1,"$0D"shard_metal = 2,"$0D"shard_cerami"
       "c = 3"
      bbox = '-16 -16 0 16 16 32'
    }
    props_chair_chatarm:form =
    {
      help = "point entity"$0D"health = default = 10"$0D"wait = defaults to 5 "
       "how many shards to spawn ( try not to exceed 20 )"$0D"shard ="$0D"shar"
       "d_glass = 0,"$0D"shard_wood = 1,"$0D"shard_metal = 2,"$0D"shard_cerami"
       "c = 3"
      bbox = '-16 -16 0 16 16 32'
    }
    props_chair_side:form =
    {
      help = "point entity"$0D"health = default = 10"$0D"wait = defaults to 5 "
       "how many shards to spawn ( try not to exceed 20 )"$0D"shard ="$0D"shar"
       "d_glass = 0,"$0D"shard_wood = 1,"$0D"shard_metal = 2,"$0D"shard_cerami"
       "c = 3"
      bbox = '-16 -16 0 16 16 32'
    }
    props_chair_hiback:form =
    {
      help = "point entity"$0D"health = default = 10"$0D"wait = defaults to 5 "
       "how many shards to spawn ( try not to exceed 20 )"$0D"shard ="$0D"shar"
       "d_glass = 0,"$0D"shard_wood = 1,"$0D"shard_metal = 2,"$0D"shard_cerami"
       "c = 3"
      bbox = '-16 -16 0 16 16 32'
    }
    props_chair:form =
    {
      help = "point entity"$0D"health = default = 10"$0D"wait = defaults to 5 "
       "how many shards to spawn ( try not to exceed 20 )"$0D"shard ="$0D"shar"
       "d_glass = 0,"$0D"shard_wood = 1,"$0D"shard_metal = 2,"$0D"shard_cerami"
       "c = 3"
      bbox = '-16 -16 0 16 16 32'
    }
    props_damageinflictor:form =
    {
      help = "this entity when used will cause 9999 damage to all entities it "
       "is targeting"$0D"then it will be removed"
      bbox = '-8 -8 -8 8 8 8'
    }
    props_shard_generator:form =
    {
      help = "wait = defaults to 5 how many shards to spawn ( try not to excee"
       "d 20 )"$0D"shard ="$0D"shard_glass = 0,"$0D"shard_wood = 1,"$0D"shard_"
       "metal = 2,"$0D"shard_ceramic = 3"
      bbox = '-4 -4 -4 4 4 4'
    }
    props_desklamp:form =
    {
      help = "point entity"$0D"health = default = 10"$0D"wait = defaults to 5 "
       "how many shards to spawn ( try not to exceed 20 )"$0D"shard ="$0D"shar"
       "d_glass = 0,"$0D"shard_wood = 1,"$0D"shard_metal = 2,"$0D"shard_cerami"
       "c = 3"
      bbox = '-16 -16 0 16 16 32'
    }
    props_flamebarrel:form =
    {
      help = "angle will determine which way the lid will fly off when it expl"
       "odes"$0D"when selecting the OIL spawnflag you have the option of givin"
       "g it a target"$0D"this will ensure that the oil sprite will show up wh"
       "ere you want it"$0D"( be sure to put it on the floor )"$0D"the default"
       " is in the middle of the barrel on the floor"
      bbox = '-13 -13 0 13 13 40'
      spawnflags: =
      {
        typ = "X1"
        cap = "SMOKING"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NOLID"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "OIL"
      }
    }
    props_crate_64:form =
    {
      help = "breakable pushable"$0D"health = default = 20"$0D"wait = defaults"
       " to 10 how many shards to spawn ( try not to exceed 20 )"$0D"shard ="$0D
       "shard_glass = 0,"$0D"shard_wood = 1,"$0D"shard_metal = 2,"$0D"shard_ce"
       "ramic = 3"
      bbox = '-32 -32 0 32 32 64'
    }
    props_crate_32:form =
    {
      help = "breakable pushable"$0D"health = default = 20"$0D"wait = defaults"
       " to 10 how many shards to spawn ( try not to exceed 20 )"$0D"shard ="$0D
       "shard_glass = 0,"$0D"shard_wood = 1,"$0D"shard_metal = 2,"$0D"shard_ce"
       "ramic = 3"
      bbox = '-16 -16 0 16 16 32'
    }
    props_crate_32x64:form =
    {
      help = "requires an origin brush"$0D"breakable NOT pushable"$0D"brushmod"
       "el only"$0D"health = default = 20"$0D"wait = defaults to 10 how many s"
       "hards to spawn ( try not to exceed 20 )"$0D"shard ="$0D"shard_glass = "
       "0,"$0D"shard_wood = 1,"$0D"shard_metal = 2,"$0D"shard_ceramic = 3"
    }
    props_58x112tablew:form =
    {
      help = "dimensions are 58 x 112 x 32 (x,y,z)"$0D"requires an origin brus"
       "h"$0D"breakable NOT pushable"$0D"brushmodel only"$0D"health = default "
       "= 10"$0D"wait = defaults to 10 how many shards to spawn ( try not to e"
       "xceed 20 )"$0D"shard ="$0D"shard_glass = 0,"$0D"shard_wood = 1,"$0D"sh"
       "ard_metal = 2,"$0D"shard_ceramic = 3"
    }
    props_castlebed:form =
    {
      help = "dimensions are 112 x 128 x 80 (x,y,z)"$0D"requires an origin bru"
       "sh"$0D"breakable NOT pushable"$0D"brushmodel only"$0D"health = default"
       " = 20"$0D"wait = defaults to 10 how many shards to spawn ( try not to "
       "exceed 20 )"$0D"shard ="$0D"shard_glass = 0,"$0D"shard_wood = 1,"$0D"s"
       "hard_metal = 2,"$0D"shard_ceramic = 3"
    }
    props_snowGenerator:form =
    {
      help = "entity brush need to be targeted to an info notnull this"$0D"wil"
       "l determine the direction the snow particles will travel."$0D"speed"$0D
       "gravity"$0D"turb"$0D"count is the number of snowflurries 3 to 5 would "
       "be a good number"$0D"duration is how long the effect will last 1 is 1 "
       "second"
      spawnflags: =
      {
        typ = "X1"
        cap = "TOGGLE_ON"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "ALWAYS_ON"
      }
    }
    props_FireColumn:form =
    {
      help = "this entity will require a target use an infonotnull to specifiy"
       " its direction"$0D"defaults:"$0D"will leave a flaming trail by default"
       $0D"will not be affected by gravity"$0D"radius = distance flame will co"
       "rkscrew from origin"$0D"speed = default is 900"$0D"duration = default "
       "is 3 sec"$0D"start_size = default is 5"$0D"end_size = defaults 7 thru "
       "17"$0D"count = defaults 100 thru 500"$0D"Pending:"$0D"delay before it "
       "happens again use trigger_relay for now"$0D"assign a model"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "CORKSCREW"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SMOKE"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "GRAVITY"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "HALFGRAVITY"
      }
    }
    props_ExploPart:form =
    {
      help = $22"model"$22" will load a discreet model"$0D22"noise"$22" will l"
       "oad looping sound for the model"$0D22"target"$22" point to an infonotn"
       "ull to specify dir default will be up"$0D22"speed"$22"    default to 9"
       "00"$0D22"type"$22"  wood concrete or stone"$0D22"count"$22"in the abse"
       "nse of a model count will determine the piece to spawn"$0D"for wood:"$0D
       "it can be one of the following 64 48 32 24 16 8"$0D"for concrete:"$0D"f"
       "or stone:"
      bbox = '-8 -8 -16 8 8 16'
    }
    props_decoration:form =
    {
      help = $22"model2"$22" will specify the model to load"$0D22"noise"$22"  "
       "the looping sound entity is to make"$0D22"type"$22" type of debris ("$22
       "glass"$22", "$22"wood"$22", "$22"metal"$22", "$22"ceramic"$22", "$22"r"
       "ubble"$22") default is "$22"wood"$220D22"count"$22" how much debris ei"
       ". default 4 pieces"$0D"you will need to specify the bounding box for t"
       "he entity"$0D22"high"$22"  default is 4"$0D22"wide"$22"    default is "
       "4"$0D22"frames"$22"    how many frames of animation to play"$0D22"loop"
       $22" when the animation is done start again on this frame"$0D22"starton"
       "frame"$22" on what frame do you want to start the animation"
      bbox = '-8 -8 0 8 8 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "STARTINVIS"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "DEBRIS"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "ANIMATE"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "KEEPBLOCK"
      }
      spawnflags: =
      {
        typ = "X16"
        cap = "TOUCHACTIVATE"
      }
      spawnflags: =
      {
        typ = "X32"
        cap = "LOOPING"
      }
      spawnflags: =
      {
        typ = "X64"
        cap = "STARTON"
      }
    }
    props_decorBRUSH:form =
    {
      help = "ANIMATE animate on death"$0D"STARTON playanimation on death"$0D"m"
       "ust have an origin brush"$0D22"model2"$22" will specify the model to l"
       "oad"$0D22"noise"$22"  the looping sound entity is to make"$0D22"type"$22
       " type of debris ("$22"glass"$22", "$22"wood"$22", "$22"metal"$22", "$22
       "ceramic"$22", "$22"rubble"$22") default is "$22"wood"$220D22"count"$22
       " how much debris ei. default 4 pieces"$0D22"frames"$22"    how many fr"
       "ames of animation to play"$0D22"loop"$22" when the animation is done s"
       "tart again on this frame"$0D22"startonframe"$22" on what frame do you "
       "want to start the animation"
      spawnflags: =
      {
        typ = "X1"
        cap = "STARTINVIS"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "DEBRIS"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "ANIMATE"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "KEEPBLOCK"
      }
      spawnflags: =
      {
        typ = "X32"
        cap = "LOOPING"
      }
      spawnflags: =
      {
        typ = "X64"
        cap = "STARTON"
      }
    }
    props_decoration_scale:form =
    {
      help = $22"modelscale"$22" - Scale multiplier (defaults to 1.0 and scale"
       "s uniformly)"$0D22"modelscale_vec"$22" - Set scale per-axis.  Override"
       "s "$22"modelscale"$22", so if you have both the "$22"modelscale"$22" i"
       "s ignored"$0D22"model2"$22" will specify the model to load"$0D22"noise"
       $22"  the looping sound entity is to make"$0D22"type"$22" type of debri"
       "s ("$22"glass"$22", "$22"wood"$22", "$22"metal"$22", "$22"ceramic"$22","
       " "$22"rubble"$22") default is "$22"wood"$220D22"count"$22" how much de"
       "bris ei. default 4 pieces"$0D"you will need to specify the bounding bo"
       "x for the entity"$0D22"high"$22"  default is 4"$0D22"wide"$22"    defa"
       "ult is 4"$0D22"frames"$22"    how many frames of animation to play"$0D
       $22"loop"$22" when the animation is done start again on this frame"$0D22
       "startonframe"$22" on what frame do you want to start the animation"
      bbox = '-8 -8 0 8 8 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "STARTINVIS"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "DEBRIS"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "ANIMATE"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "KEEPBLOCK"
      }
      spawnflags: =
      {
        typ = "X16"
        cap = "TOUCHACTIVATE"
      }
      spawnflags: =
      {
        typ = "X32"
        cap = "LOOPING"
      }
      spawnflags: =
      {
        typ = "X64"
        cap = "STARTON"
      }
    }
    props_skyportal:form =
    {
      help = $22"fov"$22" for the skybox default is 90"$0D"To have the portal "
       "sky fogged, enter any of the following values:"$0D22"fogcolor"$22" (r "
       "g b) (values 0.0-1.0)"$0D22"fognear"$22" distance from entity to start"
       " fogging"$0D22"fogfar"$22" distance from entity that fog is opaque"
      bbox = '-8 -8 0 8 8 16'
    }
    props_statue:form =
    {
      help = $22"model2"$22" will specify the model to load"$0D22"noise"$22"  "
       "the sound entity is to make"$0D22"type"$22" type of debris ("$22"glass"
       $22", "$22"wood"$22", "$22"metal"$22", "$22"ceramic"$22", "$22"rubble"$22
       ") default is "$22"wood"$220D22"count"$22" how much debris ei. default "
       "4 pieces"$0D"you will need to specify the bounding box for the entity"$0D
       $22"high"$22"  default is 4"$0D22"wide"$22"    default is 4"$0D22"frame"
       "s"$22"    how many frames of animation to play"$0D22"delay"$22"       "
       " how long of a delay before damage is inflicted ei. 0.5 sec or 2.7 sec"
       $0D22"damage"$22"    amount of damage to be inflicted"
      bbox = '-8 -8 0 8 8 128'
      spawnflags: =
      {
        typ = "X1"
        cap = "HURT"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "DEBRIS"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "ANIMATE"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "KEEPBLOCK"
      }
    }
    props_statueBRUSH:form =
    {
      help = "needs an origin brush"$0D22"model2"$22" will specify the model t"
       "o load"$0D22"noise"$22"  the sound entity is to make"$0D22"type"$22" t"
       "ype of debris ("$22"glass"$22", "$22"wood"$22", "$22"metal"$22", "$22"c"
       "eramic"$22", "$22"rubble"$22") default is "$22"wood"$220D22"count"$22" "
       "how much debris ei. default 4 pieces"$0D22"frames"$22"    how many fra"
       "mes of animation to play"$0D22"delay"$22"        how long of a delay b"
       "efore damage is inflicted ei. 0.5 sec or 2.7 sec"$0D"THE damage has be"
       "en disabled at the moment"$0D22"damage"$22"    amount of damage to be "
       "inflicted"
      spawnflags: =
      {
        typ = "X1"
        cap = "HURT"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "DEBRIS"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "ANIMATE"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "KEEPBLOCK"
      }
    }
    props_footlocker:form =
    {
      help = $22"noise"$22"  the sound entity is to make upon death"$0D"the de"
       "fault sounds are:"$0D22"wood"$22"    - "$22"sound/world/boardbreak.wav"
       $220D22"glass"$22"    - "$22"sound/world/glassbreak.wav"$220D22"metal"$22
       "    - "$22"sound/world/metalbreak.wav"$220D22"gibs"$22"    - "$22"soun"
       "d/player/gibsplit1.wav"$220D22"brick"$22"    - "$22"sound/world/brickf"
       "all.wav"$220D22"stone"$22"    - "$22"sound/world/stonefall.wav"$220D22
       "fabric"$22"    - "$22"sound/world/metalbreak.wav"$22"    // (SA) temp"$0D
       $22"locknoise"$22" the locked sound to play"$0D22"wait"$22"     denotes"
       " how long the wait is going to be before the locked sound is played ag"
       "ain default is 1 sec"$0D22"health"$22" default is 1"$0D22"spawnitem"$22
       " - will spawn this item unpon death use the pickup_name ei 9mm"$0D22"t"
       "ype"$22" - type of debris ("$22"glass"$22", "$22"wood"$22", "$22"metal"
       $22", "$22"gibs"$22", "$22"brick"$22", "$22"rock"$22", "$22"fabric"$22")"
       " default is "$22"wood"$220D22"mass"$22" - defaults to 75.  This determ"
       "ines how much debris is emitted.  You get one large chunk per 100 of m"
       "ass (up to 8) and one small chunk per 25 of mass (up to 16).  So 800 g"
       "ives the most."$0D22"dl_shader"$22" needs to be set the same way as a "
       "target_effect"$0D"TBD: the spawning of junk still pending and animatio"
       "n when used"$0D"-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A"
       " KEY --------"$0D"model="$22"models/mapobjects/furniture/footlocker.md"
       "3"$22
      bbox = '-12 -21 -12 12 21 12'
      spawnflags: =
      {
        typ = "X1"
        cap = "X"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "NO_JUNK"
      }
    }
    props_flamethrower:form =
    {
      help = "the effect occurs when this entity is used"$0D"needs to aim at a"
       " info_notnull"$0D22"duration"$22" how long the effect is going to last"
       " for example 1.2 sec 2.7 sec"$0D22"random"$22" how long of a random va"
       "riance so the effect isnt exactly the same each time for example 1.1 s"
       "ec or 0.2 sec"$0D22"size"$22" valid ranges are 1.0 to 0.1"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "TRACKING"
      }
    }
    script_mover:form =
    {
      help = "Scripted brush entity. A simplified means of moving brushes arou"
       "nd based on events."$0D22"modelscale"$22" - Scale multiplier (defaults"
       " to 1, and scales uniformly)"$0D22"modelscale_vec"$22" - Set scale per"
       "-axis.  Overrides "$22"modelscale"$22", so if you have both the "$22"m"
       "odelscale"$22" is ignored"$0D22"model2"$22" optional md3 to draw over "
       "the solid clip brush"$0D22"scriptname"$22" name used for scripting pur"
       "poses (like aiName in AI scripting)"$0D22"health"$22" optionally make "
       "this entity damagable"
      spawnflags: =
      {
        typ = "X1"
        cap = "TRIGGERSPAWN"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "SOLID"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "EXPLOSIVEDAMAGEONLY"
      }
    }
    script_model_med:form =
    {
      help = "MEDIUM SIZED scripted entity, used for animating a model, moving"
       " it around, etc"$0D"SOLID spawnflag means this entity will clip the pl"
       "ayer and AI, otherwise they can walk"$0D"straight through it"$0D22"mod"
       "el"$22" the full path of the model to use"$0D22"scriptname"$22" name u"
       "sed for scripting purposes (like aiName in AI scripting)"
      bbox = '-16 -16 -24 16 16 64'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "Solid"
      }
    }
    script_camera:form =
    {
      help = "This is a camera entity. Used by the scripting to show cinematic"
       "s, via special"$0D"camera commands. See scripting documentation."$0D22
       "scriptname"$22" name used for scripting purposes (like aiName in AI sc"
       "ripting)"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "TriggerSpawn"
      }
    }
    script_multiplayer:form =
    {
      help = "This is used to script multiplayer maps.  Entity not displayed i"
       "n game."$0D22"scriptname"$22" name used for scripting purposes (REQUIR"
       "ED=='game_manager')"
      bbox = '-8 -8 -8 8 8 8'
    }
    worldspawn:form =
    {
      help = "Every map should have exactly one worldspawn."$0D22"music"$22"  "
       "   Music wav file"$0D22"gravity"$22"   800 is default gravity"$0D22"me"
       "ssage"$22" Text to print during connection process"$0D22"ambient"$22" "
       " Ambient light value (must use '_color')"$0D22"_color"$22"    Ambient "
       "light color (must be used with 'ambient')"$0D22"sun"$22"        Shader"
       " to use for 'sun' image"
      spawnflags: =
      {
        typ = "X1"
        cap = "sun_cameraflare"
      }
    }
    target_give:form =
    {
      help = "Gives the activator all the items pointed to."
      bbox = '-8 -8 -8 8 8 8'
    }
    target_remove_powerups:form =
    {
      help = "takes away all the activators powerups."$0D"Used to drop flight "
       "powerups into death puts."
      bbox = '-8 -8 -8 8 8 8'
    }
    target_delay:form =
    {
      help = $22"wait"$22" seconds to pause before firing targets."$0D22"rando"
       "m"$22" delay variance, total delay = delay +/- random seconds"
      bbox = '-8 -8 -8 8 8 8'
    }
    target_score:form =
    {
      help = $22"count"$22" number of points to add, default 1"$0D"The activat"
       "or is given this many points."
      bbox = '-8 -8 -8 8 8 8'
    }
    target_print:form =
    {
      help = $22"message"$22"    text to print"$0D"If "$22"private"$22", only "
       "the activator gets the message.  If no checks, all clients get the mes"
       "sage."
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "redteam"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "blueteam"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "private"
      }
    }
    target_speaker:form =
    {
      help = $22"noise"$22"        wav file to play"$0D"A global sound will pl"
       "ay full volume throughout the level."$0D"Activator sounds will play on"
       " the player that activated the target."$0D"Global and activator sounds"
       " can't be combined with looping."$0D"Normal sounds play each time the "
       "target is used."$0D"Looped sounds will be toggled by use functions."$0D
       "Multiple identical looping sounds will just increase volume without an"
       "y speed cost."$0D"NO_PVS - this sound will not turn off when not in th"
       "e player's PVS"$0D22"wait"$22" : Seconds between auto triggerings, 0 ="
       " don't auto trigger"$0D22"random"$22" : wait variance, default is 0"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "LOOPED_ON"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "LOOPED_OFF"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "GLOBAL"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "ACTIVATOR"
      }
      spawnflags: =
      {
        typ = "X16"
        cap = "VIS_MULTIPLE"
      }
      spawnflags: =
      {
        typ = "X32"
        cap = "NO_PVS"
      }
    }
    target_laser:form =
    {
      help = "When triggered, fires a laser.  You can either set a target or a"
       " direction."
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "START_ON"
      }
    }
    target_teleporter:form =
    {
      help = "The activator will be teleported away."
      bbox = '-8 -8 -8 8 8 8'
    }
    target_relay:form =
    {
      help = "This doesn't perform any actions except fire its targets."$0D"Th"
       "e activator can be forced to be from a certain team."$0D"if RANDOM is "
       "checked, only one of the targets will be fired, not all of them"$0D22"k"
       "ey"$22" specifies an item you can be carrying that affects the operati"
       "on of this relay"$0D"this key is currently an int (1-16) which matches"
       " the id of a key entity (key_key1 = 1, etc)"$0D"NOKEY_ONLY means "$22"f"
       "ire only if I do /not/ have the specified key"$220D"TAKE_KEY removes t"
       "he key from the players inventory"$0D22"lockednoise"$22" specifies a ."
       "wav file to play if the relay is used and the player doesn't have the "
       "necessary key."$0D"By default this sound is "$22"sound/movers/doors/de"
       "fault_door_locked.wav"$220D"NO_LOCKED_NOISE specifies that it will be "
       "silent if activated without proper key"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "RED_ONLY"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "BLUE_ONLY"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "RANDOM"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "NOKEY_ONLY"
      }
      spawnflags: =
      {
        typ = "X16"
        cap = "TAKE_KEY"
      }
      spawnflags: =
      {
        typ = "X32"
        cap = "NO_LOCKED_NOISE"
      }
    }
    target_kill:form =
    {
      help = "Kills the activator. (default)"$0D"If targets, they will be kill"
       "ed when this is fired"$0D22"kill_user_too"$22" will still kill the act"
       "ivator when this ent has targets (default is only kill targets, not ac"
       "tivator)"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "kill_user_too"
      }
    }
    target_location:form =
    {
      help = "Set "$22"message"$22" to the name of this location."$0D"Set "$22
       "count"$22" to 0-7 for color."$0D"0:white 1:red 2:green 3:yellow 4:blue"
       " 5:cyan 6:magenta 7:white"$0D"Closest target_location in sight used fo"
       "r the location, if none"$0D"in site, closest in distance"
      bbox = '-8 -8 -8 8 8 8'
    }
    target_fog:form =
    {
      help = "color picker chooses color of fog"$0D22"distance"$22" sets fog d"
       "istance.  Use value '0' to give control back to the game (and use the "
       "fog values specified in the sky shader if present)"$0D"distance value "
       "sets the type of fog.  values > 1 are distance fog (ex. 2048), values "
       "< 1 are density fog (ex. .0002)"$0D22"near"$22" is fog start distance "
       "when using distance fog"$0D22"time"$22" time it takes to change fog to"
       " new value.  default time is 1 sec"
      bbox = '-8 -8 -8 8 8 8'
    }
    target_counter:form =
    {
      help = "Increments the counter pointed to."$0D22"count"$22" is the key f"
       "or the count value"
      bbox = '-8 -8 -8 8 8 8'
    }
    target_autosave:form =
    {
      help = "saves game to 'autosave.svg' when triggered then dies."
      bbox = '-8 -8 -8 8 8 8'
    }
    target_lock:form =
    {
      help = "Sets the door to a state requiring key n"$0D22"key"$22" is the r"
       "equired key"$0D"so:"$0D"key:0  unlocks the door"$0D"key:-1 locks the d"
       "oor until a target_lock with key:0"$0D"key:n  means the door now requi"
       "res key n"
      bbox = '-8 -8 -8 8 8 8'
    }
    target_alarm:form =
    {
      help = "does nothing yet (effectively a relay right now)"
      bbox = '-4 -4 -4 4 4 4'
    }
    target_smoke:form =
    {
      help = "1 second = 1000"$0D"1 FRAME = 100"$0D"delay = 100 = one millisec"
       "ond default this is the maximum smoke that will show up"$0D"time = 500"
       "0 default before the smoke disipates"$0D"duration = 2000 before the sm"
       "oke starts to alpha"$0D"start_size = 24 default"$0D"end_size = 96 defa"
       "ult"$0D"wait    = default is 50 the rate at which it will travel up"
      bbox = '-32 -32 -16 32 32 16'
      spawnflags: =
      {
        typ = "X1"
        cap = "Black"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "White"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "SmokeON"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "Gravity"
      }
    }
    target_script_trigger:form =
    {
      help = "must have an aiName"$0D"must have a target"$0D"when used it will"
       " fire its targets"
      bbox = '-8 -8 -8 8 8 8'
    }
    target_rumble:form =
    {
      help = "wait = default is 2 seconds = time the entity will enable rumble"
       " effect"$0D22"pitch"$22" value from 1 to 10 default is 5"$0D22"yaw"$22
       "   value from 1 to 10 default is 5"$0D22"rampup"$22" how much time it "
       "will take to reach maximum pitch and yaw in seconds"$0D22"rampdown"$22
       " how long till effect ends after rampup is reached in seconds"$0D22"st"
       "artnoise"$22" startingsound"$0D22"noise"$22"  the looping sound entity"
       " is to make"$0D22"endnoise"$22" endsound"$0D22"duration"$22" the amoun"
       "t of time the effect is to last ei 1.0 sec 3.6 sec"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "STARTOFF"
      }
    }
    team_CTF_redplayer:form =
    {
      help = "Only in CTF games.  Red players spawn here at game start."
      bbox = '-16 -16 -16 16 16 32'
    }
    team_CTF_blueplayer:form =
    {
      help = "Only in CTF games.  Blue players spawn here at game start."
      bbox = '-16 -16 -16 16 16 32'
    }
    team_CTF_redspawn:form =
    {
      help = "potential spawning position for axis team in wolfdm games."$0D"T"
       "ODO: SelectRandomTeamSpawnPoint() will choose team_CTF_redspawn point "
       "that:"$0D"1) has been activated (FL_SPAWNPOINT_ACTIVE)"$0D"2) isn't oc"
       "cupied and"$0D"3) is closest to team_WOLF_objective"$0D"This allows sp"
       "awnpoints to advance across the battlefield as new ones are"$0D"placed"
       " and/or activated."$0D"If target is set, point spawnpoint toward targe"
       "t activation"
      bbox = '-16 -16 -24 16 16 32'
      spawnflags: =
      {
        typ = "X1"
        cap = "invulnerable"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "startactive"
      }
    }
    team_CTF_bluespawn:form =
    {
      help = "potential spawning position for allied team in wolfdm games."$0D
       "TODO: SelectRandomTeamSpawnPoint() will choose team_CTF_bluespawn poin"
       "t that:"$0D"1) has been activated (active)"$0D"2) isn't occupied and"$0D
       "3) is closest to selected team_WOLF_objective"$0D"This allows spawnpoi"
       "nts to advance across the battlefield as new ones are"$0D"placed and/o"
       "r activated."$0D"If target is set, point spawnpoint toward target acti"
       "vation"
      bbox = '-16 -16 -24 16 16 32'
      spawnflags: =
      {
        typ = "X1"
        cap = "invulnerable"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "startactive"
      }
    }
    team_CTF_redflag:form =
    {
      help = "Can be used as an objective in Wolf."$0D22"model"$22"        Set"
       " model to display in game"$0D22"message"$22"    Name of object in game"
       " (ex: the War Documents)"
      bbox = '-16 -16 -16 16 16 16'
    }
    team_CTF_blueflag:form =
    {
      help = "Can be used as an objective in Wolf."$0D22"model"$22"        Set"
       " model to display in game"$0D22"message"$22"    Name of object in game"
       " (ex: the War Documents)"
      bbox = '-16 -16 -16 16 16 16'
    }
    team_WOLF_objective:form =
    {
      help = "marker for objective"$0D"This marker will be used to generate a "
       "list of objectives"$0D"that players can elect to spawn near in the lim"
       "bo spawn"$0D"screen."$0D22"description"$22"    short text key for obje"
       "ctive name that"$0D"will appear in objective selection in limbo UI."
      bbox = '-16 -16 -24 16 16 32'
    }
    team_WOLF_checkpoint:form =
    {
      help = "This is the flagpole players touch in Capture and Hold game scen"
       "arios."$0D"It will call specific trigger funtions in the map script fo"
       "r this object."$0D"When allies capture, it will call "$22"allied_captu"
       "re"$22"."$0D"When axis capture, it will call "$22"axis_capture"$22"."$0D
       "// if spawnpoint flag is set, capture will turn on targeted spawnpoint"
       "s"$0D"// for capture team and turn *off* targeted spawnpoints for oppo"
       "sing team"$0D22"model"$22"        model to use (will use same animatio"
       "ns as flagpole however)"
      bbox = '-16 -16 0 16 16 128'
      spawnflags: =
      {
        typ = "X1"
        cap = "spawnpoint"
      }
    }
    camera_cam:form =
    {
      help = $22"track"$22" is the targetname of the entity providing the star"
       "ting direction use an info_notnull"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "ON"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "TRACKING"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "MOVING"
      }
    }
    screen_fade:form =
    {
      help = $22"wait"$22" duration of fade out"$0D22"delay"$22" duration of f"
       "ade in"$0D"1 = 1 sec"$0D".5 = .5 sec"$0D"defaults are .5 sec"
      bbox = '-8 -8 -8 8 8 8'
    }
    camera_reset_player:form =
    {
      help = "touched will record the players position and fire off its target"
       "s and or cameras"$0D"used will reset the player back to his last posit"
       "ion"
    }
    trigger_multiple:form =
    {
      help = $22"wait"$22" : Seconds between triggerings, 0.5 default, -1 = on"
       "e time only."$0D22"random"$22"    wait variance, default is 0"$0D"Vari"
       "able sized repeatable trigger.  Must be targeted at one or more entiti"
       "es."$0D"so, the basic time between firing is a random time between"$0D
       "(wait - random) and (wait + random)"
      spawnflags: =
      {
        typ = "X1"
        cap = "AI_Touch"
      }
    }
    trigger_always:form =
    {
      help = "This trigger will always fire.  It is activated by the world."
      bbox = '-8 -8 -8 8 8 8'
    }
    trigger_push:form =
    {
      help = "Must point at a target_position, which will be the apex of the l"
       "eap."$0D"This will be client side predicted, unlike target_push"
      spawnflags: =
      {
        typ = "X1"
        cap = "TOGGLE"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "REMOVEAFTERTOUCH"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "PUSHPLAYERONLY"
      }
    }
    target_push:form =
    {
      help = "Pushes the activator in the direction.of angle, or towards a tar"
       "get apex."$0D22"speed"$22"        defaults to 1000"$0D"if "$22"bouncep"
       "ad"$22", play bounce noise instead of windfly"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "bouncepad"
      }
    }
    trigger_teleport:form =
    {
      help = "Allows client side prediction of teleportation events."$0D"Must "
       "point at a target_position, which will be the teleport destination."
    }
    trigger_hurt:form =
    {
      help = "Any entity that touches this will be hurt."$0D"It does dmg point"
       "s of damage each server frame"$0D"Targeting the trigger will toggle it"
       "s on / off state."$0D"SILENT            supresses playing the sound"$0D
       "SLOW            changes the damage rate to once per second"$0D"NO_PROT"
       "ECTION    *nothing* stops the damage"$0D22"dmg"$22"            default"
       " 5 (whole numbers only)"$0D22"life"$22"    time this brush will exist "
       "if value is zero will live for ever ei 0.5 sec 2.sec"$0D"default is ze"
       "ro"$0D"the entity must be used first before it will count down its lif"
       "e"
      spawnflags: =
      {
        typ = "X1"
        cap = "START_OFF"
      }
      spawnflags: =
      {
        typ = "X4"
        cap = "SILENT"
      }
      spawnflags: =
      {
        typ = "X8"
        cap = "NO_PROTECTION"
      }
      spawnflags: =
      {
        typ = "X16"
        cap = "SLOW"
      }
      spawnflags: =
      {
        typ = "X32"
        cap = "ONCE"
      }
    }
    func_timer:form =
    {
      help = "This should be renamed trigger_timer..."$0D"Repeatedly fires its"
       " targets."$0D"Can be turned on or off by using."$0D22"wait"$22"       "
       "     base time between triggering all targets, default is 1"$0D22"rand"
       "om"$22"        wait variance, default is 0"$0D"so, the basic time betw"
       "een firing is a random time between"$0D"(wait - random) and (wait + ra"
       "ndom)"
      bbox = '-8 -8 -8 8 8 8'
      spawnflags: =
      {
        typ = "X1"
        cap = "START_ON"
      }
    }
    trigger_once:form =
    {
      help = "Must be targeted at one or more entities."$0D"Once triggered, th"
       "is entity is destroyed"$0D"(you can actually do the same thing with tr"
       "igger_multiple with a wait of -1)"
      spawnflags: =
      {
        typ = "X1"
        cap = "AI_Touch"
      }
    }
    trigger_deathCheck:form =
    {
      help = "GIBFLAG entity will never fire its target(s) if aiName entity wa"
       "s gibbed"$0D"aiName entity making alertentity call"$0D"this entity wil"
       "l test if aiName is in its volume"$0D"Must be targeted at one or more "
       "entities."$0D"Once triggered, this entity is destroyed"
      spawnflags: =
      {
        typ = "X2"
        cap = "GIBFLAG"
      }
    }
    trigger_aidoor:form =
    {
      help = "These entities must be placed on all doors one for each side of "
       "the door"$0D"this will enable ai's to operate the door and help in pre"
       "venting ai's and"$0D"the player from getting stuck when the door is de"
       "ciding which way to open"
    }
    trigger_flagonly:form =
    {
      help = "Player must be carrying the proper flag for it to trigger."$0D"I"
       "t will call the "$22"death"$22" function in the object's script."$0D22
       "scriptName"$22"    The object name in the script file"$0D"RED_FLAG -- "
       "only trigger if player is carrying red flag"$0D"BLUE_FLAG -- only trig"
       "ger if player is carrying blue flag"
      spawnflags: =
      {
        typ = "X1"
        cap = "RED_FLAG"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "BLUE_FLAG"
      }
    }
    trigger_objective_info:form =
    {
      help = "Players in this field will see a message saying that they are ne"
       "ar an objective."$0D"Also, if targeting a dynamitable objective, the d"
       "ynamite must be armed inside"$0D"of the trigger to blow up the objecti"
       "ve."$0D22"track"$22"        Mandatory, this text will be appended to "$22
       "You are near "$220D22"target"$22"        You may target dynamitable ob"
       "jectives"$0D22"score"$22"        If targeting a dynamitable objective,"
       " give this score when blown."$0D"AXIS_OBJECTIVE  -- Set if targeting a"
       "n objective owned by AXIS, then only"$0D"allied dynamite will blow it "
       "up."$0D"ALLIED_OBJECTIVE -- Set if targeting an objective owned by ALL"
       "IES, then only"$0D"allied dynamite will blow it up."
      spawnflags: =
      {
        typ = "X1"
        cap = "AXIS_OBJECTIVE"
      }
      spawnflags: =
      {
        typ = "X2"
        cap = "ALLIED_OBJECTIVE"
      }
    }
  }
}
