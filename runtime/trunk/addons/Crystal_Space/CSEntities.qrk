QQRKSRC1
// Crystal Space Entities file for Quark

//$Header$
// ----------- REVISION HISTORY ------------
//$Log$
//

{
  QuArKProtected = "1"
  Description = "Crystal Space Entities"

  Toolbox Folders.qtx =
  {
    ToolBox = "New map items..."
    Root = "Crystal Space Entities.qtxfolder"
    Crystal Space Entities.qtxfolder =
    {
      PlayerStarts.qtxfolder =
      {
        info_player_start:e =
        {
          origin = "-160 0 48"
          angle = "360"
        }
        info_player_deathmatch:e =
        {
          origin = "-160 0 48"
          angle = "360"
        }
      }
      Light entities.qtxfolder =
      {
        light:e =
        {
          ;desc = "Invisible lightsource"
		  cs_name = ""
          origin = "0 0 0"
          _light = "255 255 255 300"
          dynamic = "0"
          halo = "0 0 0"
          attenuation = "realistic"
          cs_collection = ""
        }
      }
      Sector.qtxfolder =
      {
        cs_sector:b =
        {
          ;desc = "Crystal Space sector brush"
          ;incl = "defpoly"
          cs_name = ""
          lighting = "yes"
          mipmap = "yes"
          cs_collection = ""
        }
        cs_sky:b =
        {
          ;desc = "Crystal Space sky brush"
          ;incl = "defpoly"
          cs_name = "cs_skysector"
		  sky = "1"
        }
      }
      Brush entities.qtxfolder =
      {
        thing:b =
        {
          ;desc = "thing brush"
          ;incl = "defpoly"
          cs_name = ""
		  sky = "0"
          alpha = "100"
          solid = "1"
          mirror = "0"
          cs_collection = ""
          targetsector = ""
		  trigger = ""
          moveable = "0"
		  activate = ""
        }
      }
      Models.qtxfolder =
      {
        cs_model:e =
        {
          ;desc = "models (3Dsprites)"
          cs_name = ""
          origin = "0 0 0"
		  modelname = ""
		  texture = ""
		  uniformscale = ""
		  action = ""
		  action1 = ""
        }
        cs_sprite:e =
        {
          ;desc = "sprites (2Dsprites)"
          cs_name = ""
          origin = "0 0 0"
		  texture = ""
		  copy = "0"
		  add = "0"
		  multiply = "0"
		  multiply2 = "0"
		  alpha = "1"
		  transparent = "0"
		  keycolor = "0,0,0"
        }
	  }
      Func entities.qtxfolder =
      {
        cs_collection:e =
        {
          ;desc = "collection of things, lights, sounds, scripts, triggers: ad"
           "d specifics"
          cs_name = ""
          origin = "0 0 0"
          cs_collection = ""
		  collitem1 = ""
        }
        cs_script:e =
        {
          ;desc = "animation script"
          cs_name = "rotate_x"
		  script_cmdfile = "csscript.txt"
		  origin = "0 0 0"
        }
      }
      Env entities.qtxfolder =
      {
        fog:e =
        {
          ;desc = "Ambient fog: R,G,B,Density"
          cs_name = ""
          origin = "0 0 0"
          fogcolor = "128 128 128"
          fogdensity = ".05"
        }
        cs_sound:e =
        {
          ;desc = "Ambient sound"
          cs_name = ""
          origin = "0 0 0"
          soundfile = "track4.wav"
        }
      }
    }
  }
  Entity forms.fctx =
  {
    info_player_start:form =
    {
      Help = "This entity defines the player starting point"
      bbox = '-16 -16 -34 16 16 34'
    }
    t_player:incl =
    {
      bbox = '-16 -16 -34 16 16 34'
    }
    t__minlight:incl =
    {
      txt = "&"
      Hint = "Minimum light level"
    }
    cs_sector:form =
    {
	  cs_name: =
	  {
		Txt = "&"
	 	Hint = "Sector name"
	  }
      lighting: =
      {
        Typ = "X1"
        Cap = "lighting"
        Txt = "&"
        Hint = "no for skybox"
      }
      mipmap: =
      {
        Typ = "X1"
        Cap = "mipmap"
        Txt = "&"
        Hint = "no for skybox"
      }
	  cs_collection: =
	  {
		Txt = "&"
	 	Hint = "cs_name of cs_collection (if a member)"
	  }
    }
	cs_sky:form =
	{
	  sky: =
	  {
		Txt = "&"
	 	Hint = "1 = sky, 0 = normal brush"
	  }
	}
    light:form =
    {
	  cs_name: =
	  {
		Txt = "&"
	 	Hint = "Light name"
	  }
      attenuation: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "attenuation"
        Items = "realistic"$0D"linear"$0D"inverse"$0D"none"
        Values = "realistic"$0D"linear"$0D"inverse"$0D"none"
      }
      dynamic: =
      {
        Typ = "X1"
        Cap = "dynamic"
        Txt = "&"
      }
	  cs_collection: =
	  {
		Txt = "&"
	 	Hint = "cs_name of a cs_collection (if a member)"
	  }
	  cs_name: =
	  {
		Txt = "&"
	 	Hint = "Name for scripting"
	  }
    }
    cs_model:form =
    {
	  cs_name: =
	  {
		Txt = "&"
	 	Hint = "Name for sprite template"
	  }
      modelname: =
      {
        Txt = "&"
        Hint = "(quake1) model name (without mdl extension)"
      }
	  texture: =
	  {
		Txt = "&"
		Hint = "model texture name (with extension, i.e., png)"
	  }
	  action: =
	  {
		Txt = "&"
		Hint = "Base name for frame actions"
	  }
	  action1: =
	  {
		Txt = "&"
		Hint = "Name for first frame action (add more specifics for additional frames)"
	  }
	  uniformscale: =
	  {
		Txt = "&"
		Hint = "scale model uniformly in x,y,z"
	  }
	}
    cs_sprite:form =
    {
	  cs_name: =
	  {
		Txt = "&"
	 	Hint = "Name for 2D sprite"
	  }
	  texture: =
	  {
		Txt = "&"
		Hint = "sprite texture name (without extension)"
	  }
      copy: =
      {
        Typ = "X1"
        Cap = "copy"
        Txt = "&"
		Hint = "Mixmode = SRC"
      }
      add: =
      {
        Typ = "X1"
        Cap = "add"
        Txt = "&"
		Hint = "Mixmode = SRC + DST"
      }
      multiply: =
      {
        Typ = "X1"
        Cap = "multiply"
        Txt = "&"
		Hint = "Mixmode = SRC * DST"
      }
      multiply2: =
      {
        Typ = "X1"
        Cap = "multiply2"
        Txt = "&"
		Hint = "Mixmode = 2 * SRC * DST"
      }
      alpha: =
      {
        Txt = "&"
        Hint = "0=invisible; 1=opaque -- Mixmode = (1-alpha)*SRC + alpha*DST"
      }
      transparent: =
      {
        Typ = "X1"
        Cap = "transparent"
        Txt = "&"
		Hint = "(Currently not working-->Mixmode = DST"
      }
      keycolor: =
      {
		Txt = "&"
		Hint = "Mixmode = color 0,0,0 is transparent"
      }
	}
    fog:form =
    {
      fogcolor: =
      {
        Txt = "&"
        Hint = "FX Color (R G B)"
      }
      fogdensity: =
      {
        Txt = "&"
        Hint = "Density (>0) Hint: 4=2meters, 2=5meters, <1=longrange"
      }
    }
    cs_sound:form =
    {
      soundfile: =
      {
        Txt = "&"
        Hint = "Wave file for background sound (with extension)"
      }
    }
    thing:form =
    {
	  cs_name: =
	  {
		Txt = "&"
		Hint = "cs_name of thing"
	  }
	  sky: =
	  {
        Typ = "X1"
        Cap = "solid"
        Txt = "&"
        Hint = "0 = thing; 1 = sky"
	  }
      alpha: =
      {
        Txt = "&"
        Hint = "0=invisible; 100=opaque"
      }
      solid: =
      {
        Typ = "X1"
        Cap = "solid"
        Txt = "&"
        Hint = "On for solid, off for walkthru"
      }
      mirror: =
      {
        Typ = "X1"
        Cap = "mirror"
        Txt = "&"
        Hint = "0=not mirrored; 1=mirrored"
      }
      targetsector: =
      {
        Txt = "&"
        Hint = "Sector name other than default"
      }
	  cs_collection: =
	  {
		Txt = "&"
	 	Hint = "cs_name of cs_collection (if a member)"
	  }
	  trigger: =
	  {
		Txt = "&"
	 	Hint = "cs_name of script to trigger"
	  }
      moveable: =
      {
        Typ = "X1"
        Cap = "moveable"
        Txt = "&"
        Hint = "Required when the entity is animated"
      }
	  activate: =
	  {
		Txt = "&"
	 	Hint = "cs_name of script to activate"
	  }
    }
	cs_collection:form =
	{
	  cs_name: =
	  {
		Txt = "&"
		Hint = "cs_name of collection"
	  }
	  collitem1: =
	  {
		Txt = "&"
		Hint = "Add collitem2, collitem3, ...(lights, sectors, things, collections, triggers)"
	  }
	}
	cs_script:form =
	{
	  cs_name: =
	  {
        Typ = "C"
        Txt = "&"
        Hint = "Script names from csscript.txt"
        Items = "message"$0D"rotate_x"$0D"rotate_y"$0D"rotate_z"
                $0D"rotate_xr"$0D"rotate_yr"$0D"rotate_zr"
                $0D"rotate_ym"$0D"rotate_yxz"$0D"opendoor"
                $0D"moveBackAndForth"$0D"light1"$0D"light2"
                $0D"light3"$0D"light_anim"
        Values = "message"$0D"rotate_x"$0D"rotate_y"$0D"rotate_z"
                $0D"rotate_xr"$0D"rotate_yr"$0D"rotate_zr"
                $0D"rotate_ym"$0D"rotate_yxz"$0D"opendoor"
                $0D"moveBackAndForth"$0D"light1"$0D"light2"
                $0D"light3"$0D"light_anim"
	  }
	  script_cmdfile: =
      {
        Txt = "&"
        Hint = "Text file (default=csscript.txt) containing scripts"
      }
	}
    worldspawn:form =
    {
	  message: = { Txt="&"  Hint="Map Description / Title" }
      skybox: =
      {
		Type = "C"
        Txt = "&"
        Hint = "Skybox base texture name"
		Items =  "util"$0D"mntn1"$0D"sky1"$0D"sky2"
		Values = "util"$0D"mntn1"$0D"sky1"$0D"sky2"
      }
      skyboxsize: =
      {
		Txt = "&"
		Hint = "Skybox side dimension"
	  }
      skydome: =
      {
        Txt = "&"
        Hint = "Skydome texture name"
	  }
	  skydomeradius: =
	  {
		Txt = "&"
		Hint = "Dome radius"
	  }
    }
  }
}


