QQRKSRC1
// Sven Co-op entities file for QuArK

{
  QuArKProtected = "1"
  Description = "Sven Co-op Data Add-on"

  Toolbox Folders.qtx =
  {
    Toolbox = "New map items..."
    Root = "Sven Co-op.qtxfolder"
    Sven Co-op.qtxfolder =
    {
      ;desc = "Created from sven-coop.fgd"
      SvenCoop Entities.qtxfolder =
      {
        aiscripted_* entities.qtxfolder =
        {
          aiscripted_sequence:e =
          {
            origin = "0 0 0"
            ;desc = "AI Scripted Sequence"
            m_flRadius = "512"
            m_flRepeat = "0"
            m_fMoveTo = "0"
            moveto_radius = "0"
            m_iFinishSchedule = "0"
          }
        }
        ambient_* entities.qtxfolder =
        {
          ambient_generic:e =
          {
            origin = "0 0 0"
            ;desc = "Universal Ambient"
            health = "10"
            playmode = "0"
            preset = "0"
            volstart = "0"
            fadein = "0"
            fadeout = "0"
            pitch = "100"
            pitchstart = "100"
            spinup = "0"
            spindown = "0"
            lfotype = "0"
            lforate = "0"
            lfomodpitch = "0"
            lfomodvol = "0"
            cspinup = "0"
            linearmin = "2"
            linearmax = "5"
            spawnflags = "4"
          }
          ambient_music:e =
          {
            origin = "0 0 0"
            ;desc = "Ambient Music"
            volume = "10"
            spawnflags = "1"
          }
        }
        ammo_* entities.qtxfolder =
        {
          ammo_357:e =
          {
            origin = "0 0 0"
            ;desc = "357 / desert eagle round box"
          }
          ammo_556:e =
          {
            origin = "0 0 0"
            ;desc = "5.56mm round box"
          }
          ammo_556clip:e =
          {
            origin = "0 0 0"
            ;desc = "5.56mm M16 rifle magazine"
          }
          ammo_762:e =
          {
            origin = "0 0 0"
            ;desc = "7.62mm sniper rifle magazine"
          }
          ammo_9mmAR:e =
          {
            origin = "0 0 0"
            ;desc = "9mm assault rifle magazine"
          }
          ammo_9mmbox:e =
          {
            origin = "0 0 0"
            ;desc = "9mm round box (big)"
          }
          ammo_9mmclip:e =
          {
            origin = "0 0 0"
            ;desc = "9mm pistol magazine"
          }
          ammo_ARgrenades:e =
          {
            origin = "0 0 0"
            ;desc = "M16's M203 grenades (x2)"
          }
          ammo_buckshot:e =
          {
            origin = "0 0 0"
            ;desc = "Shotgun shell box"
          }
          ammo_crossbow:e =
          {
            origin = "0 0 0"
            ;desc = "Crossbow bolt magazine"
          }
          ammo_gaussclip:e =
          {
            origin = "0 0 0"
            ;desc = "Gauss/Gluon gun battery"
          }
          ammo_rpgclip:e =
          {
            origin = "0 0 0"
            ;desc = "Rockets (x2)"
          }
          ammo_spore:e =
          {
            origin = "0 0 0"
            ;desc = "Spore plant"
            movetype = "8"
          }
          ammo_sporeclip:e =
          {
            origin = "0 0 0"
            ;desc = "Spore"
          }
          ammo_uziclip:e =
          {
            origin = "0 0 0"
            ;desc = "9mm Uzi magazine"
          }
        }
        button_* entities.qtxfolder =
        {
          button_target:b =
          {
            ;incl = "defpoly"
            ;desc = "Target Button"
            spawnflags = "1"
            renderfx = "0"
            rendermode = "0"
            rendercolor = "0 0 0"
            use_type = "3"
          }
        }
        custom_* entities.qtxfolder =
        {
          custom_precache:e =
          {
            origin = "0 0 0"
            ;desc = "Custom Precache"
          }
        }
        cycler_* entities.qtxfolder =
        {
          cycler_sprite:e =
          {
            origin = "0 0 0"
            ;desc = "Sprite Cycler"
            framerate = "10"
            renderfx = "0"
            rendermode = "0"
            rendercolor = "0 0 0"
          }
          cycler_weapon:e =
          {
            origin = "0 0 0"
            ;desc = "Weapon Cycler"
          }
          cycler_wreckage:e =
          {
            origin = "0 0 0"
            ;desc = "Wreckage"
            framerate = "10.0"
            model = "sprites/fire.spr"
            scale = "1"
          }
        }
        env_* entities.qtxfolder =
        {
          env_beam:e =
          {
            origin = "0 0 0"
            ;desc = "Energy Beam Effect"
            renderamt = "100"
            rendercolor = "0 0 0"
            Radius = "256"
            life = "1"
            BoltWidth = "20"
            NoiseAmplitude = "0"
            texture = "sprites/laserbeam.spr"
            TextureScroll = "35"
            framerate = "0"
            framestart = "0"
            StrikeTime = "1"
            damage = "0"
          }
          env_beverage:e =
          {
            origin = "0 0 0"
            ;desc = "Beverage Dispenser"
            health = "10"
            skin = "0"
            weapons = "1"
          }
          env_blood:e =
          {
            origin = "0 0 0"
            ;desc = "Blood Effects"
            color = "0"
            amount = "100"
          }
          env_bubbles:b =
          {
            ;incl = "defpoly"
            ;desc = "Bubble Volume"
            density = "2"
            frequency = "2"
            current = "0"
          }
          env_explosion:e =
          {
            origin = "0 0 0"
            ;desc = "Explosion"
            iMagnitude = "100"
          }
          env_fade:e =
          {
            origin = "0 0 0"
            ;desc = "Screen Fade"
            duration = "2"
            holdtime = "0"
            renderamt = "255"
            rendercolor = "0 0 0"
          }
          env_fog:e =
          {
            origin = "0 0 0"
            ;desc = "Fog Field"
            rendercolor = "0 0 0"
            iuser2 = "128"
            iuser3 = "1024"
          }
          env_funnel:e =
          {
            origin = "0 0 0"
            ;desc = "Large Portal Funnel"
          }
          env_global:e =
          {
            origin = "0 0 0"
            ;desc = "Global State"
            triggermode = "0"
            initialstate = "0"
          }
          env_glow:e =
          {
            origin = "0 0 0"
            ;desc = "Light Glow/Haze"
            model = "sprites/glow01.spr"
            scale = "1"
          }
          env_laser:e =
          {
            origin = "0 0 0"
            ;desc = "Laser Beam Effect"
            renderamt = "100"
            rendercolor = "0 0 0"
            width = "20"
            NoiseAmplitude = "0"
            texture = "sprites/laserbeam.spr"
            TextureScroll = "35"
            framestart = "0"
            damage = "100"
          }
          env_message:e =
          {
            origin = "0 0 0"
            ;desc = "HUD Text Message"
            messagevolume = "10"
            messageattenuation = "0"
          }
          env_render:e =
          {
            origin = "0 0 0"
            ;desc = "Render Controls"
            armorvalue = "0"
          }
          env_render_individual:e =
          {
            origin = "0 0 0"
            ;desc = "Per-player render settings for entities"
          }
          env_sentence:e =
          {
            origin = "0 0 0"
            ;desc = "Announcement Sentence"
          }
          env_shake:e =
          {
            origin = "0 0 0"
            ;desc = "Screen Shake"
            amplitude = "4.0"
            radius = "500"
            duration = "1.0"
            frequency = "2.5"
          }
          env_shooter:e =
          {
            origin = "0 0 0"
            ;desc = "Model Shooter"
            shootsounds = "-1"
            skin = "0"
          }
          env_sound:e =
          {
            origin = "0 0 0"
            ;desc = "DSP Sound"
            radius = "128"
            roomtype = "0"
          }
          env_spark:e =
          {
            origin = "0 0 0"
            ;desc = "Spark"
            MaxDelay = "0"
          }
          env_sprite:e =
          {
            origin = "0 0 0"
            ;desc = "Sprite Effect"
            framerate = "10.0"
            model = "sprites/glow01.spr"
            scale = "1"
            vp_type = "0"
          }
          env_spritetrain:e =
          {
            origin = "0 0 0"
            ;desc = "Sprite Train"
            model = "sprites/glow01.spr"
          }
          env_weather:b =
          {
            ;incl = "defpoly"
            ;desc = "Weather Effect"
            spawnflags = "1"
            drop_scale = "1"
            drop_vp_type = "0"
            splash_scale = "1"
            splash_vp_type = "0"
            speed = "50"
            density = "30"
            angle_variance = "10"
            speed_variance = "10"
          }
          env_xenmaker:e =
          {
            origin = "0 0 0"
            ;desc = "Xen Portal"
            monstertype = "monster_headcrab"
            m_flBeamRadius = "255"
            m_iBeamAlpha = "128"
            m_iBeamCount = "8"
            m_vBeamColor = "217 226 146"
            m_flLightRadius = "160"
            m_vLightColor = "39 209 137"
            m_flStartSpriteFramerate = "12"
            m_flStartSpriteScale = "1.0"
            m_iStartSpriteAlpha = "255"
            m_vStartSpriteColor = "65 209 61"
            m_flEndSpriteFramerate = "12"
            m_flEndSpriteScale = "1.0"
            m_iEndSpriteAlpha = "255"
            m_vEndSpriteColor = "159 240 214"
          }
        }
        func_* entities.qtxfolder =
        {
          func_breakable:b =
          {
            ;incl = "defpoly"
            ;desc = "Breakable Object"
          }
          func_button:b =
          {
            ;incl = "defpoly"
            ;desc = "Button"
            speed = "5"
            health = "0"
            sounds = "0"
            wait = "3"
            use_type = "3"
          }
          func_clip:b =
          {
            ;incl = "defpoly"
            ;desc = "Clip"
            spawnflags = "1"
            frags = "90"
          }
          func_conveyor:b =
          {
            ;incl = "defpoly"
            ;desc = "Conveyor Belt"
            speed = "100"
          }
          func_detail:b =
          {
            ;incl = "defpoly"
            ;desc = "Detail Brushes"
            zhlt_detaillevel = "1"
            zhlt_chopdown = "0"
            zhlt_chopup = "0"
            zhlt_coplanarpriority = "0"
            zhlt_clipnodedetaillevel = "1"
            zhlt_noclip = "0"
          }
          func_door:b =
          {
            ;incl = "defpoly"
            ;desc = "Basic door"
          }
          func_door_rotating:b =
          {
            ;incl = "defpoly"
            ;desc = "Rotating door"
            distance = "90"
          }
          func_friction:b =
          {
            ;incl = "defpoly"
            ;desc = "Surface with a change in friction"
            modifier = "15"
          }
          func_group:b =
          {
            ;incl = "defpoly"
            ;desc = "Non-entity solid brush group"
            zhlt_coplanarpriority = "0"
            zhlt_noclip = "0"
          }
          func_guntarget:b =
          {
            ;incl = "defpoly"
            ;desc = "Moving platform"
            speed = "100"
            health = "0"
          }
          func_healthcharger:b =
          {
            ;incl = "defpoly"
            ;desc = "Wall health recharger"
          }
          func_illusionary:b =
          {
            ;incl = "defpoly"
            ;desc = "Fake Wall/Light"
            style = "0"
            skin = "-1"
          }
          func_ladder:b =
          {
            ;incl = "defpoly"
            ;desc = "Ladder"
          }
          func_mirror:b =
          {
            ;incl = "defpoly"
            ;desc = "Mirror"
          }
          func_monitor:b =
          {
            ;incl = "defpoly"
            ;desc = "Monitor"
            width = "512"
            height = "512"
          }
          func_monsterclip:b =
          {
            ;incl = "defpoly"
            ;desc = "Monster clip brush"
          }
          func_mortar_field:b =
          {
            ;incl = "defpoly"
            ;desc = "Mortar Field"
            m_flSpread = "64"
            m_iCount = "1"
            m_fControl = "0"
          }
          func_op4mortarcontroller:b =
          {
            ;incl = "defpoly"
            ;desc = "Op4 Mortar Controller"
            mortar_axis = "0"
          }
          func_pendulum:b =
          {
            ;incl = "defpoly"
            ;desc = "Swings back and forth"
            speed = "100"
            distance = "90"
            damp = "0"
            dmg = "0"
          }
          func_plat:b =
          {
            ;incl = "defpoly"
            ;desc = "Elevator"
            height = "0"
            speed = "50"
          }
          func_platrot:b =
          {
            ;incl = "defpoly"
            ;desc = "Moving Rotating platform"
            spawnflags = "1"
            speed = "50"
            height = "0"
            rotation = "0"
          }
          func_portal:b =
          {
            ;incl = "defpoly"
            ;desc = "Portal"
          }
          func_pushable:b =
          {
            ;incl = "defpoly"
            ;desc = "Pushable object"
            spawnflags = "1024"
            minhullsize = "0 0 0"
            maxhullsize = "0 0 0"
            friction = "50"
            buoyancy = "20"
          }
          func_recharge:b =
          {
            ;incl = "defpoly"
            ;desc = "Battery recharger"
          }
          func_rot_button:b =
          {
            ;incl = "defpoly"
            ;desc = "RotatingButton"
            speed = "50"
            sounds = "21"
            wait = "3"
            delay = "0"
            distance = "90"
            use_type = "3"
          }
          func_rotating:b =
          {
            ;incl = "defpoly"
            ;desc = "Rotating Object"
            speed = "0"
            volume = "10"
            fanfriction = "20"
            sounds = "0"
            spawnflags = "512"
            m_iObeyTriggerMode = "1"
            spawnorigin = "0 0 0"
            dmg = "0"
          }
          func_tank:b =
          {
            ;incl = "defpoly"
            ;desc = "Brush Gun Turret"
            bullet = "0"
          }
          func_tankcontrols:b =
          {
            ;incl = "defpoly"
            ;desc = "Tank controls"
          }
          func_tanklaser:b =
          {
            ;incl = "defpoly"
            ;desc = "Brush Laser Turret"
          }
          func_tankmortar:b =
          {
            ;incl = "defpoly"
            ;desc = "Brush Mortar Turret"
            iMagnitude = "100"
          }
          func_tankrocket:b =
          {
            ;incl = "defpoly"
            ;desc = "Brush Rocket Turret"
          }
          func_trackautochange:b =
          {
            ;incl = "defpoly"
            ;desc = "Automatic track changing platform"
          }
          func_trackchange:b =
          {
            ;incl = "defpoly"
            ;desc = "Train track changing platform"
          }
          func_tracktrain:b =
          {
            ;incl = "defpoly"
            ;desc = "Track Train"
            sounds = "0"
            wheels = "50"
            height = "4"
            startspeed = "0"
            speed = "64"
            dmg = "0"
            volume = "10"
            bank = "0"
          }
          func_train:b =
          {
            ;incl = "defpoly"
            ;desc = "Moving platform"
            dmg = "0"
            skin = "0"
          }
          func_traincontrols:b =
          {
            ;incl = "defpoly"
            ;desc = "Train Controls"
          }
          func_wall:b =
          {
            ;incl = "defpoly"
            ;desc = "Wall"
            style = "0"
          }
          func_wall_toggle:b =
          {
            ;incl = "defpoly"
            ;desc = "Toggleable geometry"
          }
          func_water:b =
          {
            ;incl = "defpoly"
            ;desc = "Liquid"
            skin = "-3"
            WaveHeight = "3.2"
          }
        }
        game_* entities.qtxfolder =
        {
          game_counter:e =
          {
            origin = "0 0 0"
            ;desc = "Fires when it hits limit"
            spawnflags = "6"
            frags = "0"
            health = "10"
          }
          game_counter_set:e =
          {
            origin = "0 0 0"
            ;desc = "Sets a game_counter"
            frags = "10"
          }
          game_end:e =
          {
            origin = "0 0 0"
            ;desc = "End this multiplayer game"
          }
          game_player_counter:e =
          {
            origin = "0 0 0"
            ;desc = "Game Player Counter"
            frags = "1"
            health = "32"
          }
          game_player_equip:e =
          {
            origin = "0 0 0"
            ;desc = "Initial player equipment"
            equipmode = "0"
            inventorymode = "0"
          }
          game_player_hurt:e =
          {
            origin = "0 0 0"
            ;desc = "Hurts player who fires"
            dmg = "65535"
          }
          game_player_team:e =
          {
            origin = "0 0 0"
            ;desc = "Allows player to change teams"
          }
          game_score:e =
          {
            origin = "0 0 0"
            ;desc = "Award/Deduct Points"
            points = "1"
          }
          game_slot_counter:e =
          {
            origin = "0 0 0"
            ;desc = "Game Slot Counter"
            frags = "12"
          }
          game_team_master:e =
          {
            origin = "0 0 0"
            ;desc = "Team based master/relay"
            triggerstate = "0"
            teamindex = "-1"
          }
          game_team_set:e =
          {
            origin = "0 0 0"
            ;desc = "Sets team of team_master"
          }
          game_text:e =
          {
            origin = "0 0 0"
            ;desc = "HUD Text Message"
            x = "-1"
            y = "0.67"
            effect = "0"
            color = "100 100 100"
            color2 = "240 110 0"
            fadein = "1.5"
            fadeout = "0.5"
            holdtime = "1.2"
            fxtime = "0.25"
            channel = "1"
          }
          game_zone_player:b =
          {
            ;incl = "defpoly"
            ;desc = "Player Zone brush"
          }
        }
        global_* entities.qtxfolder =
        {
          global_light_control:e =
          {
            origin = "0 0 0"
            ;desc = "Global Light Pattern"
          }
        }
        info_* entities.qtxfolder =
        {
          info_angularfade:e =
          {
            origin = "0 0 0"
            ;desc = "Texture name : the speed at which light fade as its directi"
             "on becomes parallel to the texture (default 1.0)"
          }
          info_bigmomma:e =
          {
            origin = "0 0 0"
            ;desc = "Big Mamma Node"
            radius = "0"
            reachdelay = "0"
          }
          info_compile_parameters:e =
          {
            origin = "0 0 0"
            ;desc = "Map Compile Parameters"
            verbose = "0"
            noinfo = "0"
            nolog = "0"
            dev = "0"
            estimate = "0"
            chart = "0"
            threads = "0"
            priority = "0"
            texdata = "0"
            lightdata = "0"
            csg = "0"
            csg_nowadtextures = "0"
            csg_noclip = "0"
            csg_clipeconomy = "0"
            csg_cliptype = "0"
            csg_noskyclip = "0"
            csg_wadautodetect = "0"
            csg_nonulltex = "0"
            csg_nullifytrigger = "0"
            csg_nolightopt = "0"
            csg_notextconvert = "0"
            bsp = "0"
            bsp_subdivide = "0"
            bsp_maxnodesize = "0"
            bsp_notjunc = "0"
            bsp_nobrink = "0"
            bsp_noclip = "0"
            bsp_nofill = "0"
            bsp_noinsidefill = "0"
            bsp_noopt = "0"
            bsp_noclipnodemerge = "0"
            bsp_nonulltex = "0"
            bsp_nohull2 = "0"
            bsp_viewportal = "0"
            vis = "0"
            rad = "0"
            rad_vismatrix = "0"
            rad_bounce = "0"
            rad_circus = "0"
            rad_nospread = "0"
            rad_nopaque = "0"
            rad_notexscale = "0"
            rad_subdivide = "0"
            rad_nolerp = "0"
            rad_noskyfix = "0"
            rad_incremental = "0"
            rad_dump = "0"
            rad_customshadowwithbounce = "0"
            rad_rgbtransfers = "0"
            rad_minlight = "0"
            rad_compresstransfers = "0"
            rad_compressrgbtransfers = "0"
            rad_softsky = "0"
            rad_blockopaque = "0"
            rad_notextures = "0"
            rad_noemitterrange = "0"
            rad_nobleedfix = "0"
          }
          info_hullshape:b =
          {
            ;incl = "defpoly"
            ;desc = "Hull shape definition"
            defaulthulls = "0"
            disabled = "0"
          }
          info_intermission:e =
          {
            origin = "0 0 0"
            ;desc = "Intermission Spot"
          }
          info_monster_goal:e =
          {
            origin = "0 0 0"
            ;desc = "Monster goal entity"
            priority = "0"
            movementtype = "0"
            delay = "0"
            radius = "0"
            triggerradius = "0"
            requiredradius = "0"
            healthbonus = "0"
            sequence = "0"
          }
          info_node:e =
          {
            origin = "0 0 0"
            ;desc = "ai node"
          }
          info_node_air:e =
          {
            origin = "0 0 0"
            ;desc = "ai air node"
          }
          info_null:e =
          {
            origin = "0 0 0"
            ;desc = "info_null (spotlight target)"
          }
          info_overview_point:e =
          {
            origin = "0 0 0"
            ;desc = "Disable VIS here for overview"
            reverse = "0"
          }
          info_player_coop:e =
          {
            origin = "0 0 0"
            ;desc = "Player co-operative start"
          }
          info_player_deathmatch:e =
          {
            origin = "0 0 0"
            ;desc = "Player deathmatch start"
          }
          info_player_dm2:e =
          {
            origin = "0 0 0"
            ;desc = "Hidden deathmatch start (not visible in map list)"
          }
          info_player_start:e =
          {
            origin = "0 0 0"
            ;desc = "Single player start (and multi-player initial viewpoint)"
          }
          info_smoothvalue:e =
          {
            origin = "0 0 0"
            ;desc = "Texture name : Threshold of smooth angle"
          }
          info_sunlight:e =
          {
            origin = "0 0 0"
            ;desc = "light_environment information that affects model brightness"
            angles = "0 0 0"
            pitch = "-90"
            _light = "0 0 0 100"
          }
          info_target:e =
          {
            origin = "0 0 0"
            ;desc = "Generic target"
          }
          info_teleport_destination:e =
          {
            origin = "0 0 0"
            ;desc = "Teleport destination"
            teleport_cooldown = "1"
          }
          info_texlights:e =
          {
            origin = "0 0 0"
            ;desc = "Texture Light Definitions"
          }
          info_translucent:e =
          {
            origin = "0 0 0"
            ;desc = "Texture name : translucent amount (0.0-1.0)"
          }
        }
        item_* entities.qtxfolder =
        {
          item_airtank:e =
          {
            origin = "0 0 0"
            ;desc = "Oxygen tank"
          }
          item_antidote:e =
          {
            origin = "0 0 0"
            ;desc = "Poison antidote"
          }
          item_armorvest:e =
          {
            origin = "0 0 0"
            ;desc = "Armor vest"
          }
          item_battery:e =
          {
            origin = "0 0 0"
            ;desc = "HEV battery"
            health = "0"
            healthcap = "0"
          }
          item_generic:e =
          {
            origin = "0 0 0"
            ;desc = "Generic scenery item"
          }
          item_healthcharger:e =
          {
            origin = "0 0 0"
            ;desc = "Health charger (wall)"
            capacity = "0"
          }
          item_healthkit:e =
          {
            origin = "0 0 0"
            ;desc = "Health kit"
            health = "0"
            healthcap = "0"
          }
          item_helmet:e =
          {
            origin = "0 0 0"
            ;desc = "Helmet"
          }
          item_inventory:e =
          {
            origin = "0 0 0"
            ;desc = "Inventory item"
            activate_limit = "0"
            collect_limit = "0"
            weight = "1.0"
            filter_npc_classifications = "0"
            item_group_required_num = "0"
            item_group_canthave_num = "0"
            carried_hidden = "1"
            carried_skin = "0"
            carried_body = "0"
            carried_sequencename = "carried"
            carried_sequence = "1"
            return_timelimit = "60.0"
            return_delay_respawn = "0"
            holder_timelimit = "0"
            holder_time_activate_wait = "0"
            holder_time_wearout = "0"
            holder_can_activate = "0"
            holder_timelimit_wait_until_activated = "1"
            holder_can_drop = "1"
            holder_keep_on_death = "0"
            holder_keep_on_respawn = "0"
            effects_wait_until_activated = "0"
            effects_permanent = "0"
            effect_glow = "0 0 0"
            effect_block_weapons = "0"
            effect_invulnerable = "0"
            effect_invisible = "0"
            effect_nonsolid = "0"
            effect_respiration = "0.0"
            effect_friction = "100.0"
            effect_gravity = "100.0"
            effect_speed = "100.0"
            effect_damage = "100.0"
          }
          item_longjump:e =
          {
            origin = "0 0 0"
            ;desc = "Longjump module"
          }
          item_recharge:e =
          {
            origin = "0 0 0"
            ;desc = "HEV charger (wall)"
            capacity = "0"
          }
          item_security:e =
          {
            origin = "0 0 0"
            ;desc = "Security card"
          }
          item_suit:e =
          {
            origin = "0 0 0"
            ;desc = "HEV Suit"
          }
        }
        light_* entities.qtxfolder =
        {
          light_bounce:e =
          {
            origin = "0 0 0"
            ;desc = "Bounce light control"
            style = "0"
            convertto = "light"
          }
          light_environment:e =
          {
            origin = "0 0 0"
            ;desc = "Environment"
            pitch = "0"
            _light = "255 255 128 200"
          }
          light_shadow:e =
          {
            origin = "0 0 0"
            ;desc = "Dynamic shadow control"
            style = "0"
            convertto = "light"
          }
          light_spot:e =
          {
            origin = "0 0 0"
            ;desc = "Spotlight"
            _cone = "30"
            _cone2 = "45"
            pitch = "-90"
            _light = "255 255 128 200"
            _sky = "0"
            style = "0"
          }
          light_surface:e =
          {
            origin = "0 0 0"
            ;desc = "Advanced texture light"
            _light = "255 255 255 80"
            convertto = "light"
          }
        }
        momentary_* entities.qtxfolder =
        {
          momentary_door:b =
          {
            ;incl = "defpoly"
            ;desc = "Momentary/Continuous door"
          }
          momentary_rot_button:b =
          {
            ;incl = "defpoly"
            ;desc = "Direct wheel control"
            speed = "50"
            sounds = "0"
            distance = "90"
            returnspeed = "0"
            use_type = "2"
          }
        }
        monster_* entities.qtxfolder =
        {
          monster_alien_babyvoltigore:e =
          {
            origin = "0 0 0"
            ;desc = "Baby Voltigore"
          }
          monster_alien_controller:e =
          {
            origin = "0 0 0"
            ;desc = "Controller"
          }
          monster_alien_grunt:e =
          {
            origin = "0 0 0"
            ;desc = "Alien Grunt"
            weapons = "0"
          }
          monster_alien_slave:e =
          {
            origin = "0 0 0"
            ;desc = "Vortigaunt"
          }
          monster_alien_tor:e =
          {
            origin = "0 0 0"
            ;desc = "Alien Tor"
          }
          monster_alien_voltigore:e =
          {
            origin = "0 0 0"
            ;desc = "Voltigore"
          }
          monster_apache:e =
          {
            origin = "0 0 0"
            ;desc = "Apache"
          }
          monster_assassin_repel:e =
          {
            origin = "0 0 0"
            ;desc = "Male Assassin (Repel)"
            weapons = "3"
            sequence = "47"
          }
          monster_babycrab:e =
          {
            origin = "0 0 0"
            ;desc = "Baby Headcrab"
          }
          monster_babygarg:e =
          {
            origin = "0 0 0"
            ;desc = "Baby Gargantua"
          }
          monster_barnacle:e =
          {
            origin = "0 0 0"
            ;desc = "Barnacle Monster"
          }
          monster_barney:e =
          {
            origin = "0 0 0"
            ;desc = "Barney"
            sequence = "0"
          }
          monster_barney_dead:e =
          {
            origin = "0 0 0"
            ;desc = "Dead Barney"
            pose = "0"
            sequence = "35"
          }
          monster_bigmomma:e =
          {
            origin = "0 0 0"
            ;desc = "Big Mamma"
          }
          monster_blkop_apache:e =
          {
            origin = "0 0 0"
            ;desc = "Black Ops Apache"
          }
          monster_blkop_osprey:e =
          {
            origin = "0 0 0"
            ;desc = "Black Ops Osprey"
          }
          monster_bloater:e =
          {
            origin = "0 0 0"
            ;desc = "Bloater"
          }
          monster_bodyguard:e =
          {
            origin = "0 0 0"
            ;desc = "Body Guard"
            weapons = "0"
          }
          monster_bullchicken:e =
          {
            origin = "0 0 0"
            ;desc = "BullChicken"
          }
          monster_chumtoad:e =
          {
            origin = "0 0 0"
            ;desc = "Chumtoad"
          }
          monster_cleansuit_scientist:e =
          {
            origin = "0 0 0"
            ;desc = "Cleansuit Scientist"
            body = "-1"
            sequence = "13"
          }
          monster_cockroach:e =
          {
            origin = "0 0 0"
            ;desc = "Cockroach"
          }
          monster_flyer_flock:e =
          {
            origin = "0 0 0"
            ;desc = "Flock of Flyers"
            iFlockSize = "8"
            flFlockRadius = "128"
          }
          monster_furniture:e =
          {
            origin = "0 0 0"
            ;desc = "Monster Furniture"
            sequence = "0"
          }
          monster_gargantua:e =
          {
            origin = "0 0 0"
            ;desc = "Gargantua"
          }
          monster_generic:e =
          {
            origin = "0 0 0"
            ;desc = "Generic Script Monster"
            sequence = "0"
            disableai = "0"
          }
          monster_gman:e =
          {
            origin = "0 0 0"
            ;desc = "G-Man"
          }
          monster_gonome:e =
          {
            origin = "0 0 0"
            ;desc = "Gonome"
          }
          monster_grunt_ally_repel:e =
          {
            origin = "0 0 0"
            ;desc = "Human Grunt Ally (Repel)"
            weapons = "3"
            head = "-1"
            sequence = "51"
          }
          monster_grunt_repel:e =
          {
            origin = "0 0 0"
            ;desc = "Human Grunt (Repel)"
            weapons = "1"
            sequence = "50"
          }
          monster_handgrenade:e =
          {
            origin = "0 0 0"
            ;desc = "Live Handgrenade"
            health = "0"
          }
          monster_headcrab:e =
          {
            origin = "0 0 0"
            ;desc = "Head Crab"
          }
          monster_hevsuit_dead:e =
          {
            origin = "0 0 0"
            ;desc = "Dead HEV Suit"
            pose = "0"
            sequence = "177"
          }
          monster_hgrunt_dead:e =
          {
            origin = "0 0 0"
            ;desc = "Dead Human Grunt"
            pose = "0"
            sequence = "46"
            body = "0"
          }
          monster_houndeye:e =
          {
            origin = "0 0 0"
            ;desc = "Houndeye"
          }
          monster_human_assassin:e =
          {
            origin = "0 0 0"
            ;desc = "Human Assassin"
          }
          monster_human_grunt:e =
          {
            origin = "0 0 0"
            ;desc = "Human Grunt (camo)"
            weapons = "1"
          }
          monster_human_grunt_ally:e =
          {
            origin = "0 0 0"
            ;desc = "Human Grunt Ally (camo)"
            weapons = "3"
            head = "-1"
          }
          monster_human_grunt_ally_dead:e =
          {
            origin = "0 0 0"
            ;desc = "Dead Human Grunt Ally"
            pose = "0"
            sequence = "44"
            weapons = "1"
            head = "0"
          }
          monster_human_medic_ally:e =
          {
            origin = "0 0 0"
            ;desc = "Medic"
            head = "-1"
            weapons = "2"
          }
          monster_human_torch_ally:e =
          {
            origin = "0 0 0"
            ;desc = "Torch"
            weapons = "1"
          }
          monster_hwgrunt:e =
          {
            origin = "0 0 0"
            ;desc = "Heavy Weapons Grunt"
            weapons = "1"
            disable_minigun_drop = "1"
          }
          monster_hwgrunt_repel:e =
          {
            origin = "0 0 0"
            ;desc = "Heavy Weapons Grunt (Repel)"
            sequence = "14"
            weapons = "0"
          }
          monster_ichthyosaur:e =
          {
            origin = "0 0 0"
            ;desc = "Ichthyosaur"
          }
          monster_kingpin:e =
          {
            origin = "0 0 0"
            ;desc = "Kingpin"
          }
          monster_leech:e =
          {
            origin = "0 0 0"
            ;desc = "Leech"
          }
          monster_male_assassin:e =
          {
            origin = "0 0 0"
            ;desc = "Male Assassin"
            head = "0"
            weapons = "3"
          }
          monster_medic_ally_repel:e =
          {
            origin = "0 0 0"
            ;desc = "Human Medic Ally (Repel)"
            head = "-1"
            weapons = "2"
            sequence = "41"
          }
          monster_miniturret:e =
          {
            origin = "0 0 0"
            ;desc = "Mini Auto Turret"
            orientation = "0"
            maxsleep = "15"
            turnrate = "30"
            attackrange = "1200"
          }
          monster_nihilanth:e =
          {
            origin = "0 0 0"
            ;desc = "Nihilanth"
          }
          monster_osprey:e =
          {
            origin = "0 0 0"
            ;desc = "Osprey"
            grunttype = "0"
            num = "0"
          }
          monster_otis:e =
          {
            origin = "0 0 0"
            ;desc = "Otis"
            bodystate = "-1"
            head = "-1"
            sequence = "0"
          }
          monster_otis_dead:e =
          {
            origin = "0 0 0"
            ;desc = "Dead Otis"
            pose = "0"
            sequence = "35"
          }
          monster_pitdrone:e =
          {
            origin = "0 0 0"
            ;desc = "Pit Drone"
            initammo = "6"
          }
          monster_rat:e =
          {
            origin = "0 0 0"
            ;desc = "Rat"
          }
          monster_robogrunt:e =
          {
            origin = "0 0 0"
            ;desc = "Robot Grunt"
            weapons = "1"
          }
          monster_robogrunt_repel:e =
          {
            origin = "0 0 0"
            ;desc = "Robot Grunt"
            weapons = "1"
            sequence = "48"
          }
          monster_satchel:e =
          {
            origin = "0 0 0"
            ;desc = "Live Satchel Charge"
          }
          monster_scientist:e =
          {
            origin = "0 0 0"
            ;desc = "Scared Scientist"
            body = "-1"
            sequence = "13"
          }
          monster_scientist_dead:e =
          {
            origin = "0 0 0"
            ;desc = "Dead Scientist"
            body = "-1"
            pose = "0"
            sequence = "37"
          }
          monster_sentry:e =
          {
            origin = "0 0 0"
            ;desc = "Sentry Turret Gun"
            attackrange = "1200"
          }
          monster_shockroach:e =
          {
            origin = "0 0 0"
            ;desc = "Shock Roach"
          }
          monster_shocktrooper:e =
          {
            origin = "0 0 0"
            ;desc = "Shock Trooper"
          }
          monster_sitting_scientist:e =
          {
            origin = "0 0 0"
            ;desc = "Sitting Scientist"
            body = "-1"
            sequence = "73"
          }
          monster_snark:e =
          {
            origin = "0 0 0"
            ;desc = "Armed Snark"
          }
          monster_sqknest:e =
          {
            origin = "0 0 0"
            ;desc = "Snark Nest"
          }
          monster_stukabat:e =
          {
            origin = "0 0 0"
            ;desc = "Stukabat"
          }
          monster_tentacle:e =
          {
            origin = "0 0 0"
            ;desc = "Tentacle Arm"
            sweeparc = "130"
            sound = "-1"
          }
          monster_torch_ally_repel:e =
          {
            origin = "0 0 0"
            ;desc = "Human Torch Ally (Repel)"
            weapons = "1"
            sequence = "39"
          }
          monster_tripmine:e =
          {
            origin = "0 0 0"
            ;desc = "Active Tripmine"
            spawnflags = "1"
          }
          monster_turret:e =
          {
            origin = "0 0 0"
            ;desc = "Auto Turret"
            orientation = "0"
            maxsleep = "15"
            turnrate = "30"
            attackrange = "1200"
          }
          monster_zombie:e =
          {
            origin = "0 0 0"
            ;desc = "Scientist Zombie"
            sequence = "0"
          }
          monster_zombie_barney:e =
          {
            origin = "0 0 0"
            ;desc = "Barney Zombie"
          }
          monster_zombie_soldier:e =
          {
            origin = "0 0 0"
            ;desc = "Soldier Zombie"
          }
        }
        multi_* entities.qtxfolder =
        {
          multi_manager:e =
          {
            origin = "0 0 0"
            ;desc = "MultiTarget Manager"
          }
        }
        other entities.qtxfolder =
        {
          cycler:e =
          {
            origin = "0 0 0"
            ;desc = "Monster Cycler"
            renderfx = "0"
            rendermode = "0"
            rendercolor = "0 0 0"
          }
          gibshooter:e =
          {
            origin = "0 0 0"
            ;desc = "Gib Shooter"
          }
          infodecal:e =
          {
            origin = "0 0 0"
            ;desc = "Decal"
          }
          light:e =
          {
            origin = "0 0 0"
            ;desc = "Invisible lightsource"
          }
          monstermaker:e =
          {
            origin = "0 0 0"
            ;desc = "Monster Maker"
            monstercount = "-1"
            respawn_as_playerally = "0"
            delay = "5"
            m_imaxlivechildren = "5"
            health = "0"
          }
          multisource:e =
          {
            origin = "0 0 0"
            ;desc = "Multisource"
          }
          op4mortar:e =
          {
            origin = "0 0 0"
            ;desc = "Op4 Mortar"
            spawnflags = "48"
            mortar_velocity = "800"
            h_min = "-90"
            h_max = "90"
            mindist = "256"
            maxdist = "2048"
            firedelay = "5"
            is_player_ally = "0"
          }
          speaker:e =
          {
            origin = "0 0 0"
            ;desc = "Announcement Speaker"
            preset = "0"
            health = "5"
          }
          squadmaker:e =
          {
            origin = "0 0 0"
            ;desc = "Squad Maker"
            monstercount = "-1"
            delay = "5"
            m_imaxlivechildren = "5"
            spawn_mode = "0"
            dmg = "0"
            trigger_condition = "0"
            new_body = "-1"
            respawn_as_playerally = "0"
            change_rendermode = "0"
            notsolid = "-1"
            gag = "-1"
            weapons = "0"
            is_squad_leader = "0"
            bloodcolor = "0"
            health = "0"
            minhullsize = "0 0 0"
            maxhullsize = "0 0 0"
            freeroam = "0"
          }
          weaponbox:e =
          {
            origin = "0 0 0"
            ;desc = "Weapon/Ammo Container"
          }
          worldspawn:b =
          {
            ;desc = "World entity"
            sounds = "1"
            MaxRange = "32768"
            startdark = "0"
            gametitle = "0"
            newunit = "1"
            defaultteam = "0"
            freeroam = "0"
            scversion2 = "525"
          }
        }
        path_* entities.qtxfolder =
        {
          path_condition:e =
          {
            origin = "0 0 0"
            ;desc = "NPC Path Condition"
            delay_interval = "0.1"
            mindistance = "0"
            maxdistance = "0"
            priority = "0"
            pre_location = "0"
            selecttype = "0"
          }
          path_condition_controller:e =
          {
            origin = "0 0 0"
            ;desc = "NPC Path Condition Controller"
            selecttype = "0"
          }
          path_corner:e =
          {
            origin = "0 0 0"
            ;desc = "Moving platform stop"
            wait = "0"
            speed = "0"
            yaw_speed = "0"
          }
          path_track:e =
          {
            origin = "0 0 0"
            ;desc = "Train Track Path"
            newspeed = "-1"
            maxspeed = "-1"
            speed = "0"
          }
          path_waypoint:e =
          {
            origin = "0 0 0"
            ;desc = "NPC Path Waypoint"
            movementtype = "0"
            radius = "0"
            useangles = "0"
            wait_activity = "0"
            wait_time = "0"
            waituntilfull = "0"
            occupant_radius_check = "0"
            occupant_limit = "0"
            force_complete = "0"
            restart_delay = "0"
          }
        }
        player_* entities.qtxfolder =
        {
          player_loadsaved:e =
          {
            origin = "0 0 0"
            ;desc = "Load Auto-Saved game"
            duration = "2"
            holdtime = "0"
            renderamt = "255"
            rendercolor = "0 0 0"
            messagetime = "0"
            loadtime = "0"
          }
          player_respawn_zone:b =
          {
            ;incl = "defpoly"
            ;desc = "Player Zone Respawn brush"
            zonetype = "0"
          }
          player_weaponstrip:e =
          {
            origin = "0 0 0"
            ;desc = "Strips player's weapons"
            m_iAffected = "0"
          }
        }
        scripted_* entities.qtxfolder =
        {
          scripted_sentence:e =
          {
            origin = "0 0 0"
            ;desc = "Scripted Sentence"
            spawnflags = "5"
            duration = "3"
            radius = "512"
            refire = "3"
            volume = "10"
            attenuation = "0"
          }
          scripted_sequence:e =
          {
            origin = "0 0 0"
            ;desc = "Scripted Sequence"
            m_flRadius = "512"
            m_flRepeat = "0"
            m_fMoveTo = "0"
            moveto_radius = "0"
          }
        }
        target_* entities.qtxfolder =
        {
          target_cdaudio:e =
          {
            origin = "0 0 0"
            ;desc = "CD Audio Target"
            health = "-1"
          }
        }
        trigger_* entities.qtxfolder =
        {
          trigger_auto:e =
          {
            origin = "0 0 0"
            ;desc = "AutoTrigger"
            spawnflags = "1"
            triggerstate = "0"
          }
          trigger_autosave:b =
          {
            ;incl = "trigger"
            ;desc = "AutoSave Trigger"
          }
          trigger_camera:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Camera"
            wait = "10"
            spawnflags = "3"
            speed = "0"
            acceleration = "500"
            deceleration = "500"
            turnspeed = "40"
            mouse_action_0_0 = "0"
            mouse_block_drag_0_0 = "0"
            mouse_action_1_0 = "0"
            mouse_block_drag_1_0 = "0"
            mouse_action_2_0 = "0"
            mouse_block_drag_2_0 = "0"
            mouse_action_0_1 = "0"
            mouse_block_drag_0_1 = "0"
            mouse_action_1_1 = "0"
            mouse_block_drag_1_1 = "0"
            mouse_action_2_1 = "0"
            mouse_block_drag_2_1 = "0"
            mouse_digital_action_reset = "0"
            max_player_count = "1"
            hud_health = "0"
            hud_flashlight = "0"
            hud_weapons = "0"
          }
          trigger_cameratarget:b =
          {
            ;incl = "trigger"
            ;desc = "Camera Target"
            mouse_action_0_0 = "0"
            mouse_block_drag_0_0 = "0"
            mouse_action_1_0 = "0"
            mouse_block_drag_1_0 = "0"
            mouse_action_2_0 = "0"
            mouse_block_drag_2_0 = "0"
            mouse_action_0_1 = "0"
            mouse_block_drag_0_1 = "0"
            mouse_action_1_1 = "0"
            mouse_block_drag_1_1 = "0"
            mouse_action_2_1 = "0"
            mouse_block_drag_2_1 = "0"
            mouse_digital_action_reset = "0"
          }
          trigger_cdaudio:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger CD Audio"
            health = "-1"
          }
          trigger_change_class:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Change Class"
          }
          trigger_changelevel:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger Change level"
            keep_inventory = "1"
            changedelay = "0"
            percent_of_players = "0"
          }
          trigger_changemaxammo:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Change Max Ammo"
            message = "9mm"
            m_iMaxAmmo = "100"
            m_Mode = "0"
          }
          trigger_changemodel:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Change Model"
            skin = "0"
          }
          trigger_changesky:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Change Sky"
          }
          trigger_changetarget:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Change Target"
          }
          trigger_changevalue:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Change Value"
            m_iszValueType = "0"
            m_trigonometricBehaviour = "0"
            m_iAppendSpaces = "0"
          }
          trigger_condition:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Condition"
            m_iCheckType = "0"
            m_iCheckBehaviour = "0"
            m_fCheckInterval = "0.1"
          }
          trigger_copyvalue:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Copy Value"
            m_iszValueType = "0"
            m_iFloatConversion = "0"
            m_trigonometricBehaviour = "0"
            m_iAppendSpaces = "0"
            dmg = "0.0"
          }
          trigger_counter:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger Counter"
            count = "2"
          }
          trigger_createentity:e =
          {
            origin = "0 0 0"
            ;desc = "Create Entity"
          }
          trigger_cyclicobserver:e =
          {
            origin = "0 0 0"
            ;desc = "Controls observer cyclic mode"
            m_Mode = "0"
          }
          trigger_effect:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Effect"
            effect_glow_mode = "0"
            effect_glow = "0 0 0"
            effect_block_weapons_mode = "0"
            effect_invulnerable_mode = "0"
            effect_invisible_mode = "0"
            effect_nonsolid_mode = "0"
            effect_respiration_mode = "0"
            effect_respiration = "0.0"
            effect_friction_mode = "0"
            effect_friction = "0.0"
            effect_gravity_mode = "0"
            effect_gravity = "0.0"
            effect_speed_mode = "0"
            effect_speed = "0.0"
            effect_damage_mode = "0"
            effect_damage = "0.0"
          }
          trigger_endsection:b =
          {
            ;incl = "trigger"
            ;desc = "EndSection Trigger"
          }
          trigger_entity_iterator:e =
          {
            origin = "0 0 0"
            ;desc = "Entity Iterator"
            status_filter = "0"
            delay_between_triggers = "0.0"
            triggerstate = "0"
            run_mode = "0"
            maximum_runs = "0"
            delay_between_runs = "0.5"
          }
          trigger_gravity:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger Gravity"
            gravity = "1"
          }
          trigger_hurt:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger Hurt"
            dmg = "10"
            delay = "0"
            damagetype = "0"
          }
          trigger_hurt_remote:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Hurt (non-touch)"
            dmg = "10"
            armordmg = "0"
            delay = "1"
            damagetype = "0"
          }
          trigger_load:e =
          {
            origin = "0 0 0"
            ;desc = "Custom Load Data"
          }
          trigger_lookat:e =
          {
            origin = "0 0 0"
            ;desc = "Forces one Ent to look at another Ent"
          }
          trigger_monsterjump:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger monster jump"
            speed = "40"
            height = "128"
          }
          trigger_multiple:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger: Activate multiple"
            wait = "10"
          }
          trigger_numericdisplay:e =
          {
            origin = "0 0 0"
            ;desc = "Numeric Display"
            frags = "0.1"
          }
          trigger_once:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger: Activate once"
          }
          trigger_push:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger push"
            speed = "40"
          }
          trigger_random:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Random"
            min_delay = "3.0"
            max_delay = "7.0"
          }
          trigger_random_time:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Random Time"
          }
          trigger_random_unique:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Random Unique"
          }
          trigger_relay:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Relay"
            triggerstate = "0"
            m_flDelayBeforeReset = "0"
          }
          trigger_renameplayer:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Player Target"
          }
          trigger_respawn:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Respawn"
          }
          trigger_save:e =
          {
            origin = "0 0 0"
            ;desc = "Custom Save Data"
          }
          trigger_script:e =
          {
            origin = "0 0 0"
            ;desc = "Loads a script and executes a script function on trigger"
            m_iMode = "1"
          }
          trigger_setcvar:e =
          {
            origin = "0 0 0"
            ;desc = "Sets a CVAR"
            m_iszCVarToChange = "mp_allowmonsterinfo"
            SetType = "0"
          }
          trigger_setorigin:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Set Origin"
            spawnflags = "896"
            offset = "0 0 0"
            angleoffset = "0 0 0"
            invert_x = "0"
            invert_y = "0"
            invert_z = "0"
          }
          trigger_teleport:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger Teleport"
            teleport_cooldown = "1"
            teleport_ignore_delay = "0"
            teleport_start_inactive = "0"
            teleport_if_blocked = "0"
          }
          trigger_track_goal:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Track Goal"
          }
          trigger_transition:b =
          {
            ;incl = "trigger"
            ;desc = "Trigger: Select Transition Area"
          }
          trigger_vote:e =
          {
            origin = "0 0 0"
            ;desc = "Trigger Vote"
            frags = "90"
            health = "50"
          }
        }
        weapon_* entities.qtxfolder =
        {
          weapon_357:e =
          {
            origin = "0 0 0"
            ;desc = "357 Handgun"
          }
          weapon_9mmAR:e =
          {
            origin = "0 0 0"
            ;desc = "9mm Assault Rifle"
          }
          weapon_9mmhandgun:e =
          {
            origin = "0 0 0"
            ;desc = "9mm Handgun"
          }
          weapon_crossbow:e =
          {
            origin = "0 0 0"
            ;desc = "Crossbow"
            sequence = "0"
          }
          weapon_crowbar:e =
          {
            origin = "0 0 0"
            ;desc = "Crowbar"
          }
          weapon_displacer:e =
          {
            origin = "0 0 0"
            ;desc = "Displacer"
            m_TertiaryMode = "0"
          }
          weapon_eagle:e =
          {
            origin = "0 0 0"
            ;desc = "Desert Eagle"
          }
          weapon_egon:e =
          {
            origin = "0 0 0"
            ;desc = "Egon Gun"
          }
          weapon_gauss:e =
          {
            origin = "0 0 0"
            ;desc = "Gauss Gun"
          }
          weapon_grapple:e =
          {
            origin = "0 0 0"
            ;desc = "Barnacle Grapple"
          }
          weapon_handgrenade:e =
          {
            origin = "0 0 0"
            ;desc = "Hand Grenade"
          }
          weapon_hornetgun:e =
          {
            origin = "0 0 0"
            ;desc = "Hornet Gun"
          }
          weapon_m16:e =
          {
            origin = "0 0 0"
            ;desc = "M16"
          }
          weapon_m249:e =
          {
            origin = "0 0 0"
            ;desc = "M249 SAW"
          }
          weapon_medkit:e =
          {
            origin = "0 0 0"
            ;desc = "Medkit"
          }
          weapon_minigun:e =
          {
            origin = "0 0 0"
            ;desc = "Minigun"
          }
          weapon_pipewrench:e =
          {
            origin = "0 0 0"
            ;desc = "Wrench"
          }
          weapon_rpg:e =
          {
            origin = "0 0 0"
            ;desc = "RPG"
          }
          weapon_satchel:e =
          {
            origin = "0 0 0"
            ;desc = "Satchel Charge"
          }
          weapon_shockrifle:e =
          {
            origin = "0 0 0"
            ;desc = "Shock Rifle"
          }
          weapon_shotgun:e =
          {
            origin = "0 0 0"
            ;desc = "Shotgun"
          }
          weapon_snark:e =
          {
            origin = "0 0 0"
            ;desc = "Squeak Grenade"
          }
          weapon_sniperrifle:e =
          {
            origin = "0 0 0"
            ;desc = "Sniper Rifle"
          }
          weapon_sporelauncher:e =
          {
            origin = "0 0 0"
            ;desc = "Spore Launcher"
          }
          weapon_tripmine:e =
          {
            origin = "0 0 0"
            ;desc = "Tripmine"
          }
          weapon_uzi:e =
          {
            origin = "0 0 0"
            ;desc = "Single UZI (2 UZIs for Akimbo)"
          }
          weapon_uziakimbo:e =
          {
            origin = "0 0 0"
            ;desc = "Akimbo UZIs"
          }
        }
        world_* entities.qtxfolder =
        {
          world_items:e =
          {
            origin = "0 0 0"
            ;desc = "World Items"
            type = "42"
          }
        }
        xen_* entities.qtxfolder =
        {
          xen_hair:e =
          {
            origin = "0 0 0"
            ;desc = "Xen Hair"
          }
          xen_plantlight:e =
          {
            origin = "0 0 0"
            ;desc = "Xen Plant Light"
          }
          xen_spore_large:e =
          {
            origin = "0 0 0"
            ;desc = "Xen Spore (large)"
          }
          xen_spore_medium:e =
          {
            origin = "0 0 0"
            ;desc = "Xen Spore (medium)"
          }
          xen_spore_small:e =
          {
            origin = "0 0 0"
            ;desc = "Xen Spore (small)"
          }
          xen_tree:e =
          {
            origin = "0 0 0"
            ;desc = "Xen Tree"
          }
        }
      }
    }
    Entity Forms.fctx =
    {
      t_Mandatory:incl =
      {
        ondestroyfn: =
        {
          txt = "&"
          hint = "OnDestroy Function"
        }
      }
      t_worldspawn:incl =
      {
        t_Mandatory = "!"
        message: =
        {
          txt = "&"
          hint = "Map description / title"
        }
        skyname: =
        {
          txt = "&"
          hint = "Environment map (cl_skyname)"
        }
        sounds: =
        {
          txt = "&"
          hint = "CD track to play"
        }
        light: =
        {
          txt = "&"
          hint = "Default light level"
        }
        WaveHeight: =
        {
          txt = "&"
          hint = "Default wave height"
        }
        MaxRange: =
        {
          txt = "&"
          hint = "Max viewable distance"
        }
        chaptertitle: =
        {
          txt = "&"
          hint = "Chapter title message"
        }
        startdark: =
        {
          txt = "&"
          hint = "Level fade in"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        gametitle: =
        {
          txt = "&"
          hint = "Display game title"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        newunit: =
        {
          txt = "&"
          hint = "New level unit"
          typ = "C"
          items = "No, keep current"$0D"Yes, clear previous levels"
          values = "0"$0D"1"
        }
        mapteams: =
        {
          txt = "&"
          hint = "Map team List"
        }
        defaultteam: =
        {
          txt = "&"
          hint = "Default team"
          typ = "C"
          items = "Fewest Players"$0D"First Team"
          values = "0"$0D"1"
        }
        freeroam: =
        {
          txt = "&"
          hint = "Roaming monsters (node graph)"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        sentence_file: =
        {
          txt = "&"
          hint = "Custom Sentences File"
        }
        materials_file: =
        {
          txt = "&"
          hint = "Custom Materials File"
        }
        globalsoundlist: =
        {
          txt = "&"
          hint = "Global Sound Replacement File"
        }
        globalmodellist: =
        {
          txt = "&"
          hint = "Global Model Replacement File"
        }
        forcepmodels: =
        {
          txt = "&"
          hint = "Force Player Models a;b;c etc"
        }
        scversion2: =
        {
          txt = "&"
          hint = "Minimum game version"
          typ = "C"
          items = "5.25 Patch"$0D"5.24 Patch"$0D"5.23 Patch"$0D"5.22 Patch"$0D"5"
           ".21 Patch"$0D"5.20 Patch"$0D"5.19 Patch"$0D"5.18 Patch"$0D"5.17 Patc"
           "h"$0D"5.16 Patch"$0D"5.15 Patch"$0D"5.14 Patch"$0D"5.13 Patch"$0D"5."
           "12 Patch"$0D"5.11 Patch"$0D"5.10 Patch"$0D"5.09 Patch"$0D"5.08 Patch"
           $0D"5.07 Patch"$0D"5.06 Patch"$0D"5.05 Patch"$0D"5.04 Patch"$0D"5.03 "
           "Patch"$0D"5.02 Patch"$0D"5.01 Patch"$0D"5.0 Milestone"$0D"4.8 Update"
           $0D"4.7 Update"$0D"4.6 Update"$0D"4.5 Update"$0D"4.07 Hotfix"$0D"4.06"
           " Hotfix"$0D"4.05 Hotfix"$0D"4.0b1 Milestone"$0D"4.0 Internal"$0D"3.0"
           " (or earlier)"
          values = "525"$0D"524"$0D"523"$0D"522"$0D"521"$0D"520"$0D"519"$0D"518"$0D
           "517"$0D"516"$0D"515"$0D"514"$0D"513"$0D"512"$0D"511"$0D"510"$0D"509"$0D
           "508"$0D"507"$0D"506"$0D"505"$0D"504"$0D"503"$0D"502"$0D"501"$0D"500"$0D
           "480"$0D"470"$0D"460"$0D"450"$0D"407"$0D"406"$0D"405"$0D"401"$0D"400"$0D
           "300"
        }
      }
      worldspawn:form =
      {
        t_worldspawn = "!"
      }
      t_FilterIn:incl =
      {
        tinfilter: =
        {
          txt = "&"
          hint = "Name In Filter"
        }
        tinfiltertype: =
        {
          txt = "&"
          hint = "Name In Filter Type"
          typ = "C"
          items = "Exclude"$0D"Include"
          values = "0"$0D"1"
        }
        cinfilter: =
        {
          txt = "&"
          hint = "Class In Filter"
        }
        cinfiltertype: =
        {
          txt = "&"
          hint = "Class In Filter Type"
          typ = "C"
          items = "Exclude"$0D"Include"
          values = "0"$0D"1"
        }
      }
      t_FilterOut:incl =
      {
        toutfilter: =
        {
          txt = "&"
          hint = "Name Out Filter"
        }
        toutfiltertype: =
        {
          txt = "&"
          hint = "Name Out Filter Type"
          typ = "C"
          items = "Exclude"$0D"Include"
          values = "0"$0D"1"
        }
        coutfilter: =
        {
          txt = "&"
          hint = "Class Out Filter"
        }
        coutfiltertype: =
        {
          txt = "&"
          hint = "Class Out Filter Type"
          typ = "C"
          items = "Exclude"$0D"Include"
          values = "0"$0D"1"
        }
      }
      t_ZHLTbmodel:incl =
      {
        zhlt_usemodel: =
        {
          txt = "&"
          hint = "ZHLT Template Model Target"
        }
        zhlt_copylight: =
        {
          txt = "&"
          hint = "ZHLT Copy Lighting From Target"
        }
        zhlt_noclip: =
        {
          txt = "&"
          hint = "ZHLT Disable Clipping"
          typ = "C"
          items = "Default"$0D"Always non-solid"
          values = "0"$0D"1"
        }
        zhlt_invisible: =
        {
          txt = "&"
          hint = "ZHLT Invisible"
          typ = "C"
          items = "Visible (default)"$0D"Invisible"
          values = "0"$0D"1"
        }
        zhlt_customshadow: =
        {
          txt = "&"
          hint = "ZHLT Custom Shadow (when opaque)"
        }
        zhlt_embedlightmap: =
        {
          txt = "&"
          hint = "ZHLT Embed Light Map (when translucent)"
          typ = "C"
          items = "No (default)"$0D"Yes"
          values = "0"$0D"1"
        }
        zhlt_embedlightmapresolution: =
        {
          txt = "&"
          hint = "ZHLT Embed Light Map Resolution"
        }
      }
      t_ZHLT:incl =
      {
        t_ZHLTbmodel = "!"
        zhlt_lightflags: =
        {
          txt = "&"
          hint = "ZHLT Light Flags"
          typ = "C"
          items = "Default"$0D"Embedded Fix"$0D"Opaque (blocks light)"$0D"Opaque"
           " + Embedded fix"$0D"Opaque + Concave Fix"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"6"
        }
        light_origin: =
        {
          txt = "&"
          hint = "ZHLT Light Origin Target"
        }
      }
      t_ZHLTpoint:incl =
      {
        _fade: =
        {
          txt = "&"
          hint = "ZHLT Light Fade"
        }
        _falloff: =
        {
          txt = "&"
          hint = "ZHLT Light Falloff"
          typ = "C"
          items = "Default"$0D"Inverse Linear"$0D"Inverse Square"
          values = "0"$0D"1"$0D"2"
        }
      }
      t_Appearflags:incl =
      {
        spawnflags: =
        {
          txt = "&"
          typ = "X2048"
          cap = "Not in Deathmatch"
        }
      }
      t_AttackObject:incl =
      {
        classify: =
        {
          txt = "&"
          hint = "Classification"
          typ = "C"
          items = "None"$0D"Object Default"$0D"Machine"$0D"Player"$0D"Human Pass"
           "ive"$0D"Human Military"$0D"Alien Military"$0D"Alien Passive"$0D"Alie"
           "n Monster"$0D"Alien Prey"$0D"Alien Predator"$0D"Insect"$0D"Player Al"
           "ly"$0D"Player Hornet/Snark"$0D"Alien Hornet/Snark"$0D"X-Race"$0D"X-R"
           "ace: Shocktrooper/Voltigore"$0D"Team 1"$0D"Team 2"$0D"Team 3"$0D"Tea"
           "m 4"
          values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D
           "9"$0D"10"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D
           "19"
        }
      }
      t_Angles:incl =
      {
        angles: =
        {
          txt = "&"
          hint = "Pitch Yaw Roll (X Y Z)"
        }
      }
      t_Targetname:incl =
      {
        t_Mandatory = "!"
        targetname: =
        {
          txt = "&"
          hint = "Name"
        }
      }
      t_Target:incl =
      {
        target: =
        {
          txt = "&"
          hint = "Target"
        }
      }
      t_Pickup:incl =
      {
        bbox = '0 0 0 32 32 32'
        t_Targetname = "!"
        t_Appearflags = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "TOUCH Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "USE Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Can Use w/o LoS"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1024"
          cap = "Disable Respawn"
        }
        renderfx: =
        {
          txt = "&"
          hint = "Render FX"
          typ = "C"
          items = "Normal"$0D"Slow Pulse"$0D"Fast Pulse"$0D"Slow Wide Pulse"$0D"F"
           "ast Wide Pulse"$0D"Slow Strobe"$0D"Fast Strobe"$0D"Faster Strobe"$0D
           "Slow Flicker"$0D"Fast Flicker"$0D"Slow Fade Away"$0D"Fast Fade Away"$0D
           "Slow Become Solid"$0D"Fast Become Solid"$0D"Constant Glow"$0D"Distor"
           "t"$0D"Hologram (Distort + fade)"$0D"Glow Shell"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"9"$0D"10"$0D"11"$0D"12"$0D"13"$0D
           "5"$0D"6"$0D"7"$0D"8"$0D"14"$0D"15"$0D"16"$0D"19"
        }
        rendermode: =
        {
          txt = "&"
          hint = "Render Mode"
          typ = "C"
          items = "Normal"$0D"Color"$0D"Texture"$0D"Glow"$0D"Solid"$0D"Additive"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
        renderamt: =
        {
          txt = "&"
          hint = "FX Amount (1 - 255)"
        }
        rendercolor: =
        {
          txt = "&"
          hint = "FX Color (R G B)"
        }
        movetype: =
        {
          txt = "&"
          hint = "Gravity Setting"
          typ = "C"
          items = "Unmoveable"$0D"Fall to the ground (default)"$0D"Hover in the "
           "air"$0D"Hover in the air, ignore brush collision"
          values = "-1"$0D"0"$0D"5"$0D"8"
        }
      }
      t_ExclusiveHold:incl =
      {
        exclusivehold: =
        {
          txt = "&"
          hint = "Exclusive Hold"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      t_CustomRespawnDelay:incl =
      {
        m_flCustomRespawnTime: =
        {
          txt = "&"
          hint = "Custom respawn time"
        }
      }
      t_Weapon:incl =
      {
        bbox = '-16 -16 0 16 16 32'
        t_Pickup = "!"
        t_CustomRespawnDelay = "!"
        dmg: =
        {
          txt = "&"
          hint = "Custom Damage"
        }
        wpn_v_model: =
        {
          txt = "&"
          hint = "Custom V_Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        wpn_w_model: =
        {
          txt = "&"
          hint = "Custom W_Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        wpn_p_model: =
        {
          txt = "&"
          hint = "Custom P_Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        soundlist: =
        {
          txt = "&"
          hint = "Sound Replacement File"
        }
        CustomSpriteDir: =
        {
          txt = "&"
          hint = "Custom sprite directory"
        }
        IsNotAmmoItem: =
        {
          txt = "&"
          hint = "Is Ammo Item"
          typ = "C"
          items = "Yes"$0D"No"
          values = "0"$0D"1"
        }
      }
      t_Ammo:incl =
      {
        bbox = '-8 -8 0 8 8 16'
        t_Pickup = "!"
        t_CustomRespawnDelay = "!"
        model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
      }
      t_Item:incl =
      {
        bbox = '-8 -8 0 8 8 16'
        t_Pickup = "!"
        t_CustomRespawnDelay = "!"
        model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        skin: =
        {
          txt = "&"
          hint = "Skin"
        }
        body: =
        {
          txt = "&"
          hint = "Body"
        }
        sequencename: =
        {
          txt = "&"
          hint = "Sequence Name"
        }
        sequence: =
        {
          txt = "&"
          hint = "Sequence Number (overrides name)"
        }
        scale: =
        {
          txt = "&"
          hint = "Scale Model"
        }
        minhullsize: =
        {
          txt = "&"
          hint = "Custom Min Hull Size (X Y Z)"
        }
        maxhullsize: =
        {
          txt = "&"
          hint = "Custom Max Hull Size (X Y Z)"
        }
        soundlist: =
        {
          txt = "&"
          hint = "Sound Replacement File"
        }
      }
      t_ItemWithDefaultModel:incl =
      {
        bbox = '-8 -8 0 8 8 16'
        t_Pickup = "!"
        solid: =
        {
          txt = "&"
          hint = "Solid Setting"
          typ = "C"
          items = "Hollow"$0D"Touch on edge, non-blocking (default)"$0D"Touch on"
           " edge, blocking (requires hull sizes!)"
          values = "-1"$0D"0"$0D"2"
        }
        model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        skin: =
        {
          txt = "&"
          hint = "Skin"
        }
        body: =
        {
          txt = "&"
          hint = "Body"
        }
        sequencename: =
        {
          txt = "&"
          hint = "Sequence Name"
        }
        sequence: =
        {
          txt = "&"
          hint = "Sequence Number (overrides name)"
        }
        scale: =
        {
          txt = "&"
          hint = "Scale Model"
        }
        minhullsize: =
        {
          txt = "&"
          hint = "Custom Min Hull Size (X Y Z)"
        }
        maxhullsize: =
        {
          txt = "&"
          hint = "Custom Max Hull Size (X Y Z)"
        }
        soundlist: =
        {
          txt = "&"
          hint = "Sound Replacement File"
        }
      }
      t_Global:incl =
      {
        globalname: =
        {
          txt = "&"
          hint = "Global Entity Name"
        }
      }
      t_Targetx:incl =
      {
        t_Target = "!"
        delay: =
        {
          txt = "&"
          hint = "Delay Before Trigger"
        }
        killtarget: =
        {
          txt = "&"
          hint = "Kill Target"
        }
      }
      t_InventoryRules:incl =
      {
        item_name_required: =
        {
          txt = "&"
          hint = "Inventory: Need item(s)"
        }
        item_group_required: =
        {
          txt = "&"
          hint = "Inventory: Need item(s) from group(s)"
        }
        item_group_required_num: =
        {
          txt = "&"
          hint = "Inventory: Item count in group need have (0 = all)"
        }
        item_name_canthave: =
        {
          txt = "&"
          hint = "Inventory: CAN'T have item"
        }
        item_group_canthave: =
        {
          txt = "&"
          hint = "Inventory: CAN'T have item from group"
        }
        item_group_canthave_num: =
        {
          txt = "&"
          hint = "Inventory: Item count in group CAN'T have (0 = all)"
        }
        pass_ignore_use_triggers: =
        {
          txt = "&"
          hint = "On pass: Ignore item's on use triggers?"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        pass_drop_item_name: =
        {
          txt = "&"
          hint = "On pass: Drop item(s)"
        }
        pass_drop_item_group: =
        {
          txt = "&"
          hint = "On pass: Drop item(s) from group(s)"
        }
        pass_ignore_drop_triggers: =
        {
          txt = "&"
          hint = "On pass: Ignore item's on drop triggers?"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        pass_return_item_name: =
        {
          txt = "&"
          hint = "On pass: Return item(s)"
        }
        pass_return_item_group: =
        {
          txt = "&"
          hint = "On pass: Return item(s) from group(s)"
        }
        pass_ignore_return_triggers: =
        {
          txt = "&"
          hint = "On pass: Ignore item's on return triggers?"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        pass_destroy_item_name: =
        {
          txt = "&"
          hint = "On pass: Destroy item(s)"
        }
        pass_destroy_item_group: =
        {
          txt = "&"
          hint = "On pass: Destroy item(s) from group(s)"
        }
        pass_ignore_destroy_triggers: =
        {
          txt = "&"
          hint = "On pass: Ignore item's on destroy triggers?"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        target_on_fail: =
        {
          txt = "&"
          hint = "Target: Inventory rules failed"
        }
      }
      t_RenderFxChoices:incl =
      {
        renderfx: =
        {
          txt = "&"
          hint = "Render FX"
          typ = "C"
          items = "Normal"$0D"Slow Pulse"$0D"Fast Pulse"$0D"Slow Wide Pulse"$0D"F"
           "ast Wide Pulse"$0D"Slow Strobe"$0D"Fast Strobe"$0D"Faster Strobe"$0D
           "Slow Flicker"$0D"Fast Flicker"$0D"Slow Fade Away"$0D"Fast Fade Away"$0D
           "Slow Become Solid"$0D"Fast Become Solid"$0D"Constant Glow"$0D"Distor"
           "t"$0D"Hologram (Distort + fade)"$0D"Dead Player (DONT USE!)"$0D"Expl"
           "ode (Garg Like)"$0D"Glow Shell"$0D"ClampMinScale (Sprites)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"9"$0D"10"$0D"11"$0D"12"$0D"13"$0D
           "5"$0D"6"$0D"7"$0D"8"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D"20"
        }
      }
      t_RenderFields:incl =
      {
        t_RenderFxChoices = "!"
        t_Appearflags = "!"
        rendermode: =
        {
          txt = "&"
          hint = "Render Mode"
          typ = "C"
          items = "Normal"$0D"Color"$0D"Texture"$0D"Glow"$0D"Solid"$0D"Additive"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
        renderamt: =
        {
          txt = "&"
          hint = "FX Amount (1 - 255)"
        }
        rendercolor: =
        {
          txt = "&"
          hint = "FX Color (R G B)"
        }
      }
      t_PlayerClass:incl =
      {
        bbox = '-16 -16 -36 16 16 36'
        t_Targetname = "!"
        t_Target = "!"
        t_Appearflags = "!"
        t_Angles = "!"
      }
      t_PlayerDmClass:incl =
      {
        bbox = '-16 -16 -36 16 16 36'
        t_Targetname = "!"
        t_Target = "!"
        t_Appearflags = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Start Off"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Repel Spawn"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Filter player targetname"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Invert Filter"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Trigger on spawn"
        }
        netname: =
        {
          txt = "&"
          hint = "New Player Targetname"
        }
        message: =
        {
          txt = "&"
          hint = "Filter Player Targetname"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        frags: =
        {
          txt = "&"
          hint = "Repel Speed"
        }
        triggerstate: =
        {
          txt = "&"
          hint = "Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
      }
      t_NotRevivable:incl =
      {
        is_not_revivable: =
        {
          txt = "&"
          hint = "Is not revivable"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      t_Monster:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        t_AttackObject = "!"
        t_NotRevivable = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "WaitTillSeen"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Gag"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "MonsterClip"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Prisoner"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "WaitForScript"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "Pre-Disaster"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Don't Fade Corpse"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16384"
          cap = "No Dyn Collision"
        }
        TriggerCondition: =
        {
          txt = "&"
          hint = "Trigger Condition"
          typ = "C"
          items = "No Trigger"$0D"See Player, Mad at Player"$0D"Take Damage"$0D"5"
           "0% Health Remaining"$0D"Death"$0D"Hear World"$0D"Hear Player"$0D"Hea"
           "r Combat"$0D"See Player Unconditional"$0D"See Player, Not In Combat"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"7"$0D"8"$0D"9"$0D"10"$0D"11"
        }
        TriggerTarget: =
        {
          txt = "&"
          hint = "Trigger Condition Target"
        }
        body: =
        {
          txt = "&"
          hint = "Body"
          typ = "C"
          items = "0"
          values = "0"
        }
        skin: =
        {
          txt = "&"
          hint = "Skin"
          typ = "C"
          items = "0"
          values = "0"
        }
        is_player_ally: =
        {
          txt = "&"
          hint = "Is Player Ally?"
          typ = "C"
          items = "No (Default)"$0D"Yes"
          values = "0"$0D"1"
        }
        displayname: =
        {
          txt = "&"
          hint = "In-game Name"
        }
        bloodcolor: =
        {
          txt = "&"
          hint = "Blood Color"
          typ = "C"
          items = "Monster Default"$0D"No Blood"$0D"Red"$0D"Yellow"
          values = "0"$0D"-1"$0D"1"$0D"2"
        }
        health: =
        {
          txt = "&"
          hint = "Custom Health"
        }
        model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        minhullsize: =
        {
          txt = "&"
          hint = "Custom Min Hull Size (X Y Z)"
        }
        maxhullsize: =
        {
          txt = "&"
          hint = "Custom Max Hull Size (X Y Z)"
        }
        soundlist: =
        {
          txt = "&"
          hint = "Sound Replacement File"
        }
        freeroam: =
        {
          txt = "&"
          hint = "Monster Roaming (nodes)"
          typ = "C"
          items = "Map Default"$0D"Never"$0D"Always"
          values = "0"$0D"1"$0D"2"
        }
        path_name: =
        {
          txt = "&"
          hint = "Path Name"
        }
        guard_ent: =
        {
          txt = "&"
          hint = "Entity to Guard"
        }
      }
      t_TalkMonster:incl =
      {
        UseSentence: =
        {
          txt = "&"
          hint = "Use Sentence"
        }
        UnUseSentence: =
        {
          txt = "&"
          hint = "Un-Use Sentence"
        }
        is_player_ally: =
        {
          txt = "&"
          hint = "Is Player Ally?"
          typ = "C"
          items = "Yes (Default)"$0D"No"
          values = "0"$0D"1"
        }
      }
      t_GibShooterBase:incl =
      {
        bbox = '-8 -8 -8 8 8 8'
        t_Targetname = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Repeatable"
        }
        m_iGibs: =
        {
          txt = "&"
          hint = "Number of Gibs"
        }
        delay: =
        {
          txt = "&"
          hint = "Delay between shots"
        }
        m_flVelocity: =
        {
          txt = "&"
          hint = "Gib Velocity"
        }
        m_flVariance: =
        {
          txt = "&"
          hint = "Course Variance"
        }
        m_flGibLife: =
        {
          txt = "&"
          hint = "Gib Life"
        }
      }
      t_Light:incl =
      {
        _light: =
        {
          txt = "&"
          hint = "Brightness"
        }
        style: =
        {
          txt = "&"
          hint = "Appearance"
          typ = "C"
          items = "Normal"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D"Slo"
           "w pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D"Ca"
           "ndle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"
          values = "0"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D"8"$0D
           "4"$0D"9"
        }
        pattern: =
        {
          txt = "&"
          hint = "Custom Appearance"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Remove on Spawn"
        }
      }
      t_Breakable:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        t_Global = "!"
        t_AttackObject = "!"
        t_RenderFields = "!"
        t_ZHLT = "!"
        health: =
        {
          txt = "&"
          hint = "Strength"
        }
        material: =
        {
          txt = "&"
          hint = "Material type"
          typ = "C"
          items = "Glass"$0D"Wood"$0D"Metal"$0D"Flesh"$0D"Cinder Block"$0D"Ceili"
           "ng Tile"$0D"Computer"$0D"Unbreakable Glass"$0D"Rocks"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
        }
        weapon: =
        {
          txt = "&"
          hint = "Instant Break Weapon"
          typ = "C"
          items = "Crowbar"$0D"Crowbar (Electric Only)"$0D"Pipe Wrench"
          values = "1"$0D"19"$0D"20"
        }
        explosion: =
        {
          txt = "&"
          hint = "Gibs' direction and velocity"
          typ = "C"
          items = "Random direction; no velocity"$0D"Relative to attack/dmg./mat"
           "."
          values = "0"$0D"1"
        }
        gibmodel: =
        {
          txt = "&"
          hint = "Gib Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        spawnobject: =
        {
          txt = "&"
          hint = "Spawn On Break"
          typ = "C"
          items = "Nothing"$0D"Battery"$0D"Healthkit"$0D"9mm Handgun"$0D"9mm Cli"
           "p"$0D"Machine Gun"$0D"Machine Gun Clip"$0D"Machine Gun Grenades"$0D"S"
           "hotgun"$0D"Shotgun Shells"$0D"Crossbow"$0D"Crossbow Bolts"$0D"357"$0D
           "357 Clip"$0D"RPG"$0D"RPG Clip"$0D"Gauss Clip"$0D"Hand grenade"$0D"Tr"
           "ipmine"$0D"Satchel Charge"$0D"Snark"$0D"Hornet Gun"$0D"Crowbar"$0D"P"
           "ipewrench"$0D"Sniperrifle"$0D"Sniperrifle ammo"$0D"M16 Rifle"$0D"M24"
           "9 Squad Automatic Weapon"$0D"Minigun"$0D"556 Ammo Box"$0D"Sporelaunc"
           "her"$0D"Spore Clip"$0D"9mm Box"$0D"Uzi"$0D"Uzi akimbo"$0D"Desert Eag"
           "le"$0D"Barnacle Grapple"$0D"Medkit (portable)"$0D"HEV Suit"$0D"Antid"
           "ote"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
           "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"$0D"29"$0D
           "30"$0D"31"$0D"32"$0D"33"$0D"34"$0D"35"$0D"36"$0D"37"$0D"38"$0D"39"
        }
        explodemagnitude: =
        {
          txt = "&"
          hint = "Explode Magnitude (0=none)"
        }
        soundlist: =
        {
          txt = "&"
          hint = "Sound Replacement File"
        }
      }
      t_BaseLockable:incl =
      {
        locked_sound: =
        {
          txt = "&"
          hint = "Locked Sound"
          typ = "C"
          items = "None"$0D"Access Denied"$0D"Small zap"$0D"Buzz"$0D"Buzz Off"$0D
           "Latch Locked"
          values = "0"$0D"2"$0D"8"$0D"10"$0D"11"$0D"12"
        }
        unlocked_sound: =
        {
          txt = "&"
          hint = "Unlocked Sound"
          typ = "C"
          items = "None"$0D"Big zap & Warmup"$0D"Access Granted"$0D"Quick Combol"
           "ock"$0D"Power Deadbolt 1"$0D"Power Deadbolt 2"$0D"Plunger"$0D"Small "
           "zap"$0D"Keycard Sound"$0D"Buzz"$0D"Latch Unlocked"$0D"Lightswitch"
          values = "0"$0D"1"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"10"$0D
           "13"$0D"14"
        }
        locked_sentence: =
        {
          txt = "&"
          hint = "Locked Sentence"
          typ = "C"
          items = "None"$0D"Gen. Access Denied"$0D"Security Lockout"$0D"Blast Do"
           "or"$0D"Fire Door"$0D"Chemical Door"$0D"Radiation Door"$0D"Gen. Conta"
           "inment"$0D"Maintenance Door"$0D"Broken Shut Door"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
        }
        unlocked_sentence: =
        {
          txt = "&"
          hint = "Unlocked Sentence"
          typ = "C"
          items = "None"$0D"Gen. Access Granted"$0D"Security Disengaged"$0D"Blas"
           "t Door"$0D"Fire Door"$0D"Chemical Door"$0D"Radiation Door"$0D"Gen. C"
           "ontainment"$0D"Maintenance area"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
        }
        locked_sound_override: =
        {
          txt = "&"
          hint = "Locked Sound Override"
        }
        unlocked_sound_override: =
        {
          txt = "&"
          hint = "Unlocked Sound Override"
        }
        locked_sentence_override: =
        {
          txt = "&"
          hint = "Locked Sentence Override"
        }
        unlocked_sentence_override: =
        {
          txt = "&"
          hint = "Unlocked Sentence Override"
        }
      }
      t_StartStopable:incl =
      {
        fireonstart: =
        {
          txt = "&"
          hint = "Fire On Start"
        }
        fireonstart_triggerstate: =
        {
          txt = "&"
          hint = "Fire On Start Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
        fireonstop: =
        {
          txt = "&"
          hint = "Fire On Stop"
        }
        fireonstop_triggerstate: =
        {
          txt = "&"
          hint = "Fire On Stop Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
      }
      t_OpenClosable:incl =
      {
        fireonopening: =
        {
          txt = "&"
          hint = "Fire On Open Start"
        }
        fireonopening_triggerstate: =
        {
          txt = "&"
          hint = "Fire On Open Start Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
        fireonclosing: =
        {
          txt = "&"
          hint = "Fire On Close Start"
        }
        fireonclosing_triggerstate: =
        {
          txt = "&"
          hint = "Fire On Close Start Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
        fireonopened: =
        {
          txt = "&"
          hint = "Fire On Open End"
        }
        fireonopened_triggerstate: =
        {
          txt = "&"
          hint = "Fire On Open End Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
        fireonclosed: =
        {
          txt = "&"
          hint = "Fire On Close End"
        }
        fireonclosed_triggerstate: =
        {
          txt = "&"
          hint = "Fire On Close End Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
      }
      t_Door:incl =
      {
        t_Appearflags = "!"
        t_Global = "!"
        t_Targetname = "!"
        t_Targetx = "!"
        t_FilterIn = "!"
        t_FilterOut = "!"
        t_InventoryRules = "!"
        t_AttackObject = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        t_ZHLT = "!"
        t_BaseLockable = "!"
        t_StartStopable = "!"
        t_OpenClosable = "!"
        speed: =
        {
          txt = "&"
          hint = "Speed"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        movesnd: =
        {
          txt = "&"
          hint = "Move Sound"
          typ = "C"
          items = "No Sound"$0D"Servo (Sliding)"$0D"Pneumatic (Sliding)"$0D"Pneu"
           "matic (Rolling)"$0D"Vacuum"$0D"Power Hydraulic"$0D"Large Rollers"$0D
           "Track Door"$0D"Snappy Metal Door"$0D"Squeaky 1"$0D"Squeaky 2"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"
        }
        movesnd_loop: =
        {
          txt = "&"
          hint = "Move Sound Loops?"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        stopsnd: =
        {
          txt = "&"
          hint = "Stop Sound"
          typ = "C"
          items = "No Sound"$0D"Clang with brake"$0D"Clang reverb"$0D"Ratchet St"
           "op"$0D"Chunk"$0D"Light airbrake"$0D"Metal Slide Stop"$0D"Metal Lock "
           "Stop"$0D"Snappy Metal Stop"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
        }
        noise1: =
        {
          txt = "&"
          hint = "Move Sound Override"
        }
        noise2: =
        {
          txt = "&"
          hint = "Stop Sound Override"
        }
        wait: =
        {
          txt = "&"
          hint = "delay before close, -1 stay open "
        }
        lip: =
        {
          txt = "&"
          hint = "Lip"
        }
        dmg: =
        {
          txt = "&"
          hint = "Damage inflicted when blocked"
        }
        message: =
        {
          txt = "&"
          hint = "Message if triggered"
        }
        health: =
        {
          txt = "&"
          hint = "Strength"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
        soundlist: =
        {
          txt = "&"
          hint = "Sound Replacement File"
        }
        m_iOpenFlags: =
        {
          txt = "&"
          hint = "Who can open this"
          typ = "C"
          items = "Default (0)"$0D"Pushables (1)"$0D"No clients (2)"$0D"1 + 2"$0D
           "Everything else (4)"$0D"1 + 4"$0D"2 + 4"$0D"1 + 2 + 4"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"
        }
        m_fIgnoreTargetname: =
        {
          txt = "&"
          hint = "Ignore Targetname"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        m_iObeyTriggerMode: =
        {
          txt = "&"
          hint = "Obey Trigger Mode"
          typ = "C"
          items = "No"$0D"Yes"$0D"Yes, even when currently moving"
          values = "0"$0D"1"$0D"2"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Starts Open"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Don't link"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Passable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Toggle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "USE Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Monsters Can't"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1024"
          cap = "No Link-Checking"
        }
        breakable: =
        {
          txt = "&"
          hint = "Breakable"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        fireonbreak: =
        {
          txt = "&"
          hint = "Fire on break"
        }
        material: =
        {
          txt = "&"
          hint = "Material type"
          typ = "C"
          items = "Glass"$0D"Wood"$0D"Metal"$0D"Flesh"$0D"Cinder Block"$0D"Ceili"
           "ng Tile"$0D"Computer"$0D"Unbreakable Glass"$0D"Rocks"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
        }
        instantbreak: =
        {
          txt = "&"
          hint = "Instant Break"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        weapon: =
        {
          txt = "&"
          hint = "Instant Break Weapon"
          typ = "C"
          items = "Crowbar"$0D"Crowbar (Electric Only)"$0D"Pipe Wrench"
          values = "1"$0D"19"$0D"20"
        }
        explosion: =
        {
          txt = "&"
          hint = "Gibs' direction and velocity"
          typ = "C"
          items = "Random direction; no velocity"$0D"Relative to attack/dmg./mat"
           "."
          values = "0"$0D"1"
        }
        gibmodel: =
        {
          txt = "&"
          hint = "Gib Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        explodemagnitude: =
        {
          txt = "&"
          hint = "Explode Magnitude (0=none)"
        }
        displayname: =
        {
          txt = "&"
          hint = "HUD Info name"
        }
        onlytrigger: =
        {
          txt = "&"
          hint = "Only Trigger"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        breakontrigger: =
        {
          txt = "&"
          hint = "Break On Trigger"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        repairable: =
        {
          txt = "&"
          hint = "Repairable"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        showhudinfo: =
        {
          txt = "&"
          hint = "Show HUD Info"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        immunetoclients: =
        {
          txt = "&"
          hint = "Immune To Clients"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        explosivesonly: =
        {
          txt = "&"
          hint = "Explosives Only"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      t_BaseTank:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        t_RenderFields = "!"
        t_Global = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Active"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Only Direct"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Controllable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Use Relations"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1024"
          cap = "Player can't fire"
        }
        master: =
        {
          txt = "&"
          hint = "(Team) Master"
        }
        yawrate: =
        {
          txt = "&"
          hint = "Yaw Rate"
        }
        yawrange: =
        {
          txt = "&"
          hint = "Yaw Range"
        }
        yawtolerance: =
        {
          txt = "&"
          hint = "Yaw Tolerance"
        }
        pitchrate: =
        {
          txt = "&"
          hint = "Pitch Rate"
        }
        pitchrange: =
        {
          txt = "&"
          hint = "Pitch Range"
        }
        pitchtolerance: =
        {
          txt = "&"
          hint = "Pitch Tolerance"
        }
        barrel: =
        {
          txt = "&"
          hint = "Barrel Length"
        }
        barrely: =
        {
          txt = "&"
          hint = "Barrel Horizontal"
        }
        barrelz: =
        {
          txt = "&"
          hint = "Barrel Vertical"
        }
        spritesmoke: =
        {
          txt = "&"
          hint = "Smoke Sprite"
        }
        spriteflash: =
        {
          txt = "&"
          hint = "Flash Sprite"
        }
        spritescale: =
        {
          txt = "&"
          hint = "Sprite Scale"
        }
        rotatesound: =
        {
          txt = "&"
          hint = "Rotate Sound"
        }
        firerate: =
        {
          txt = "&"
          hint = "Rate of Fire"
        }
        bullet_damage: =
        {
          txt = "&"
          hint = "Damage Per Bullet"
        }
        persistence: =
        {
          txt = "&"
          hint = "Firing Persistence"
        }
        firespread: =
        {
          txt = "&"
          hint = "Bullet Accuracy"
          typ = "C"
          items = "Perfect Shot"$0D"Small cone"$0D"Medium cone"$0D"Large cone"$0D
           "Extra-large cone"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
        }
        minRange: =
        {
          txt = "&"
          hint = "Minmum target range"
        }
        maxRange: =
        {
          txt = "&"
          hint = "Maximum target range"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
        relation_player: =
        {
          txt = "&"
          hint = "R Player"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_none: =
        {
          txt = "&"
          hint = "R Unknown"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_machine: =
        {
          txt = "&"
          hint = "R Machine"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_human_passive: =
        {
          txt = "&"
          hint = "R Human Passive"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_human_militar: =
        {
          txt = "&"
          hint = "R Human Military"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_alien_militar: =
        {
          txt = "&"
          hint = "R Alien Military"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_alien_passive: =
        {
          txt = "&"
          hint = "R Alien Passive"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_alien_monster: =
        {
          txt = "&"
          hint = "R Alien Monster"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_alien_prey: =
        {
          txt = "&"
          hint = "R Alien Prey"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_alien_predator: =
        {
          txt = "&"
          hint = "R Alien Predator"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_insect: =
        {
          txt = "&"
          hint = "R Insect"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_player_ally: =
        {
          txt = "&"
          hint = "R Player Ally"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_player_bioweapon: =
        {
          txt = "&"
          hint = "R Player BioWeapon"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_monster_bioweapon: =
        {
          txt = "&"
          hint = "R Monster BioWeapon"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        relation_machine: =
        {
          txt = "&"
          hint = "R Machine"
          typ = "C"
          items = "Ally"$0D"Friend"$0D"No Relation"$0D"Dislike"$0D"Hate"$0D"Neme"
           "sis"
          values = "-2"$0D"-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
      }
      t_PlatSounds:incl =
      {
        movesnd: =
        {
          txt = "&"
          hint = "Move Sound"
          typ = "C"
          items = "No Sound"$0D"big elev 1"$0D"big elev 2"$0D"tech elev 1"$0D"te"
           "ch elev 2"$0D"tech elev 3"$0D"freight elev 1"$0D"freight elev 2"$0D"h"
           "eavy elev"$0D"rack elev"$0D"rail elev"$0D"squeek elev"$0D"odd elev 1"
           $0D"odd elev 2"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"12"$0D"13"
        }
        movesnd_loop: =
        {
          txt = "&"
          hint = "Move Sound Loops?"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        stopsnd: =
        {
          txt = "&"
          hint = "Stop Sound"
          typ = "C"
          items = "No Sound"$0D"big elev stop1"$0D"big elev stop2"$0D"freight el"
           "ev stop"$0D"heavy elev stop"$0D"rack stop"$0D"rail stop"$0D"squeek s"
           "top"$0D"quick stop"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
        }
        noise: =
        {
          txt = "&"
          hint = "Move Sound Override"
        }
        noise1: =
        {
          txt = "&"
          hint = "Stop Sound Override"
        }
        volume: =
        {
          txt = "&"
          hint = "Sound Volume 0.0 - 1.0"
        }
        soundlist: =
        {
          txt = "&"
          hint = "Sound Replacement File"
        }
      }
      t_BasePlat:incl =
      {
        t_Appearflags = "!"
        t_StartStopable = "!"
        t_OpenClosable = "!"
        dmg: =
        {
          txt = "&"
          hint = "Damage inflicted when blocked"
        }
      }
      t_Trackchange:incl =
      {
        t_Targetname = "!"
        t_RenderFields = "!"
        t_Global = "!"
        t_PlatSounds = "!"
        t_BasePlat = "!"
        height: =
        {
          txt = "&"
          hint = "Travel altitude"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Auto Activate train"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Relink track"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Start at Bottom"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Rotate Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "X Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Y Axis"
        }
        rotation: =
        {
          txt = "&"
          hint = "Spin amount"
        }
        train: =
        {
          txt = "&"
          hint = "Train to switch"
        }
        toptrack: =
        {
          txt = "&"
          hint = "Top track"
        }
        bottomtrack: =
        {
          txt = "&"
          hint = "Bottom track"
        }
        speed: =
        {
          txt = "&"
          hint = "Move/Rotate speed"
        }
        noise2: =
        {
          txt = "&"
          hint = "Blocked Sound"
        }
      }
      t_Trigger:incl =
      {
        t_Targetx = "!"
        t_Targetname = "!"
        t_FilterIn = "!"
        t_FilterOut = "!"
        t_InventoryRules = "!"
        t_ZHLTbmodel = "!"
        t_Appearflags = "!"
        netname: =
        {
          txt = "&"
          hint = "Target Path"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        sounds: =
        {
          txt = "&"
          hint = "Sound style"
          typ = "C"
          items = "No Sound"
          values = "0"
        }
        message: =
        {
          txt = "&"
          hint = "Message (set sound too!)"
        }
        tiny_monsters: =
        {
          txt = "&"
          hint = "Allow tiny monsters (insects/hornets)"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Monsters"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "No Clients"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Pushables"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Everything else"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Fire On Enter"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Fire On Exit"
        }
      }
      t_PortalBase:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Solid"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Start Disabled"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Render only every 2nd frame"
        }
        zoom: =
        {
          txt = "&"
          hint = "Zoom"
        }
        fps: =
        {
          txt = "&"
          hint = "Max FPS"
        }
        mindist: =
        {
          txt = "&"
          hint = "Min Render Distance"
        }
        maxdist: =
        {
          txt = "&"
          hint = "Max Render Distance"
        }
        textureMode: =
        {
          txt = "&"
          hint = "Texture Mode"
          typ = "C"
          items = "{ Textures"$0D"All Textures"$0D"Named Texture"
          values = "0"$0D"1"$0D"2"
        }
        textureName: =
        {
          txt = "&"
          hint = "Texture Name"
        }
      }
      t_aiscripted_sequence:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Targetname = "!"
        t_Targetx = "!"
        t_Angles = "!"
        m_iszEntity: =
        {
          txt = "&"
          hint = "Target Monster"
        }
        m_iszPlay: =
        {
          txt = "&"
          hint = "Action Animation"
        }
        m_flRadius: =
        {
          txt = "&"
          hint = "Search Radius"
        }
        m_flRepeat: =
        {
          txt = "&"
          hint = "Repeat Rate ms"
        }
        m_fMoveTo: =
        {
          txt = "&"
          hint = "Move to Position"
          typ = "C"
          items = "No"$0D"Walk"$0D"Run"$0D"Instantaneous"$0D"No - Turn to Face"
          values = "0"$0D"1"$0D"2"$0D"4"$0D"5"
        }
        moveto_radius: =
        {
          txt = "&"
          hint = "Move to Radius"
        }
        m_iFinishSchedule: =
        {
          txt = "&"
          hint = "AI Schedule when done"
          typ = "C"
          items = "Default AI"$0D"Ambush"
          values = "0"$0D"1"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Repeatable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Leave Corpse"
        }
      }
      aiscripted_sequence:form =
      {
        t_aiscripted_sequence = "!"
      }
      t_ambient_generic:incl =
      {
        t_Targetname = "!"
        message: =
        {
          txt = "&"
          hint = "Sound File"
        }
        health: =
        {
          txt = "&"
          hint = "Volume (10 = loudest)"
        }
        playmode: =
        {
          txt = "&"
          hint = "Play Mode"
          typ = "C"
          items = "Default"$0D"Play Once"$0D"Loop"$0D"Linear / Play Once"$0D"Lin"
           "ear / Loop"
          values = "0"$0D"1"$0D"2"$0D"5"$0D"6"
        }
        preset: =
        {
          txt = "&"
          hint = "Dynamic Presets"
          typ = "C"
          items = "None"$0D"Huge Machine"$0D"Big Machine"$0D"Machine"$0D"Slow Fa"
           "de in"$0D"Fade in"$0D"Quick Fade in"$0D"Slow Pulse"$0D"Pulse"$0D"Qui"
           "ck pulse"$0D"Slow Oscillator"$0D"Oscillator"$0D"Quick Oscillator"$0D
           "Grunge pitch"$0D"Very low pitch"$0D"Low pitch"$0D"High pitch"$0D"Ver"
           "y high pitch"$0D"Screaming pitch"$0D"Oscillate spinup/down"$0D"Pulse"
           " spinup/down"$0D"Random pitch"$0D"Random pitch fast"$0D"Incremental "
           "Spinup"$0D"Alien"$0D"Bizzare"$0D"Planet X"$0D"Haunted"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
           "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"
        }
        volstart: =
        {
          txt = "&"
          hint = "Start Volume"
        }
        fadein: =
        {
          txt = "&"
          hint = "Fade in time (0-100)"
        }
        fadeout: =
        {
          txt = "&"
          hint = "Fade out time (0-100)"
        }
        pitch: =
        {
          txt = "&"
          hint = "Pitch (> 100 = higher)"
        }
        pitchstart: =
        {
          txt = "&"
          hint = "Start Pitch"
        }
        spinup: =
        {
          txt = "&"
          hint = "Spin up time (0-100)"
        }
        spindown: =
        {
          txt = "&"
          hint = "Spin down time (0-100)"
        }
        lfotype: =
        {
          txt = "&"
          hint = "LFO type"
          typ = "C"
          items = "Off"$0D"Square Wave"$0D"Triangle Wave"$0D"Random"$0D"Saw Toot"
           "h Wave"$0D"Sine Wave"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
        lforate: =
        {
          txt = "&"
          hint = "LFO rate (0-1000)"
        }
        lfomodpitch: =
        {
          txt = "&"
          hint = "LFO mod pitch (0-100)"
        }
        lfomodvol: =
        {
          txt = "&"
          hint = "LFO mod vol (0-100)"
        }
        cspinup: =
        {
          txt = "&"
          hint = "Incremental spinup count"
        }
        linearmin: =
        {
          txt = "&"
          hint = "Linear Min Radius"
          typ = "C"
          items = "0 - 0 units"$0D"1 - 256 units"$0D"2 - 512 units"$0D"3 - 768 u"
           "nits"$0D"4 - 1,024 units"$0D"5 - 1,280 units"$0D"6 - 1,536 units"$0D
           "7 - 1,792 units"$0D"8 - 2,048 units"$0D"9 - 2,304 units"$0D"10 - 2,5"
           "60 units"$0D"11 - 2,816 units"$0D"12 - 3,072 units"$0D"13 - 3,328 un"
           "its"$0D"14 - 3,584 units"$0D"15 - 3,840 units"$0D"16 - 4,096 units"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"
        }
        linearmax: =
        {
          txt = "&"
          hint = "Linear End Radius"
          typ = "C"
          items = "1 - 256 units"$0D"2 - 512 units"$0D"3 - 768 units"$0D"4 - 1,0"
           "24 units"$0D"5 - 1,280 units"$0D"6 - 1,536 units"$0D"7 - 1,792 units"
           $0D"8 - 2,048 units"$0D"9 - 2,304 units"$0D"10 - 2,560 units"$0D"11 -"
           " 2,816 units"$0D"12 - 3,072 units"$0D"13 - 3,328 units"$0D"14 - 3,58"
           "4 units"$0D"15 - 3,840 units"$0D"16 - 4,096 units"
          values = "1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"10"$0D
           "11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Play Everywhere"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Small Radius (~384)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Medium Radius (~768)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Large Radius (~1536)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Start Silent"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Un-looped|Cyclic"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "User Only (+origin)"
        }
      }
      ambient_generic:form =
      {
        t_ambient_generic = "!"
      }
      t_ambient_music:incl =
      {
        t_Targetname = "!"
        message: =
        {
          txt = "&"
          hint = "Sound File"
        }
        volume: =
        {
          txt = "&"
          hint = "Volume (10 = loudest)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start Silent"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Loop"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Activator Only"
        }
      }
      ambient_music:form =
      {
        t_ambient_music = "!"
      }
      t_ammo_357:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_357:form =
      {
        t_ammo_357 = "!"
      }
      t_ammo_556:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_556:form =
      {
        t_ammo_556 = "!"
      }
      t_ammo_556clip:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_556clip:form =
      {
        t_ammo_556clip = "!"
      }
      t_ammo_762:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_762:form =
      {
        t_ammo_762 = "!"
      }
      t_ammo_9mmAR:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_9mmAR:form =
      {
        t_ammo_9mmAR = "!"
      }
      t_ammo_9mmbox:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_9mmbox:form =
      {
        t_ammo_9mmbox = "!"
      }
      t_ammo_9mmclip:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_9mmclip:form =
      {
        t_ammo_9mmclip = "!"
      }
      t_ammo_ARgrenades:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_ARgrenades:form =
      {
        t_ammo_ARgrenades = "!"
      }
      t_ammo_buckshot:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_buckshot:form =
      {
        t_ammo_buckshot = "!"
      }
      t_ammo_crossbow:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_crossbow:form =
      {
        t_ammo_crossbow = "!"
      }
      t_ammo_gaussclip:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_gaussclip:form =
      {
        t_ammo_gaussclip = "!"
      }
      t_ammo_rpgclip:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_rpgclip:form =
      {
        t_ammo_rpgclip = "!"
      }
      t_ammo_spore:incl =
      {
        bbox = '-16 -16 -16 16 16 16'
        t_Ammo = "!"
        t_Targetx = "!"
        movetype: =
        {
          txt = "&"
          hint = "Gravity Setting"
          typ = "C"
          items = "Unmoveable"$0D"Fall to the ground (OP4 maps only)"$0D"Hover i"
           "n the air"$0D"Hover in the air, ignore brush collision"
          values = "-1"$0D"0"$0D"5"$0D"8"
        }
      }
      ammo_spore:form =
      {
        t_ammo_spore = "!"
      }
      t_ammo_sporeclip:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_sporeclip:form =
      {
        t_ammo_sporeclip = "!"
      }
      t_ammo_uziclip:incl =
      {
        t_Ammo = "!"
        t_Targetx = "!"
      }
      ammo_uziclip:form =
      {
        t_ammo_uziclip = "!"
      }
      t_button_target:incl =
      {
        t_Target = "!"
        t_ZHLT = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Use Activates"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Start On"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        renderfx: =
        {
          txt = "&"
          hint = "Render FX"
          typ = "C"
          items = "Normal"$0D"Slow Pulse"$0D"Fast Pulse"$0D"Slow Wide Pulse"$0D"F"
           "ast Wide Pulse"$0D"Slow Strobe"$0D"Fast Strobe"$0D"Faster Strobe"$0D
           "Slow Flicker"$0D"Fast Flicker"$0D"Slow Fade Away"$0D"Fast Fade Away"$0D
           "Slow Become Solid"$0D"Fast Become Solid"$0D"Constant Glow"$0D"Distor"
           "t"$0D"Hologram (Distort + fade)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"9"$0D"10"$0D"11"$0D"12"$0D"13"$0D
           "5"$0D"6"$0D"7"$0D"8"$0D"14"$0D"15"$0D"16"
        }
        rendermode: =
        {
          txt = "&"
          hint = "Render Mode"
          typ = "C"
          items = "Normal"$0D"Color"$0D"Texture"$0D"Glow"$0D"Solid"$0D"Additive"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
        renderamt: =
        {
          txt = "&"
          hint = "FX Amount (1 - 255)"
        }
        rendercolor: =
        {
          txt = "&"
          hint = "FX Color (R G B)"
        }
        use_type: =
        {
          txt = "&"
          hint = "Use Type"
          typ = "C"
          items = "Off"$0D"On"$0D"Set"$0D"Toggle"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
      }
      button_target:form =
      {
        t_button_target = "!"
      }
      t_custom_precache:incl =
      {
        model_1: =
        {
          txt = "&"
          hint = "Model 1"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        model_2: =
        {
          txt = "&"
          hint = "Model 2"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        model_3: =
        {
          txt = "&"
          hint = "Model 3"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        model_4: =
        {
          txt = "&"
          hint = "Model 4"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        model_5: =
        {
          txt = "&"
          hint = "Model 5"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        model_6: =
        {
          txt = "&"
          hint = "Model 6"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        model_7: =
        {
          txt = "&"
          hint = "Model 7"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        model_8: =
        {
          txt = "&"
          hint = "Model 8"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        model_9: =
        {
          txt = "&"
          hint = "Model 9"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        sound_1: =
        {
          txt = "&"
          hint = "Sound 1"
        }
        sound_2: =
        {
          txt = "&"
          hint = "Sound 2"
        }
        sound_3: =
        {
          txt = "&"
          hint = "Sound 3"
        }
        sound_4: =
        {
          txt = "&"
          hint = "Sound 4"
        }
        sound_5: =
        {
          txt = "&"
          hint = "Sound 5"
        }
        sound_6: =
        {
          txt = "&"
          hint = "Sound 6"
        }
        sound_7: =
        {
          txt = "&"
          hint = "Sound 7"
        }
        sound_8: =
        {
          txt = "&"
          hint = "Sound 8"
        }
        sound_9: =
        {
          txt = "&"
          hint = "Sound 9"
        }
        sky_1: =
        {
          txt = "&"
          hint = "Sky map 1"
        }
        sky_2: =
        {
          txt = "&"
          hint = "Sky map 2"
        }
        sky_3: =
        {
          txt = "&"
          hint = "Sky map 3"
        }
        sky_4: =
        {
          txt = "&"
          hint = "Sky map 4"
        }
        sky_5: =
        {
          txt = "&"
          hint = "Sky map 5"
        }
        sky_6: =
        {
          txt = "&"
          hint = "Sky map 6"
        }
        sky_7: =
        {
          txt = "&"
          hint = "Sky map 7"
        }
        sky_8: =
        {
          txt = "&"
          hint = "Sky map 8"
        }
        sky_9: =
        {
          txt = "&"
          hint = "Sky map 9"
        }
      }
      custom_precache:form =
      {
        t_custom_precache = "!"
      }
      t_cycler:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Targetname = "!"
        t_Angles = "!"
        model: =
        {
          txt = "&"
          hint = "Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        renderfx: =
        {
          txt = "&"
          hint = "Render FX"
          typ = "C"
          items = "Normal"$0D"Slow Pulse"$0D"Fast Pulse"$0D"Slow Wide Pulse"$0D"F"
           "ast Wide Pulse"$0D"Slow Strobe"$0D"Fast Strobe"$0D"Faster Strobe"$0D
           "Slow Flicker"$0D"Fast Flicker"$0D"Slow Fade Away"$0D"Fast Fade Away"$0D
           "Slow Become Solid"$0D"Fast Become Solid"$0D"Constant Glow"$0D"Distor"
           "t"$0D"Hologram (Distort + fade)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"9"$0D"10"$0D"11"$0D"12"$0D"13"$0D
           "5"$0D"6"$0D"7"$0D"8"$0D"14"$0D"15"$0D"16"
        }
        rendermode: =
        {
          txt = "&"
          hint = "Render Mode"
          typ = "C"
          items = "Normal"$0D"Color"$0D"Texture"$0D"Glow"$0D"Solid"$0D"Additive"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
        renderamt: =
        {
          txt = "&"
          hint = "FX Amount (1 - 255)"
        }
        rendercolor: =
        {
          txt = "&"
          hint = "FX Color (R G B)"
        }
      }
      cycler:form =
      {
        t_cycler = "!"
      }
      t_cycler_sprite:incl =
      {
        t_Targetname = "!"
        t_Angles = "!"
        model: =
        {
          txt = "&"
          hint = "Sprite"
        }
        framerate: =
        {
          txt = "&"
          hint = "Frames per second"
        }
        renderfx: =
        {
          txt = "&"
          hint = "Render FX"
          typ = "C"
          items = "Normal"$0D"Slow Pulse"$0D"Fast Pulse"$0D"Slow Wide Pulse"$0D"F"
           "ast Wide Pulse"$0D"Slow Strobe"$0D"Fast Strobe"$0D"Faster Strobe"$0D
           "Slow Flicker"$0D"Fast Flicker"$0D"Slow Fade Away"$0D"Fast Fade Away"$0D
           "Slow Become Solid"$0D"Fast Become Solid"$0D"Constant Glow"$0D"Distor"
           "t"$0D"Hologram (Distort + fade)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"9"$0D"10"$0D"11"$0D"12"$0D"13"$0D
           "5"$0D"6"$0D"7"$0D"8"$0D"14"$0D"15"$0D"16"
        }
        rendermode: =
        {
          txt = "&"
          hint = "Render Mode"
          typ = "C"
          items = "Normal"$0D"Color"$0D"Texture"$0D"Glow"$0D"Solid"$0D"Additive"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
        renderamt: =
        {
          txt = "&"
          hint = "FX Amount (1 - 255)"
        }
        rendercolor: =
        {
          txt = "&"
          hint = "FX Color (R G B)"
        }
      }
      cycler_sprite:form =
      {
        t_cycler_sprite = "!"
      }
      t_cycler_weapon:incl =
      {
        bbox = '-16 -16 -16 16 16 16'
        t_Monster = "!"
      }
      cycler_weapon:form =
      {
        t_cycler_weapon = "!"
      }
      t_cycler_wreckage:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        t_Targetname = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        framerate: =
        {
          txt = "&"
          hint = "Framerate"
        }
        model: =
        {
          txt = "&"
          hint = "Sprite Name"
        }
        scale: =
        {
          txt = "&"
          hint = "Scale"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Toggle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Start ON"
        }
      }
      cycler_wreckage:form =
      {
        t_cycler_wreckage = "!"
      }
      t_BaseCustomEntity:incl =
      {
        m_iszScriptFile: =
        {
          txt = "&"
          hint = "Script file"
        }
      }
      t_BaseCharger:incl =
      {
        t_Global = "!"
        t_RenderFields = "!"
        t_ZHLT = "!"
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
        soundlist: =
        {
          txt = "&"
          hint = "Sound Replacement File"
        }
        CustomJuice: =
        {
          txt = "&"
          hint = "Custom Juice Amount"
        }
        CustomRechargeTime: =
        {
          txt = "&"
          hint = "Custom Recharge Time"
        }
        TriggerOnEmpty: =
        {
          txt = "&"
          hint = "Trigger On Empty"
        }
        TriggerOnRecharged: =
        {
          txt = "&"
          hint = "Trigger on Recharged"
        }
        CustomDeniedSound: =
        {
          txt = "&"
          hint = "Custom Denied Sound"
        }
        CustomStartSound: =
        {
          txt = "&"
          hint = "Custom Start Sound"
        }
        CustomLoopSound: =
        {
          txt = "&"
          hint = "Custom Loop Sound"
        }
      }
      t_BeamStartEnd:incl =
      {
        LightningStart: =
        {
          txt = "&"
          hint = "Start Entity"
        }
        LightningEnd: =
        {
          txt = "&"
          hint = "Ending Entity"
        }
      }
      t_env_beam:incl =
      {
        bbox = '-12 -12 -12 12 12 12'
        t_Targetname = "!"
        t_BeamStartEnd = "!"
        t_RenderFxChoices = "!"
        renderamt: =
        {
          txt = "&"
          hint = "Brightness (1 - 255)"
        }
        rendercolor: =
        {
          txt = "&"
          hint = "Beam Color (R G B)"
        }
        Radius: =
        {
          txt = "&"
          hint = "Radius"
        }
        life: =
        {
          txt = "&"
          hint = "Life (seconds 0 = infinite)"
        }
        BoltWidth: =
        {
          txt = "&"
          hint = "Width of beam (pixels*0.1 0-255)"
        }
        NoiseAmplitude: =
        {
          txt = "&"
          hint = "Amount of noise (0-255)"
        }
        texture: =
        {
          txt = "&"
          hint = "Sprite Name"
        }
        TextureScroll: =
        {
          txt = "&"
          hint = "Texture Scroll Rate (0-100)"
        }
        framerate: =
        {
          txt = "&"
          hint = "Frames per 10 seconds"
        }
        framestart: =
        {
          txt = "&"
          hint = "Starting Frame"
        }
        StrikeTime: =
        {
          txt = "&"
          hint = "Strike again time (secs)"
        }
        damage: =
        {
          txt = "&"
          hint = "Damage / second"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start On"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Toggle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Random Strike"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Ring"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "StartSparks"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "EndSparks"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Decal End"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Shade Start"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "Shade End"
        }
      }
      env_beam:form =
      {
        t_env_beam = "!"
      }
      t_env_beverage:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        t_Targetname = "!"
        t_Angles = "!"
        health: =
        {
          txt = "&"
          hint = "Capacity"
        }
        skin: =
        {
          txt = "&"
          hint = "Beverage Type"
          typ = "C"
          items = "Coca-Cola"$0D"Sprite"$0D"Diet Coke"$0D"Orange"$0D"Surge"$0D"M"
           "oxie"$0D"Random"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        model: =
        {
          txt = "&"
          hint = "Custom Model"
        }
        weapons: =
        {
          txt = "&"
          hint = "Health for Pickup"
        }
      }
      env_beverage:form =
      {
        t_env_beverage = "!"
      }
      t_env_blood:incl =
      {
        bbox = '-8 -8 -8 8 8 8'
        t_Targetname = "!"
        t_Angles = "!"
        color: =
        {
          txt = "&"
          hint = "Blood Color"
          typ = "C"
          items = "Red (Human)"$0D"Yellow (Alien)"
          values = "0"$0D"1"
        }
        amount: =
        {
          txt = "&"
          hint = "Amount of blood (damage to simulate)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Random Direction"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Blood Stream"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "On Player"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Spray decals"
        }
      }
      env_blood:form =
      {
        t_env_blood = "!"
      }
      t_env_bubbles:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
        density: =
        {
          txt = "&"
          hint = "Bubble density"
        }
        frequency: =
        {
          txt = "&"
          hint = "Bubble frequency"
        }
        current: =
        {
          txt = "&"
          hint = "Speed of Current"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start Off"
        }
      }
      env_bubbles:form =
      {
        t_env_bubbles = "!"
      }
      t_env_explosion:incl =
      {
        bbox = '-12 -12 -12 12 12 12'
        t_Targetname = "!"
        iMagnitude: =
        {
          txt = "&"
          hint = "Magnitude"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "No Damage"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Repeatable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "No Fireball"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "No Smoke"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "No Decal"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "No Sparks"
        }
      }
      env_explosion:form =
      {
        t_env_explosion = "!"
      }
      t_env_fade:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Fade From"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Modulate"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Activator Only"
        }
        duration: =
        {
          txt = "&"
          hint = "Duration (seconds)"
        }
        holdtime: =
        {
          txt = "&"
          hint = "Hold Fade (seconds)"
        }
        renderamt: =
        {
          txt = "&"
          hint = "Fade Alpha"
        }
        rendercolor: =
        {
          txt = "&"
          hint = "Fade Color (R G B)"
        }
      }
      env_fade:form =
      {
        t_env_fade = "!"
      }
      t_env_fog:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start Off"
        }
        rendercolor: =
        {
          txt = "&"
          hint = "Fog Color (RGB)"
        }
        iuser2: =
        {
          txt = "&"
          hint = "Start Distance"
        }
        iuser3: =
        {
          txt = "&"
          hint = "End Distance"
        }
      }
      env_fog:form =
      {
        t_env_fog = "!"
      }
      t_env_funnel:incl =
      {
        bbox = '-16 -16 -16 16 16 16'
        t_Targetname = "!"
        sprite: =
        {
          txt = "&"
          hint = "Custom sprite"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Reverse"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Reusable"
        }
      }
      env_funnel:form =
      {
        t_env_funnel = "!"
      }
      t_env_global:incl =
      {
        t_Targetname = "!"
        globalstate: =
        {
          txt = "&"
          hint = "Global State to Set"
        }
        triggermode: =
        {
          txt = "&"
          hint = "Trigger Mode"
          typ = "C"
          items = "Off"$0D"On"$0D"Dead"$0D"Toggle"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
        initialstate: =
        {
          txt = "&"
          hint = "Initial State"
          typ = "C"
          items = "Off"$0D"On"$0D"Dead"
          values = "0"$0D"1"$0D"2"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Set Initial State"
        }
      }
      env_global:form =
      {
        t_env_global = "!"
      }
      t_env_glow:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        t_Targetname = "!"
        t_RenderFields = "!"
        model: =
        {
          txt = "&"
          hint = "Sprite Name"
        }
        scale: =
        {
          txt = "&"
          hint = "Scale"
        }
      }
      env_glow:form =
      {
        t_env_glow = "!"
      }
      t_env_laser:incl =
      {
        bbox = '-8 -8 -8 8 8 8'
        t_Targetname = "!"
        t_RenderFxChoices = "!"
        t_Angles = "!"
        LaserTarget: =
        {
          txt = "&"
          hint = "Target of Laser"
        }
        renderamt: =
        {
          txt = "&"
          hint = "Brightness (1 - 255)"
        }
        rendercolor: =
        {
          txt = "&"
          hint = "Beam Color (R G B)"
        }
        width: =
        {
          txt = "&"
          hint = "Width of beam (pixels*0.1 0-255)"
        }
        NoiseAmplitude: =
        {
          txt = "&"
          hint = "Amount of noise (0-255)"
        }
        texture: =
        {
          txt = "&"
          hint = "Sprite Name"
        }
        EndSprite: =
        {
          txt = "&"
          hint = "End Sprite"
        }
        TextureScroll: =
        {
          txt = "&"
          hint = "Texture Scroll Rate (0-100)"
        }
        framestart: =
        {
          txt = "&"
          hint = "Starting Frame"
        }
        damage: =
        {
          txt = "&"
          hint = "Damage / second"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start On"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "StartSparks"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "EndSparks"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Decal End"
        }
      }
      env_laser:form =
      {
        t_env_laser = "!"
      }
      t_env_message:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        message: =
        {
          txt = "&"
          hint = "Message Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Play Once"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "All Clients"
        }
        messagesound: =
        {
          txt = "&"
          hint = "Sound Effect"
        }
        messagevolume: =
        {
          txt = "&"
          hint = "Volume 0-10"
        }
        messageattenuation: =
        {
          txt = "&"
          hint = "Sound Radius"
          typ = "C"
          items = "Small Radius"$0D"Medium Radius"$0D"Large  Radius"$0D"Play Eve"
           "rywhere"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
      }
      env_message:form =
      {
        t_env_message = "!"
      }
      t_env_render:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        t_RenderFields = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "No Renderfx"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "No Renderamt"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "No Rendermode"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "No Rendercolor"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Auto Apply"
        }
        armorvalue: =
        {
          txt = "&"
          hint = "radius (0 disables)"
        }
      }
      env_render:form =
      {
        t_env_render = "!"
      }
      t_env_render_individual:incl =
      {
        t_Targetname = "!"
        t_RenderFields = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "No Renderfx"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "No Renderamt"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "No Rendermode"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "No Rendercolor"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Auto Apply"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Start On"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Affect Activator (ignore netname)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Use Entity to copy from"
        }
        target: =
        {
          txt = "&"
          hint = "Entity to affect"
        }
        netname: =
        {
          txt = "&"
          hint = "Player to affect"
        }
        message: =
        {
          txt = "&"
          hint = "Entity to copy from"
        }
      }
      env_render_individual:form =
      {
        t_env_render_individual = "!"
      }
      t_env_sentence:incl =
      {
        bbox = '-16 -16 -16 16 16 16'
        t_Target = "!"
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Activator Only"
        }
        _text: =
        {
          txt = "&"
          hint = "Sentence"
        }
      }
      env_sentence:form =
      {
        t_env_sentence = "!"
      }
      t_env_shake:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Global Shake"
        }
        amplitude: =
        {
          txt = "&"
          hint = "Amplitude (degrees; 0-16)"
        }
        radius: =
        {
          txt = "&"
          hint = "Effect radius (if not global)"
        }
        duration: =
        {
          txt = "&"
          hint = "Duration (seconds; fades out)"
        }
        frequency: =
        {
          txt = "&"
          hint = "Frequency (Hz; 0-255)"
        }
      }
      env_shake:form =
      {
        t_env_shake = "!"
      }
      t_env_shooter:incl =
      {
        t_GibShooterBase = "!"
        t_RenderFields = "!"
        shootmodel: =
        {
          txt = "&"
          hint = "Model or Sprite name"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        shootsounds: =
        {
          txt = "&"
          hint = "Material Sound"
          typ = "C"
          items = "None"$0D"Glass"$0D"Wood"$0D"Metal"$0D"Flesh"$0D"Concrete"
          values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"
        }
        scale: =
        {
          txt = "&"
          hint = "Gib Scale"
        }
        skin: =
        {
          txt = "&"
          hint = "Gib Skin"
        }
      }
      env_shooter:form =
      {
        t_env_shooter = "!"
      }
      t_env_sound:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "USE Only"
        }
        radius: =
        {
          txt = "&"
          hint = "Radius"
        }
        roomtype: =
        {
          txt = "&"
          hint = "Room Type"
          typ = "C"
          items = "Normal (off)"$0D"Generic"$0D"Metal Small"$0D"Metal Medium"$0D
           "Metal Large"$0D"Tunnel Small"$0D"Tunnel Medium"$0D"Tunnel Large"$0D"C"
           "hamber Small"$0D"Chamber Medium"$0D"Chamber Large"$0D"Bright Small"$0D
           "Bright Medium"$0D"Bright Large"$0D"Water Small"$0D"Water Medium"$0D"W"
           "ater Large"$0D"Concrete Small"$0D"Concrete Medium"$0D"Concrete Large"
           $0D"Big Room"$0D"Bigger Room"$0D"Biggest Room"$0D"Cavern Small"$0D"Ca"
           "vern Medium"$0D"Cavern Large"$0D"Weirdo - Drugged"$0D"Weirdo - Dizzy"
           $0D"Weirdo - Psychotic"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
           "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"
        }
      }
      env_sound:form =
      {
        t_env_sound = "!"
      }
      t_env_spark:incl =
      {
        bbox = '-8 -8 -8 8 8 8'
        t_Targetname = "!"
        t_Angles = "!"
        MaxDelay: =
        {
          txt = "&"
          hint = "Max Delay"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Toggle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Start ON"
        }
      }
      env_spark:form =
      {
        t_env_spark = "!"
      }
      t_env_sprite:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        t_Targetname = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        framerate: =
        {
          txt = "&"
          hint = "Framerate"
        }
        model: =
        {
          txt = "&"
          hint = "Sprite Name"
        }
        scale: =
        {
          txt = "&"
          hint = "Scale"
        }
        vp_type: =
        {
          txt = "&"
          hint = "Draw Type / Orientation"
          typ = "C"
          items = "Default"$0D"Parallel"$0D"Parallel Upright"$0D"Parallel Orient"
           "ated"$0D"Facing Upright"$0D"Orientated"
          values = "0"$0D"3"$0D"1"$0D"5"$0D"2"$0D"4"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start on"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Play Once"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Once + Remove"
        }
      }
      env_sprite:form =
      {
        t_env_sprite = "!"
      }
      t_BaseTrain:incl =
      {
        t_Targetname = "!"
        t_Global = "!"
        t_RenderFields = "!"
        t_PlatSounds = "!"
        target: =
        {
          txt = "&"
          hint = "First stop target"
        }
        speed: =
        {
          txt = "&"
          hint = "Speed (units per second)"
        }
        m_iObeyTriggerMode: =
        {
          txt = "&"
          hint = "Obey Trigger Mode"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      t_env_spritetrain:incl =
      {
        t_BaseTrain = "!"
        model: =
        {
          txt = "&"
          hint = "Sprite Name"
        }
        scale: =
        {
          txt = "&"
          hint = "Sprite Scale"
        }
      }
      env_spritetrain:form =
      {
        t_env_spritetrain = "!"
      }
      t_env_weather:incl =
      {
        t_Targetname = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        t_ZHLTbmodel = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start On"
        }
        drop_model: =
        {
          txt = "&"
          hint = "Sprite (or Model) name"
        }
        drop_scale: =
        {
          txt = "&"
          hint = "Sprite Scale"
        }
        drop_vp_type: =
        {
          txt = "&"
          hint = "Sprite Draw Type / Orientation"
          typ = "C"
          items = "Default"$0D"Parallel"$0D"Parallel Upright"$0D"Parallel Orient"
           "ated"$0D"Facing Upright"$0D"Orientated"
          values = "0"$0D"3"$0D"1"$0D"5"$0D"2"$0D"4"
        }
        splash_model: =
        {
          txt = "&"
          hint = "Splash Sprite (or Model) name"
        }
        splash_scale: =
        {
          txt = "&"
          hint = "Splash Sprite Scale"
        }
        splash_vp_type: =
        {
          txt = "&"
          hint = "Splash Sprite Draw Type / Orientation"
          typ = "C"
          items = "Default"$0D"Parallel"$0D"Parallel Upright"$0D"Parallel Orient"
           "ated"$0D"Facing Upright"$0D"Orientated"
          values = "0"$0D"3"$0D"1"$0D"5"$0D"2"$0D"4"
        }
        speed: =
        {
          txt = "&"
          hint = "Speed"
        }
        density: =
        {
          txt = "&"
          hint = "Density"
        }
        angle_variance: =
        {
          txt = "&"
          hint = "Angle Variance"
        }
        speed_variance: =
        {
          txt = "&"
          hint = "Speed Variance"
        }
      }
      env_weather:form =
      {
        t_env_weather = "!"
      }
      t_env_xenmaker:incl =
      {
        bbox = '-16 -16 -16 16 16 56'
        t_Targetname = "!"
        t_Target = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Try Once"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "No Spawn"
        }
        monstertype: =
        {
          txt = "&"
          hint = "Monster Type"
        }
        m_flBeamRadius: =
        {
          txt = "&"
          hint = "Beam Radius (max)"
        }
        m_iBeamAlpha: =
        {
          txt = "&"
          hint = "Beam Alpha"
        }
        m_iBeamCount: =
        {
          txt = "&"
          hint = "Beam Count"
        }
        m_vBeamColor: =
        {
          txt = "&"
          hint = "Beam Color"
        }
        m_flLightRadius: =
        {
          txt = "&"
          hint = "Light Radius"
        }
        m_vLightColor: =
        {
          txt = "&"
          hint = "Light Color"
        }
        m_flStartSpriteFramerate: =
        {
          txt = "&"
          hint = "Sprite1 Framerate"
        }
        m_flStartSpriteScale: =
        {
          txt = "&"
          hint = "Sprite1 Scale"
        }
        m_iStartSpriteAlpha: =
        {
          txt = "&"
          hint = "Sprite1 Alpha"
        }
        m_vStartSpriteColor: =
        {
          txt = "&"
          hint = "Sprite1 Color"
        }
        m_flEndSpriteFramerate: =
        {
          txt = "&"
          hint = "Sprite2 Framerate"
        }
        m_flEndSpriteScale: =
        {
          txt = "&"
          hint = "Sprite2 Scale"
        }
        m_iEndSpriteAlpha: =
        {
          txt = "&"
          hint = "Sprite2 Alpha"
        }
        m_vEndSpriteColor: =
        {
          txt = "&"
          hint = "Sprite2 Color"
        }
      }
      env_xenmaker:form =
      {
        t_env_xenmaker = "!"
      }
      t_func_breakable:incl =
      {
        t_Breakable = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Only Trigger"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Touch"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Pressure"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Repairable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Show HUD Info"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Immune To Clients"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "Instant Break"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Explosives Only"
        }
        displayname: =
        {
          txt = "&"
          hint = "HUD Info name"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
      }
      func_breakable:form =
      {
        t_func_breakable = "!"
      }
      t_func_button:incl =
      {
        t_Global = "!"
        t_Targetname = "!"
        t_Targetx = "!"
        t_InventoryRules = "!"
        t_AttackObject = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        t_ZHLT = "!"
        t_BaseLockable = "!"
        speed: =
        {
          txt = "&"
          hint = "Speed"
        }
        health: =
        {
          txt = "&"
          hint = "Health (shootable if > 0)"
        }
        lip: =
        {
          txt = "&"
          hint = "Lip"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        sounds: =
        {
          txt = "&"
          hint = "Sounds"
          typ = "C"
          items = "None"$0D"Big zap & Warmup"$0D"Access Denied"$0D"Access Grante"
           "d"$0D"Quick Combolock"$0D"Power Deadbolt 1"$0D"Power Deadbolt 2"$0D"P"
           "lunger"$0D"Small zap"$0D"Keycard Sound"$0D"Buzz"$0D"Buzz Off"$0D"Lig"
           "htswitch"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"14"
        }
        noise: =
        {
          txt = "&"
          hint = "Sound Override"
        }
        wait: =
        {
          txt = "&"
          hint = "delay before reset (-1 stay)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Don't move"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Toggle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Sparks"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "Touch Activates"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
        use_type: =
        {
          txt = "&"
          hint = "Use Type"
          typ = "C"
          items = "Off"$0D"On"$0D"Set"$0D"Toggle"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
      }
      func_button:form =
      {
        t_func_button = "!"
      }
      t_func_clip:incl =
      {
        t_Targetname = "!"
        t_Angles = "!"
        t_ZHLTbmodel = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start Off"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Directional (Angles)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "No Clients"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Monsters"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Pushables"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Everything else"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "item_inv (thrown)"
        }
        frags: =
        {
          txt = "&"
          hint = "Direction Tolerance"
        }
      }
      func_clip:form =
      {
        t_func_clip = "!"
      }
      t_func_conveyor:incl =
      {
        t_Global = "!"
        t_RenderFields = "!"
        t_Targetname = "!"
        t_Angles = "!"
        t_ZHLT = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "No Push"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Not Solid"
        }
        speed: =
        {
          txt = "&"
          hint = "Conveyor Speed"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
      }
      func_conveyor:form =
      {
        t_func_conveyor = "!"
      }
      t_func_detail:incl =
      {
        zhlt_detaillevel: =
        {
          txt = "&"
          hint = "Detail level"
        }
        zhlt_chopdown: =
        {
          txt = "&"
          hint = "Lower its level to chop others"
        }
        zhlt_chopup: =
        {
          txt = "&"
          hint = "Raise its level to get chopped"
        }
        zhlt_coplanarpriority: =
        {
          txt = "&"
          hint = "Priority when faces overlap"
        }
        zhlt_clipnodedetaillevel: =
        {
          txt = "&"
          hint = "Detail level of clip hulls"
        }
        zhlt_noclip: =
        {
          txt = "&"
          hint = "Disable clipping"
          typ = "C"
          items = "Default"$0D"Always non-solid"
          values = "0"$0D"1"
        }
      }
      func_detail:form =
      {
        t_func_detail = "!"
      }
      t_func_door:incl =
      {
        t_Door = "!"
      }
      func_door:form =
      {
        t_func_door = "!"
      }
      t_func_door_rotating:incl =
      {
        t_Door = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Reverse Dir"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "One-way"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "X Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Y Axis"
        }
        distance: =
        {
          txt = "&"
          hint = "Distance (deg)"
        }
      }
      func_door_rotating:form =
      {
        t_func_door_rotating = "!"
      }
      t_func_friction:incl =
      {
        t_Appearflags = "!"
        t_RenderFields = "!"
        t_ZHLT = "!"
        modifier: =
        {
          txt = "&"
          hint = "Percentage of standard (0 - 100)"
        }
      }
      func_friction:form =
      {
        t_func_friction = "!"
      }
      t_func_group:incl =
      {
        zhlt_coplanarpriority: =
        {
          txt = "&"
          hint = "Priority when faces overlap"
        }
        zhlt_noclip: =
        {
          txt = "&"
          hint = "Disable clipping"
          typ = "C"
          items = "Default"$0D"Always non-solid"
          values = "0"$0D"1"
        }
      }
      func_group:form =
      {
        t_func_group = "!"
      }
      t_func_guntarget:incl =
      {
        t_Targetname = "!"
        t_RenderFields = "!"
        t_AttackObject = "!"
        t_Global = "!"
        t_ZHLT = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start On"
        }
        speed: =
        {
          txt = "&"
          hint = "Speed (units per second)"
        }
        target: =
        {
          txt = "&"
          hint = "First stop target"
        }
        message: =
        {
          txt = "&"
          hint = "Fire on damage"
        }
        health: =
        {
          txt = "&"
          hint = "Damage to Take"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
      }
      func_guntarget:form =
      {
        t_func_guntarget = "!"
      }
      t_func_healthcharger:incl =
      {
        t_BaseCharger = "!"
      }
      func_healthcharger:form =
      {
        t_func_healthcharger = "!"
      }
      t_func_illusionary:incl =
      {
        t_Targetname = "!"
        t_RenderFields = "!"
        t_ZHLT = "!"
        style: =
        {
          txt = "&"
          hint = "Texlight style"
          typ = "C"
          items = "Normal"$0D"Grouped"$0D"Fluorescent flicker"$0D"Slow, strong p"
           "ulse"$0D"Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flic"
           "ker B"$0D"Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slo"
           "w strobe"$0D"Underwater"
          values = "0"$0D"-3"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
           "8"$0D"4"$0D"9"$0D"12"
        }
        skin: =
        {
          txt = "&"
          hint = "Contents"
          typ = "C"
          items = "Empty"$0D"Volumetric Light"
          values = "-1"$0D"-7"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Use Angles"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
      }
      func_illusionary:form =
      {
        t_func_illusionary = "!"
      }
      t_func_ladder:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start Off"
        }
      }
      func_ladder:form =
      {
        t_func_ladder = "!"
      }
      t_func_mirror:incl =
      {
        t_PortalBase = "!"
      }
      func_mirror:form =
      {
        t_func_mirror = "!"
      }
      t_func_monitor:incl =
      {
        t_PortalBase = "!"
        width: =
        {
          txt = "&"
          hint = "Width (Resolution)"
        }
        height: =
        {
          txt = "&"
          hint = "Height (Resolution)"
        }
      }
      func_monitor:form =
      {
        t_func_monitor = "!"
      }
      t_func_monsterclip:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
      }
      func_monsterclip:form =
      {
        t_func_monsterclip = "!"
      }
      t_func_mortar_field:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
        m_flSpread: =
        {
          txt = "&"
          hint = "Spread Radius"
        }
        m_iCount: =
        {
          txt = "&"
          hint = "Repeat Count"
        }
        m_fControl: =
        {
          txt = "&"
          hint = "Targeting"
          typ = "C"
          items = "Random"$0D"Activator"$0D"Table"
          values = "0"$0D"1"$0D"2"
        }
        m_iszXController: =
        {
          txt = "&"
          hint = "X Controller"
        }
        m_iszYController: =
        {
          txt = "&"
          hint = "Y Controller"
        }
      }
      func_mortar_field:form =
      {
        t_func_mortar_field = "!"
      }
      t_func_op4mortarcontroller:incl =
      {
        t_Target = "!"
        t_ZHLTbmodel = "!"
        mortar_axis: =
        {
          txt = "&"
          hint = "Axis"
          typ = "C"
          items = "Vertical"$0D"Horizontal"
          values = "0"$0D"1"
        }
      }
      func_op4mortarcontroller:form =
      {
        t_func_op4mortarcontroller = "!"
      }
      t_func_pendulum:incl =
      {
        t_Global = "!"
        t_Appearflags = "!"
        t_Targetname = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        t_ZHLT = "!"
        speed: =
        {
          txt = "&"
          hint = "Speed"
        }
        distance: =
        {
          txt = "&"
          hint = "Distance (deg)"
        }
        damp: =
        {
          txt = "&"
          hint = "Damping (0-1000)"
        }
        dmg: =
        {
          txt = "&"
          hint = "Damage inflicted when blocked"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start ON"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Passable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Auto-return"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "X Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Y Axis"
        }
        _minlight: =
        {
          txt = "&"
          hint = "_minlight"
        }
      }
      func_pendulum:form =
      {
        t_func_pendulum = "!"
      }
      t_func_plat:incl =
      {
        t_Targetname = "!"
        t_Global = "!"
        t_RenderFields = "!"
        t_PlatSounds = "!"
        t_BasePlat = "!"
        t_ZHLT = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Toggle"
        }
        height: =
        {
          txt = "&"
          hint = "Travel altitude (can be negative)"
        }
        speed: =
        {
          txt = "&"
          hint = "Speed"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
      }
      func_plat:form =
      {
        t_func_plat = "!"
      }
      t_func_platrot:incl =
      {
        t_Targetname = "!"
        t_Global = "!"
        t_RenderFields = "!"
        t_PlatSounds = "!"
        t_BasePlat = "!"
        t_Angles = "!"
        t_ZHLT = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Toggle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "X Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Y Axis"
        }
        speed: =
        {
          txt = "&"
          hint = "Speed of rotation"
        }
        height: =
        {
          txt = "&"
          hint = "Travel altitude (can be negative)"
        }
        rotation: =
        {
          txt = "&"
          hint = "Spin amount"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
      }
      func_platrot:form =
      {
        t_func_platrot = "!"
      }
      t_func_portal:incl =
      {
        t_PortalBase = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Teleport"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "No GL ClipPlanes"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Shoot through"
        }
      }
      func_portal:form =
      {
        t_func_portal = "!"
      }
      t_func_pushable:incl =
      {
        t_Breakable = "!"
        t_RenderFields = "!"
        t_ZHLT = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Repairable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Monsters Ignore?"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Show HUD Info"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Breakable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "1-Hit Break"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Explosives Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1024"
          cap = "Liftable"
        }
        minhullsize: =
        {
          txt = "&"
          hint = "Custom Min Hull Size (X Y Z)"
        }
        maxhullsize: =
        {
          txt = "&"
          hint = "Custom Max Hull Size (X Y Z)"
        }
        friction: =
        {
          txt = "&"
          hint = "Friction (0-400)"
        }
        buoyancy: =
        {
          txt = "&"
          hint = "Buoyancy"
        }
        displayname: =
        {
          txt = "&"
          hint = "HUD Info name"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
      }
      func_pushable:form =
      {
        t_func_pushable = "!"
      }
      t_func_recharge:incl =
      {
        t_BaseCharger = "!"
      }
      func_recharge:form =
      {
        t_func_recharge = "!"
      }
      t_func_rot_button:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        t_Global = "!"
        t_InventoryRules = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        t_ZHLT = "!"
        t_BaseLockable = "!"
        changetarget: =
        {
          txt = "&"
          hint = "ChangeTarget Name"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        speed: =
        {
          txt = "&"
          hint = "Speed"
        }
        health: =
        {
          txt = "&"
          hint = "Health (shootable if > 0)"
        }
        sounds: =
        {
          txt = "&"
          hint = "Sounds"
          typ = "C"
          items = "Squeaky"$0D"Squeaky Pneumatic"$0D"Ratchet Groan"$0D"Clean Rat"
           "chet"$0D"Gas Clunk"
          values = "21"$0D"22"$0D"23"$0D"24"$0D"25"
        }
        noise: =
        {
          txt = "&"
          hint = "Sound Override"
        }
        wait: =
        {
          txt = "&"
          hint = "Delay before reset"
          typ = "C"
          items = "Stays pressed"
          values = "-1"
        }
        delay: =
        {
          txt = "&"
          hint = "Delay before trigger"
        }
        distance: =
        {
          txt = "&"
          hint = "Distance (deg)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Not solid"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Reverse Dir"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Toggle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "X Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Y Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "Touch Activates"
        }
        _minlight: =
        {
          txt = "&"
          hint = "_minlight"
        }
        use_type: =
        {
          txt = "&"
          hint = "Use Type"
          typ = "C"
          items = "Off"$0D"On"$0D"Set"$0D"Toggle"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
      }
      func_rot_button:form =
      {
        t_func_rot_button = "!"
      }
      t_func_rotating:incl =
      {
        t_Targetname = "!"
        t_Global = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        t_ZHLT = "!"
        speed: =
        {
          txt = "&"
          hint = "Rotation Speed"
        }
        volume: =
        {
          txt = "&"
          hint = "Volume (10 = loudest)"
        }
        fanfriction: =
        {
          txt = "&"
          hint = "Friction (0 - 100%)"
        }
        sounds: =
        {
          txt = "&"
          hint = "Fan Sounds"
          typ = "C"
          items = "No Sound"$0D"Fast Whine"$0D"Slow Rush"$0D"Medium Rickety"$0D"F"
           "ast Beating"$0D"Slow Smooth"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
        message: =
        {
          txt = "&"
          hint = "WAV Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start ON"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Reverse Direction"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "X Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Y Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Acc/Dcc"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Fan Pain"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Not Solid"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Small Radius"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "Medium Radius"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Large Radius"
        }
        m_iObeyTriggerMode: =
        {
          txt = "&"
          hint = "Obey Trigger Mode"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        _minlight: =
        {
          txt = "&"
          hint = "_minlight"
        }
        spawnorigin: =
        {
          txt = "&"
          hint = "X Y Z - Move here after lighting"
        }
        dmg: =
        {
          txt = "&"
          hint = "Damage inflicted when blocked"
        }
      }
      func_rotating:form =
      {
        t_func_rotating = "!"
      }
      t_func_tank:incl =
      {
        t_BaseTank = "!"
        t_ZHLT = "!"
        bullet: =
        {
          txt = "&"
          hint = "Bullets"
          typ = "C"
          items = "None"$0D"9mm"$0D"MP5"$0D"12mm"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
      }
      func_tank:form =
      {
        t_func_tank = "!"
      }
      t_func_tankcontrols:incl =
      {
        t_ZHLTbmodel = "!"
        t_InventoryRules = "!"
        target: =
        {
          txt = "&"
          hint = "Tank entity name"
        }
      }
      func_tankcontrols:form =
      {
        t_func_tankcontrols = "!"
      }
      t_func_tanklaser:incl =
      {
        t_BaseTank = "!"
        t_ZHLT = "!"
        laserentity: =
        {
          txt = "&"
          hint = "env_laser Entity"
        }
      }
      func_tanklaser:form =
      {
        t_func_tanklaser = "!"
      }
      t_func_tankrocket:incl =
      {
        t_BaseTank = "!"
        t_ZHLT = "!"
      }
      func_tankrocket:form =
      {
        t_func_tankrocket = "!"
      }
      t_func_tankmortar:incl =
      {
        t_BaseTank = "!"
        t_ZHLT = "!"
        iMagnitude: =
        {
          txt = "&"
          hint = "Explosion Magnitude"
        }
      }
      func_tankmortar:form =
      {
        t_func_tankmortar = "!"
      }
      t_func_trackautochange:incl =
      {
        t_Trackchange = "!"
        t_ZHLT = "!"
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
      }
      func_trackautochange:form =
      {
        t_func_trackautochange = "!"
      }
      t_func_trackchange:incl =
      {
        t_Trackchange = "!"
        t_ZHLT = "!"
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
      }
      func_trackchange:form =
      {
        t_func_trackchange = "!"
      }
      t_func_tracktrain:incl =
      {
        t_Targetname = "!"
        t_Angles = "!"
        t_Global = "!"
        t_RenderFields = "!"
        t_AttackObject = "!"
        t_ZHLT = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "No Pitch (X-rot)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "No User Control"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Forward Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Passable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "No YAW (Y-rot)"
        }
        target: =
        {
          txt = "&"
          hint = "First stop target"
        }
        sounds: =
        {
          txt = "&"
          hint = "Sound"
          typ = "C"
          items = "None"$0D"Rail 1"$0D"Rail 2"$0D"Rail 3"$0D"Rail 4"$0D"Rail 6"$0D
           "Rail 7"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        noise: =
        {
          txt = "&"
          hint = "Move Sound Override"
        }
        noise1: =
        {
          txt = "&"
          hint = "Brake Sound Override"
        }
        noise2: =
        {
          txt = "&"
          hint = "Start Sound Override"
        }
        wheels: =
        {
          txt = "&"
          hint = "Distance between the wheels"
        }
        height: =
        {
          txt = "&"
          hint = "Height above track"
        }
        startspeed: =
        {
          txt = "&"
          hint = "Initial speed"
        }
        speed: =
        {
          txt = "&"
          hint = "Speed (units per second)"
        }
        dmg: =
        {
          txt = "&"
          hint = "Damage on crush"
        }
        volume: =
        {
          txt = "&"
          hint = "Volume (10 = loudest)"
        }
        bank: =
        {
          txt = "&"
          hint = "Bank angle on turns"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
        soundlist: =
        {
          txt = "&"
          hint = "Sound Replacement File"
        }
      }
      func_tracktrain:form =
      {
        t_func_tracktrain = "!"
      }
      t_func_traincontrols:incl =
      {
        t_ZHLTbmodel = "!"
        t_InventoryRules = "!"
        target: =
        {
          txt = "&"
          hint = "Train Name"
        }
      }
      func_traincontrols:form =
      {
        t_func_traincontrols = "!"
      }
      t_func_train:incl =
      {
        t_BaseTrain = "!"
        t_AttackObject = "!"
        t_ZHLT = "!"
        t_StartStopable = "!"
        avelocity: =
        {
          txt = "&"
          hint = "Angular Velocity (X Y Z)"
        }
        dmg: =
        {
          txt = "&"
          hint = "Damage on crush"
        }
        skin: =
        {
          txt = "&"
          hint = "Contents"
        }
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Not solid"
        }
      }
      func_train:form =
      {
        t_func_train = "!"
      }
      t_func_wall:incl =
      {
        t_Targetname = "!"
        t_Angles = "!"
        t_Appearflags = "!"
        t_RenderFields = "!"
        t_Global = "!"
        t_ZHLT = "!"
        _minlight: =
        {
          txt = "&"
          hint = "Minimum light level"
        }
        style: =
        {
          txt = "&"
          hint = "Texlight style"
          typ = "C"
          items = "Normal"$0D"Grouped"$0D"Fluorescent flicker"$0D"Slow, strong p"
           "ulse"$0D"Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flic"
           "ker B"$0D"Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slo"
           "w strobe"$0D"Underwater"
          values = "0"$0D"-3"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
           "8"$0D"4"$0D"9"$0D"12"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Use Angles"
        }
      }
      func_wall:form =
      {
        t_func_wall = "!"
      }
      t_func_wall_toggle:incl =
      {
        t_func_wall = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Starts Invisible"
        }
      }
      func_wall_toggle:form =
      {
        t_func_wall_toggle = "!"
      }
      t_func_water:incl =
      {
        t_Door = "!"
        t_ZHLT = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Starts Open"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "USE Only"
        }
        skin: =
        {
          txt = "&"
          hint = "Contents"
          typ = "C"
          items = "Water"$0D"Slime"$0D"Lava"$0D"CURRENT_0"$0D"CURRENT_90"$0D"CUR"
           "RENT_180"$0D"CURRENT_270"$0D"CURRENT_UP"$0D"CURRENT_DOWN"$0D"TRANSLU"
           "CENT"
          values = "-3"$0D"-4"$0D"-5"$0D"-9"$0D"-10"$0D"-11"$0D"-12"$0D"-13"$0D"-"
           "14"$0D"-15"
        }
        WaveHeight: =
        {
          txt = "&"
          hint = "Wave Height"
        }
      }
      func_water:form =
      {
        t_func_water = "!"
      }
      t_game_counter:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Remove On fire"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Reset On fire"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Fire if over limit"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        frags: =
        {
          txt = "&"
          hint = "Initial Value"
        }
        health: =
        {
          txt = "&"
          hint = "Limit Value"
        }
      }
      game_counter:form =
      {
        t_game_counter = "!"
      }
      t_game_counter_set:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Remove On fire"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        frags: =
        {
          txt = "&"
          hint = "New Value"
        }
      }
      game_counter_set:form =
      {
        t_game_counter_set = "!"
      }
      t_game_end:incl =
      {
        t_Targetname = "!"
        master: =
        {
          txt = "&"
          hint = "Master"
        }
      }
      game_end:form =
      {
        t_game_end = "!"
      }
      t_game_player_counter:incl =
      {
        frags: =
        {
          txt = "&"
          hint = "Min Value"
        }
        health: =
        {
          txt = "&"
          hint = "Max Value"
        }
        target: =
        {
          txt = "&"
          hint = "Min Target"
        }
        netname: =
        {
          txt = "&"
          hint = "Max Target"
        }
        message: =
        {
          txt = "&"
          hint = "Filter Player Targetname"
        }
      }
      game_player_counter:form =
      {
        t_game_player_counter = "!"
      }
      t_game_player_equip:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "USE Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Filter Playername"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Re-Equip on Use"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Append Map CFG"
        }
        master: =
        {
          txt = "&"
          hint = "Team Master"
        }
        equipmode: =
        {
          txt = "&"
          hint = "Equip mode"
          typ = "C"
          items = "Give items"$0D"Modify inventory"
          values = "0"$0D"1"
        }
        inventorymode: =
        {
          txt = "&"
          hint = "Inventory mode"
          typ = "C"
          items = "Set items"$0D"Add items"$0D"Subtract items"$0D"Remove items"$0D
           "Restock items"$0D"Limit items"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
      }
      game_player_equip:form =
      {
        t_game_player_equip = "!"
      }
      t_game_player_hurt:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        dmg: =
        {
          txt = "&"
          hint = "Damage To Apply"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Remove On fire"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
      }
      game_player_hurt:form =
      {
        t_game_player_hurt = "!"
      }
      t_game_player_team:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Remove On fire"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Kill Player"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Gib Player"
        }
        target: =
        {
          txt = "&"
          hint = "game_team_master to use"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
      }
      game_player_team:form =
      {
        t_game_player_team = "!"
      }
      t_game_score:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Allow Negative"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Team Points"
        }
        points: =
        {
          txt = "&"
          hint = "Points to add (+/-)"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
      }
      game_score:form =
      {
        t_game_score = "!"
      }
      t_game_slot_counter:incl =
      {
        t_Targetx = "!"
        frags: =
        {
          txt = "&"
          hint = "Value"
        }
      }
      game_slot_counter:form =
      {
        t_game_slot_counter = "!"
      }
      t_game_team_master:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Remove On fire"
        }
        triggerstate: =
        {
          txt = "&"
          hint = "Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
        teamindex: =
        {
          txt = "&"
          hint = "Team Index (-1 = no team)"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
      }
      game_team_master:form =
      {
        t_game_team_master = "!"
      }
      t_game_team_set:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Remove On fire"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
      }
      game_team_set:form =
      {
        t_game_team_set = "!"
      }
      t_game_text:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "All Players"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "No console echo"
        }
        message: =
        {
          txt = "&"
          hint = "Message Text"
        }
        x: =
        {
          txt = "&"
          hint = "X (0 - 1.0 = left to right) (-1 centers)"
        }
        y: =
        {
          txt = "&"
          hint = "Y (0 - 1.0 = top to bottom) (-1 centers)"
        }
        effect: =
        {
          txt = "&"
          hint = "Text Effect"
          typ = "C"
          items = "Fade In/Out"$0D"Credits"$0D"Scan Out"
          values = "0"$0D"1"$0D"2"
        }
        color: =
        {
          txt = "&"
          hint = "Color 1 (Add 4th number >0 for opaque)"
        }
        color2: =
        {
          txt = "&"
          hint = "Color 2 (Add 4th number >0 for opaque)"
        }
        fadein: =
        {
          txt = "&"
          hint = "Fade in Time (or character scan time)"
        }
        fadeout: =
        {
          txt = "&"
          hint = "Fade Out Time"
        }
        holdtime: =
        {
          txt = "&"
          hint = "Hold Time"
        }
        fxtime: =
        {
          txt = "&"
          hint = "Scan time (scan effect only)"
        }
        channel: =
        {
          txt = "&"
          hint = "Text Channel"
          typ = "C"
          items = "Channel 1"$0D"Channel 2"$0D"Channel 3"$0D"Channel 4"
          values = "1"$0D"2"$0D"3"$0D"4"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
      }
      game_text:form =
      {
        t_game_text = "!"
      }
      t_game_zone_player:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Ignore Dead Players"
        }
        intarget: =
        {
          txt = "&"
          hint = "Target for IN players"
        }
        outtarget: =
        {
          txt = "&"
          hint = "Target for OUT players"
        }
        incount: =
        {
          txt = "&"
          hint = "Counter for IN players"
        }
        outcount: =
        {
          txt = "&"
          hint = "Counter for OUT players"
        }
      }
      game_zone_player:form =
      {
        t_game_zone_player = "!"
      }
      t_gibshooter:incl =
      {
        t_GibShooterBase = "!"
      }
      gibshooter:form =
      {
        t_gibshooter = "!"
      }
      t_global_light_control:incl =
      {
        bbox = '-24 -24 -24 24 24 24'
        t_Target = "!"
        t_Targetname = "!"
        pattern: =
        {
          txt = "&"
          hint = "Custom Appearance"
        }
      }
      global_light_control:form =
      {
        t_global_light_control = "!"
      }
      t_infodecal:incl =
      {
        t_Targetname = "!"
        t_Appearflags = "!"
        texture: =
        {
          txt = "&"
          typ = "ET"
          Cap = "texture..."
        }
      }
      infodecal:form =
      {
        t_infodecal = "!"
      }
      t_info_angularfade:incl =
      {
      }
      info_angularfade:form =
      {
        t_info_angularfade = "!"
      }
      t_info_bigmomma:incl =
      {
        bbox = '-24 -24 0 24 24 16'
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Run To Node"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Wait Indefinitely"
        }
        target: =
        {
          txt = "&"
          hint = "Next node"
        }
        radius: =
        {
          txt = "&"
          hint = "Radius"
        }
        reachdelay: =
        {
          txt = "&"
          hint = "Wait after approach"
        }
        killtarget: =
        {
          txt = "&"
          hint = "KillTarget"
        }
        reachtarget: =
        {
          txt = "&"
          hint = "Fire on approach"
        }
        reachsequence: =
        {
          txt = "&"
          hint = "Sequence on approach"
        }
        health: =
        {
          txt = "&"
          hint = "Health on approach"
        }
        presequence: =
        {
          txt = "&"
          hint = "Sequence before approach"
        }
      }
      info_bigmomma:form =
      {
        t_info_bigmomma = "!"
      }
      t_info_compile_parameters:incl =
      {
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Ignore shared settings"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Ignore CSG settings"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Ignore BSP settings"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Ignore VIS settings"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Ignore RAD settings"
        }
        verbose: =
        {
          txt = "&"
          hint = "Verbose messages?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        noinfo: =
        {
          txt = "&"
          hint = "Don't show tool configuration information?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        nolog: =
        {
          txt = "&"
          hint = "Don't generate compile log file?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        dev: =
        {
          txt = "&"
          hint = "Developer message level"
          typ = "C"
          items = "[ Unset ]"$0D"None"$0D"Error"$0D"Warning"$0D"Info"$0D"Fluff"$0D
           "Spam"$0D"Mega spam"
          values = "0"$0D"-1"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        estimate: =
        {
          txt = "&"
          hint = "Estimate compile times?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"0"
        }
        chart: =
        {
          txt = "&"
          hint = "Display statistics charts?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        threads: =
        {
          txt = "&"
          hint = "CPU thread count (0 for auto/max)"
        }
        priority: =
        {
          txt = "&"
          hint = "CPU process priority"
          typ = "C"
          items = "[ Unset ]"$0D"Low"$0D"Normal"$0D"High"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
        texdata: =
        {
          txt = "&"
          hint = "Texture data memory (KiB)"
        }
        lightdata: =
        {
          txt = "&"
          hint = "Lighting data memory (KiB)"
        }
        csg: =
        {
          txt = "&"
          hint = "--- Perform CSG stage? ---"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"$0D"Yes, entity updates only mode"
          values = "0"$0D"-1"$0D"1"$0D"2"
        }
        csg_nowadtextures: =
        {
          txt = "&"
          hint = "No WAD textures? (Embed textures into BSP.)"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        csg_noclip: =
        {
          txt = "&"
          hint = "Disable clipping hull generation?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        csg_clipeconomy: =
        {
          txt = "&"
          hint = "Strip redundant clip nodes? (Economy mode.)"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        csg_cliptype: =
        {
          txt = "&"
          hint = "Clipping hull type"
          typ = "C"
          items = "[ Unset ]"$0D"Smallest"$0D"Normalized"$0D"Simple (most compac"
           "t)"$0D"Precise (recommended)"$0D"Legacy"
          values = "0"$0D"-1"$0D"1"$0D"2"$0D"3"$0D"4"
        }
        csg_hullfile: =
        {
          txt = "&"
          hint = "Custom hull file"
        }
        csg_noskyclip: =
        {
          txt = "&"
          hint = "Disable sky clipping?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        csg_tiny: =
        {
          txt = "&"
          hint = "Minimum brush face surface area before it is discarded"
        }
        csg_brushunion: =
        {
          txt = "&"
          hint = "Threshold to warn about overlapping brushes"
        }
        csg_nullfile: =
        {
          txt = "&"
          hint = "NULL texture substitutions file"
        }
        csg_wadcfgfile: =
        {
          txt = "&"
          hint = "WAD configuration file"
        }
        csg_wadcfgname: =
        {
          txt = "&"
          hint = "WAD configuration name"
        }
        csg_wadautodetect: =
        {
          txt = "&"
          hint = "WAD auto detect?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        csg_nonulltex: =
        {
          txt = "&"
          hint = "Don't strip null texture faces?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        csg_nullifytrigger: =
        {
          txt = "&"
          hint = "Strip trigger texture faces?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        csg_nolightopt: =
        {
          txt = "&"
          hint = "Don't optimize engine light entities?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        csg_notextconvert: =
        {
          txt = "&"
          hint = "Don't convert game_text from ANSI to UTF-8 format?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        csg_scale: =
        {
          txt = "&"
          hint = "Scale the world (USE AT OWN RISK!)"
        }
        bsp: =
        {
          txt = "&"
          hint = "--- Perform BSP stage? ---"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"$0D"Yes, leak only mode"
          values = "0"$0D"-1"$0D"1"$0D"2"
        }
        bsp_subdivide: =
        {
          txt = "&"
          hint = "Face subdivide size (64-528)"
        }
        bsp_maxnodesize: =
        {
          txt = "&"
          hint = "Maximum portal node size (64-1024)"
        }
        bsp_notjunc: =
        {
          txt = "&"
          hint = "Don't break edges on t-junctions?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes (not recommended)"
          values = "0"$0D"-1"$0D"1"
        }
        bsp_nobrink: =
        {
          txt = "&"
          hint = "Don't smooth brinks?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes (not recommended)"
          values = "0"$0D"-1"$0D"1"
        }
        bsp_noclip: =
        {
          txt = "&"
          hint = "Don't process the clipping hull?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes (not recommended)"
          values = "0"$0D"-1"$0D"1"
        }
        bsp_nofill: =
        {
          txt = "&"
          hint = "Don't fill outside? (Leaks will be masked.)"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes (not recommended)"
          values = "0"$0D"-1"$0D"1"
        }
        bsp_noinsidefill: =
        {
          txt = "&"
          hint = "Don't fill empty spaces?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        bsp_noopt: =
        {
          txt = "&"
          hint = "Don't optimize planes?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes (not recommended)"
          values = "0"$0D"-1"$0D"1"
        }
        bsp_noclipnodemerge: =
        {
          txt = "&"
          hint = "Don't optimize clip nodes?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes (not recommended)"
          values = "0"$0D"-1"$0D"1"
        }
        bsp_nonulltex: =
        {
          txt = "&"
          hint = "Don't strip NULL textures?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes (not recommended)"
          values = "0"$0D"-1"$0D"1"
        }
        bsp_nohull2: =
        {
          txt = "&"
          hint = "Don't generate hull 2? (Big monsters & pushable fall out map!)"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        bsp_viewportal: =
        {
          txt = "&"
          hint = "Show portal boundaries in PTS file?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        vis: =
        {
          txt = "&"
          hint = "--- Perform VIS stage? ---"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"$0D"Yes, fast mode"$0D"Yes, full mod"
           "e"
          values = "0"$0D"-1"$0D"1"$0D"2"$0D"3"
        }
        rad: =
        {
          txt = "&"
          hint = "--- Perform RAD stage? ---"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"$0D"Yes, fast mode"$0D"Yes, extra mo"
           "de"
          values = "0"$0D"-1"$0D"1"$0D"2"$0D"3"
        }
        rad_waddir: =
        {
          txt = "&"
          hint = "WAD search directory"
        }
        rad_vismatrix: =
        {
          txt = "&"
          hint = "Use visibility matrix?"
          typ = "C"
          items = "[ Unset ]"$0D"Normal (65,536 patch limit)"$0D"Sparse"$0D"None"
           " (slowest but most accurate lighting)"
          values = "0"$0D"-1"$0D"1"$0D"2"
        }
        rad_bounce: =
        {
          txt = "&"
          hint = "Bounces"
        }
        rad_ambient: =
        {
          txt = "&"
          hint = "Ambient world light (R G B)"
        }
        rad_limiter: =
        {
          txt = "&"
          hint = "Light clipping threshold (-1 for none)"
        }
        rad_circus: =
        {
          txt = "&"
          hint = "Circus mode?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_nospread: =
        {
          txt = "&"
          hint = "Disable sunlight spread angles?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_nopaque: =
        {
          txt = "&"
          hint = "Disable opaque light flags?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_smooth: =
        {
          txt = "&"
          hint = "Smoothing threshold for blending (In degrees)"
        }
        rad_smooth2: =
        {
          txt = "&"
          hint = "Smoothing threshold between different textures"
        }
        rad_chop: =
        {
          txt = "&"
          hint = "Patch size for normal textures"
        }
        rad_texchop: =
        {
          txt = "&"
          hint = "Patch size for texture light faces"
        }
        rad_notexscale: =
        {
          txt = "&"
          hint = "Scale patches with texture scale?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"1"$0D"-1"
        }
        rad_subdivide: =
        {
          txt = "&"
          hint = "Patch subdivide?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_coring: =
        {
          txt = "&"
          hint = "Lighting threshold before blackness"
        }
        rad_dlight: =
        {
          txt = "&"
          hint = "Direct lighting threshold"
        }
        rad_dscale: =
        {
          txt = "&"
          hint = "Direct lighting scale"
        }
        rad_nolerp: =
        {
          txt = "&"
          hint = "Disable interpolation? (Nearest point instead.)"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_fade: =
        {
          txt = "&"
          hint = "Global fade (Larger values = shorter lights)"
        }
        rad_texlightgap: =
        {
          txt = "&"
          hint = "Global gap distance for texture lights"
        }
        rad_scale: =
        {
          txt = "&"
          hint = "Global light scaling"
        }
        rad_colourscale: =
        {
          txt = "&"
          hint = "Per-colour light scaling (R G B)"
        }
        rad_gamma: =
        {
          txt = "&"
          hint = "Global gamma"
        }
        rad_colourgamma: =
        {
          txt = "&"
          hint = "Per-colour gamma (R G B)"
        }
        rad_sky: =
        {
          txt = "&"
          hint = "Ambient sunlight shade contribution"
        }
        rad_lights: =
        {
          txt = "&"
          hint = "Light textures file"
        }
        rad_noskyfix: =
        {
          txt = "&"
          hint = "Disable sky light being global?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_incremental: =
        {
          txt = "&"
          hint = "Use/create an incremental transfer list file?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_dump: =
        {
          txt = "&"
          hint = "Dump light patches to a file for debugging?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_colourjitter: =
        {
          txt = "&"
          hint = "Adds noise, independent colours, for dithering (R G B)"
        }
        rad_jitter: =
        {
          txt = "&"
          hint = "Adds noise, monochromatic, for dithering (R G B)"
        }
        rad_customshadowwithbounce: =
        {
          txt = "&"
          hint = "Enables custom shadows with bounce light?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_rgbtransfers: =
        {
          txt = "&"
          hint = "Enable RGB transfers? (For custom shadows.)"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_minlight: =
        {
          txt = "&"
          hint = "Minimum final light (0-255)"
        }
        rad_compresstransfers: =
        {
          txt = "&"
          hint = "Compress transfers?"
          typ = "C"
          items = "[ Unset ]"$0D"32-bit"$0D"16-bit"$0D"8-bit"
          values = "0"$0D"-1"$0D"1"$0D"2"
        }
        rad_compressrgbtransfers: =
        {
          txt = "&"
          hint = "Compress RGB transfers?"
          typ = "C"
          items = "[ Unset ]"$0D"96-bit"$0D"48-bit"$0D"32-bit"$0D"24-bit"
          values = "0"$0D"-1"$0D"1"$0D"2"$0D"3"
        }
        rad_softsky: =
        {
          txt = "&"
          hint = "Smooth skylight?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_depth: =
        {
          txt = "&"
          hint = "Thickness of translucent faces"
        }
        rad_blockopaque: =
        {
          txt = "&"
          hint = "Remove the black areas around opaque entities?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_notextures: =
        {
          txt = "&"
          hint = "Don't load textures?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_texreflectgamma: =
        {
          txt = "&"
          hint = "Reflection gamma"
        }
        rad_texreflectscale: =
        {
          txt = "&"
          hint = "Reflection scale"
        }
        rad_blur: =
        {
          txt = "&"
          hint = "Enlarge light map sample to blur the light map"
        }
        rad_noemitterrange: =
        {
          txt = "&"
          hint = "Don't fix pointy texture lights?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
        rad_nobleedfix: =
        {
          txt = "&"
          hint = "Don't fix wall bleeding problem for large blur value?"
          typ = "C"
          items = "[ Unset ]"$0D"No"$0D"Yes"
          values = "0"$0D"-1"$0D"1"
        }
      }
      info_compile_parameters:form =
      {
        t_info_compile_parameters = "!"
      }
      t_info_intermission:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        t_Target = "!"
        t_Angles = "!"
      }
      info_intermission:form =
      {
        t_info_intermission = "!"
      }
      t_info_hullshape:incl =
      {
        targetname: =
        {
          txt = "&"
          hint = "Name"
        }
        defaulthulls: =
        {
          txt = "&"
          hint = "Set as default shape"
          typ = "C"
          items = "No"$0D"Hull 1"$0D"Hull 2"$0D"Hull 3"
          values = "0"$0D"2"$0D"4"$0D"8"
        }
        disabled: =
        {
          txt = "&"
          hint = "Disable"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      info_hullshape:form =
      {
        t_info_hullshape = "!"
      }
      t_info_monster_goal:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Start Off"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Multithreaded"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Toggle On Reach"
        }
        priority: =
        {
          txt = "&"
          hint = "Priority"
          typ = "C"
          items = "No enemy"$0D"No enemy/Enemy occluded"$0D"Ignore enemy"$0D"Goa"
           "l closer than enemy"$0D"G.C.T.E./Enemy occluded"$0D"Stop only if can"
           " attack"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
        movementtype: =
        {
          txt = "&"
          hint = "Movement Type"
          typ = "C"
          items = "Walk"$0D"Run"
          values = "0"$0D"1"
        }
        delay: =
        {
          txt = "&"
          hint = "Wait before trigger"
        }
        radius: =
        {
          txt = "&"
          hint = "Move-Complete Radius"
        }
        triggerradius: =
        {
          txt = "&"
          hint = "Distance For Inactivity"
        }
        requiredradius: =
        {
          txt = "&"
          hint = "Maximum Required Distance"
        }
        healthbonus: =
        {
          txt = "&"
          hint = "Health Bonus"
        }
        sequence: =
        {
          txt = "&"
          hint = "Action Animation"
        }
        enemy: =
        {
          txt = "&"
          hint = "Target Enemy"
        }
      }
      info_monster_goal:form =
      {
        t_info_monster_goal = "!"
      }
      t_NodeBase:incl =
      {
        hinttype: =
        {
          txt = "&"
          hint = "Hint type"
          typ = "C"
          items = "None"$0D"World machinery"$0D"World blinking light"$0D"World h"
           "uman blood"$0D"World alien blood"
          values = "0"$0D"4"$0D"8"$0D"10"$0D"11"
        }
        activity: =
        {
          txt = "&"
          hint = "Hint activity"
          typ = "C"
          items = "None"$0D"Reset"$0D"Idle"$0D"Guard"$0D"Walk"$0D"Run"$0D"Fly"$0D
           "Swim"$0D"Hop"$0D"Leap"$0D"Fall"$0D"Land"$0D"Strafe left"$0D"Strafe r"
           "ight"$0D"Roll left"$0D"Roll right"$0D"Turn left"$0D"Turn Right"$0D"C"
           "rouch"$0D"Crouch idle"$0D"Stand up from crouch"$0D"Use"$0D"Signal 1"$0D
           "Signal 2"$0D"Signal 3"$0D"Twitch"$0D"Cower"$0D"Small flinch"$0D"Big "
           "flinch"$0D"Range attack 1"$0D"Range attack 2"$0D"Melee attack 1"$0D"M"
           "elee attack 2"$0D"Reload"$0D"Arm"$0D"Disarm"$0D"Eat"$0D"Die simple"$0D
           "Die backward"$0D"Die forward"$0D"Die violent"$0D"Barnacle hit"$0D"Ba"
           "rnacle pull"$0D"Barnacle chomp"$0D"Barnacle chew"$0D"Sleep"$0D"Inspe"
           "ct floor"$0D"Inspect wall"$0D"Idle angry"$0D"Walk hurt"$0D"Run hurt"$0D
           "Hover"$0D"Glide"$0D"Fly left"$0D"Fly right"$0D"Detect scent"$0D"Snif"
           "f"$0D"Bite"$0D"Threat display"$0D"Fear display"$0D"Excited"$0D"Speci"
           "al attack 1"$0D"Special attack 2"$0D"Combat idle"$0D"Walk scared"$0D
           "Run scared"$0D"Victory dance"$0D"Die head shot"$0D"Die chest shot"$0D
           "Die gut shot"$0D"Die back shot"$0D"Flinch head"$0D"Flinch chest"$0D"F"
           "linch stomach"$0D"Flinch left arm"$0D"Flinch right arm"$0D"Flinch le"
           "ft leg"$0D"Flinch right leg"
          values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D
           "9"$0D"10"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D
           "19"$0D"20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"$0D
           "29"$0D"30"$0D"31"$0D"32"$0D"33"$0D"34"$0D"35"$0D"36"$0D"37"$0D"38"$0D
           "39"$0D"40"$0D"41"$0D"42"$0D"43"$0D"44"$0D"45"$0D"46"$0D"47"$0D"48"$0D
           "49"$0D"50"$0D"51"$0D"52"$0D"53"$0D"54"$0D"55"$0D"56"$0D"57"$0D"58"$0D
           "59"$0D"60"$0D"61"$0D"62"$0D"63"$0D"64"$0D"65"$0D"66"$0D"67"$0D"68"$0D
           "69"$0D"70"$0D"71"$0D"72"$0D"73"$0D"74"$0D"75"$0D"76"
        }
      }
      t_info_node:incl =
      {
        bbox = '-24 -24 -4 24 24 4'
        t_NodeBase = "!"
      }
      info_node:form =
      {
        t_info_node = "!"
      }
      t_info_node_air:incl =
      {
        bbox = '-32 -32 0 32 32 64'
        t_NodeBase = "!"
      }
      info_node_air:form =
      {
        t_info_node_air = "!"
      }
      t_info_null:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        t_Targetname = "!"
      }
      info_null:form =
      {
        t_info_null = "!"
      }
      t_info_overview_point:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        reverse: =
        {
          txt = "&"
          hint = "Reversed"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      info_overview_point:form =
      {
        t_info_overview_point = "!"
      }
      t_info_player_coop:incl =
      {
        t_PlayerClass = "!"
      }
      info_player_coop:form =
      {
        t_info_player_coop = "!"
      }
      t_info_player_deathmatch:incl =
      {
        t_PlayerDmClass = "!"
      }
      info_player_deathmatch:form =
      {
        t_info_player_deathmatch = "!"
      }
      t_info_player_dm2:incl =
      {
        t_PlayerDmClass = "!"
      }
      info_player_dm2:form =
      {
        t_info_player_dm2 = "!"
      }
      t_info_player_start:incl =
      {
        t_PlayerClass = "!"
      }
      info_player_start:form =
      {
        t_info_player_start = "!"
      }
      t_info_smoothvalue:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
      }
      info_smoothvalue:form =
      {
        t_info_smoothvalue = "!"
      }
      t_info_sunlight:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        target: =
        {
          txt = "&"
          hint = "Target"
        }
        angles: =
        {
          txt = "&"
          hint = "Pitch Yaw Roll (Y Z X)"
        }
        pitch: =
        {
          txt = "&"
          hint = "Pitch"
        }
        _light: =
        {
          txt = "&"
          hint = "Brightness"
        }
      }
      info_sunlight:form =
      {
        t_info_sunlight = "!"
      }
      t_info_target:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        t_Targetname = "!"
      }
      info_target:form =
      {
        t_info_target = "!"
      }
      t_info_teleport_destination:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_PlayerClass = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Trigger on arrival"
        }
        teleport_cooldown: =
        {
          txt = "&"
          hint = "Teleport Cooldown Delay"
        }
      }
      info_teleport_destination:form =
      {
        t_info_teleport_destination = "!"
      }
      t_info_texlights:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
      }
      info_texlights:form =
      {
        t_info_texlights = "!"
      }
      t_info_translucent:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
      }
      info_translucent:form =
      {
        t_info_translucent = "!"
      }
      t_item_airtank:incl =
      {
        bbox = '-16 -16 0 16 16 24'
        t_Targetx = "!"
        t_Item = "!"
      }
      item_airtank:form =
      {
        t_item_airtank = "!"
      }
      t_item_antidote:incl =
      {
        bbox = '-4 -4 0 4 4 16'
        t_Targetx = "!"
        t_Item = "!"
      }
      item_antidote:form =
      {
        t_item_antidote = "!"
      }
      t_item_armorvest:incl =
      {
        bbox = '-11 -11 0 11 11 36'
        t_Targetx = "!"
        t_Item = "!"
      }
      item_armorvest:form =
      {
        t_item_armorvest = "!"
      }
      t_item_battery:incl =
      {
        bbox = '-4 -4 0 4 4 16'
        t_Targetx = "!"
        t_Item = "!"
        health: =
        {
          txt = "&"
          hint = "Charge Supplied"
        }
        healthcap: =
        {
          txt = "&"
          hint = "Charge Cap"
        }
      }
      item_battery:form =
      {
        t_item_battery = "!"
      }
      t_item_generic:incl =
      {
        t_ItemWithDefaultModel = "!"
        t_Targetx = "!"
      }
      item_generic:form =
      {
        t_item_generic = "!"
      }
      t_item_healthcharger:incl =
      {
        bbox = '-8 -8 0 8 8 48'
        t_Item = "!"
        capacity: =
        {
          txt = "&"
          hint = "Charger Capacity"
        }
        model_juice: =
        {
          txt = "&"
          hint = "Model for Capacity Indicator"
        }
      }
      item_healthcharger:form =
      {
        t_item_healthcharger = "!"
      }
      t_item_healthkit:incl =
      {
        bbox = '-12 -12 0 12 12 8'
        t_Targetx = "!"
        t_Item = "!"
        health: =
        {
          txt = "&"
          hint = "Health Supplied"
        }
        healthcap: =
        {
          txt = "&"
          hint = "Health Cap"
        }
      }
      item_healthkit:form =
      {
        t_item_healthkit = "!"
      }
      t_item_helmet:incl =
      {
        bbox = '-8 -8 0 8 8 20'
        t_Targetx = "!"
        t_Item = "!"
      }
      item_helmet:form =
      {
        t_item_helmet = "!"
      }
      t_item_inventory:incl =
      {
        t_ItemWithDefaultModel = "!"
        t_Targetx = "!"
        item_name: =
        {
          txt = "&"
          hint = "Item name"
        }
        item_group: =
        {
          txt = "&"
          hint = "Item group name"
        }
        display_name: =
        {
          txt = "&"
          hint = "Display name (HUD)"
        }
        description: =
        {
          txt = "&"
          hint = "Description (HUD)"
        }
        item_icon: =
        {
          txt = "&"
          hint = "Item icon (HUD)"
        }
        activate_limit: =
        {
          txt = "&"
          hint = "Self-activation limit (0 = infinite)"
        }
        collect_limit: =
        {
          txt = "&"
          hint = "Collection limit (0 = infinite)"
        }
        weight: =
        {
          txt = "&"
          hint = "Item weight (0-100)"
        }
        filter_targetnames: =
        {
          txt = "&"
          hint = "Collect: Entity target names"
        }
        filter_classnames: =
        {
          txt = "&"
          hint = "Collect: Entity class names"
        }
        filter_teams: =
        {
          txt = "&"
          hint = "Collect: Teams"
        }
        filter_npc_classifications: =
        {
          txt = "&"
          hint = "Collect: NPC classifications"
          typ = "C"
          items = "No filter"$0D"None"$0D"Machine"$0D"Player"$0D"Human Passive"$0D
           "Human Military"$0D"Alien Military"$0D"Alien Passive"$0D"Alien Monste"
           "r"$0D"Alien Prey"$0D"Alien Predator"$0D"Insect"$0D"Player Ally"$0D"P"
           "layer Hornet/Snark"$0D"Alien Hornet/Snark"$0D"X-Race"$0D"X-Race: Sho"
           "cktrooper/Voltigore"$0D"Team 1"$0D"Team 2"$0D"Team 3"$0D"Team 4"
          values = "0"$0D"-1"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D
           "9"$0D"10"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D
           "19"
        }
        item_name_required: =
        {
          txt = "&"
          hint = "Collect: Need item(s)"
        }
        item_group_required: =
        {
          txt = "&"
          hint = "Collect: Need item(s) from group(s)"
        }
        item_group_required_num: =
        {
          txt = "&"
          hint = "Collect: Item count in group need have (0 = all)"
        }
        item_name_moved: =
        {
          txt = "&"
          hint = "Collect: Item(s) moved"
        }
        item_name_canthave: =
        {
          txt = "&"
          hint = "Collect: CAN'T have item"
        }
        item_group_canthave: =
        {
          txt = "&"
          hint = "Collect: CAN'T have item from group"
        }
        item_group_canthave_num: =
        {
          txt = "&"
          hint = "Collect: Item count in group CAN'T have (0 = all)"
        }
        item_name_not_moved: =
        {
          txt = "&"
          hint = "Collect: Item(s) NOT moved"
        }
        carried_hidden: =
        {
          txt = "&"
          hint = "Carried: Hide item (3rd person)"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        carried_skin: =
        {
          txt = "&"
          hint = "Carried: Skin"
        }
        carried_body: =
        {
          txt = "&"
          hint = "Carried: Body"
        }
        carried_sequencename: =
        {
          txt = "&"
          hint = "Carried: Sequence Name"
        }
        carried_sequence: =
        {
          txt = "&"
          hint = "Carried: Sequence Number (overrides name)"
        }
        return_timelimit: =
        {
          txt = "&"
          hint = "Return: Wait (-1 = never)"
        }
        return_delay_respawn: =
        {
          txt = "&"
          hint = "Return: Delay respawn (materialisation)"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        holder_timelimit: =
        {
          txt = "&"
          hint = "Holder: Hold time limit (0 = never)"
        }
        holder_time_activate_wait: =
        {
          txt = "&"
          hint = "Holder: Delay between self-activations (0 = none)"
        }
        holder_time_wearout: =
        {
          txt = "&"
          hint = "Holder: Wearing out trigger time (0 = none)"
        }
        holder_can_activate: =
        {
          txt = "&"
          hint = "Holder: Allowed to self-activate"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        holder_timelimit_wait_until_activated: =
        {
          txt = "&"
          hint = "Holder: Hold time limit doesn't start until item activated"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        holder_can_drop: =
        {
          txt = "&"
          hint = "Holder: Allowed to drop"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        holder_keep_on_death: =
        {
          txt = "&"
          hint = "Holder: Keep item on death"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        holder_keep_on_respawn: =
        {
          txt = "&"
          hint = "Holder: Keep item on respawn"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        target_on_collect: =
        {
          txt = "&"
          hint = "Target: On collect (self)"
        }
        target_on_collect_team: =
        {
          txt = "&"
          hint = "Target: On collect (team)"
        }
        target_on_collect_other: =
        {
          txt = "&"
          hint = "Target: On collect (others)"
        }
        target_cant_collect: =
        {
          txt = "&"
          hint = "Target: On can't collect (self)"
        }
        target_cant_collect_team: =
        {
          txt = "&"
          hint = "Target: On can't collect (team)"
        }
        target_cant_collect_other: =
        {
          txt = "&"
          hint = "Target: On can't collect (others)"
        }
        target_on_drop: =
        {
          txt = "&"
          hint = "Target: On drop (self)"
        }
        target_on_drop_team: =
        {
          txt = "&"
          hint = "Target: On drop (team)"
        }
        target_on_drop_other: =
        {
          txt = "&"
          hint = "Target: On drop (others)"
        }
        target_cant_drop: =
        {
          txt = "&"
          hint = "Target: On can't drop (self)"
        }
        target_cant_drop_team: =
        {
          txt = "&"
          hint = "Target: On can't drop (team)"
        }
        target_cant_drop_other: =
        {
          txt = "&"
          hint = "Target: On can't drop (others)"
        }
        target_on_activate: =
        {
          txt = "&"
          hint = "Target: On self-activate (self)"
        }
        target_on_activate_team: =
        {
          txt = "&"
          hint = "Target: On self-activate (team)"
        }
        target_on_activate_other: =
        {
          txt = "&"
          hint = "Target: On self-activate (others)"
        }
        target_cant_activate: =
        {
          txt = "&"
          hint = "Target: On can't self-activate (self)"
        }
        target_cant_activate_team: =
        {
          txt = "&"
          hint = "Target: On can't self-activate (team)"
        }
        target_cant_activate_other: =
        {
          txt = "&"
          hint = "Target: On can't self-activate (others)"
        }
        target_on_use: =
        {
          txt = "&"
          hint = "Target: On use by trigger (self)"
        }
        target_on_use_team: =
        {
          txt = "&"
          hint = "Target: On use by trigger (team)"
        }
        target_on_use_other: =
        {
          txt = "&"
          hint = "Target: On use by trigger (others)"
        }
        target_on_wearing_out: =
        {
          txt = "&"
          hint = "Target: On wearing out (self)"
        }
        target_on_wearing_out_team: =
        {
          txt = "&"
          hint = "Target: On wearing out (team)"
        }
        target_on_wearing_out_other: =
        {
          txt = "&"
          hint = "Target: On wearing out (others)"
        }
        target_on_return: =
        {
          txt = "&"
          hint = "Target: On return (self)"
        }
        target_on_return_team: =
        {
          txt = "&"
          hint = "Target: On return (team)"
        }
        target_on_return_other: =
        {
          txt = "&"
          hint = "Target: On return (other)"
        }
        target_on_materialise: =
        {
          txt = "&"
          hint = "Target: On materialise after return"
        }
        target_on_destroy: =
        {
          txt = "&"
          hint = "Target: On destroy"
        }
        effects_wait_until_activated: =
        {
          txt = "&"
          hint = "Effects: Wait until item is self-activated?"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        effects_permanent: =
        {
          txt = "&"
          hint = "Effects: Permanent? (Until respawn)"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        effect_glow: =
        {
          txt = "&"
          hint = "Effects: Glow shell color (R G B)"
        }
        effect_block_weapons: =
        {
          txt = "&"
          hint = "Effects: Block weapons"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        effect_invulnerable: =
        {
          txt = "&"
          hint = "Effects: Invulnerable"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        effect_invisible: =
        {
          txt = "&"
          hint = "Effects: Invisible"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        effect_nonsolid: =
        {
          txt = "&"
          hint = "Effects: Non-solid"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        effect_respiration: =
        {
          txt = "&"
          hint = "Effects: Time before drown (seconds)"
        }
        effect_friction: =
        {
          txt = "&"
          hint = "Effects: Friction modifier (%)"
        }
        effect_gravity: =
        {
          txt = "&"
          hint = "Effects: Gravity modifier (%)"
        }
        effect_speed: =
        {
          txt = "&"
          hint = "Effects: Speed modifier (%)"
        }
        effect_damage: =
        {
          txt = "&"
          hint = "Effects: Damage modifier (%)"
        }
      }
      item_inventory:form =
      {
        t_item_inventory = "!"
      }
      t_item_longjump:incl =
      {
        bbox = '-14 -14 0 14 14 36'
        t_Targetx = "!"
        t_Item = "!"
      }
      item_longjump:form =
      {
        t_item_longjump = "!"
      }
      t_item_recharge:incl =
      {
        bbox = '-8 -8 0 8 8 48'
        t_Item = "!"
        capacity: =
        {
          txt = "&"
          hint = "Charger Capacity"
        }
        model_juice: =
        {
          txt = "&"
          hint = "Model for Capacity Indicator"
        }
      }
      item_recharge:form =
      {
        t_item_recharge = "!"
      }
      t_item_security:incl =
      {
        bbox = '-12 -12 0 12 12 1'
        t_Targetx = "!"
        t_Item = "!"
      }
      item_security:form =
      {
        t_item_security = "!"
      }
      t_item_suit:incl =
      {
        bbox = '-15 -15 0 15 15 64'
        t_Targetx = "!"
        t_Item = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Short Logon"
        }
      }
      item_suit:form =
      {
        t_item_suit = "!"
      }
      t_light:incl =
      {
        t_Target = "!"
        t_Targetname = "!"
        t_Light = "!"
        t_ZHLTpoint = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Initially dark"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Remove Entity"
        }
      }
      light:form =
      {
        t_light = "!"
      }
      t_light_bounce:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        target: =
        {
          txt = "&"
          hint = "Target solid entity"
        }
        targetname: =
        {
          txt = "&"
          hint = "Name"
        }
        style: =
        {
          txt = "&"
          hint = "Appearance (no name allowed)"
          typ = "C"
          items = "Normal"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D"Slo"
           "w pulse, no black"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D"C"
           "andle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"$0D
           "Underwater mutation"
          values = "0"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D"8"$0D
           "4"$0D"9"$0D"12"
        }
        pattern: =
        {
          txt = "&"
          hint = "Custom Appearance"
        }
        convertto: =
        {
          txt = "&"
          hint = "Classname in game"
          typ = "C"
          items = "light"$0D"light_spot"
          values = "light"$0D"light_spot"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Initially dark"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2048"
          cap = "Not in Deathmatch"
        }
      }
      light_bounce:form =
      {
        t_light_bounce = "!"
      }
      t_light_environment:incl =
      {
        t_Targetname = "!"
        t_Angles = "!"
        t_ZHLTpoint = "!"
        pitch: =
        {
          txt = "&"
          hint = "Pitch"
        }
        _light: =
        {
          txt = "&"
          hint = "Brightness"
        }
        _diffuse_light: =
        {
          txt = "&"
          hint = "Ambient Color"
        }
        _spread: =
        {
          txt = "&"
          hint = "Sun Spread"
        }
      }
      light_environment:form =
      {
        t_light_environment = "!"
      }
      t_light_shadow:incl =
      {
        target: =
        {
          txt = "&"
          hint = "Target solid entity"
        }
        targetname: =
        {
          txt = "&"
          hint = "Name"
        }
        style: =
        {
          txt = "&"
          hint = "Appearance (no name allowed)"
          typ = "C"
          items = "Normal"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D"Slo"
           "w pulse, no black"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D"C"
           "andle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"$0D
           "Underwater mutation"
          values = "0"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D"8"$0D
           "4"$0D"9"$0D"12"
        }
        pattern: =
        {
          txt = "&"
          hint = "Custom Appearance"
        }
        convertto: =
        {
          txt = "&"
          hint = "Classname in game"
          typ = "C"
          items = "light"$0D"light_spot"
          values = "light"$0D"light_spot"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Initially dark"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2048"
          cap = "Not in Deathmatch"
        }
      }
      light_shadow:form =
      {
        t_light_shadow = "!"
      }
      t_light_spot:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        t_Angles = "!"
        t_ZHLTpoint = "!"
        _cone: =
        {
          txt = "&"
          hint = "Inner (bright) angle"
        }
        _cone2: =
        {
          txt = "&"
          hint = "Outer (fading) angle"
        }
        pitch: =
        {
          txt = "&"
          hint = "Pitch"
        }
        _light: =
        {
          txt = "&"
          hint = "Brightness"
        }
        _sky: =
        {
          txt = "&"
          hint = "Is Sky"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Initially dark"
        }
        style: =
        {
          txt = "&"
          hint = "Appearance"
          typ = "C"
          items = "Normal"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D"Slo"
           "w pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D"Ca"
           "ndle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"
          values = "0"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D"8"$0D
           "4"$0D"9"
        }
        pattern: =
        {
          txt = "&"
          hint = "Custom Appearance"
        }
      }
      light_spot:form =
      {
        t_light_spot = "!"
      }
      t_light_surface:incl =
      {
        bbox = '-4 -4 -4 4 4 4'
        _tex: =
        {
          txt = "&"
          hint = "Texture name"
        }
        _frange: =
        {
          txt = "&"
          hint = "Filter max distance"
        }
        _fdist: =
        {
          txt = "&"
          hint = "Filter max dist to plane"
        }
        _fclass: =
        {
          txt = "&"
          hint = "Filter entity classname"
        }
        _fname: =
        {
          txt = "&"
          hint = "Filter entity name"
        }
        _light: =
        {
          txt = "&"
          hint = "Texture brightness"
        }
        _texcolor: =
        {
          txt = "&"
          hint = "Color(replace texture color)"
        }
        _cone: =
        {
          txt = "&"
          hint = "Inner(bright) angle(90default)"
        }
        _cone2: =
        {
          txt = "&"
          hint = "Outer(fading) angle(90default)"
        }
        _scale: =
        {
          txt = "&"
          hint = "Adjust emit scale(1.0default)"
        }
        _chop: =
        {
          txt = "&"
          hint = "Grid size of sampling"
        }
        _texlightgap: =
        {
          txt = "&"
          hint = "Dark gap in front of texlight"
          typ = "C"
          items = "Default (no gap)"$0D"0.0 - no gap"$0D"3.0 - small gap"$0D"12."
           "0 - large gap"
          values = $0D"0.0"$0D"3.0"$0D"12.0"
        }
        _fast: =
        {
          txt = "&"
          hint = "Fast"
          typ = "C"
          items = "Auto"$0D"Yes"$0D"No"
          values = $0D"1"$0D"2"
        }
        convertto: =
        {
          txt = "&"
          hint = "Classname in game"
          typ = "C"
          items = "light"$0D"light_spot"
          values = "light"$0D"light_spot"
        }
        targetname: =
        {
          txt = "&"
          hint = "Name"
        }
        style: =
        {
          txt = "&"
          hint = "Appearance (no name allowed)"
          typ = "C"
          items = "Normal"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D"Slo"
           "w pulse, no black"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D"C"
           "andle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"$0D
           "Underwater mutation"
          values = $0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D"8"$0D"4"
           $0D"9"$0D"12"
        }
        pattern: =
        {
          txt = "&"
          hint = "Custom Appearance"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Initially dark"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2048"
          cap = "Not in Deathmatch"
        }
      }
      light_surface:form =
      {
        t_light_surface = "!"
      }
      t_momentary_door:incl =
      {
        t_Door = "!"
        t_ZHLT = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Starts Open"
        }
      }
      momentary_door:form =
      {
        t_momentary_door = "!"
      }
      t_momentary_rot_button:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        t_Angles = "!"
        t_RenderFields = "!"
        t_ZHLT = "!"
        speed: =
        {
          txt = "&"
          hint = "Speed"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        sounds: =
        {
          txt = "&"
          hint = "Sounds"
          typ = "C"
          items = "None"$0D"Big zap & Warmup"$0D"Access Denied"$0D"Access Grante"
           "d"$0D"Quick Combolock"$0D"Power Deadbolt 1"$0D"Power Deadbolt 2"$0D"P"
           "lunger"$0D"Small zap"$0D"Keycard Sound"$0D"Squeaky"$0D"Squeaky Pneum"
           "atic"$0D"Ratchet Groan"$0D"Clean Ratchet"$0D"Gas Clunk"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"2"
           "1"$0D"22"$0D"23"$0D"24"$0D"25"
        }
        noise: =
        {
          txt = "&"
          hint = "Sound Override"
        }
        distance: =
        {
          txt = "&"
          hint = "Distance (deg)"
        }
        returnspeed: =
        {
          txt = "&"
          hint = "Auto-return speed"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Door Hack"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Not useable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Auto Return"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "X Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Y Axis"
        }
        _minlight: =
        {
          txt = "&"
          hint = "_minlight"
        }
        use_type: =
        {
          txt = "&"
          hint = "Use Type"
          typ = "C"
          items = "Off"$0D"On"$0D"Set"$0D"Toggle"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
      }
      momentary_rot_button:form =
      {
        t_momentary_rot_button = "!"
      }
      t_monster_alien_babyvoltigore:incl =
      {
        bbox = '-40 -40 0 40 40 64'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
      }
      monster_alien_babyvoltigore:form =
      {
        t_monster_alien_babyvoltigore = "!"
      }
      t_monster_alien_controller:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
      }
      monster_alien_controller:form =
      {
        t_monster_alien_controller = "!"
      }
      t_monster_alien_grunt:incl =
      {
        bbox = '-32 -32 0 32 32 64'
        t_Monster = "!"
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "Hivehand Only"$0D"Hivehand + Snarks"$0D"Melee-Only"$0D"Melee-"
           "Only + Snarks"
          values = "1"$0D"3"$0D"8"$0D"10"
        }
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
      }
      monster_alien_grunt:form =
      {
        t_monster_alien_grunt = "!"
      }
      t_monster_alien_slave:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "IgnorePlayer"
        }
      }
      monster_alien_slave:form =
      {
        t_monster_alien_slave = "!"
      }
      t_monster_alien_tor:incl =
      {
        bbox = '-32 -32 0 32 32 64'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
      }
      monster_alien_tor:form =
      {
        t_monster_alien_tor = "!"
      }
      t_monster_alien_voltigore:incl =
      {
        bbox = '-80 -80 0 80 80 90'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
      }
      monster_alien_voltigore:form =
      {
        t_monster_alien_voltigore = "!"
      }
      t_monster_apache:incl =
      {
        bbox = '-360 -360 -172 360 360 8'
        t_Monster = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "NoWreckage"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Start Inactive"
        }
      }
      monster_apache:form =
      {
        t_monster_apache = "!"
      }
      t_monster_assassin_repel:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "MP5"$0D"MP5 + HG"$0D"M16 + GL"$0D"Sniper Rifle"$0D"Sniper Rif"
           "le + HG"$0D"No Weapons"$0D"Sniper - No drop"
          values = "1"$0D"3"$0D"5"$0D"8"$0D"10"$0D"32"$0D"256"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "repel_repel"
          values = "47"
        }
      }
      monster_assassin_repel:form =
      {
        t_monster_assassin_repel = "!"
      }
      t_monster_babycrab:incl =
      {
        bbox = '-16 -16 0 16 16 36'
        t_Monster = "!"
      }
      monster_babycrab:form =
      {
        t_monster_babycrab = "!"
      }
      t_monster_babygarg:incl =
      {
        bbox = '-32 -32 0 32 32 128'
        t_Monster = "!"
      }
      monster_babygarg:form =
      {
        t_monster_babygarg = "!"
      }
      t_monster_barnacle:incl =
      {
        bbox = '-16 -16 -36 16 16 0'
        t_Monster = "!"
      }
      monster_barnacle:form =
      {
        t_monster_barnacle = "!"
      }
      t_monster_barney:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        t_TalkMonster = "!"
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "idle1"$0D"locked_door"$0D"barn_Wave"$0D"beat_grunt"$0D"beat_g"
           "runtidle"$0D"flashlight"$0D"stuffed_in_vent"$0D"cprbarney"$0D"cprbar"
           "neyrevive"$0D"barney_dragvent"$0D"dying_barney"$0D"dying_barneyidle"$0D
           "dying_friend"$0D"dying_friendidle"$0D"c1a3_bidle"$0D"c1a3_ventb"$0D"c"
           "1a3_emergeidle"$0D"c1a3_emerge"$0D"haulbarney"$0D"intropush"$0D"fenc"
           "e"$0D"sit1"$0D"almostidle"$0D"almost"$0D"laseridle"$0D"laser_top"$0D
           "laser_bottom"$0D"barneyfallidle"$0D"barneyfall"$0D"c3a2_draw"$0D"unl"
           "atch"$0D"retina"$0D"relaxstand"$0D"assassinated"$0D"trackswitch"$0D"p"
           "epsiswing"$0D"pepsipush"$0D"buttonpush"
          values = "0"$0D"19"$0D"21"$0D"22"$0D"23"$0D"24"$0D"38"$0D"40"$0D"41"$0D
           "42"$0D"43"$0D"44"$0D"45"$0D"46"$0D"47"$0D"48"$0D"49"$0D"50"$0D"51"$0D
           "52"$0D"53"$0D"54"$0D"55"$0D"56"$0D"57"$0D"58"$0D"59"$0D"60"$0D"61"$0D
           "62"$0D"63"$0D"64"$0D"65"$0D"66"$0D"67"$0D"68"$0D"69"$0D"70"
        }
      }
      monster_barney:form =
      {
        t_monster_barney = "!"
      }
      t_monster_barney_dead:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_RenderFields = "!"
        t_Appearflags = "!"
        t_Angles = "!"
        pose: =
        {
          txt = "&"
          hint = "Pose"
          typ = "C"
          items = "On back"$0D"On side"$0D"On stomach"
          values = "0"$0D"1"$0D"2"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "lying_on_back"$0D"lying_on_side"$0D"lying_on_stomach"
          values = "35"$0D"36"$0D"37"
        }
        model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
      }
      monster_barney_dead:form =
      {
        t_monster_barney_dead = "!"
      }
      t_monster_bigmomma:incl =
      {
        bbox = '-95 -95 0 95 95 190'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "First node"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1024"
          cap = "No Babycrabs"
        }
      }
      monster_bigmomma:form =
      {
        t_monster_bigmomma = "!"
      }
      t_monster_blkop_osprey:incl =
      {
        bbox = '-480 -480 -112 480 480 24'
        t_Monster = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Start Inactive"
        }
      }
      monster_blkop_osprey:form =
      {
        t_monster_blkop_osprey = "!"
      }
      t_monster_blkop_apache:incl =
      {
        bbox = '-360 -360 -172 360 360 8'
        t_Monster = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "NoWreckage"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Start Inactive"
        }
      }
      monster_blkop_apache:form =
      {
        t_monster_blkop_apache = "!"
      }
      t_monster_bloater:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
      }
      monster_bloater:form =
      {
        t_monster_bloater = "!"
      }
      t_monster_bodyguard:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "Random"$0D"Pistol"$0D"Desert Eagle"$0D"Shotgun"$0D"Akimbo Uzi"
           "s"$0D"MP5"$0D"Sniper Rifle"$0D"Minigun"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"
        }
      }
      monster_bodyguard:form =
      {
        t_monster_bodyguard = "!"
      }
      t_monster_bullchicken:incl =
      {
        bbox = '-32 -32 0 32 32 64'
        t_Monster = "!"
      }
      monster_bullchicken:form =
      {
        t_monster_bullchicken = "!"
      }
      t_monster_chumtoad:incl =
      {
        bbox = '-16 -16 0 16 16 36'
        t_Monster = "!"
      }
      monster_chumtoad:form =
      {
        t_monster_chumtoad = "!"
      }
      t_monster_cleansuit_scientist:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        t_TalkMonster = "!"
        body: =
        {
          txt = "&"
          hint = "Body"
          typ = "C"
          items = "Random"$0D"Glasses"$0D"Einstein"$0D"Luther"$0D"Slick"
          values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "idle1"$0D"eye_wipe"$0D"pull_needle"$0D"return_needle"$0D"give"
           "_shot"$0D"germandeath"$0D"console"$0D"dryhands"$0D"tieshoe"$0D"white"
           "board"$0D"studycart"$0D"lean"$0D"pondering"$0D"pondering2"$0D"ponder"
           "ing3"$0D"buysoda"$0D"push_button"$0D"converse1"$0D"converse2"$0D"ret"
           "ina"$0D"talkleft"$0D"talkright"$0D"deskidle"$0D"coffee"$0D"franticbu"
           "tton"$0D"scientist_throwna"$0D"scientist_thrownb"$0D"scientist_beatw"
           "indow"$0D"scientist_zombiefear"$0D"teleport_fidget"$0D"sitlookleft"$0D
           "sitlookright"$0D"sitscared"$0D"sitting2"$0D"sitting3"$0D"cprscientis"
           "t"$0D"cprscientistrevive"$0D"cowering_in_corner"$0D"sstruggleidle"$0D
           "sstruggle"$0D"headcrabbed"$0D"c1a0_catwalkidle"$0D"c1a0_catwalk"$0D"c"
           "eiling_dangle"$0D"ventpull1"$0D"ventpull2"$0D"ventpullidle1"$0D"vent"
           "pullidle2"$0D"sitidle"$0D"sitstand"$0D"keypad"$0D"lookwindow"$0D"wav"
           "e"$0D"pulldoor"$0D"beatdoor"$0D"fallingloop"$0D"crawlwindow"$0D"dive"
           "window"$0D"locked_door"$0D"push_button2"$0D"unlock_door"$0D"handrail"
           "idle"$0D"handrail"$0D"hanging_idle"$0D"fall"$0D"scientist_get_pulled"
           $0D"hanging_idle2"$0D"fall_elevator"$0D"scientist_idlewall"$0D"ickyju"
           "mp_sci"$0D"haulscientist"$0D"c1a4_wounded_idle"$0D"c1a4_dying_speech"
           $0D"tentacle_grab"$0D"helicack"$0D"windive"$0D"scicrashidle"$0D"scicr"
           "ash"$0D"onguard"$0D"seeya"$0D"rocketcrawl"$0D"portal"$0D"gluonshow"$0D
           "kneel"
          values = "13"$0D"27"$0D"28"$0D"29"$0D"30"$0D"41"$0D"48"$0D"49"$0D"50"$0D
           "51"$0D"52"$0D"53"$0D"54"$0D"55"$0D"56"$0D"57"$0D"61"$0D"62"$0D"63"$0D
           "64"$0D"65"$0D"66"$0D"67"$0D"68"$0D"69"$0D"71"$0D"72"$0D"73"$0D"75"$0D
           "77"$0D"79"$0D"80"$0D"81"$0D"82"$0D"83"$0D"84"$0D"85"$0D"86"$0D"87"$0D
           "88"$0D"89"$0D"90"$0D"91"$0D"92"$0D"93"$0D"94"$0D"95"$0D"96"$0D"97"$0D
           "98"$0D"99"$0D"101"$0D"102"$0D"103"$0D"104"$0D"105"$0D"106"$0D"107"$0D
           "108"$0D"109"$0D"110"$0D"112"$0D"113"$0D"114"$0D"115"$0D"116"$0D"117"$0D
           "118"$0D"119"$0D"120"$0D"121"$0D"122"$0D"123"$0D"124"$0D"125"$0D"126"$0D
           "127"$0D"128"$0D"129"$0D"130"$0D"131"$0D"132"$0D"133"$0D"135"
        }
      }
      monster_cleansuit_scientist:form =
      {
        t_monster_cleansuit_scientist = "!"
      }
      t_monster_cockroach:incl =
      {
        bbox = '-3 -3 0 3 3 3'
        t_Monster = "!"
      }
      monster_cockroach:form =
      {
        t_monster_cockroach = "!"
      }
      t_monster_flyer_flock:incl =
      {
        bbox = '-16 -16 0 16 16 16'
        t_Monster = "!"
        iFlockSize: =
        {
          txt = "&"
          hint = "Flock Size"
        }
        flFlockRadius: =
        {
          txt = "&"
          hint = "Flock Radius"
        }
      }
      monster_flyer_flock:form =
      {
        t_monster_flyer_flock = "!"
      }
      t_monster_furniture:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (Number)"
        }
      }
      monster_furniture:form =
      {
        t_monster_furniture = "!"
      }
      t_monster_gargantua:incl =
      {
        bbox = '-32 -32 0 32 32 128'
        t_Monster = "!"
      }
      monster_gargantua:form =
      {
        t_monster_gargantua = "!"
      }
      t_monster_generic:incl =
      {
        bbox = '-16 -16 -36 16 16 36'
        t_Monster = "!"
        t_RenderFields = "!"
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (Number)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Not solid"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Head Controller"
        }
        disableai: =
        {
          txt = "&"
          hint = "Disable AI"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      monster_generic:form =
      {
        t_monster_generic = "!"
      }
      t_monster_gman:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
      }
      monster_gman:form =
      {
        t_monster_gman = "!"
      }
      t_monster_gonome:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
      }
      monster_gonome:form =
      {
        t_monster_gonome = "!"
      }
      t_monster_grunt_ally_repel:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "MP5"$0D"MP5 + HG"$0D"M16 + GL"$0D"Shotgun"$0D"Shotgun + HG"$0D
           "Saw"
          values = "1"$0D"3"$0D"5"$0D"8"$0D"10"$0D"16"
        }
        head: =
        {
          txt = "&"
          hint = "Heads"
          typ = "C"
          items = "Default"$0D"Gas Mask"$0D"Beret"$0D"Ops Mask"$0D"Bandana White"
           $0D"Bandana Black"
          values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "repel_repel"
          values = "51"
        }
      }
      monster_grunt_ally_repel:form =
      {
        t_monster_grunt_ally_repel = "!"
      }
      t_monster_grunt_repel:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "MP5"$0D"MP5 + HG"$0D"M16 + GL"$0D"Shotgun"$0D"Shotgun + HG"$0D
           "Rocket Launcher"$0D"Rocket Launcher + HG"$0D"Sniper Rifle"$0D"Sniper"
           " Rifle + HG"
          values = "1"$0D"3"$0D"5"$0D"8"$0D"10"$0D"64"$0D"66"$0D"128"$0D"130"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "repel_repel"
          values = "50"
        }
      }
      monster_grunt_repel:form =
      {
        t_monster_grunt_repel = "!"
      }
      t_monster_handgrenade:incl =
      {
        t_RenderFields = "!"
        t_Appearflags = "!"
        t_Angles = "!"
        health: =
        {
          txt = "&"
          hint = "Delay before explosion"
        }
        new_model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
      }
      monster_handgrenade:form =
      {
        t_monster_handgrenade = "!"
      }
      t_monster_headcrab:incl =
      {
        bbox = '-16 -16 0 16 16 36'
        t_Monster = "!"
      }
      monster_headcrab:form =
      {
        t_monster_headcrab = "!"
      }
      t_monster_hevsuit_dead:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Appearflags = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        pose: =
        {
          txt = "&"
          hint = "Pose"
          typ = "C"
          items = "On back"$0D"Seated"$0D"On stomach"$0D"On Table"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "deadback"$0D"deadsitting"$0D"deadstomach"$0D"deadtable"
          values = "177"$0D"178"$0D"179"$0D"180"
        }
        model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
      }
      monster_hevsuit_dead:form =
      {
        t_monster_hevsuit_dead = "!"
      }
      t_monster_hgrunt_dead:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Appearflags = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        pose: =
        {
          txt = "&"
          hint = "Pose"
          typ = "C"
          items = "On stomach"$0D"On side"$0D"Seated"
          values = "0"$0D"1"$0D"2"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "On stomach"$0D"On side"$0D"Seated"
          values = "46"$0D"47"$0D"48"
        }
        body: =
        {
          txt = "&"
          hint = "Body"
          typ = "C"
          items = "Grunt with Gun"$0D"Commander with Gun"$0D"Grunt no Gun"$0D"Co"
           "mmander no Gun"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
        model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
      }
      monster_hgrunt_dead:form =
      {
        t_monster_hgrunt_dead = "!"
      }
      t_monster_houndeye:incl =
      {
        bbox = '-16 -16 0 16 16 36'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
      }
      monster_houndeye:form =
      {
        t_monster_houndeye = "!"
      }
      t_monster_human_assassin:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
      }
      monster_human_assassin:form =
      {
        t_monster_human_assassin = "!"
      }
      t_monster_human_grunt:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "MP5"$0D"MP5 + HG"$0D"M16 + GL"$0D"Shotgun"$0D"Shotgun + HG"$0D
           "Rocket Launcher"$0D"Rocket Launcher + HG"$0D"Sniper Rifle"$0D"Sniper"
           " Rifle + HG"
          values = "1"$0D"3"$0D"5"$0D"8"$0D"10"$0D"64"$0D"66"$0D"128"$0D"130"
        }
      }
      monster_human_grunt:form =
      {
        t_monster_human_grunt = "!"
      }
      t_monster_human_grunt_ally:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        t_TalkMonster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "Default"$0D"MP5"$0D"MP5 + HG"$0D"M16 + GL"$0D"Shotgun"$0D"Sho"
           "tgun + HG"$0D"Saw"$0D"None"
          values = "0"$0D"1"$0D"3"$0D"5"$0D"8"$0D"10"$0D"16"$0D"32"
        }
        head: =
        {
          txt = "&"
          hint = "Heads"
          typ = "C"
          items = "Default"$0D"Gas Mask"$0D"Beret"$0D"Ops Mask"$0D"Bandana White"
           $0D"Bandana Black"$0D"MP"$0D"Major"$0D"Beret (Black)"
          values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"
        }
      }
      monster_human_grunt_ally:form =
      {
        t_monster_human_grunt_ally = "!"
      }
      t_monster_human_grunt_ally_dead:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Targetname = "!"
        t_Appearflags = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        pose: =
        {
          txt = "&"
          hint = "Pose"
          typ = "C"
          items = "On stomach"$0D"On side"$0D"Seated"$0D"Dead On Back"$0D"Dead O"
           "n Stomach"$0D"Head Crabbed"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "On stomach"$0D"On side"$0D"Seated"
          values = "44"$0D"45"$0D"46"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "None"$0D"M16"$0D"Shotgun"$0D"Saw"
          values = "0"$0D"1"$0D"8"$0D"16"
        }
        head: =
        {
          txt = "&"
          hint = "Heads"
          typ = "C"
          items = "Gas Mask"$0D"Beret"$0D"Ops Mask"$0D"Bandana White"$0D"Bandana"
           " Black"$0D"MP"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
        }
        model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
      }
      monster_human_grunt_ally_dead:form =
      {
        t_monster_human_grunt_ally_dead = "!"
      }
      t_monster_human_medic_ally:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        t_TalkMonster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        head: =
        {
          txt = "&"
          hint = "Heads"
          typ = "C"
          items = "Random"$0D"White"$0D"Black"
          values = "-1"$0D"0"$0D"1"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "None"$0D"Desert Eagle"$0D"9mm Handgun"$0D"Hypodermic Needle"
          values = "0"$0D"1"$0D"2"$0D"4"
        }
      }
      monster_human_medic_ally:form =
      {
        t_monster_human_medic_ally = "!"
      }
      t_monster_human_torch_ally:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        t_TalkMonster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "Desert Eagle"$0D"Blow Torch"
          values = "1"$0D"2"
        }
      }
      monster_human_torch_ally:form =
      {
        t_monster_human_torch_ally = "!"
      }
      t_monster_hwgrunt:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        weapons: =
        {
          txt = "&"
          hint = "Secondary Weapon"
          typ = "C"
          items = "Random Pistol"$0D"Glock"$0D"Desert Eagle"$0D"357 Python"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
        disable_minigun_drop: =
        {
          txt = "&"
          hint = "Disable Minigun Drop"
          typ = "C"
          items = "No (default)"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      monster_hwgrunt:form =
      {
        t_monster_hwgrunt = "!"
      }
      t_monster_hwgrunt_repel:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "repel_repel"
          values = "14"
        }
        weapons: =
        {
          txt = "&"
          hint = "Drop Minigun"
          typ = "C"
          items = "Yes (on death)"$0D"No"
          values = "0"$0D"256"
        }
      }
      monster_hwgrunt_repel:form =
      {
        t_monster_hwgrunt_repel = "!"
      }
      t_monster_ichthyosaur:incl =
      {
        bbox = '-32 -32 0 32 32 64'
        t_Monster = "!"
      }
      monster_ichthyosaur:form =
      {
        t_monster_ichthyosaur = "!"
      }
      t_monster_kingpin:incl =
      {
        bbox = '-24 -24 0 24 24 112'
        t_Monster = "!"
      }
      monster_kingpin:form =
      {
        t_monster_kingpin = "!"
      }
      t_monster_leech:incl =
      {
        bbox = '-6 -6 0 6 6 6'
        t_Monster = "!"
      }
      monster_leech:form =
      {
        t_monster_leech = "!"
      }
      t_monster_male_assassin:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        head: =
        {
          txt = "&"
          hint = "Heads"
          typ = "C"
          items = "Random"$0D"Ski Mask White"$0D"Ski Mask Black"$0D"Night Goggle"
           "s"
          values = "-1"$0D"0"$0D"1"$0D"2"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "MP5"$0D"MP5 + HG"$0D"M16 + GL"$0D"Sniper Rifle"$0D"Sniper Rif"
           "le + HG"$0D"No Weapons"$0D"Sniper - No drop"
          values = "1"$0D"3"$0D"5"$0D"8"$0D"10"$0D"32"$0D"256"
        }
      }
      monster_male_assassin:form =
      {
        t_monster_male_assassin = "!"
      }
      t_monster_medic_ally_repel:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        head: =
        {
          txt = "&"
          hint = "Heads"
          typ = "C"
          items = "Random"$0D"White"$0D"Black"
          values = "-1"$0D"0"$0D"1"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "None"$0D"Desert Eagle"$0D"9mm Handgun"$0D"Hypodermic Needle"
          values = "0"$0D"1"$0D"2"$0D"4"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "repel_repel"
          values = "41"
        }
      }
      monster_medic_ally_repel:form =
      {
        t_monster_medic_ally_repel = "!"
      }
      t_monster_miniturret:incl =
      {
        bbox = '-16 -16 -32 16 16 32'
        t_Monster = "!"
        orientation: =
        {
          txt = "&"
          hint = "Orientation"
          typ = "C"
          items = "Floor Mount"$0D"Ceiling Mount"
          values = "0"$0D"1"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Autostart"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Start Inactive"
        }
        maxsleep: =
        {
          txt = "&"
          hint = "Search Time (before deactivate)"
        }
        turnrate: =
        {
          txt = "&"
          hint = "Turn Rate"
        }
        attackrange: =
        {
          txt = "&"
          hint = "Max Attack Range"
        }
      }
      monster_miniturret:form =
      {
        t_monster_miniturret = "!"
      }
      t_monster_nihilanth:incl =
      {
        bbox = '-192 -192 0 192 192 384'
        t_Monster = "!"
      }
      monster_nihilanth:form =
      {
        t_monster_nihilanth = "!"
      }
      t_monster_osprey:incl =
      {
        bbox = '-480 -480 -112 480 480 24'
        t_Monster = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Start Inactive"
        }
        grunttype: =
        {
          txt = "&"
          hint = "Grunt Type"
          typ = "C"
          items = "Human Grunts (default)"$0D"Opposing Force Grunts"$0D"Random"$0D
           "Random + HWGrunt"$0D"Random + HWGrunt/Sniper"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
        }
        num: =
        {
          txt = "&"
          hint = "(Override) Number of Grunts"
        }
      }
      monster_osprey:form =
      {
        t_monster_osprey = "!"
      }
      t_monster_otis:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        t_TalkMonster = "!"
        bodystate: =
        {
          txt = "&"
          hint = "bodystate"
          typ = "C"
          items = "Random"$0D"Gun Holstered"$0D"Gun Drawn"$0D"Donut"
          values = "-1"$0D"0"$0D"1"$0D"3"
        }
        head: =
        {
          txt = "&"
          hint = "head"
          typ = "C"
          items = "Random"$0D"Bald Head"$0D"Head with hair"
          values = "-1"$0D"0"$0D"1"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "idle1"$0D"locked_door"$0D"barn_Wave"$0D"beat_grunt"$0D"beat_g"
           "runtidle"$0D"flashlight"$0D"cprbarney"$0D"cprbarneyrevive"$0D"barney"
           "_dragvent"$0D"dying_barney"$0D"dying_barneyidle"$0D"dying_friend"$0D
           "dying_friendidle"$0D"c1a3_bidle"$0D"intropush"$0D"fence"$0D"wave"$0D
           "unlatch"$0D"retina"$0D"relaxstand"$0D"trackswitch"$0D"pepsiswing"$0D
           "pepsipush"$0D"buttonpush"$0D"cowering"$0D"candygrab"
          values = "0"$0D"19"$0D"21"$0D"22"$0D"23"$0D"24"$0D"41"$0D"42"$0D"43"$0D
           "44"$0D"45"$0D"46"$0D"47"$0D"48"$0D"49"$0D"50"$0D"51"$0D"52"$0D"53"$0D
           "54"$0D"55"$0D"56"$0D"57"$0D"58"$0D"59"$0D"60"
        }
      }
      monster_otis:form =
      {
        t_monster_otis = "!"
      }
      t_monster_otis_dead:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_RenderFields = "!"
        t_Appearflags = "!"
        t_Angles = "!"
        pose: =
        {
          txt = "&"
          hint = "Pose"
          typ = "C"
          items = "On back"$0D"On side"$0D"On stomach"$0D"Stuffed in Vent"$0D"De"
           "ad Sitting"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "lying_on_back"$0D"lying_on_side"$0D"lying_on_stomach"$0D"stuf"
           "fed_in_vent"$0D"dead_sitting"
          values = "35"$0D"36"$0D"37"$0D"38"$0D"39"
        }
        model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
      }
      monster_otis_dead:form =
      {
        t_monster_otis_dead = "!"
      }
      t_monster_pitdrone:incl =
      {
        bbox = '-24 -24 0 24 24 32'
        t_Monster = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        initammo: =
        {
          txt = "&"
          hint = "Initial Ammo"
        }
      }
      monster_pitdrone:form =
      {
        t_monster_pitdrone = "!"
      }
      t_monster_rat:incl =
      {
        bbox = '-6 -6 0 6 6 6'
        t_Monster = "!"
      }
      monster_rat:form =
      {
        t_monster_rat = "!"
      }
      t_monster_robogrunt:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "MP5"$0D"MP5 + HG"$0D"M16 + GL"$0D"Shotgun"$0D"Shotgun + HG"
          values = "1"$0D"3"$0D"5"$0D"8"$0D"10"
        }
      }
      monster_robogrunt:form =
      {
        t_monster_robogrunt = "!"
      }
      t_monster_robogrunt_repel:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "MP5"$0D"MP5 + HG"$0D"M16 + GL"$0D"Shotgun"$0D"Shotgun + HG"
          values = "1"$0D"3"$0D"5"$0D"8"$0D"10"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "repel_repel"
          values = "48"
        }
      }
      monster_robogrunt_repel:form =
      {
        t_monster_robogrunt_repel = "!"
      }
      t_monster_satchel:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_RenderFields = "!"
      }
      monster_satchel:form =
      {
        t_monster_satchel = "!"
      }
      t_monster_scientist:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        t_TalkMonster = "!"
        body: =
        {
          txt = "&"
          hint = "Body"
          typ = "C"
          items = "Random"$0D"Glasses"$0D"Einstein"$0D"Luther"$0D"Slick"
          values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "idle1"$0D"eye_wipe"$0D"pull_needle"$0D"return_needle"$0D"give"
           "_shot"$0D"lying_on_back"$0D"lying_on_stomach"$0D"dead_sitting"$0D"de"
           "ad_table1"$0D"dead_table2"$0D"dead_table3"$0D"console"$0D"checktie"$0D
           "dryhands"$0D"tieshoe"$0D"whiteboard"$0D"studycart"$0D"lean"$0D"ponde"
           "ring"$0D"pondering2"$0D"pondering3"$0D"buysoda"$0D"push_button"$0D"c"
           "onverse1"$0D"converse2"$0D"retina"$0D"talkleft"$0D"talkright"$0D"des"
           "kidle"$0D"coffee"$0D"franticbutton"$0D"sitlookleft"$0D"sitlookright"$0D
           "sitscared"$0D"sitting2"$0D"sitting3"$0D"cprscientist"$0D"cprscientis"
           "trevive"$0D"cowering_in_corner"$0D"sstruggleidle"$0D"sstruggle"$0D"h"
           "eadcrabbed"$0D"c1a0_catwalkidle"$0D"c1a0_catwalk"$0D"ceiling_dangle"$0D
           "ventpull1"$0D"ventpull2"$0D"ventpullidle1"$0D"ventpullidle2"$0D"siti"
           "dle"$0D"sitstand"$0D"keypad"$0D"lookwindow"$0D"wave"$0D"pulldoor"$0D
           "beatdoor"$0D"fallingloop"$0D"crawlwindow"$0D"divewindow"$0D"locked_d"
           "oor"$0D"push_button2"$0D"unlock_door"$0D"handrailidle"$0D"handrail"$0D
           "hanging_idle"$0D"fall"$0D"scientist_get_pulled"$0D"hanging_idle2"$0D
           "fall_elevator"$0D"scientist_idlewall"$0D"ickyjump_sci"$0D"haulscient"
           "ist"$0D"c1a4_wounded_idle"$0D"c1a4_dying_speech"$0D"tentacle_grab"$0D
           "helicack"$0D"windive"$0D"scicrashidle"$0D"scicrash"$0D"onguard"$0D"s"
           "eeya"$0D"rocketcrawl"$0D"portal"$0D"gluonshow"$0D"kneel"
          values = "13"$0D"27"$0D"28"$0D"29"$0D"30"$0D"37"$0D"38"$0D"39"$0D"40"$0D
           "41"$0D"42"$0D"47"$0D"48"$0D"49"$0D"50"$0D"51"$0D"52"$0D"53"$0D"54"$0D
           "55"$0D"56"$0D"57"$0D"61"$0D"62"$0D"63"$0D"64"$0D"65"$0D"66"$0D"67"$0D
           "68"$0D"69"$0D"71"$0D"72"$0D"73"$0D"74"$0D"75"$0D"76"$0D"77"$0D"78"$0D
           "79"$0D"80"$0D"81"$0D"82"$0D"83"$0D"84"$0D"85"$0D"86"$0D"87"$0D"88"$0D
           "89"$0D"90"$0D"91"$0D"93"$0D"94"$0D"95"$0D"96"$0D"97"$0D"98"$0D"99"$0D
           "100"$0D"101"$0D"102"$0D"104"$0D"105"$0D"106"$0D"107"$0D"108"$0D"109"$0D
           "110"$0D"111"$0D"112"$0D"113"$0D"114"$0D"115"$0D"116"$0D"117"$0D"118"$0D
           "119"$0D"120"$0D"121"$0D"122"$0D"123"$0D"124"$0D"125"$0D"127"
        }
      }
      monster_scientist:form =
      {
        t_monster_scientist = "!"
      }
      t_monster_scientist_dead:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Appearflags = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        body: =
        {
          txt = "&"
          hint = "Body"
          typ = "C"
          items = "Random"$0D"Glasses"$0D"Einstein"$0D"Luther"$0D"Slick"
          values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        pose: =
        {
          txt = "&"
          hint = "Pose"
          typ = "C"
          items = "On back"$0D"On Stomach"$0D"Sitting"$0D"Hanging"$0D"Table1"$0D
           "Table2"$0D"Table3"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "lying_on_back"$0D"lying_on_stomach"$0D"dead_sitting"$0D"dead_"
           "table1"$0D"dead_table2"$0D"dead_table3"
          values = "37"$0D"38"$0D"39"$0D"40"$0D"41"$0D"42"
        }
        model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
      }
      monster_scientist_dead:form =
      {
        t_monster_scientist_dead = "!"
      }
      t_monster_sentry:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Autostart"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Start Inactive"
        }
        attackrange: =
        {
          txt = "&"
          hint = "Max Attack Range"
        }
      }
      monster_sentry:form =
      {
        t_monster_sentry = "!"
      }
      t_monster_shockroach:incl =
      {
        bbox = '-16 -16 0 16 16 36'
        t_Monster = "!"
      }
      monster_shockroach:form =
      {
        t_monster_shockroach = "!"
      }
      t_monster_shocktrooper:incl =
      {
        bbox = '-24 -24 0 24 24 32'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1024"
          cap = "No Shockroach"
        }
      }
      monster_shocktrooper:form =
      {
        t_monster_shocktrooper = "!"
      }
      t_monster_sitting_scientist:incl =
      {
        bbox = '-14 -14 22 14 14 72'
        t_Monster = "!"
        t_TalkMonster = "!"
        body: =
        {
          txt = "&"
          hint = "Body"
          typ = "C"
          items = "Random"$0D"Glasses"$0D"Einstein"$0D"Luther"$0D"Slick"
          values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "sitlookleft"$0D"sitlookright"$0D"sitscared"$0D"sitting2"$0D"s"
           "itting3"
          values = "71"$0D"72"$0D"73"$0D"74"$0D"75"
        }
      }
      monster_sitting_scientist:form =
      {
        t_monster_sitting_scientist = "!"
      }
      t_monster_snark:incl =
      {
        bbox = '-16 -16 0 16 16 36'
        t_Monster = "!"
      }
      monster_snark:form =
      {
        t_monster_snark = "!"
      }
      t_monster_sqknest:incl =
      {
        bbox = '-16 -16 0 16 16 36'
        t_Monster = "!"
      }
      monster_sqknest:form =
      {
        t_monster_sqknest = "!"
      }
      t_monster_stukabat:incl =
      {
        bbox = '-24 -24 0 24 24 24'
        t_Monster = "!"
      }
      monster_stukabat:form =
      {
        t_monster_stukabat = "!"
      }
      t_monster_tentacle:incl =
      {
        bbox = '-32 -32 0 32 32 64'
        t_Monster = "!"
        sweeparc: =
        {
          txt = "&"
          hint = "Sweep Arc"
        }
        sound: =
        {
          txt = "&"
          hint = "Tap Sound"
          typ = "C"
          items = "None"$0D"Silo"$0D"Dirt"$0D"Water"
          values = "-1"$0D"0"$0D"1"$0D"2"
        }
      }
      monster_tentacle:form =
      {
        t_monster_tentacle = "!"
      }
      t_monster_torch_ally_repel:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        netname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "SquadLeader"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons"
          typ = "C"
          items = "Desert Eagle"$0D"Blow Torch"
          values = "1"$0D"2"
        }
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "repel_repel"
          values = "39"
        }
      }
      monster_torch_ally_repel:form =
      {
        t_monster_torch_ally_repel = "!"
      }
      t_monster_tripmine:incl =
      {
        t_Monster = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Instant On"
        }
      }
      monster_tripmine:form =
      {
        t_monster_tripmine = "!"
      }
      t_monster_turret:incl =
      {
        bbox = '-32 -32 -32 32 32 32'
        t_Monster = "!"
        orientation: =
        {
          txt = "&"
          hint = "Orientation"
          typ = "C"
          items = "Floor Mount"$0D"Ceiling Mount"
          values = "0"$0D"1"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Autostart"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Start Inactive"
        }
        maxsleep: =
        {
          txt = "&"
          hint = "Search Time (before deactivate)"
        }
        turnrate: =
        {
          txt = "&"
          hint = "Turn Rate"
        }
        attackrange: =
        {
          txt = "&"
          hint = "Max Attack Range"
        }
      }
      monster_turret:form =
      {
        t_monster_turret = "!"
      }
      t_monster_zombie:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
        sequence: =
        {
          txt = "&"
          hint = "Animation Sequence (editor)"
          typ = "C"
          items = "idle1"$0D"getup"$0D"pause"$0D"busting_through_wall"$0D"kick_p"
           "unch_wall"$0D"bust_window"$0D"soda"$0D"slideidle"$0D"slidewall"$0D"v"
           "entclimbidle"$0D"ventclimb"$0D"deadidle"$0D"deadwall"$0D"freakdie"$0D
           "freak"$0D"eatbodytable"$0D"eatbody"$0D"eatbodystand"$0D"ripdoor"$0D"z"
           "ombie_pull_scientist"$0D"zombie_eating"$0D"eat_to_stand"$0D"vent_zid"
           "le"$0D"vent_c1a3"$0D"haulzombie"$0D"c2a3_snack_getup"$0D"zombie_figh"
           "t"$0D"crush"$0D"crushed"$0D"spazhard"$0D"spaz"$0D"compthrow_idle"$0D
           "compthrow"$0D"iceslip"$0D"get_run_over"
          values = "0"$0D"19"$0D"20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D
           "27"$0D"28"$0D"29"$0D"30"$0D"31"$0D"32"$0D"33"$0D"34"$0D"35"$0D"36"$0D
           "37"$0D"38"$0D"39"$0D"40"$0D"41"$0D"42"$0D"43"$0D"44"$0D"45"$0D"48"$0D
           "46"$0D"47"$0D"49"$0D"50"$0D"51"$0D"52"
        }
      }
      monster_zombie:form =
      {
        t_monster_zombie = "!"
      }
      t_monster_zombie_barney:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
      }
      monster_zombie_barney:form =
      {
        t_monster_zombie_barney = "!"
      }
      t_monster_zombie_soldier:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Monster = "!"
      }
      monster_zombie_soldier:form =
      {
        t_monster_zombie_soldier = "!"
      }
      t_monstermaker:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Targetname = "!"
        t_Angles = "!"
        target: =
        {
          txt = "&"
          hint = "Target On Release"
        }
        monstertype: =
        {
          txt = "&"
          hint = "Monster Type"
        }
        netname: =
        {
          txt = "&"
          hint = "Childrens' Name"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start ON"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Cyclic"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "MonsterClip"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1024"
          cap = "No Respawn (Collectible)"
        }
        monstercount: =
        {
          txt = "&"
          hint = "Monster count "
        }
        respawn_as_playerally: =
        {
          txt = "&"
          hint = "Make Player Allys"
          typ = "C"
          items = "Default (0)"$0D"Opposite (1)"
          values = "0"$0D"1"
        }
        delay: =
        {
          txt = "&"
          hint = "Frequency"
        }
        m_imaxlivechildren: =
        {
          txt = "&"
          hint = "Max live children"
        }
        health: =
        {
          txt = "&"
          hint = "Custom Health"
        }
        path_name: =
        {
          txt = "&"
          hint = "Path Name"
        }
      }
      monstermaker:form =
      {
        t_monstermaker = "!"
      }
      t_multi_manager:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "multithreaded"
        }
      }
      multi_manager:form =
      {
        t_multi_manager = "!"
      }
      t_multisource:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        globalstate: =
        {
          txt = "&"
          hint = "Global State Master"
        }
      }
      multisource:form =
      {
        t_multisource = "!"
      }
      t_op4mortar:incl =
      {
        t_Targetname = "!"
        t_AttackObject = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Active"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Line of Sight"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Can Control"
        }
        mortar_velocity: =
        {
          txt = "&"
          hint = "Velocity"
        }
        h_min: =
        {
          txt = "&"
          hint = "Horiz MIN"
        }
        h_max: =
        {
          txt = "&"
          hint = "Horiz MAX"
        }
        mindist: =
        {
          txt = "&"
          hint = "Min Target Dist"
        }
        maxdist: =
        {
          txt = "&"
          hint = "Max Target Dist"
        }
        firedelay: =
        {
          txt = "&"
          hint = "Delay between shots (seconds)"
        }
        is_player_ally: =
        {
          txt = "&"
          hint = "Is Player Ally"
          typ = "C"
          items = "No (Default)"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      op4mortar:form =
      {
        t_op4mortar = "!"
      }
      t_path_corner:incl =
      {
        t_Targetname = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Wait for retrigger"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Teleport to this"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Fire once"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Random targets"
        }
        target: =
        {
          txt = "&"
          hint = "Next stop target"
        }
        message: =
        {
          txt = "&"
          hint = "Fire On Arrive"
        }
        wait: =
        {
          txt = "&"
          hint = "Wait here (secs)"
        }
        speed: =
        {
          txt = "&"
          hint = "New Train Speed"
        }
        yaw_speed: =
        {
          txt = "&"
          hint = "New Train rot. Speed"
        }
      }
      path_corner:form =
      {
        t_path_corner = "!"
      }
      t_path_condition_controller:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start Off"
        }
        pathcondition_list: =
        {
          txt = "&"
          hint = "Path_condition List"
        }
        selecttype: =
        {
          txt = "&"
          hint = "Selection Mode"
          typ = "C"
          items = "First Found (Default)"$0D"Random"$0D"Nearest to NPC"
          values = "0"$0D"1"$0D"2"
        }
      }
      path_condition_controller:form =
      {
        t_path_condition_controller = "!"
      }
      t_path_condition:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start Off"
        }
        delay_interval: =
        {
          txt = "&"
          hint = "Delay Interval"
        }
        conditions_reference: =
        {
          txt = "&"
          hint = "Conditions (Definition Name)"
        }
        mindistance: =
        {
          txt = "&"
          hint = "Min Distance"
        }
        maxdistance: =
        {
          txt = "&"
          hint = "Max Distance"
        }
        starttrigger: =
        {
          txt = "&"
          hint = "Trigger on Stop Condition"
        }
        priority: =
        {
          txt = "&"
          hint = "Priority Level"
        }
        selecttype: =
        {
          txt = "&"
          hint = "Priority Override"
          typ = "C"
          items = "None (Default)"$0D"Ignore Following"$0D"Ignore Following and "
           "Guarding"$0D"Ignore Following, Guarding, and Scripts"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
        pre_location: =
        {
          txt = "&"
          hint = "Pre-Waypoint Destination"
          typ = "C"
          items = "None (Default)"$0D"Use This Origin"$0D"Enemy"$0D"Dead Enemy"$0D
           "Sound"$0D"Scent"$0D"Near Hiding Spot"$0D"Far Hiding Spot"$0D"Named E"
           "ntity"$0D"Entity by Key:Value"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
        }
        pre_location_values: =
        {
          txt = "&"
          hint = "Pre-Waypoint Parameters"
        }
        selecttype: =
        {
          txt = "&"
          hint = "Waypoint Selection"
          typ = "C"
          items = "Start Waypoint"$0D"Nearest Waypoint to NPC"$0D"Random Waypoin"
           "t"
          values = "0"$0D"1"$0D"2"
        }
        path_start: =
        {
          txt = "&"
          hint = "Start Waypoint"
        }
        waypoint_list: =
        {
          txt = "&"
          hint = "Path_Waypoint List"
        }
        key_filter: =
        {
          txt = "&"
          hint = "NPC Keyvalue Filter"
        }
        npc_trigger_target: =
        {
          txt = "&"
          hint = "NPC Trigger Target"
        }
        npc_trigger_interval: =
        {
          txt = "&"
          hint = "NPC Trigger Interval"
        }
        m_szASConditionsName: =
        {
          txt = "&"
          hint = "Angelscript condition name"
        }
      }
      path_condition:form =
      {
        t_path_condition = "!"
      }
      t_path_waypoint:incl =
      {
        t_Targetname = "!"
        target: =
        {
          txt = "&"
          hint = "Next Path_waypoint"
        }
        alternate_target: =
        {
          txt = "&"
          hint = "Alternate Next Path_waypoint"
        }
        movementtype: =
        {
          txt = "&"
          hint = "Move to Position"
          typ = "C"
          items = "Walk"$0D"Run"$0D"Teleport"$0D"Turn to Face"$0D"Don't Move"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
        }
        radius: =
        {
          txt = "&"
          hint = "Move within Radius"
        }
        useangles: =
        {
          txt = "&"
          hint = "Face Waypoint Direction"
          typ = "C"
          items = "No (default)"$0D"Yes"
          values = "0"$0D"1"
        }
        trigger_on_arrival: =
        {
          txt = "&"
          hint = "Trigger on Arrival"
        }
        arrival_animation: =
        {
          txt = "&"
          hint = "Arrival Animation"
        }
        trigger_after_arrival: =
        {
          txt = "&"
          hint = "Trigger after Arrival Animation"
        }
        wait_activity: =
        {
          txt = "&"
          hint = "Wait Activity"
          typ = "C"
          items = "Play Wait Animation (default)"$0D"Look around"$0D"Investigate"
           " Area"$0D"Use AI"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
        wait_animation: =
        {
          txt = "&"
          hint = "Wait Animation"
        }
        wait_time: =
        {
          txt = "&"
          hint = "Wait Time"
        }
        wait_master: =
        {
          txt = "&"
          hint = "Wait Master"
        }
        waituntilfull: =
        {
          txt = "&"
          hint = "Wait Here Until Full"
          typ = "C"
          items = "No (default)"$0D"Yes"
          values = "0"$0D"1"
        }
        departure_animation: =
        {
          txt = "&"
          hint = "Departure Animation"
        }
        trigger_on_departure: =
        {
          txt = "&"
          hint = "Trigger on Departure"
        }
        occupant_radius_check: =
        {
          txt = "&"
          hint = "Occupant Radius"
        }
        occupant_limit: =
        {
          txt = "&"
          hint = "Maximum # Occupants"
        }
        overflow_waypoint: =
        {
          txt = "&"
          hint = "Overflow Waypoint"
        }
        force_complete: =
        {
          txt = "&"
          hint = "Force Waypoint Completion"
          typ = "C"
          items = "No (default)"$0D"Yes"
          values = "0"$0D"1"
        }
        stop_trigger: =
        {
          txt = "&"
          hint = "Trigger on Stop Condition"
        }
        restart_delay: =
        {
          txt = "&"
          hint = "Delay before Return"
        }
      }
      path_waypoint:form =
      {
        t_path_waypoint = "!"
      }
      t_path_track:incl =
      {
        t_Targetname = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Disabled"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Fire once"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Branch Reverse"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Disable train"
        }
        target: =
        {
          txt = "&"
          hint = "Next stop target"
        }
        message: =
        {
          txt = "&"
          hint = "Fire On Pass"
        }
        altpath: =
        {
          txt = "&"
          hint = "Branch Path"
        }
        netname: =
        {
          txt = "&"
          hint = "Fire on dead end"
        }
        newspeed: =
        {
          txt = "&"
          hint = "New Train Speed"
        }
        maxspeed: =
        {
          txt = "&"
          hint = "New Maximum Speed"
        }
        speed: =
        {
          txt = "&"
          hint = "New Train Speed (Legacy)"
        }
      }
      path_track:form =
      {
        t_path_track = "!"
      }
      t_player_loadsaved:incl =
      {
        bbox = '-16 -16 -16 16 16 16'
        t_Targetname = "!"
        duration: =
        {
          txt = "&"
          hint = "Fade Duration (seconds)"
        }
        holdtime: =
        {
          txt = "&"
          hint = "Hold Fade (seconds)"
        }
        renderamt: =
        {
          txt = "&"
          hint = "Fade Alpha"
        }
        rendercolor: =
        {
          txt = "&"
          hint = "Fade Color (R G B)"
        }
        messagetime: =
        {
          txt = "&"
          hint = "Show Message delay"
        }
        message: =
        {
          txt = "&"
          hint = "Message To Display"
        }
        loadtime: =
        {
          txt = "&"
          hint = "Reload delay"
        }
      }
      player_loadsaved:form =
      {
        t_player_loadsaved = "!"
      }
      t_player_weaponstrip:incl =
      {
        bbox = '-16 -16 -16 16 16 16'
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Strip suit, too"
        }
        m_iAffected: =
        {
          txt = "&"
          hint = "Players to strip"
          typ = "C"
          items = "Activator only (default)"$0D"All players"$0D"All players exce"
           "pt activator"
          values = "0"$0D"1"$0D"2"
        }
      }
      player_weaponstrip:form =
      {
        t_player_weaponstrip = "!"
      }
      t_player_respawn_zone:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
        zonetype: =
        {
          txt = "&"
          hint = "Zone Type"
          typ = "C"
          items = "Respawn all outside"$0D"Respawn all inside"
          values = "0"$0D"1"
        }
      }
      player_respawn_zone:form =
      {
        t_player_respawn_zone = "!"
      }
      t_scripted_sentence:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Targetname = "!"
        t_Targetx = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Fire Once"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Followers Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Interrupt Speech"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Concurrent"
        }
        sentence: =
        {
          txt = "&"
          hint = "Sentence Name"
        }
        entity: =
        {
          txt = "&"
          hint = "Speaker Type"
        }
        duration: =
        {
          txt = "&"
          hint = "Sentence Time"
        }
        radius: =
        {
          txt = "&"
          hint = "Search Radius"
        }
        refire: =
        {
          txt = "&"
          hint = "Delay Before Refire"
        }
        listener: =
        {
          txt = "&"
          hint = "Listener Type"
        }
        volume: =
        {
          txt = "&"
          hint = "Volume 0-10"
        }
        attenuation: =
        {
          txt = "&"
          hint = "Sound Radius"
          typ = "C"
          items = "Small Radius"$0D"Medium Radius"$0D"Large  Radius"$0D"Play Eve"
           "rywhere"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
      }
      scripted_sentence:form =
      {
        t_scripted_sentence = "!"
      }
      t_scripted_sequence:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Targetname = "!"
        t_Targetx = "!"
        t_Angles = "!"
        m_iszEntity: =
        {
          txt = "&"
          hint = "Target Monster"
        }
        m_iszPlay: =
        {
          txt = "&"
          hint = "Action Animation"
        }
        m_iszIdle: =
        {
          txt = "&"
          hint = "Idle Animation"
        }
        m_flRadius: =
        {
          txt = "&"
          hint = "Search Radius"
        }
        m_flRepeat: =
        {
          txt = "&"
          hint = "Repeat Rate ms"
        }
        m_fMoveTo: =
        {
          txt = "&"
          hint = "Move to Position"
          typ = "C"
          items = "No"$0D"Walk"$0D"Run"$0D"Instantaneous"$0D"No - Turn to Face"
          values = "0"$0D"1"$0D"2"$0D"4"$0D"5"
        }
        moveto_radius: =
        {
          txt = "&"
          hint = "Move to Radius"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Repeatable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Leave Corpse"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "No Interruptions"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Override AI"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "No Script Movement"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "No Reset Entity"
        }
      }
      scripted_sequence:form =
      {
        t_scripted_sequence = "!"
      }
      t_speaker:incl =
      {
        t_Targetname = "!"
        preset: =
        {
          txt = "&"
          hint = "Announcement Presets"
          typ = "C"
          items = "None"$0D"C1A0 Announcer"$0D"C1A1 Announcer"$0D"C1A2 Announcer"
           $0D"C1A3 Announcer"$0D"C1A4 Announcer"$0D"C2A1 Announcer"$0D"C2A2 Ann"
           "ouncer"$0D"C2A4 Announcer"$0D"C3A1 Announcer"$0D"C3A2 Announcer"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"9"$0D"11"$0D
           "12"
        }
        message: =
        {
          txt = "&"
          hint = "Sentence Group Name"
        }
        health: =
        {
          txt = "&"
          hint = "Volume (10 = loudest)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start Silent"
        }
      }
      speaker:form =
      {
        t_speaker = "!"
      }
      t_squadmaker:incl =
      {
        bbox = '-16 -16 0 16 16 72'
        t_Targetname = "!"
        t_Angles = "!"
        t_RenderFields = "!"
        t_AttackObject = "!"
        t_NotRevivable = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start ON"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Cyclic"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "MonsterClip"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Prisoner"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Auto Size BBox"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Cyclic Backlog"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "WaitForScript"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1024"
          cap = "No Respawn (Collectible)"
        }
        target: =
        {
          txt = "&"
          hint = "Target On Release"
        }
        monstertype: =
        {
          txt = "&"
          hint = "Monster Type"
        }
        netname: =
        {
          txt = "&"
          hint = "Childrens' Name"
        }
        monstercount: =
        {
          txt = "&"
          hint = "Monster count "
        }
        delay: =
        {
          txt = "&"
          hint = "Delay between spawns"
        }
        m_imaxlivechildren: =
        {
          txt = "&"
          hint = "Max live children"
        }
        spawn_mode: =
        {
          txt = "&"
          hint = "Blocked Spawn Handling"
          typ = "C"
          items = "Legacy, no special handling"$0D"Block, spawn as soon as clear"
           $0D"Force spawn, never block"
          values = "0"$0D"1"$0D"2"
        }
        dmg: =
        {
          txt = "&"
          hint = "Amount of Telefrag Damage"
        }
        trigger_target: =
        {
          txt = "&"
          hint = "TriggerTarget"
        }
        trigger_condition: =
        {
          txt = "&"
          hint = "Trigger Condition"
          typ = "C"
          items = "No Trigger"$0D"See Player, Mad at Player"$0D"Take Damage"$0D"5"
           "0% Health Remaining"$0D"Death"$0D"Hear World"$0D"Hear Player"$0D"Hea"
           "r Combat"$0D"See Player Unconditional"$0D"See Player, Not In Combat"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"7"$0D"8"$0D"9"$0D"10"$0D"11"
        }
        new_body: =
        {
          txt = "&"
          hint = "Body (-1 off)"
        }
        respawn_as_playerally: =
        {
          txt = "&"
          hint = "Is Player Ally"
          typ = "C"
          items = "Default (0)"$0D"Opposite (1)"
          values = "0"$0D"1"
        }
        change_rendermode: =
        {
          txt = "&"
          hint = "Override Render Mode"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        xenmaker: =
        {
          txt = "&"
          hint = "Xenmaker Template Name"
        }
        notsolid: =
        {
          txt = "&"
          hint = "Not Solid"
          typ = "C"
          items = "Default"$0D"No"$0D"Yes"
          values = "-1"$0D"0"$0D"1"
        }
        gag: =
        {
          txt = "&"
          hint = "Gag"
          typ = "C"
          items = "Default"$0D"No"$0D"Yes"
          values = "-1"$0D"0"$0D"1"
        }
        weapons: =
        {
          txt = "&"
          hint = "Weapons (Grunt/Massn/etc)"
          typ = "C"
          items = "Default / No setting"$0D"MP5"$0D"MP5 + HG"$0D"M16 + GL"$0D"Sh"
           "otgun / Sniper Rifle"$0D"Shotgun / Sniper Rifle + HG"$0D"SAW (human_"
           "grunt_ally only!)"$0D"No Weapons (male_assassin only!)"$0D"Rocket La"
           "uncher"$0D"Rocket Launcher + HG"$0D"Sniper Rifle (human_grunt only!)"
           $0D"Sniper Rifle + HG (human_grunt only!)"$0D"Don't drop weapon (HWG "
           "etc)"
          values = "0"$0D"1"$0D"3"$0D"5"$0D"8"$0D"10"$0D"16"$0D"32"$0D"64"$0D"66"
           $0D"128"$0D"130"$0D"256"
        }
        squadname: =
        {
          txt = "&"
          hint = "Squad Name"
        }
        is_squad_leader: =
        {
          txt = "&"
          hint = "Squad Leader"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        displayname: =
        {
          txt = "&"
          hint = "In-game Name"
        }
        bloodcolor: =
        {
          txt = "&"
          hint = "Blood Color"
          typ = "C"
          items = "Monster Default"$0D"No Blood"$0D"Red"$0D"Yellow"
          values = "0"$0D"-1"$0D"1"$0D"2"
        }
        health: =
        {
          txt = "&"
          hint = "Custom Health"
        }
        new_model: =
        {
          txt = "&"
          hint = "Custom Model"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        minhullsize: =
        {
          txt = "&"
          hint = "Custom Min Hull Size (X Y Z)"
        }
        maxhullsize: =
        {
          txt = "&"
          hint = "Custom Max Hull Size (X Y Z)"
        }
        soundlist: =
        {
          txt = "&"
          hint = "Sound Replacement File"
        }
        freeroam: =
        {
          txt = "&"
          hint = "Monster Roaming (nodes)"
          typ = "C"
          items = "Map Default"$0D"Never"$0D"Always"
          values = "0"$0D"1"$0D"2"
        }
        path_name: =
        {
          txt = "&"
          hint = "Path Name"
        }
        guard_ent: =
        {
          txt = "&"
          hint = "Entity to Guard"
        }
        wpn_v_model: =
        {
          txt = "&"
          hint = "V_model (Weapons Only)"
        }
        wpn_w_model: =
        {
          txt = "&"
          hint = "W_model (Weapons Only)"
        }
        wpn_p_model: =
        {
          txt = "&"
          hint = "P_model (Weapons Only)"
        }
        function_name: =
        {
          txt = "&"
          hint = "Angelscript function name"
        }
      }
      squadmaker:form =
      {
        t_squadmaker = "!"
      }
      t_target_cdaudio:incl =
      {
        t_Targetname = "!"
        health: =
        {
          txt = "&"
          hint = "Track #"
          typ = "C"
          items = "Stop"$0D"Track 1"$0D"Track 2"$0D"Track 3"$0D"Track 4"$0D"Trac"
           "k 5"$0D"Track 6"$0D"Track 7"$0D"Track 8"$0D"Track 9"$0D"Track 10"$0D
           "Track 11"$0D"Track 12"$0D"Track 13"$0D"Track 14"$0D"Track 15"$0D"Tra"
           "ck 16"$0D"Track 17"$0D"Track 18"$0D"Track 19"$0D"Track 20"$0D"Track "
           "21"$0D"Track 22"$0D"Track 23"$0D"Track 24"$0D"Track 25"$0D"Track 26"$0D
           "Track 27"$0D"Track 28"$0D"Track 29"$0D"Track 30"
          values = "-1"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D
           "10"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
           "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"$0D"29"$0D
           "30"
        }
      }
      target_cdaudio:form =
      {
        t_target_cdaudio = "!"
      }
      t_trigger_auto:incl =
      {
        t_Targetx = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Remove On fire"
        }
        globalstate: =
        {
          txt = "&"
          hint = "Global State to Read"
        }
        triggerstate: =
        {
          txt = "&"
          hint = "Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
      }
      trigger_auto:form =
      {
        t_trigger_auto = "!"
      }
      t_trigger_autosave:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
        master: =
        {
          txt = "&"
          hint = "Master"
        }
      }
      trigger_autosave:form =
      {
        t_trigger_autosave = "!"
      }
      t_trigger_camera:incl =
      {
        t_Targetx = "!"
        t_Targetname = "!"
        t_Angles = "!"
        wait: =
        {
          txt = "&"
          hint = "Hold time"
        }
        moveto: =
        {
          txt = "&"
          hint = "Path Corner"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start At Player"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Follow Player"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Freeze Player"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "All Players"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Force View"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "No Instant Turn"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Instant Move"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Mouse Cursor"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "Player Invulnerable"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Ignore Hold Time"
        }
        speed: =
        {
          txt = "&"
          hint = "Initial Speed"
        }
        acceleration: =
        {
          txt = "&"
          hint = "Acceleration units/sec^2"
        }
        deceleration: =
        {
          txt = "&"
          hint = "Stop Deceleration units/sec^2"
        }
        turnspeed: =
        {
          txt = "&"
          hint = "Camera Rotation Speed"
        }
        mouse_action_0_0: =
        {
          txt = "&"
          hint = "Left Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"$0D"Spawn"$0D"Teleport"$0D"Teleport Away"$0D
           "Create Explosion"$0D"Drag"$0D"Exit Camera (Non-forced only)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"255"
        }
        mouse_param_0_0: =
        {
          txt = "&"
          hint = "Left Click Param"
        }
        mouse_block_drag_0_0: =
        {
          txt = "&"
          hint = "Left Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_action_1_0: =
        {
          txt = "&"
          hint = "Right Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"$0D"Spawn"$0D"Teleport"$0D"Teleport Away"$0D
           "Create Explosion"$0D"Drag"$0D"Exit Camera (Non-forced only)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"255"
        }
        mouse_param_1_0: =
        {
          txt = "&"
          hint = "Right Click Param"
        }
        mouse_block_drag_1_0: =
        {
          txt = "&"
          hint = "Right Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_action_2_0: =
        {
          txt = "&"
          hint = "Third Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"$0D"Spawn"$0D"Teleport"$0D"Teleport Away"$0D
           "Create Explosion"$0D"Drag"$0D"Exit Camera (Non-forced only)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"255"
        }
        mouse_param_2_0: =
        {
          txt = "&"
          hint = "Third Click Param"
        }
        mouse_block_drag_2_0: =
        {
          txt = "&"
          hint = "Third Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_action_0_1: =
        {
          txt = "&"
          hint = "Left Double Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"$0D"Spawn"$0D"Teleport"$0D"Teleport Away"$0D
           "Create Explosion"$0D"Drag"$0D"Exit Camera (Non-forced only)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"255"
        }
        mouse_param_0_1: =
        {
          txt = "&"
          hint = "Left Double Click Param"
        }
        mouse_block_drag_0_1: =
        {
          txt = "&"
          hint = "Left Double Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_action_1_1: =
        {
          txt = "&"
          hint = "Right Double Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"$0D"Spawn"$0D"Teleport"$0D"Teleport Away"$0D
           "Create Explosion"$0D"Drag"$0D"Exit Camera (Non-forced only)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"255"
        }
        mouse_param_1_1: =
        {
          txt = "&"
          hint = "Right Double Click Param"
        }
        mouse_block_drag_1_1: =
        {
          txt = "&"
          hint = "Right Double Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_action_2_1: =
        {
          txt = "&"
          hint = "Third Double Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"$0D"Spawn"$0D"Teleport"$0D"Teleport Away"$0D
           "Create Explosion"$0D"Drag"$0D"Exit Camera (Non-forced only)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
           "0"$0D"11"$0D"255"
        }
        mouse_param_2_1: =
        {
          txt = "&"
          hint = "Third Double Click Param"
        }
        mouse_block_drag_2_1: =
        {
          txt = "&"
          hint = "Third Double Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_digital_action_reset: =
        {
          txt = "&"
          hint = "Mouse Digital Action Reset Time"
        }
        m_iszASMouseEventCallbackName: =
        {
          txt = "&"
          hint = "AS Mouse Event Callback Name"
        }
        m_iszASKeyInputCallbackName: =
        {
          txt = "&"
          hint = "AS Key Input Callback Name"
        }
        m_iszOverridePlayerTargetname: =
        {
          txt = "&"
          hint = "Set Player Targetname"
        }
        m_iszTargetWhenPlayerStartsUsing: =
        {
          txt = "&"
          hint = "Target when player starts using"
        }
        m_iszTargetWhenPlayerStopsUsing: =
        {
          txt = "&"
          hint = "Target when player stops using"
        }
        m_iszTurnedOffTarget: =
        {
          txt = "&"
          hint = "Target when turned off"
        }
        max_player_count: =
        {
          txt = "&"
          hint = "Max Players"
        }
        max_player_target: =
        {
          txt = "&"
          hint = "Target: Player tried to use, but Max Players reached"
        }
        hud_health: =
        {
          txt = "&"
          hint = "HUD: Health and Battery"
          typ = "C"
          items = "Show Health and Battery"$0D"Hide Health and Battery"
          values = "0"$0D"1"
        }
        hud_flashlight: =
        {
          txt = "&"
          hint = "HUD: Flashlight"
          typ = "C"
          items = "Show Flashlight"$0D"Hide Flashlight"
          values = "0"$0D"1"
        }
        hud_weapons: =
        {
          txt = "&"
          hint = "HUD: Weapons"
          typ = "C"
          items = "Show Weapons"$0D"Hide Weapons"
          values = "0"$0D"1"
        }
        cursor_sprite: =
        {
          txt = "&"
          hint = "Custom Cursor (Sprite)"
        }
      }
      trigger_camera:form =
      {
        t_trigger_camera = "!"
      }
      t_trigger_cameratarget:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Invisible"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Start Off"
        }
        mouse_action_0_0: =
        {
          txt = "&"
          hint = "Left Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        mouse_param_0_0: =
        {
          txt = "&"
          hint = "Left Click Param"
        }
        mouse_block_drag_0_0: =
        {
          txt = "&"
          hint = "Left Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_target_0_0: =
        {
          txt = "&"
          hint = "Left Click Target"
        }
        mouse_action_1_0: =
        {
          txt = "&"
          hint = "Right Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        mouse_param_1_0: =
        {
          txt = "&"
          hint = "Right Click Param"
        }
        mouse_block_drag_1_0: =
        {
          txt = "&"
          hint = "Right Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_target_1_0: =
        {
          txt = "&"
          hint = "Right Click Target"
        }
        mouse_action_2_0: =
        {
          txt = "&"
          hint = "Third Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        mouse_param_2_0: =
        {
          txt = "&"
          hint = "Third Click Param"
        }
        mouse_block_drag_2_0: =
        {
          txt = "&"
          hint = "Third Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_target_2_0: =
        {
          txt = "&"
          hint = "Third Click Target"
        }
        mouse_action_0_1: =
        {
          txt = "&"
          hint = "Left Double Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        mouse_param_0_1: =
        {
          txt = "&"
          hint = "Left Double Click Param"
        }
        mouse_block_drag_0_1: =
        {
          txt = "&"
          hint = "Left Double Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_target_0_1: =
        {
          txt = "&"
          hint = "Left Double Click Target"
        }
        mouse_action_1_1: =
        {
          txt = "&"
          hint = "Right Double Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        mouse_param_1_1: =
        {
          txt = "&"
          hint = "Right Double Click Param"
        }
        mouse_block_drag_1_1: =
        {
          txt = "&"
          hint = "Right Double Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_target_1_1: =
        {
          txt = "&"
          hint = "Right Double Click Target"
        }
        mouse_action_2_1: =
        {
          txt = "&"
          hint = "Third Double Click Action"
          typ = "C"
          items = "No Action"$0D"Trigger Off"$0D"Trigger On"$0D"Trigger Toggle"$0D
           "Remove"$0D"Hurt"$0D"Heal"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        mouse_param_2_1: =
        {
          txt = "&"
          hint = "Third Double Click Param"
        }
        mouse_block_drag_2_1: =
        {
          txt = "&"
          hint = "Third Double Click Block Drag Repeating Action"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        mouse_target_2_1: =
        {
          txt = "&"
          hint = "Third Double Click Target"
        }
        mouse_digital_action_reset: =
        {
          txt = "&"
          hint = "Mouse Digital Action Reset Time"
        }
      }
      trigger_cameratarget:form =
      {
        t_trigger_cameratarget = "!"
      }
      t_trigger_cdaudio:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
        health: =
        {
          txt = "&"
          hint = "Track #"
          typ = "C"
          items = "Stop"$0D"Track 1"$0D"Track 2"$0D"Track 3"$0D"Track 4"$0D"Trac"
           "k 5"$0D"Track 6"$0D"Track 7"$0D"Track 8"$0D"Track 9"$0D"Track 10"$0D
           "Track 11"$0D"Track 12"$0D"Track 13"$0D"Track 14"$0D"Track 15"$0D"Tra"
           "ck 16"$0D"Track 17"$0D"Track 18"$0D"Track 19"$0D"Track 20"$0D"Track "
           "21"$0D"Track 22"$0D"Track 23"$0D"Track 24"$0D"Track 25"$0D"Track 26"$0D
           "Track 27"$0D"Track 28"$0D"Track 29"$0D"Track 30"
          values = "-1"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D
           "10"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
           "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"$0D"29"$0D
           "30"
        }
      }
      trigger_cdaudio:form =
      {
        t_trigger_cdaudio = "!"
      }
      t_trigger_change_class:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        t_AttackObject = "!"
      }
      trigger_change_class:form =
      {
        t_trigger_change_class = "!"
      }
      t_trigger_changelevel:incl =
      {
        t_Targetname = "!"
        t_InventoryRules = "!"
        t_ZHLTbmodel = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "No Intermission"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "USE Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "No CVAR override"
        }
        map: =
        {
          txt = "&"
          hint = "New map name"
        }
        landmark: =
        {
          txt = "&"
          hint = "Landmark name"
        }
        keep_inventory: =
        {
          txt = "&"
          hint = "Players take inventory to new map"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        changetarget: =
        {
          txt = "&"
          hint = "Change Target"
        }
        changedelay: =
        {
          txt = "&"
          hint = "Delay before change target"
        }
        percent_of_players: =
        {
          txt = "&"
          hint = "Percentage of players needed"
        }
      }
      trigger_changelevel:form =
      {
        t_trigger_changelevel = "!"
      }
      t_trigger_changemaxammo:incl =
      {
        t_Targetname = "!"
        target: =
        {
          txt = "&"
          hint = "Trigger after fire"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "All players"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Remove excess ammo"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Set ammo to new max"
        }
        message: =
        {
          txt = "&"
          hint = "Ammo name"
          typ = "C"
          items = "9mm Rounds"$0D"Crossbow Bolts"$0D".357 Rounds"$0D"Uranium Amm"
           "o"$0D"Hand Grenades"$0D"Hornets"$0D"5.56 Rounds"$0D"AR Grenades"$0D"H"
           "ealth (Medkit Ammo)"$0D"Rockets"$0D"Satchel Charges"$0D"Shock Rifle "
           "Ammo"$0D"Shotgun Ammo"$0D"Sniper Rifle Ammo"$0D"Spore Launcher Ammo"$0D
           "Snarks"$0D"Trip Mines"
          values = "9mm"$0D"bolts"$0D"357"$0D"uranium"$0D"Hand Grenade"$0D"Horne"
           "ts"$0D"556"$0D"ARgrenades"$0D"health"$0D"rockets"$0D"Satchel Charge"$0D
           "shock charges"$0D"buckshot"$0D"m40a1"$0D"sporeclip"$0D"Snarks"$0D"Tr"
           "ip Mine"
        }
        m_iMaxAmmo: =
        {
          txt = "&"
          hint = "Value to use"
        }
        m_Mode: =
        {
          txt = "&"
          hint = "Change Max Ammo Mode"
          typ = "C"
          items = "Set"$0D"Reset"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
      }
      trigger_changemaxammo:form =
      {
        t_trigger_changemaxammo = "!"
      }
      t_trigger_changemodel:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        model: =
        {
          txt = "&"
          hint = "New Model Name"
          typ = "B"
          Cap = "models..."
          form = "t_models_hl2_form:form"
        }
        skin: =
        {
          txt = "&"
          hint = "Skin"
        }
      }
      trigger_changemodel:form =
      {
        t_trigger_changemodel = "!"
      }
      t_trigger_changetarget:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        m_iszNewTarget: =
        {
          txt = "&"
          hint = "New Target"
        }
      }
      trigger_changetarget:form =
      {
        t_trigger_changetarget = "!"
      }
      t_trigger_changesky:incl =
      {
        t_Targetname = "!"
        skyname: =
        {
          txt = "&"
          hint = "Sky Name"
        }
        color: =
        {
          txt = "&"
          hint = "Color"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "All players"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "No clients"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Update server"
        }
      }
      trigger_changesky:form =
      {
        t_trigger_changesky = "!"
      }
      t_trigger_changevalue:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Don't use X"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Don't use Y"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Don't use Z"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Invert target value"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Invert source value"
        }
        target: =
        {
          txt = "&"
          hint = "Destination entity"
        }
        m_iszValueName: =
        {
          txt = "&"
          hint = "Destination key"
        }
        m_iszNewValue: =
        {
          txt = "&"
          hint = "Source value"
        }
        m_iszValueType: =
        {
          txt = "&"
          hint = "Action"
          typ = "C"
          items = "Replace (= source)"$0D"Add (= old + source)"$0D"Mul (= old * "
           "source)"$0D"Sub (= old - source)"$0D"Div (= old / source)"$0D"Pow (="
           " old ^ source)"$0D"Mod (= old % source)"$0D"AND (= old & source)"$0D
           "OR (= old | source)"$0D"XOR (= old ^ source)"$0D"NAND (= !(old & sou"
           "rce))"$0D"NOR (= !(old | source))"$0D"NXOR (= !(old ^ source))"$0D"A"
           "ppend (String concatenation)"$0D"Sin (= sin(source))"$0D"Cos (= cos("
           "source))"$0D"Tan (= tan(source))"$0D"Cot (= cot(source))"$0D"Arcsin "
           "(= arcsin(source))"$0D"Arccos (= arccos(source))"$0D"Arctan (= arcta"
           "n(source))"$0D"Arccot (= arccot(source))"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"16"$0D"12"$0D"5"$0D"6"$0D"13"$0D
           "7"$0D"8"$0D"14"$0D"11"$0D"17"$0D"18"$0D"19"$0D"23"$0D"20"$0D"21"$0D"2"
           "2"$0D"24"
        }
        m_trigonometricBehaviour: =
        {
          txt = "&"
          hint = "Trigonometric funcs. I/O"
          typ = "C"
          items = "Degrees in (out for arc.)"$0D"Radian measure in (out for arc."
           ")"
          values = "0"$0D"1"
        }
        m_iAppendSpaces: =
        {
          txt = "&"
          hint = "Append spaces (for strings)"
        }
        message: =
        {
          txt = "&"
          hint = "Trigger after action"
        }
      }
      trigger_changevalue:form =
      {
        t_trigger_changevalue = "!"
      }
      t_trigger_copyvalue:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Don't use X"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Don't use Y"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Don't use Z"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Constant"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Start On"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Invert target value"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Invert source value"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Multiple destinations"
        }
        netname: =
        {
          txt = "&"
          hint = "Source entity"
        }
        m_iszSrcValueName: =
        {
          txt = "&"
          hint = "Source key"
        }
        target: =
        {
          txt = "&"
          hint = "Destination entity"
        }
        m_iszDstValueName: =
        {
          txt = "&"
          hint = "Destination key"
        }
        m_iszValueType: =
        {
          txt = "&"
          hint = "Action"
          typ = "C"
          items = "Replace (= source)"$0D"Add (= old + source)"$0D"Mul (= old * "
           "source)"$0D"Sub (= old - source)"$0D"Div (= old / source)"$0D"Pow (="
           " old ^ source)"$0D"Mod (= old % source)"$0D"AND (= old & source)"$0D
           "OR (= old | source)"$0D"XOR (= old ^ source)"$0D"NAND (= !(old & sou"
           "rce))"$0D"NOR (= !(old | source))"$0D"NXOR (= !(old ^ source))"$0D"D"
           "irection to Angles"$0D"Angles to Direction"$0D"Append (String concat"
           "enation)"$0D"Sin (= sin(source))"$0D"Cos (= cos(source))"$0D"Tan (= "
           "tan(source))"$0D"Cot (= cot(source))"$0D"Arcsin (= arcsin(source))"$0D
           "Arccos (= arccos(source))"$0D"Arctan (= arctan(source))"$0D"Arccot ("
           "= arccot(source))"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"16"$0D"12"$0D"5"$0D"6"$0D"13"$0D
           "7"$0D"8"$0D"14"$0D"9"$0D"10"$0D"11"$0D"17"$0D"18"$0D"19"$0D"23"$0D"2"
           "0"$0D"21"$0D"22"$0D"24"
        }
        m_iFloatConversion: =
        {
          txt = "&"
          hint = "Float-to-string/-int conversion"
          typ = "C"
          items = "6 decimal places (Default)"$0D"5 d. p., rounded to 5 d. p."$0D
           "4 d. p., rounded to 4 d. p."$0D"3 d. p., rounded to 3 d. p."$0D"2 d."
           " p., rounded to 2 d. p."$0D"1 d. p., rounded to 1 d. p."$0D"Integer,"
           " rounded"$0D"Integer, rounded up"$0D"Integer, rounded down"
          values = "0"$0D"1"$0D"4"$0D"7"$0D"10"$0D"13"$0D"16"$0D"17"$0D"18"
        }
        m_trigonometricBehaviour: =
        {
          txt = "&"
          hint = "Trigonometric funcs. I/O"
          typ = "C"
          items = "Degrees in (out for arc.)"$0D"Radian measure in (out for arc."
           ")"
          values = "0"$0D"1"
        }
        m_iAppendSpaces: =
        {
          txt = "&"
          hint = "Append spaces (for strings)"
        }
        message: =
        {
          txt = "&"
          hint = "Trigger after action"
        }
        dmg: =
        {
          txt = "&"
          hint = "Copy-interval (seconds)"
        }
      }
      trigger_copyvalue:form =
      {
        t_trigger_copyvalue = "!"
      }
      t_trigger_condition:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start Off"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Don't use X (R)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Don't use Y (G)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Don't use Z (B)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Don't use W (A)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Cyclic; no toggle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Keep '!activator'"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Ignore initial result"
        }
        target: =
        {
          txt = "&"
          hint = "Monitored entity"
        }
        m_iszValueName: =
        {
          txt = "&"
          hint = "Monitored key"
        }
        m_iszSourceName: =
        {
          txt = "&"
          hint = "Compare-entity"
        }
        m_iszSourceKey: =
        {
          txt = "&"
          hint = "Compare-key"
        }
        m_iszCheckValue: =
        {
          txt = "&"
          hint = "Compare-value (alternative)"
        }
        m_iCheckType: =
        {
          txt = "&"
          hint = "Comparator; mon. val. -> comp.-val."
          typ = "C"
          items = "== (Equal)"$0D"!= (Not equal)"$0D"< (Less)"$0D"> (Greater)"$0D
           "<= (Less or equal)"$0D">= (Greater or equal)"$0D"& (Logical AND)"
          values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        }
        netname: =
        {
          txt = "&"
          hint = "Target for 'true'-case"
        }
        message: =
        {
          txt = "&"
          hint = "Target for 'false'-case"
        }
        m_iCheckBehaviour: =
        {
          txt = "&"
          hint = "Constant mode trigger behaviour"
          typ = "C"
          items = "Fire true/false alternatingly"$0D"Only wait after false"$0D"O"
           "nly wait after true"$0D"Always fire for both"
          values = "0"$0D"1"$0D"2"$0D"3"
        }
        m_fCheckInterval: =
        {
          txt = "&"
          hint = "Check-interval (seconds)"
        }
      }
      trigger_condition:form =
      {
        t_trigger_condition = "!"
      }
      t_trigger_counter:incl =
      {
        t_Trigger = "!"
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "No Message"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        count: =
        {
          txt = "&"
          hint = "Count before activation"
        }
      }
      trigger_counter:form =
      {
        t_trigger_counter = "!"
      }
      t_trigger_createentity:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        m_iszCrtEntChildClass: =
        {
          txt = "&"
          hint = "Child Classname"
        }
        m_iszCrtEntChildName: =
        {
          txt = "&"
          hint = "Child Targetname"
        }
      }
      trigger_createentity:form =
      {
        t_trigger_createentity = "!"
      }
      t_trigger_cyclicobserver:incl =
      {
        bbox = '-8 -8 -8 8 8 8'
        t_Targetname = "!"
        t_Target = "!"
        m_Mode: =
        {
          txt = "&"
          hint = "Mode to use"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
      }
      trigger_cyclicobserver:form =
      {
        t_trigger_cyclicobserver = "!"
      }
      t_trigger_effect:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        effect_glow_mode: =
        {
          txt = "&"
          hint = "Glow shell mode"
          typ = "C"
          items = "No change"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"
        }
        effect_glow: =
        {
          txt = "&"
          hint = "Glow shell color (R G B)"
        }
        effect_block_weapons_mode: =
        {
          txt = "&"
          hint = "Block weapons"
          typ = "C"
          items = "No change"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"
        }
        effect_invulnerable_mode: =
        {
          txt = "&"
          hint = "Invulnerable"
          typ = "C"
          items = "No change"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"
        }
        effect_invisible_mode: =
        {
          txt = "&"
          hint = "Invisible"
          typ = "C"
          items = "No change"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"
        }
        effect_nonsolid_mode: =
        {
          txt = "&"
          hint = "Non-solid"
          typ = "C"
          items = "No change"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"
        }
        effect_respiration_mode: =
        {
          txt = "&"
          hint = "Time before drown mode"
          typ = "C"
          items = "No change"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"
        }
        effect_respiration: =
        {
          txt = "&"
          hint = "Time before drown (seconds)"
        }
        effect_friction_mode: =
        {
          txt = "&"
          hint = "Friction modifier mode"
          typ = "C"
          items = "No change"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"
        }
        effect_friction: =
        {
          txt = "&"
          hint = "Friction modifier (%)"
        }
        effect_gravity_mode: =
        {
          txt = "&"
          hint = "Gravity modifier mode"
          typ = "C"
          items = "No change"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"
        }
        effect_gravity: =
        {
          txt = "&"
          hint = "Gravity modifier (%)"
        }
        effect_speed_mode: =
        {
          txt = "&"
          hint = "Speed modifier mode"
          typ = "C"
          items = "No change"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"
        }
        effect_speed: =
        {
          txt = "&"
          hint = "Speed modifier (%)"
        }
        effect_damage_mode: =
        {
          txt = "&"
          hint = "Damage modifier mode"
          typ = "C"
          items = "No change"$0D"Add"$0D"Subtract"
          values = "0"$0D"1"$0D"2"
        }
        effect_damage: =
        {
          txt = "&"
          hint = "Damage modifier (%)"
        }
      }
      trigger_effect:form =
      {
        t_trigger_effect = "!"
      }
      t_trigger_endsection:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
        section: =
        {
          txt = "&"
          hint = "Section"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "USE Only"
        }
      }
      trigger_endsection:form =
      {
        t_trigger_endsection = "!"
      }
      t_trigger_entity_iterator:incl =
      {
        bbox = '-12 -12 -12 12 12 12'
        t_Targetname = "!"
        name_filter: =
        {
          txt = "&"
          hint = "Filter Entities by Name"
        }
        classname_filter: =
        {
          txt = "&"
          hint = "Filter Entities by Classname"
        }
        status_filter: =
        {
          txt = "&"
          hint = "Filter Entities by Status"
          typ = "C"
          items = "No Filter (default)"$0D"Only Living Entities"$0D"Only Dead En"
           "tities"
          values = "0"$0D"1"$0D"2"
        }
        delay_between_triggers: =
        {
          txt = "&"
          hint = "Delay between Entities (secs)"
        }
        target: =
        {
          txt = "&"
          hint = "Entity's Trigger Target"
        }
        triggerstate: =
        {
          txt = "&"
          hint = "Entity's Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
        run_mode: =
        {
          txt = "&"
          hint = "Run Mode"
          typ = "C"
          items = "Run Once"$0D"Run Once; Multi-threaded"$0D"Toggle On/Off"
          values = "0"$0D"1"$0D"2"
        }
        trigger_after_run: =
        {
          txt = "&"
          hint = "Trigger at end of each Run"
        }
        maximum_runs: =
        {
          txt = "&"
          hint = "Maximum Runs (0 for unlimited)"
        }
        delay_between_runs: =
        {
          txt = "&"
          hint = "Delay before Restarting (secs)"
        }
      }
      trigger_entity_iterator:form =
      {
        t_trigger_entity_iterator = "!"
      }
      t_trigger_gravity:incl =
      {
        t_Trigger = "!"
        gravity: =
        {
          txt = "&"
          hint = "Gravity (0-1)"
        }
      }
      trigger_gravity:form =
      {
        t_trigger_gravity = "!"
      }
      t_trigger_hurt:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        t_InventoryRules = "!"
        t_ZHLTbmodel = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Target Once"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Start Off"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "No clients"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "FireClientOnly"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "TouchClientOnly"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Affect non-moving NPC's"
        }
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        dmg: =
        {
          txt = "&"
          hint = "Damage"
        }
        delay: =
        {
          txt = "&"
          hint = "Delay before trigger"
        }
        damagetype: =
        {
          txt = "&"
          hint = "Damage Type"
          typ = "C"
          items = "GENERIC"$0D"CRUSH"$0D"BULLET"$0D"SLASH"$0D"BURN"$0D"FREEZE"$0D
           "FALL"$0D"BLAST"$0D"CLUB"$0D"SHOCK"$0D"SONIC"$0D"ENERGYBEAM"$0D"DROWN"
           $0D"PARALYSE"$0D"NERVEGAS"$0D"POISON"$0D"RADIATION"$0D"DROWNRECOVER"$0D
           "CHEMICAL"$0D"SLOWBURN"$0D"SLOWFREEZE"
          values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"2"
           "56"$0D"512"$0D"1024"$0D"16384"$0D"32768"$0D"65536"$0D"131072"$0D"262"
           "144"$0D"524288"$0D"1048576"$0D"2097152"$0D"4194304"
        }
      }
      trigger_hurt:form =
      {
        t_trigger_hurt = "!"
      }
      t_trigger_hurt_remote:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Instant Kill"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Constant"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Start On"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Do Armor"
        }
        targetclass: =
        {
          txt = "&"
          hint = "Target Class"
        }
        dmg: =
        {
          txt = "&"
          hint = "Damage"
        }
        armordmg: =
        {
          txt = "&"
          hint = "Armor Damage"
        }
        delay: =
        {
          txt = "&"
          hint = "Delay (Only when Constant)"
        }
        damagetype: =
        {
          txt = "&"
          hint = "Damage Type"
          typ = "C"
          items = "GENERIC"$0D"CRUSH"$0D"BULLET"$0D"SLASH"$0D"BURN"$0D"FREEZE"$0D
           "FALL"$0D"BLAST"$0D"CLUB"$0D"SHOCK"$0D"SONIC"$0D"ENERGYBEAM"$0D"DROWN"
           $0D"PARALYSE"$0D"NERVEGAS"$0D"POISON"$0D"RADIATION"$0D"DROWNRECOVER"$0D
           "CHEMICAL"$0D"SLOWBURN"$0D"SLOWFREEZE"
          values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"2"
           "56"$0D"512"$0D"1024"$0D"16384"$0D"32768"$0D"65536"$0D"131072"$0D"262"
           "144"$0D"524288"$0D"1048576"$0D"2097152"$0D"4194304"
        }
      }
      trigger_hurt_remote:form =
      {
        t_trigger_hurt_remote = "!"
      }
      t_trigger_load:incl =
      {
        t_Targetname = "!"
        m_iszLevelName: =
        {
          txt = "&"
          hint = "Alternate Level Save File"
        }
        netname: =
        {
          txt = "&"
          hint = "Label to read from"
        }
        target: =
        {
          txt = "&"
          hint = "Destination Entity"
        }
        message: =
        {
          txt = "&"
          hint = "Destination Keyvalue"
        }
        m_iszTrigger: =
        {
          txt = "&"
          hint = "Trigger after loading"
        }
      }
      trigger_load:form =
      {
        t_trigger_load = "!"
      }
      t_trigger_lookat:incl =
      {
        t_Targetname = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start On"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Set Once"
        }
        target: =
        {
          txt = "&"
          hint = "Target"
        }
        message: =
        {
          txt = "&"
          hint = "Entity to look at"
        }
      }
      trigger_lookat:form =
      {
        t_trigger_lookat = "!"
      }
      t_trigger_monsterjump:incl =
      {
        t_Angles = "!"
        t_ZHLTbmodel = "!"
        master: =
        {
          txt = "&"
          hint = "Master"
        }
        speed: =
        {
          txt = "&"
          hint = "Jump Speed"
        }
        height: =
        {
          txt = "&"
          hint = "Jump Height"
        }
      }
      trigger_monsterjump:form =
      {
        t_trigger_monsterjump = "!"
      }
      t_trigger_multiple:incl =
      {
        t_Trigger = "!"
        wait: =
        {
          txt = "&"
          hint = "Delay before reset"
        }
      }
      trigger_multiple:form =
      {
        t_trigger_multiple = "!"
      }
      t_trigger_numericdisplay:incl =
      {
        bbox = '-16 -16 -16 16 16 16'
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start On"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Cyclic"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Ignore leading zeroes"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Zero as leading"
        }
        target: =
        {
          txt = "&"
          hint = "Entity to track"
        }
        netname: =
        {
          txt = "&"
          hint = "Key to read"
        }
        message: =
        {
          txt = "&"
          hint = "Base digit name"
        }
        frags: =
        {
          txt = "&"
          hint = "Update delay"
        }
      }
      trigger_numericdisplay:form =
      {
        t_trigger_numericdisplay = "!"
      }
      t_trigger_once:incl =
      {
        t_Trigger = "!"
      }
      trigger_once:form =
      {
        t_trigger_once = "!"
      }
      t_trigger_push:incl =
      {
        t_Trigger = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Once Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Start Off"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "No Clients"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "No Monsters"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Force push"
        }
        speed: =
        {
          txt = "&"
          hint = "Speed of push"
        }
      }
      trigger_push:form =
      {
        t_trigger_push = "!"
      }
      t_BaseRandom:incl =
      {
        t_Targetname = "!"
        target_count: =
        {
          txt = "&"
          hint = "Target Count"
        }
        target1: =
        {
          txt = "&"
          hint = "Target 1"
        }
        target2: =
        {
          txt = "&"
          hint = "Target 2"
        }
        target3: =
        {
          txt = "&"
          hint = "Target 3"
        }
        target4: =
        {
          txt = "&"
          hint = "Target 4"
        }
        target5: =
        {
          txt = "&"
          hint = "Target 5"
        }
        target6: =
        {
          txt = "&"
          hint = "Target 6"
        }
        target7: =
        {
          txt = "&"
          hint = "Target 7"
        }
        target8: =
        {
          txt = "&"
          hint = "Target 8"
        }
        target9: =
        {
          txt = "&"
          hint = "Target 9"
        }
        target10: =
        {
          txt = "&"
          hint = "Target 10"
        }
        target11: =
        {
          txt = "&"
          hint = "Target 11"
        }
        target12: =
        {
          txt = "&"
          hint = "Target 12"
        }
        target13: =
        {
          txt = "&"
          hint = "Target 13"
        }
        target14: =
        {
          txt = "&"
          hint = "Target 14"
        }
        target15: =
        {
          txt = "&"
          hint = "Target 15"
        }
        target16: =
        {
          txt = "&"
          hint = "Target 16"
        }
      }
      t_trigger_random:incl =
      {
        t_BaseRandom = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start On (Timed only)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Trigger Once (Timed only)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Reusable (Unique only)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Timed"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Unique"
        }
        min_delay: =
        {
          txt = "&"
          hint = "Minimum Delay (0 = off)"
        }
        max_delay: =
        {
          txt = "&"
          hint = "Maximum Delay (0 = off)"
        }
      }
      trigger_random:form =
      {
        t_trigger_random = "!"
      }
      t_trigger_random_time:incl =
      {
        t_trigger_random = "!"
      }
      trigger_random_time:form =
      {
        t_trigger_random_time = "!"
      }
      t_trigger_random_unique:incl =
      {
        t_BaseRandom = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Re-usable"
        }
      }
      trigger_random_unique:form =
      {
        t_trigger_random_unique = "!"
      }
      t_trigger_relay:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Remove On fire"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Keep '!activator'"
        }
        triggerstate: =
        {
          txt = "&"
          hint = "Trigger State"
          typ = "C"
          items = "Off"$0D"On"$0D"Toggle"
          values = "0"$0D"1"$0D"2"
        }
        m_flDelayBeforeReset: =
        {
          txt = "&"
          hint = "Delay Before Reset"
        }
      }
      trigger_relay:form =
      {
        t_trigger_relay = "!"
      }
      t_trigger_renameplayer:incl =
      {
        t_Targetname = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Reusable"
        }
        netname: =
        {
          txt = "&"
          hint = "New Player Targetname"
        }
      }
      trigger_renameplayer:form =
      {
        t_trigger_renameplayer = "!"
      }
      t_trigger_respawn:incl =
      {
        bbox = '-16 -16 -16 16 16 16'
        t_Targetname = "!"
        t_Target = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Respawn Target"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Respawn dead players"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Don't move living players"
        }
      }
      trigger_respawn:form =
      {
        t_trigger_respawn = "!"
      }
      t_trigger_save:incl =
      {
        t_Targetname = "!"
        netname: =
        {
          txt = "&"
          hint = "Label to store in"
        }
        target: =
        {
          txt = "&"
          hint = "Source Entity"
        }
        message: =
        {
          txt = "&"
          hint = "Source Keyvalue"
        }
        m_iszTrigger: =
        {
          txt = "&"
          hint = "Trigger after saving"
        }
      }
      trigger_save:form =
      {
        t_trigger_save = "!"
      }
      t_trigger_script:incl =
      {
        t_Targetname = "!"
        t_Targetx = "!"
        m_iszScriptFile: =
        {
          txt = "&"
          hint = "Script to load"
        }
        m_iszScriptFunctionName: =
        {
          txt = "&"
          hint = "Function to execute on trigger"
        }
        m_flThinkDelta: =
        {
          txt = "&"
          hint = "Time between thinks"
        }
        m_iMode: =
        {
          txt = "&"
          hint = "Mode"
          typ = "C"
          items = "Trigger"$0D"Think"
          values = "1"$0D"2"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Start on"
        }
      }
      trigger_script:form =
      {
        t_trigger_script = "!"
      }
      t_trigger_setcvar:incl =
      {
        t_Targetname = "!"
        m_iszCVarToChange: =
        {
          txt = "&"
          hint = "CVAR (only these are allowed)"
          typ = "C"
          items = "mp_allowmonsterinfo"$0D"mp_banana"$0D"mp_barnacle_paralyze"$0D
           "mp_disablegaussjump"$0D"mp_disable_autoclimb"$0D"mp_disable_pcbalanc"
           "ing"$0D"mp_disable_player_rappel"$0D"mp_dropweapons"$0D"mp_falldamag"
           "e"$0D"mp_flashlight"$0D"mp_forcerespawn"$0D"mp_fraglimit"$0D"mp_grap"
           "ple_mode"$0D"mp_monsterpoints"$0D"mp_noblastgibs"$0D"mp_nomedkit"$0D
           "mp_no_akimbo_uzis"$0D"mp_npckill"$0D"mp_pcbalancing_factorlist"$0D"m"
           "p_respawndelay"$0D"mp_timelimit"$0D"mp_weaponstay"$0D"mp_weapon_resp"
           "awndelay"$0D"mp_ammo_respawndelay"$0D"mp_item_respawndelay"$0D"npc_d"
           "ropweapons"$0D"skill"$0D"sk_* (see skill.cfg)"$0D"sv_ai_enemy_detect"
           "ion_mode"$0D"sv_accelerate"$0D"sv_airaccelerate"$0D"sv_friction"$0D"s"
           "v_gravity"$0D"sv_maxspeed"$0D"sv_wateraccelerate"$0D"sv_waterfrictio"
           "n"
          values = "mp_allowmonsterinfo"$0D"mp_banana"$0D"mp_barnacle_paralyze"$0D
           "mp_disablegaussjump"$0D"mp_disable_autoclimb"$0D"mp_disable_pcbalanc"
           "ing"$0D"mp_disable_player_rappel"$0D"mp_dropweapons"$0D"mp_falldamag"
           "e"$0D"mp_flashlight"$0D"mp_forcerespawn"$0D"mp_fraglimit"$0D"mp_grap"
           "ple_mode"$0D"mp_monsterpoints"$0D"mp_noblastgibs"$0D"mp_nomedkit"$0D
           "mp_no_akimbo_uzis"$0D"mp_npckill"$0D"mp_pcbalancing_factorlist"$0D"m"
           "p_respawndelay"$0D"mp_timelimit"$0D"mp_weaponstay"$0D"mp_weapon_resp"
           "awndelay"$0D"mp_ammo_respawndelay"$0D"mp_item_respawndelay"$0D"npc_d"
           "ropweapons"$0D"skill"$0D"sk_"$0D"sv_ai_enemy_detection_mode"$0D"sv_a"
           "ccelerate"$0D"sv_airaccelerate"$0D"sv_friction"$0D"sv_gravity"$0D"sv"
           "_maxspeed"$0D"sv_wateraccelerate"$0D"sv_waterfriction"
        }
        message: =
        {
          txt = "&"
          hint = "New Value"
        }
        netname: =
        {
          txt = "&"
          hint = "Trigger after set"
        }
        SetType: =
        {
          txt = "&"
          hint = "Which CVARs to set"
          typ = "C"
          items = "All"$0D"Engine"$0D"Angelscript"
          values = "0"$0D"1"$0D"2"
        }
      }
      trigger_setcvar:form =
      {
        t_trigger_setcvar = "!"
      }
      t_trigger_setorigin:incl =
      {
        bbox = '-8 -8 -8 8 8 8'
        t_Targetname = "!"
        t_Target = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Constant"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Set Once"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Lock Offsets"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X16"
          cap = "Copy X Angle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X32"
          cap = "Copy Y Angle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Copy Z Angle"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Copy X Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "Copy Y Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Copy Z Axis"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1024"
          cap = "Skip Initial Set"
        }
        copypointer: =
        {
          txt = "&"
          hint = "Copy Pointer"
        }
        offset: =
        {
          txt = "&"
          hint = "Position Offset (X Y Z)"
        }
        angleoffset: =
        {
          txt = "&"
          hint = "Angle Offset (X Y Z)"
        }
        invert_x: =
        {
          txt = "&"
          hint = "Invert X Angle"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        invert_y: =
        {
          txt = "&"
          hint = "Invert Y Angle"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        invert_z: =
        {
          txt = "&"
          hint = "Invert Z Angle"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      trigger_setorigin:form =
      {
        t_trigger_setorigin = "!"
      }
      t_trigger_teleport:incl =
      {
        t_Trigger = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Random Destination"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Relative Teleport"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "Keep Angles"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Keep velocity"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X1024"
          cap = "Rotate (Dest Angles)"
        }
        teleport_cooldown: =
        {
          txt = "&"
          hint = "Teleport Cooldown Delay"
        }
        teleport_ignore_delay: =
        {
          txt = "&"
          hint = "Ignore Delays"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        teleport_start_inactive: =
        {
          txt = "&"
          hint = "Start Inactive"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
        teleport_if_blocked: =
        {
          txt = "&"
          hint = "Teleport If Blocked"
          typ = "C"
          items = "No"$0D"Yes"
          values = "0"$0D"1"
        }
      }
      trigger_teleport:form =
      {
        t_trigger_teleport = "!"
      }
      t_trigger_track_goal:incl =
      {
        t_Targetname = "!"
        t_Target = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Stopped Only"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Don't move if no path available"
        }
        path_name: =
        {
          txt = "&"
          hint = "Path Name"
        }
        m_iszSoundNoPath: =
        {
          txt = "&"
          hint = "Sound to play if no path is available"
        }
      }
      trigger_track_goal:form =
      {
        t_trigger_track_goal = "!"
      }
      t_trigger_transition:incl =
      {
        t_Targetname = "!"
        t_ZHLTbmodel = "!"
      }
      trigger_transition:form =
      {
        t_trigger_transition = "!"
      }
      t_trigger_vote:incl =
      {
        t_Targetname = "!"
        message: =
        {
          txt = "&"
          hint = "Vote Message"
        }
        frags: =
        {
          txt = "&"
          hint = "Time To Vote (Seconds)"
        }
        health: =
        {
          txt = "&"
          hint = "Percentage needed"
        }
        target: =
        {
          txt = "&"
          hint = "Yes Target"
        }
        netname: =
        {
          txt = "&"
          hint = "No Target"
        }
        noise: =
        {
          txt = "&"
          hint = "No Vote Target"
        }
        m_iszYesString: =
        {
          txt = "&"
          hint = "Yes string (optional)"
        }
        m_iszNoString: =
        {
          txt = "&"
          hint = "No string (optional)"
        }
      }
      trigger_vote:form =
      {
        t_trigger_vote = "!"
      }
      t_weapon_357:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_357:form =
      {
        t_weapon_357 = "!"
      }
      t_weapon_9mmAR:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_9mmAR:form =
      {
        t_weapon_9mmAR = "!"
      }
      t_weapon_9mmhandgun:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_9mmhandgun:form =
      {
        t_weapon_9mmhandgun = "!"
      }
      t_weapon_crossbow:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
        sequence: =
        {
          txt = "&"
          hint = "Placement"
          typ = "C"
          items = "Normal (flat)"$0D"Realistic (tilted)"
          values = "0"$0D"1"
        }
      }
      weapon_crossbow:form =
      {
        t_weapon_crossbow = "!"
      }
      t_weapon_crowbar:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_crowbar:form =
      {
        t_weapon_crowbar = "!"
      }
      t_weapon_displacer:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X64"
          cap = "Random Destination"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X128"
          cap = "Rotate (Dest Angles)"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X256"
          cap = "Keep Angles"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X512"
          cap = "Keep velocity"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4096"
          cap = "Ignore delay"
        }
        m_TertiaryMode: =
        {
          txt = "&"
          hint = "Tertiary fire mode"
          typ = "C"
          items = "Default (weaponmode_displacer)"$0D"Disable"$0D"Enable"
          values = "0"$0D"1"$0D"2"
        }
        m_flPortalSpeed: =
        {
          txt = "&"
          hint = "Portal Speed"
        }
        m_flPortalRadius: =
        {
          txt = "&"
          hint = "Portal Radius"
        }
        m_iszTeleportDestination: =
        {
          txt = "&"
          hint = "Teleport destination"
        }
        m_flPrimaryAmmoNeeded: =
        {
          txt = "&"
          hint = "Ammo needed/used to fire primary"
        }
        m_flSecondaryAmmoNeeded: =
        {
          txt = "&"
          hint = "Ammo needed/used to fire secondary"
        }
        m_flTertiaryAmmoNeeded: =
        {
          txt = "&"
          hint = "Ammo needed/used to fire tertiary"
        }
      }
      weapon_displacer:form =
      {
        t_weapon_displacer = "!"
      }
      t_weapon_eagle:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_eagle:form =
      {
        t_weapon_eagle = "!"
      }
      t_weapon_egon:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_egon:form =
      {
        t_weapon_egon = "!"
      }
      t_weapon_gauss:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_gauss:form =
      {
        t_weapon_gauss = "!"
      }
      t_weapon_grapple:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_grapple:form =
      {
        t_weapon_grapple = "!"
      }
      t_weapon_handgrenade:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_handgrenade:form =
      {
        t_weapon_handgrenade = "!"
      }
      t_weapon_hornetgun:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_hornetgun:form =
      {
        t_weapon_hornetgun = "!"
      }
      t_weapon_m16:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_m16:form =
      {
        t_weapon_m16 = "!"
      }
      t_weapon_m249:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_m249:form =
      {
        t_weapon_m249 = "!"
      }
      t_weapon_medkit:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_medkit:form =
      {
        t_weapon_medkit = "!"
      }
      t_weapon_minigun:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
      }
      weapon_minigun:form =
      {
        t_weapon_minigun = "!"
      }
      t_weapon_pipewrench:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_pipewrench:form =
      {
        t_weapon_pipewrench = "!"
      }
      t_weapon_rpg:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_rpg:form =
      {
        t_weapon_rpg = "!"
      }
      t_weapon_satchel:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_satchel:form =
      {
        t_weapon_satchel = "!"
      }
      t_weapon_shockrifle:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
      }
      weapon_shockrifle:form =
      {
        t_weapon_shockrifle = "!"
      }
      t_weapon_shotgun:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_shotgun:form =
      {
        t_weapon_shotgun = "!"
      }
      t_weapon_snark:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_snark:form =
      {
        t_weapon_snark = "!"
      }
      t_weapon_sniperrifle:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_sniperrifle:form =
      {
        t_weapon_sniperrifle = "!"
      }
      t_weapon_sporelauncher:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_sporelauncher:form =
      {
        t_weapon_sporelauncher = "!"
      }
      t_weapon_tripmine:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_tripmine:form =
      {
        t_weapon_tripmine = "!"
      }
      t_weapon_uzi:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_uzi:form =
      {
        t_weapon_uzi = "!"
      }
      t_weapon_uziakimbo:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        t_ExclusiveHold = "!"
      }
      weapon_uziakimbo:form =
      {
        t_weapon_uziakimbo = "!"
      }
      t_weaponbox:incl =
      {
        t_Item = "!"
        t_CustomRespawnDelay = "!"
        bullet9mm: =
        {
          txt = "&"
          hint = "Packed 9mm rounds"
        }
        bullet357: =
        {
          txt = "&"
          hint = "Packed 357 rounds"
        }
        buckshot: =
        {
          txt = "&"
          hint = "Packed shotgun shells"
        }
        bolts: =
        {
          txt = "&"
          hint = "Packed crossbow bolts"
        }
        bullet556: =
        {
          txt = "&"
          hint = "Packed 5.56mm rounds"
        }
        ARgrenades: =
        {
          txt = "&"
          hint = "Packed assault rifle grenades"
        }
        rockets: =
        {
          txt = "&"
          hint = "Packed rockets"
        }
        uranium: =
        {
          txt = "&"
          hint = "Packed gauss charges"
        }
        handgrenade: =
        {
          txt = "&"
          hint = "Packed hand grenades"
        }
        satchelcharge: =
        {
          txt = "&"
          hint = "Packed satchels"
        }
        tripmine: =
        {
          txt = "&"
          hint = "Packed trip mines"
        }
        Snarks: =
        {
          txt = "&"
          hint = "Packed snarks"
        }
        m40a1: =
        {
          txt = "&"
          hint = "Packed 7.62mm rounds"
        }
        sporeclip: =
        {
          txt = "&"
          hint = "Packed spores"
        }
      }
      weaponbox:form =
      {
        t_weaponbox = "!"
      }
      t_world_items:incl =
      {
        t_Weapon = "!"
        t_Targetx = "!"
        type: =
        {
          txt = "&"
          hint = "Type"
          typ = "C"
          items = "Antidote"$0D"Security Card"$0D"Battery"$0D"Suit"
          values = "42"$0D"43"$0D"44"$0D"45"
        }
      }
      world_items:form =
      {
        t_world_items = "!"
      }
      t_xen_hair:incl =
      {
        bbox = '-8 -8 0 8 8 32'
        t_Targetname = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X1"
          cap = "Sync Movement"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Drop To Ground"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Face Randomly"
        }
      }
      xen_hair:form =
      {
        t_xen_hair = "!"
      }
      t_xen_plantlight:incl =
      {
        bbox = '-48 -48 0 48 48 32'
        t_Targetname = "!"
        t_Target = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        t_AttackObject = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Drop To Ground"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Face Randomly"
        }
      }
      xen_plantlight:form =
      {
        t_xen_plantlight = "!"
      }
      t_xen_spore_large:incl =
      {
        bbox = '-90 -90 0 90 90 220'
        t_Targetname = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Drop To Ground"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Face Randomly"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Non Solid"
        }
      }
      xen_spore_large:form =
      {
        t_xen_spore_large = "!"
      }
      t_xen_spore_medium:incl =
      {
        bbox = '-40 -40 0 40 40 120'
        t_Targetname = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Drop To Ground"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Face Randomly"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Non Solid"
        }
      }
      xen_spore_medium:form =
      {
        t_xen_spore_medium = "!"
      }
      t_xen_spore_small:incl =
      {
        bbox = '-16 -16 0 16 16 64'
        t_Targetname = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Drop To Ground"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Face Randomly"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Non Solid"
        }
      }
      xen_spore_small:form =
      {
        t_xen_spore_small = "!"
      }
      t_xen_tree:incl =
      {
        bbox = '-24 -24 0 24 24 188'
        t_Targetname = "!"
        t_RenderFields = "!"
        t_Angles = "!"
        spawnflags: =
        {
          txt = "&"
          typ = "X2"
          cap = "Drop To Ground"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X4"
          cap = "Face Randomly"
        }
        spawnflags: =
        {
          txt = "&"
          typ = "X8"
          cap = "Non Solid"
        }
      }
      xen_tree:form =
      {
        t_xen_tree = "!"
      }
    }
  }
}
