QQRKSRC1
// Configuration file for Hexen II

//    This file contains :
//
//    * List of Hexen II entities
//      By: Tiglari <tiglari@hexenworld.com>
//        Not really done (never well be), but prolly good enough
//        to be worth critizing!
//      Models added by: Robert <andjr@intekom.co.za>
//
//    * List of Hexen II textures
//      Originally by: Tiglari <tiglari@hexenworld.com>
//      Sorted by: Dariusz Emilianowicz <fathoom@quake.org.pl>
//      For an alternate sorting by Scott <cierski@home.com>,
//       download texh2scott.zip.
//
//    Thanks, Tiglari and Scott.   - Armin -
//
//    Nov 17 1998: some omissions restored by tiglari
//
//    See comments in file Defaults.qrk.

//$Header$
// ----------- REVISION HISTORY ------------
//$Log$

{
  QuArKProtected = "1"
  Description = "Base Hexen II data"

//  RunGame:incl =
//  {
//    Typ = "G"
//    CheckFileCfg = ":Program"
//    Exec[] = "[::Program] -game [::tmpQuArK] +map [~map]"
//    Dir[] = "[::Directory]"
//  }

  Hexen II setup.qctx =
  {
    Game = "Hexen II"
    SFSkills = '4096 8192 16384 32768 65536 131072'   // must be 4 or 6 values : easy/medium/hard/deathm.[/coop/single]
    HTML = "help\index.html"
    CreateFiles: =
    {
      Hexen.rc = {
        Data =
               "// This file has been created by QuArK - Quake Army Knife"
         $0D$0A"//"
         $0D$0A"// For more info about QuArK please see the home page at :"
         $0D$0A"//"
         $0D$0A"//      http://www.planetquake.com/quark"
         $0D$0A"//"
         $0D$0A"//"
         $0D$0A"//                                   -- Armin Rigo"
         $0D$0A
         $0D$0A"developer 0"
         $0D$0A"exec default.cfg"
         $0D$0A"exec config.cfg"
         $0D$0A"exec autoexec.cfg"
         $0D$0A"echo"
         $0D$0A"echo "$22" "$80$81$81$81$81$82" Quake Army Knife 5 "$80$81$81$81$81$82$22
         $0D$0A"echo"
         $0D$0A"exec quark.cfg"
         $0D$0A"stuffcmds"
      }
    }
//    DrawMap: =
//    {
//      Spec = "light"
//      Circle: = {center[]="[~origin]" radius[]="[~light]*0.72"}
//    }
//    Textured: =
//    {
//      Bkgnd      = $06      // gray        (color indices in the Quake palette)
//      Normal     = $7D      // brown
//      GroupSel   = $1F      // white
//      UniqueSel  = $FE      // light green
//      HiddenSel  = $FD      // green
//      Duplicator = $F8      // blue
//      Model      = $00      // black (for the lines)
//      ModelNoSkin= $0A      // gray
//    }
  }

  NewFiles.qtx =
  {
    ToolBox = "New files..."
    Root = "Hexen II file types.qtxfolder"
    Hexen II file types.qtxfolder =
    {
      HexenC.hc = { }
      Texture Wad.wad = { }
    }
  }

  walltex:incl= {tex="rtex388"}         // Default texture for walls
  floortex:incl={tex="rtex215"}        // Default texture for floor
  ceiltex:incl= {tex="sky001"}        // Default texture for ceiling (sky)
  NewMap:incl =          // the map has all its data (there is a whole room to start with)
  {
    Game = "Hexen II"
    Root = "worldspawn:b"
    worldspawn:b =
    {
      Border walls:g =
      {
        East wall:p =
        {
          west:f =  { v = '256 0 272 256 -128 272 256 0 400'       walltex = ! }
          east:f =  { v = '272 0 272 272 128 272 272 0 400'        walltex = ! }
          south:f = { v = '432 -192 272 560 -192 272 432 -192 400' walltex = ! }
          north:f = { v = '432 192 272 304 192 272 432 192 400'    walltex = ! }
          down:f =  { v = '432 0 -96 560 0 -96 432 -128 -96'       walltex = ! }
          up:f =    { v = '432 0 96 560 0 96 432 128 96'           walltex = ! }
        }
        West wall:p =
        {
          west:f =  { v = '-272 0 272 -272 -128 272 -272 0 400'    walltex = ! }
          east:f =  { v = '-256 0 272 -256 128 272 -256 0 400'     walltex = ! }
          south:f = { v = '432 -192 272 560 -192 272 432 -192 400' walltex = ! }
          north:f = { v = '432 192 272 304 192 272 432 192 400'    walltex = ! }
          down:f =  { v = '432 0 -96 560 0 -96 432 -128 -96'       walltex = ! }
          up:f =    { v = '432 0 96 560 0 96 432 128 96'           walltex = ! }
        }
        North wall:p =
        {
          west:f =  { v = '-256 0 272 -256 -128 272 -256 0 400'    walltex = ! }
          east:f =  { v = '256 0 272 256 128 272 256 0 400'        walltex = ! }
          south:f = { v = '432 192 272 560 192 272 432 192 400'    walltex = ! }
          north:f = { v = '432 208 272 304 208 272 432 208 400'    walltex = ! }
          down:f =  { v = '432 0 -96 560 0 -96 432 -128 -96'       walltex = ! }
          up:f =    { v = '432 0 96 560 0 96 432 128 96'           walltex = ! }
        }
        South wall:p =
        {
          west:f =  { v = '-256 0 272 -256 -128 272 -256 0 400'    walltex = ! }
          east:f =  { v = '256 0 272 256 128 272 256 0 400'        walltex = ! }
          south:f = { v = '432 -208 272 560 -208 272 432 -208 400' walltex = ! }
          north:f = { v = '432 -192 272 304 -192 272 432 -192 400' walltex = ! }
          down:f =  { v = '432 0 -96 560 0 -96 432 -128 -96'       walltex = ! }
          up:f =    { v = '432 0 96 560 0 96 432 128 96'           walltex = ! }
        }
        Sky:p =
        {
          west:f =  { v = '-256 0 272 -256 -128 272 -256 0 400'    ceiltex = ! }
          east:f =  { v = '256 0 272 256 128 272 256 0 400'        ceiltex = ! }
          south:f = { v = '432 -192 272 560 -192 272 432 -192 400' ceiltex = ! }
          north:f = { v = '432 192 272 304 192 272 432 192 400'    ceiltex = ! }
          down:f =  { v = '432 0 96 560 0 96 432 -128 96'          ceiltex = ! }
          up:f =    { v = '432 0 112 560 0 112 432 128 112'        ceiltex = ! }
        }
        Floor:p =
        {
          west:f =  { v = '-256 0 272 -256 -128 272 -256 0 400'    floortex = ! }
          east:f =  { v = '256 0 272 256 128 272 256 0 400'        floortex = ! }
          south:f = { v = '432 -192 272 560 -192 272 432 -192 400' floortex = ! }
          north:f = { v = '432 192 272 304 192 272 432 192 400'    floortex = ! }
          down:f =  { v = '432 0 -112 560 0 -112 432 -128 -112'    floortex = ! }
          up:f =    { v = '432 0 -96 560 0 -96 432 128 -96'        floortex = ! }
        }
      }
      info_player_start:e =
      {
        origin = "-144 0 -72"
        angle = "360"
      }
    }
  }


  NewEntities.qtx =         // Hexen II entities (well, it's a bit limited right now ;-)
  {
    ToolBox = "New map items..."      // the same name as in Defaults.qrk
    Root = "Hexen II Entities.qtxfolder.qtxfolder"
    Hexen II Entities.qtxfolder.qtxfolder =
    {
// BEGIN ENTITIES FOLDER


     Player Starts.qtxfolder = {
       info_player_coop:e =
       {
         origin = "0 0 0"
         angle = "360"
         ;desc = "potential spawning position for coop games"
       }
       info_player_deathmatch:e =
       {
         origin = "0 0 0"
         angle = "360"
         ;desc = "potential spawning position for deathmatch games"
       }
       info_player_start:e =
       {
         origin = "0 0 0"
         angle = "360"
         ;desc = "The normal starting point for a level."
       }
     }
     Items.qtxfolder = {
       item_armor_amulet:e =
       {
         origin = "0 0 0"
         ;desc = "Player gets some armour, depending on class"
       }
       item_armor_bracer:e =
       {
         origin = "0 0 0"
         ;desc = "Player gets some armour, depending on class"
       }
       item_armor_breastplate:e =
       {
         origin = "0 0 0"
         ;desc = "Player gets some armour, depending on class"
       }
       item_armor_helmet:e =
       {
         origin = "0 0 0"
         ;desc = "Player gets some armour, depending on class"
       }
       item_health:e =
       {
         origin = "0 0 0"
         ;desc = "Crystal Vial, Player is given 10 health instantly"
       }
       item_mana_blue:e =
       {
         origin = "0 0 0"
         ;desc = "Player is given 15 blue mana instantly"
       }
       item_mana_both:e =
       {
         origin = "0 0 0"
         ;desc = "Player is given 15 green and 10 blue mana instantly"
       }
       item_mana_green:e =
       {
         origin = "0 0 0"
         ;desc = "Player is given 15 green mana instantly"
       }
       item_spawner:e =
       {
         origin = "0 0 0"
         ;desc = "Artifact spawner"
         targetname = ""
       }
     }
     Artifacts and Rings.qtxfolder = {
       art_HealthBoost:e =
       {
         origin = "0 0 0"
         ;desc = "Quartz Flask artifact (Health Boost)"
       }
       art_SuperHBoost:e =
       {
         origin = "0 0 0"
         ;desc = "Mystic Urn artifact (Super Health Boost)"
       }
       art_blastradius:e =
       {
         origin = "0 0 0"
         ;desc = "Disk of Repulsion artifact"
       }
       art_cubeofforce:e =
       {
         origin = "0 0 0"
         ;desc = "Cube Of Force artifact"
       }
       art_glyph:e =
       {
         origin = "0 0 0"
         ;desc = "Glyph of the Ancients artifact"
       }
       art_haste:e =
       {
         origin = "0 0 0"
         ;desc = "Boots of Speed artifact"
       }
       art_invincibility:e =
       {
         origin = "0 0 0"
         ;desc = "Icon of the Defender (Invincibility) artifact"
       }
       art_invisibility:e =
       {
         origin = "0 0 0"
         ;desc = "Invisibility Sphere artifact"
       }
       art_manaboost:e =
       {
         origin = "0 0 0"
         ;desc = "Krater of  Might artifact"
       }
       art_polymorph:e =
       {
         origin = "0 0 0"
         ;desc = "Seal of the Ovinimancer artifact"
       }
       art_summon:e =
       {
         origin = "0 0 0"
         ;desc = "Stone of Summoning artifact"
       }
       art_teleport:e =
       {
         origin = "0 0 0"
         ;desc = "Chaos Device artifact"
       }
       art_tomeofpower:e =
       {
         origin = "0 0 0"
         ;desc = "Tome of Power artifact"
       }
       art_torch:e =
       {
         origin = "0 0 0"
         ;desc = "torch artifact"
       }
       Ring_Flight:e =
       {
         origin = "0 0 0"
         ;desc = "Ring of Flight"
       }
       Ring_Regeneration:e =
       {
         origin = "0 0 0"
         ;desc = "Ring of Regeneration (regenerates health)"
       }
       Ring_Turning:e =
       {
         origin = "0 0 0"
         ;desc = "Ring of Turning (deflects attacks)"
       }
       Ring_WaterBreathing:e =
       {
         origin = "0 0 0"
         ;desc = "Ring of Water Breathing"
       }
     }
     Weapons.qtxfolder = {
       wp_weapon2:e =
       {
         origin = "0 0 0"
         ;desc = "In world weapon 2 pickup for single player mode"
       }
       wp_weapon3:e =
       {
         origin = "0 0 0"
         ;desc = "In world weapon 3 pickup for single player mode"
       }
       wp_weapon4_head:e =
       {
         origin = "0 0 0"
         ;desc = "In world weapon 4 pickup (staff head) for single player mode"
       }
       wp_weapon4_staff:e =
       {
         origin = "0 0 0"
         ;desc = "In world weapon 4 pickup (staff) for single player mode"
       }
     }
     Active Brushes.qtxfolder = {
       breakable_brush:b =
       {
         ;desc = "Breakable window or wall"
         ;incl = "defpoly"
       }
       brush_pushable:b =
       {
         ;desc = "A brush the player can push"
         ;incl = "defpoly"
       }
       func_crusher:b =
       {
         ;desc = "Makes hamburger."
         angle = "360"
         ;incl = "defpoly"
       }
       func_door:b =
       {
         ;desc = "Your basic sliding door."
         angle = "360"
         ;incl = "defpoly"
       }
       func_door_rotating:b =
       {
         ;desc = "Rotating door, including trapdoors."
         flags = "90"
        origin:p =
        {
          east:f =
          {
            v = '32 0 0 32 128 0 32 0 128'
            tex = "origin"
          }
          west:f =
          {
            v = '-32 0 0 -32 0 128 -32 128 0'
            tex = "origin"
            m = "1"
          }
          north:f =
          {
            v = '0 32 0 0 32 128 128 32 0'
            tex = "origin"
            m = "1"
          }
          south:f =
          {
            v = '0 -32 0 128 -32 0 0 -32 128'
            tex = "origin"
          }
          up:f =
          {
            v = '0 0 32 128 0 32 0 128 32'
            tex = "origin"
          }
          down:f =
          {
            v = '0 0 -32 0 128 -32 128 0 -32'
            tex = "origin"
            m = "1"
          }
        }
         ;incl = "defpoly"
       }
       func_door_secret:b =
       {
         ;desc = "Basic secret door. Slides back, then to the side."
         angle = "360"
         ;incl = "defpoly"
       }
       func_illusionary:b =
       {
         ;desc = "A simple entity that looks solid but lets you walk through it."
         ;incl = "defpoly"
       }
       func_newplat:b =
       {
         ;desc = "Two-way platform."
         height = ""
         ;incl = "defpoly"
       }
       func_plat:b =
       {
         ;desc = "Elevator"
         ;incl = "defpoly"
       }
       func_rotating:b =
       {
         ;desc = "Stuff that spins."
        origin:p =
        {
          east:f =
          {
            v = '32 0 0 32 128 0 32 0 128'
            tex = "origin"
          }
          west:f =
          {
            v = '-32 0 0 -32 0 128 -32 128 0'
            tex = "origin"
            m = "1"
          }
          north:f =
          {
            v = '0 32 0 0 32 128 128 32 0'
            tex = "origin"
            m = "1"
          }
          south:f =
          {
            v = '0 -32 0 128 -32 0 0 -32 128'
            tex = "origin"
          }
          up:f =
          {
            v = '0 0 32 128 0 32 0 128 32'
            tex = "origin"
          }
          down:f =
          {
            v = '0 0 -32 0 128 -32 128 0 -32'
            tex = "origin"
            m = "1"
          }
        }
         ;incl = "defpoly"
       }
       func_train:b =
       {
         ;desc = "Trains are moving platforms that players can ride."
         target = ""
         targetname = ""
         ;incl = "defpoly"
       }
       func_wall:b =
       {
         ;desc = "Wall that can glow or be translucent.  Not used in the maps."
         ;incl = "defpoly"
       }
       plaque:b =
       {
         ;desc = "A plaque that a player can read"
         #message = ""
         ;incl = "defpoly"
       }
       obj_ice:b =
       {
         ;desc = "Slippery, slidey ice"
         ;incl = "defpoly"
       }
     }
     Lights.qtxfolder = {
       light:e =
       {
         origin = "0 0 0"
         ;desc = "Non-displayed fading light."
       }
       light_flame_large_yellow:e =
       {
         origin = "0 0 0"
         ;desc = "Large yellow flame"
         angle = "360"
       }
       light_flame_small_yellow:e =
       {
         origin = "0 0 0"
         ;desc = "Small yellow flame ball"
         angle = "360"
       }
       light_gem:e =
       {
         origin = "0 0 0"
         ;desc = "A gem that displays light."
         angle = "360"
       }
       light_torch_castle:e =
       {
         origin = "0 0 0"
         ;desc = "The Castle style torch that displays light"
         angle = "360"
       }
       light_torch_eqypt:e =
       {
         origin = "0 0 0"
         ;desc = "An Egyptian style torch that displays light"
         angle = "360"
       }
       light_torch_meso:e =
       {
         origin = "0 0 0"
         ;desc = "The Meso style torch that displays light"
         angle = "360"
       }
       light_torch_rome:e =
       {
         origin = "0 0 0"
         ;desc = "The Roman style torch that displays light"
         angle = "360"
       }
       light_torch_small_walltorch:e =
       {
         origin = "0 0 0"
         ;desc = "Short wall torch"
         angle = "360"
       }
     }
     Sounds & Environment.qtxfolder = {
       fx_smoke_generator:e =
       {
         origin = "0 0 0"
         ;desc = "Generates smoke puffs, in various styles"
       }
       misc_fountain:e =
       {
         origin = "0 0 0"
         ;desc = "Generates a water-spray"
         cnt = "2"
         movedir = "1 1 1"
         angles = "0 0 0"
       }
       monster_rat:e =
       {
         origin = "0 0 0"
         ;desc = "One rat, appears and flees when triggered"
         targetname = ""
       }
       monster_ratnest:e =
       {
         origin = "0 0 0"
         ;desc = "A group of 3 to 6 rats that appear and flee when triggered"
         targetname = ""
       }
       monster_fish:e =
       {
         origin = "0 0 0"
         ;desc = "Ambient Fish"
         angle = "360"
       }
       player_sheep:e =
       {
         origin = "0 0 0"
         ;desc = "A sheep player model"
         angle = "360"
       }
       sound_ambient:e =
       {
         origin = "0 0 0"
         ;desc = "Creates an ambient sound in the world."
         soundtype = ""
       }
       sound_maker:e =
       {
         origin = "0 0 0"
         ;desc = "Makes sounds that can be triggered (not many in the game)."
         soundtype = ""
         targetname = ""
       }
       weather_rain:b =
       {
         ;desc = "Nice rainstorm, looks cool"
         counter = ""
         ;incl = "defpoly"
       }
     }
     Traps & Gadgets.qtxfolder = {
       light_thunderstorm:e =
       {
         origin = "0 0 0"
         ;desc = "Thunder & lightning effects."
         targetname = ""
       }
       misc_fireball:e =
       {
         origin = "0 0 0"
         ;desc = "Lava Balls, Unfinished"
       }
       obj_ballista:e =
       {
         origin = "0 0 0"
         ;desc = "A ballista which is animated to shoot an arrow"
         angle = "360"
       }
       obj_bell:e =
       {
         origin = "0 0 0"
         ;desc = "A big bell that rings when hit. "
         angle = "360"
       }
       obj_catapult2:e =
       {
         origin = "0 0 0"
         ;desc = "Sheep were meant to fly."
         angle = "360"
         health = ""
         speed = ""
       }
       trap_fireball:e =
       {
         origin = "0 0 0"
         ;desc = "Fireball shooter"
         angle = "360"
         targetname = ""
       }
       trap_lightning:e =
       {
         origin = "0 0 0"
         ;desc = "Generates a bolt of lightning which ends at the weather_lightning_end that is the target"
         targetname = ""
       }
       trap_shooter:e =
       {
         origin = "0 0 0"
         ;desc = "Continuously fires spikes."
         angle = "360"
       }
       trap_spikeshooter:e =
       {
         origin = "0 0 0"
         ;desc = "When triggered, fires a spike in the direction set in QuakeEd."
         angle = "360"
         targetname = ""
       }
       trap_spikeshooter_spray:e =
       {
         origin = "0 0 0"
         ;desc = "Fires spikes somewhat randomly, seems unfinished"
       }
       weather_lightning_end:e =
       {
         origin = "0 0 0"
         ;desc = "Where the spark from weather_lightning_start will hit."
         targetname = ""
       }
       weather_lightning_start:e =
       {
         origin = "0 0 0"
         ;desc = "Generates a spark which ends at the weather_lightning_end that is the target"
         target = ""
       }
       weather_sunbeam_end:e =
       {
         origin = "0 0 0"
         ;desc = "Where sunbeam from weather_sunbeam_start will hit."
         targetname = ""
       }
       weather_sunbeam_start:e =
       {
         origin = "0 0 0"
         ;desc = "Generates a ray of sunlight which ends at the weather_sunbeam_end that is the target"
         lifespan = ""
         target = ""
         targetname = ""
         wait = ""
       }
     }
     Triggers & Buttons.qtxfolder = {
       func_button:b =
       {
         ;desc = "Upon touch, it moves & activates something, then returns."
         angle = "360"
         target = ""
         ;incl = "defpoly"
       }
       func_pressure:b =
       {
         ;desc = "Like a button, but fires when enough mass is on it."
         angle = "360"
         mass = ""
         target = ""
         ;incl = "defpoly"
       }
       func_angletrigger:b =
       {
         ;desc = "Rotates at certain intervals, and fires off when a set angle is met"
         abslight = ""
         cnt = ""
         mangle = ""
         netname = ""
        origin:p =
        {
          east:f =
          {
            v = '32 0 0 32 128 0 32 0 128'
            tex = "origin"
          }
          west:f =
          {
            v = '-32 0 0 -32 0 128 -32 128 0'
            tex = "origin"
            m = "1"
          }
          north:f =
          {
            v = '0 32 0 0 32 128 128 32 0'
            tex = "origin"
            m = "1"
          }
          south:f =
          {
            v = '0 -32 0 128 -32 0 0 -32 128'
            tex = "origin"
          }
          up:f =
          {
            v = '0 0 32 128 0 32 0 128 32'
            tex = "origin"
          }
          down:f =
          {
            v = '0 0 -32 0 128 -32 128 0 -32'
            tex = "origin"
            m = "1"
          }
        }
         target = ""
         ;incl = "defpoly"
       }
       info_teleport_destination:e =
       {
         origin = "0 0 0"
         ;desc = "Teleport destination"
         targetname = ""
       }
       puzzle_piece:e =
       {
         origin = "0 0 0"
         ;desc = "Puzzle Piece"
         netname = ""
         puzzle_id = ""
       }
       puzzle_static_piece:e =
       {
         origin = "0 0 0"
         ;desc = "Object for used puzzle-pieces, in final display position."
         puzzle_id = ""
         targetname = ""
       }
       trigger_activate:b =
       {
         ;desc = "When used, toggles its target between on and off"
         target = ""
         ;incl = "defpoly"
       }
       trigger_attack:b =
       {
         ;desc = "Checks to see if a player touching it has tried to fire."
         target = ""
         ;incl = "defpoly"
       }
       trigger_changelevel:b =
       {
         ;desc = "When the player touches this, he gets sent to the map listed in the `map' variable."
         ;incl = "defpoly"
       }
       trigger_check:b =
       {
         ;desc = "Checks to see if its child entities are active, and if they are, it triggers"
         netname = ""
         target = ""
         targetname = ""
         ;incl = "defpoly"
       }
       trigger_combination_assign:b =
       {
         ;desc = "For assigning a triggering sequence to an ordered trigger_counter."
         mangle = ""
         target = ""
         targetname = ""
         wait = ""
         ;incl = "defpoly"
       }
       trigger_control:b =
       {
         ;desc = "Takes over a ballista when the player is inside of it"
         target = ""
         ;incl = "defpoly"
       }
       trigger_counter:b =
       {
         ;desc = "Acts as an intermediary for an action that takes multiple inputs."
         target = ""
         targetname = ""
         ;incl = "defpoly"
       }
       trigger_counter_reset:b =
       {
         ;desc = "This will reset a trigger_counter to start counting again as if it hasn't been used yet.  Useful for when you want a counter to count more than once but the counting can be interrupted."
         target = ""
         targetname = ""
         ;incl = "defpoly"
       }
       trigger_crosslevel:b =
       {
         ;desc = "Fires triggers on other levels, via matching spawnflags"
         map = ""
         ;incl = "defpoly"
       }
       trigger_crosslevel_target:b =
       {
         ;desc = "Triggered by a trigger_crosslevel elsewhere within a unit."
         target = ""
         ;incl = "defpoly"
       }
       trigger_deactivate:b =
       {
         ;desc = "When used, toggles its target between on and off"
         target = ""
         ;incl = "defpoly"
       }
       trigger_hurt:b =
       {
         ;desc = "Any object touching this will be hurt"
         dmg = ""
         ;incl = "defpoly"
       }
       trigger_interval:e =
       {
         origin = "0 0 0"
         ;desc = "Triggers its targets at regular intervals"
         target = ""
         wait = ""
       }
       trigger_message_transfer:b =
       {
         ;desc = "Shows player it's message, and transfers its own target-value to become the target-value of whatever triggered it."
         #message = ""
         target = ""
         targetname = ""
         ;incl = "defpoly"
       }
       trigger_monsterjump:b =
       {
         ;desc = "Some monsters that touch this will jump in the direction of the trigger's angle"
         ;incl = "defpoly"
       }
       trigger_multiple:b =
       {
         ;desc = "Variable sized repeatable trigger.  Must be targeted at one or more entities."
         target = ""
         ;incl = "defpoly"
       }
       trigger_once:b =
       {
         ;desc = "Variable sized trigger. Triggers once, then removes itself."
         target = ""
         ;incl = "defpoly"
       }
       trigger_push:b =
       {
         ;desc = "Pushes the player in the direction set by angles"
         angle = "360"
         targetname = ""
         ;incl = "defpoly"
       }
       trigger_quake:e =
       {
         origin = "0 0 0"
         ;desc = "Earthquake effect"
         targetname = ""
       }
       trigger_relay:b =
       {
         ;desc = "This fixed size trigger cannot be touched, it can only be fired by other triggers"
        origin:p =
        {
          east:f =
          {
            v = '32 0 0 32 128 0 32 0 128'
            tex = "origin"
          }
          west:f =
          {
            v = '-32 0 0 -32 0 128 -32 128 0'
            tex = "origin"
            m = "1"
          }
          north:f =
          {
            v = '0 32 0 0 32 128 128 32 0'
            tex = "origin"
            m = "1"
          }
          south:f =
          {
            v = '0 -32 0 128 -32 0 0 -32 128'
            tex = "origin"
          }
          up:f =
          {
            v = '0 0 32 128 0 32 0 128 32'
            tex = "origin"
          }
          down:f =
          {
            v = '0 0 -32 0 128 -32 128 0 -32'
            tex = "origin"
            m = "1"
          }
        }
         target = ""
         targetname = ""
         ;incl = "defpoly"
       }
       trigger_teleport:b =
       {
         ;desc = "Any object touching this will be transported to the corresponding info_teleport_destination entity. "
         target = ""
         ;incl = "defpoly"
       }
     }
     Monsters.qtxfolder = {
       func_monsterspawner:e =
       {
         origin = "0 0 0"
         ;desc = "Spawns monsters, telefragging living occupants."
         angle = "360"
         targetname = ""
       }
       func_monsterspawn_spot:e =
       {
         origin = "0 0 0"
         ;desc = "Spawnspot for func_monsterspawner.  Needs cnt field."
         aflag = ""
         spawnername = ""
       }
       monster_archer:e =
       {
         origin = "0 0 0"
         ;desc = "The Archer Knight monster"
         angle = "360"
       }
       monster_archer_lord:e =
       {
         origin = "0 0 0"
         ;desc = "The Archer Lord monster"
         angle = "360"
       }
       monster_eidolon:e =
       {
         origin = "0 0 0"
         angle = "360"
         target = ""
         targetname = ""
       }
       monster_fallen_angel:e =
       {
         origin = "0 0 0"
         ;desc = "Fallen angel monster"
         angle = "360"
       }
       monster_fallen_angel_lord:e =
       {
         origin = "0 0 0"
         ;desc = "Fallen angel lord (translucent, powerful)"
         angle = "360"
       }
       monster_golem_bronze:e =
       {
         origin = "0 0 0"
         ;desc = "Bronze Golem."
         angle = "360"
       }
       monster_golem_crystal:e =
       {
         origin = "0 0 0"
         ;desc = "Crystal Golem."
         angle = "360"
         target = ""
         targetname = ""
       }
       monster_golem_iron:e =
       {
         origin = "0 0 0"
         ;desc = "Iron Golem."
         angle = "360"
       }
       monster_golem_stone:e =
       {
         origin = "0 0 0"
         ;desc = "Stone Golem."
         angle = "360"
       }
       monster_hydra:e =
       {
         origin = "0 0 0"
         ;desc = "Hydra monster"
         angle = "360"
       }
       monster_imp_fire:e =
       {
         origin = "0 0 0"
         ;desc = "Grunt monster - common.  Shoots a fireball. "
         angle = "360"
       }
       monster_imp_ice:e =
       {
         origin = "0 0 0"
         ;desc = "Grunt monster - common.  Shoots multiple ice shards. "
         angle = "360"
       }
       monster_medusa_green:e =
       {
         origin = "0 0 0"
         ;desc = "The medusa monster with its nasty sharp pointy teeth"
         angle = "360"
       }
       monster_mummy:e =
       {
         origin = "0 0 0"
         ;desc = "No, it's not Keith Richards or Bob Dylan."
         angle = "360"
       }
       monster_mummy_lord:e =
       {
         origin = "0 0 0"
         ;desc = "He's big, he's bad, he's wrapped in moldy bandages - he's the mummy."
         angle = "360"
       }
       monster_scorpion_black:e =
       {
         origin = "0 0 0"
         ;desc = "Black scorpion."
         angle = "360"
       }
       monster_scorpion_yellow:e =
       {
         origin = "0 0 0"
         ;desc = "Yellow scorpion."
         angle = "360"
       }
       monster_skull_wizard:e =
       {
         origin = "0 0 0"
         ;desc = "A skull wizard"
         angle = "360"
       }
       monster_skull_wizard_lord:e =
       {
         origin = "0 0 0"
         ;desc = "A skull wizard lord"
         angle = "360"
       }
       monster_snake:e =
       {
         origin = "0 0 0"
         ;desc = "Monster snake that comes to life and attacks"
         abslight = ""
         angle = "360"
         scale = ""
         target = ""
         targetname = ""
       }
       monster_spider_red_large:e =
       {
         origin = "0 0 0"
         ;desc = "Large red spider."
         angle = "360"
       }
       monster_spider_red_small:e =
       {
         origin = "0 0 0"
         ;desc = "Small red spider."
         angle = "360"
       }
       monster_spider_yellow_large:e =
       {
         origin = "0 0 0"
         ;desc = "Large yellow spider."
         angle = "360"
       }
       monster_spider_yellow_small:e =
       {
         origin = "0 0 0"
         ;desc = "Small yellow spider."
         angle = "360"
       }
       monster_werejaguar:e =
       {
         origin = "0 0 0"
         ;desc = "WereCat with jaguar skin"
         angle = "360"
       }
       monster_werepanther:e =
       {
         origin = "0 0 0"
         ;desc = "WereCat with panther skin"
         angle = "360"
       }
     }
     Moveable Objects.qtxfolder = {
       obj_barrel:e =
       {
         origin = "0 0 0"
         ;desc = "A barrel, just a plain old barrel"
         angle = "360"
       }
       obj_barrel_exploding:e =
       {
         origin = "0 0 0"
         ;desc = "An exploding barrel with red XXX on the side"
         angle = "360"
       }
       obj_barrel_indestructible:e =
       {
         origin = "0 0 0"
         ;desc = "A barrel you just can't break"
         angle = "360"
       }
       obj_barstool:e =
       {
         origin = "0 0 0"
         ;desc = "A bar stool - Drinks on the house!"
         angle = "360"
       }
       obj_cart:e =
       {
         origin = "0 0 0"
         ;desc = "A cart "
         angle = "360"
       }
       obj_cauldron:e =
       {
         origin = "0 0 0"
         ;desc = "A cauldron"
         angle = "360"
       }
       obj_chair:e =
       {
         origin = "0 0 0"
         ;desc = "A wooden chair. "
         angle = "360"
       }
       obj_chest1:e =
       {
         origin = "0 0 0"
         ;desc = "A treasure chest (2 skins)"
         angle = "360"
       }
       obj_chest2:e =
       {
         origin = "0 0 0"
         ;desc = "A treasure chest on legs (2 skins)"
         angle = "360"
       }
       obj_chest3:e =
       {
         origin = "0 0 0"
         ;desc = "A treasure chest on legs"
         angle = "360"
       }
       obj_pot1:e =
       {
         origin = "0 0 0"
         ;desc = "A clay pot with handles"
         angle = "360"
       }
       obj_pot2:e =
       {
         origin = "0 0 0"
         ;desc = "A pot with gently curved sides"
         angle = "360"
       }
       obj_pot3:e =
       {
         origin = "0 0 0"
         ;desc = "A pot with a sharply curved sides"
         angle = "360"
       }
     }
     Grisly Stuff.qtxfolder = {
       obj_bonepile:e =
       {
         origin = "0 0 0"
         ;desc = "A pile of bones."
         angle = "360"
       }
       obj_corpse1:e =
       {
         origin = "0 0 0"
         ;desc = "A nude male body laying face down"
         angle = "360"
       }
       obj_corpse2:e =
       {
         origin = "0 0 0"
         ;desc = "A male body with pants on laying face up"
         angle = "360"
       }
       obj_playerhead_assassin:e =
       {
         origin = "0 0 0"
         ;desc = "The head of the assassin."
         angle = "360"
       }
       obj_playerhead_crusader:e =
       {
         origin = "0 0 0"
         ;desc = "The head of the crusader."
         angle = "360"
       }
       obj_playerhead_necromancer:e =
       {
         origin = "0 0 0"
         ;desc = "The head of the necromancer."
         angle = "360"
       }
       obj_playerhead_paladin:e =
       {
         origin = "0 0 0"
         ;desc = "The head of the paladin."
         angle = "360"
       }
       obj_skull:e =
       {
         origin = "0 0 0"
         ;desc = "A skull, suitable for over the fireplace or perhaps a colorful holiday display"
         angle = "360"
       }
       obj_skull_stick2:e =
       {
         origin = "0 0 0"
         ;desc = "Two skulls on a stick"
         angle = "360"
       }
       obj_skullstick:e =
       {
         origin = "0 0 0"
         ;desc = "A skull on a stick - mmm,mmm, good"
         angle = "360"
       }
     }
     Outdoor Stuff.qtxfolder = {
       obj_bush1:e =
       {
         origin = "0 0 0"
         ;desc = "A small round bush"
         angle = "360"
       }
       obj_fence:e =
       {
         origin = "0 0 0"
         ;desc = "A section of fence"
         angle = "360"
       }
       obj_flag:e =
       {
         origin = "0 0 0"
         ;desc = "A flag that wave in the breeze"
         angle = "360"
       }
       obj_fountain:e =
       {
         origin = "0 0 0"
         ;desc = "A water fountain"
         angle = "360"
       }
       obj_hedge1:e =
       {
         origin = "0 0 0"
         ;desc = "A hedge that looks like an X-mas tree"
         angle = "360"
       }
       obj_hedge2:e =
       {
         origin = "0 0 0"
         ;desc = "A hedge that is square and of medium height"
         angle = "360"
       }
       obj_hedge3:e =
       {
         origin = "0 0 0"
         ;desc = "A hedge that is tall and thin"
         angle = "360"
       }
       obj_seaweed:e =
       {
         origin = "0 0 0"
         ;desc = "An animate seaweed that sways from side to side."
         angle = "360"
       }
       obj_tombstone1:e =
       {
         origin = "0 0 0"
         ;desc = "A tombstone in the shape of a cross"
         angle = "360"
       }
       obj_tombstone2:e =
       {
         origin = "0 0 0"
         ;desc = "A tombstone with a rounded top"
         angle = "360"
       }
       obj_tree:e =
       {
         origin = "0 0 0"
         ;desc = "A tree that has no leaves"
         angle = "360"
       }
       obj_tree2:e =
       {
         origin = "0 0 0"
         ;desc = "A tree with a round top of leaves "
         angle = "360"
       }
     }
     Misc Stuff.qtxfolder = {
       obj_beefslab:e =
       {
         origin = "0 0 0"
         ;desc = "A slab of beef."
         angle = "360"
       }
       obj_bench:e =
       {
         origin = "0 0 0"
         ;desc = "A wooden bench "
         angle = "360"
       }
       obj_book_closed:e =
       {
         origin = "0 0 0"
         ;desc = "A book that is closed"
         angle = "360"
       }
       obj_book_open:e =
       {
         origin = "0 0 0"
         ;desc = "A book that is open"
         angle = "360"
       }
       obj_pew:e =
       {
         origin = "0 0 0"
         ;desc = "A church pew - like you might find in a church."
         angle = "360"
       }
       obj_plant_generic:e =
       {
         origin = "0 0 0"
         ;desc = "A generic plant that should have some kind of pot placed below it."
         angle = "360"
       }
       obj_plant_meso:e =
       {
         origin = "0 0 0"
         ;desc = "A plant for the Mesoamerican level (has little pot)."
         angle = "360"
       }
       obj_plant_rome:e =
       {
         origin = "0 0 0"
         ;desc = "A plant for the Rome area (has tall pot)."
         angle = "360"
       }
       obj_sword:e =
       {
         origin = "0 0 0"
         ;desc = "A sword "
         angle = "360"
       }
       obj_webs:e =
       {
         origin = "0 0 0"
         ;desc = "Big webby stuff."
       }
     }
     Statues.qtxfolder = {
       obj_statue_angel:e =
       {
         origin = "0 0 0"
         ;desc = "A statue of an angle praying."
         angle = "360"
       }
       obj_statue_athena:e =
       {
         origin = "0 0 0"
         ;desc = "Statue of a Athena"
         angle = "360"
       }
       obj_statue_caesar:e =
       {
         origin = "0 0 0"
         ;desc = "Statue of a Caesar Romero"
         angle = "360"
       }
       obj_statue_king:e =
       {
         origin = "0 0 0"
         ;desc = "A statue of a king holding a sword in front of him."
         angle = "360"
       }
       obj_statue_lion:e =
       {
         origin = "0 0 0"
         ;desc = "Statue of a lion."
         angle = "360"
       }
       obj_statue_mars:e =
       {
         origin = "0 0 0"
         ;desc = "A statue of Mars."
         angle = "360"
       }
       obj_statue_mummy:e =
       {
         origin = "0 0 0"
         ;desc = "Statue of the mummy monster"
         angle = "360"
       }
       obj_statue_mummy_head:e =
       {
         origin = "0 0 0"
         ;desc = "Statue of the nubis head"
         angle = "360"
       }
       obj_statue_neptune:e =
       {
         origin = "0 0 0"
         ;desc = "Statue of Neptune (I think)"
         angle = "360"
       }
       obj_statue_olmec:e =
       {
         origin = "0 0 0"
         ;desc = "A olmec statue, of course. What the heck is an olmec?"
         angle = "360"
       }
       obj_statue_snake:e =
       {
         origin = "0 0 0"
         ;desc = "The front of a snake"
         angle = "360"
       }
       obj_statue_snake_coil:e =
       {
         origin = "0 0 0"
         ;desc = "Statue of a coiled snake (just like the one that comes to life) but this one doesn't come to life."
         angle = "360"
       }
       obj_statue_tut:e =
       {
         origin = "0 0 0"
         ;desc = "An Egyptian statue of a guy with a flat head hat"
         angle = "360"
       }
     }
     Riders & stuff.qtxfolder = {
       obj_chaos_orb:e =
       {
         origin = "0 0 0"
         netname = ""
       }
       rider_death:e =
       {
         origin = "0 0 0"
         angle = "360"
         map = ""
         target = ""
       }
       rider_famine:e =
       {
         origin = "0 0 0"
         angle = "360"
         map = ""
         target = ""
       }
       rider_path:e =
       {
         origin = "0 0 0"
       }
       rider_pestilence:e =
       {
         origin = "0 0 0"
         angle = "360"
         map = ""
         target = ""
         targetname = ""
       }
       rider_quake:b =
       {
         abslight = ""
        origin:p =
        {
          east:f =
          {
            v = '32 0 0 32 128 0 32 0 128'
            tex = "origin"
          }
          west:f =
          {
            v = '-32 0 0 -32 0 128 -32 128 0'
            tex = "origin"
            m = "1"
          }
          north:f =
          {
            v = '0 32 0 0 32 128 128 32 0'
            tex = "origin"
            m = "1"
          }
          south:f =
          {
            v = '0 -32 0 128 -32 0 0 -32 128'
            tex = "origin"
          }
          up:f =
          {
            v = '0 0 32 128 0 32 0 128 32'
            tex = "origin"
          }
          down:f =
          {
            v = '0 0 -32 0 128 -32 128 0 -32'
            tex = "origin"
            m = "1"
          }
        }
         rt_chance = ""
         ;incl = "defpoly"
       }
       rider_quake_center:e =
       {
         origin = "0 0 0"
         rt_chance = ""
         targetname = ""
       }
       rider_trigger_multiple:e =
       {
         origin = "0 0 0"
         rt_chance = ""
         target = ""
       }
       rider_trigger_once:b =
       {
         rt_chance = ""
         target = ""
         ;incl = "defpoly"
       }
       rider_war:e =
       {
         origin = "0 0 0"
         map = ""
         target = ""
         targetname = ""
       }
     }
     Misc.qtxfolder = {
       camera_remote:e =
       {
         origin = "0 0 0"
         ;desc = "A camera which the player sees through when triggered. "
         target = ""
         targetname = ""
       }
       info_null:e =
       {
         origin = "0 0 0"
         ;desc = "Used as a positional target for spotlights, etc."
         targetname = ""
       }
       path_corner:e =
       {
         origin = "0 0 0"
         ;desc = "Destination point for monsters and trains; can specify next" $0D "destination as its target-value"
         targetname = ""
       }
       target_null:e =
       {
         origin = "0 0 0"
         ;desc = "Something to aim the camera at. "
         targetname = ""
       }
       worldspawn:e =
       {
         origin = "0 0 0"
         ;desc = "Only used for the world entity, specifies various useful things."
         CD = ""
         MIDI = ""
         #message = ""
         wad = ""
       }
     }

// END NEW ENTITIES FOLDER
    }
  }


   //
   // See file DataQ2.qrk for comments about new entities.
   //

  Entity forms.qctx =
  {  // BEGIN ENTITY FORMS

    Ring_Flight:form =
    {
     Help = "Ring of Flight"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/ringft.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    Ring_Regeneration:form =
    {
     Help = "Ring of Regeneration (regenerates health)"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/ringre.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    Ring_Turning:form =
    {
     Help = "Ring of Turning (deflects attacks)"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/ringrn.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    Ring_WaterBreathing:form =
    {
     Help = "Ring of Water Breathing"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/ringwb.mdl "
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_HealthBoost:form =
    {
     Help = "Quartz Flask artifact (Health Boost)"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_hboost.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_SuperHBoost:form =
    {
     Help = "Mystic Urn artifact (Super Health Boost)"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_shboost.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_blastradius:form =
    {
     Help = "Disk of Repulsion artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_blast.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_cubeofforce:form =
    {
     Help = "Cube Of Force artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_cube.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_glyph:form =
    {
     Help = "Glyph of the Ancients artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_glyph.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_haste:form =
    {
     Help = "Boots of Speed artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_haste.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_invincibility:form =
    {
     Help = "Icon of the Defender (Invincibility) artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_invinc.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_invisibility:form =
    {
     Help = "Invisibility Sphere artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_invis.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_manaboost:form =
    {
     Help = "Krater of  Might artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_mboost.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_polymorph:form =
    {
     Help = "Seal of the Ovinimancer artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_poly.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_summon:form =
    {
     Help = "Stone of Summoning artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_summon.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_teleport:form =
    {
     Help = "Chaos Device artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_telprt.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_tomeofpower:form =
    {
     Help = "Tome of Power artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_tome.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    art_torch:form =
    {
     Help = "torch artifact"
     bbox = '-8 -8 -44 8 8 20'
     mdl = "models/a_torch.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    breakable_brush:form =
    {
     Help = "Breakable window or wall"
     thingtype: =
        {Txt = "&" Hint = "determines noise and deathstyle, default = 0 (patterned glass)"
      Typ="C"
      Items="0) glass (default)" $0D "1) stone" $0D "2) wood" $0D "3) metal" $0D "4) flesh" $0D "5) fire" $0D "6) clay" $0D "7) leaves" $0D "8) hay" $0D "9) brownstone" $0D "10) cloth" $0D "11) wood-leaf" $0D "12) wood-metal" $0D "13) wood-stone" $0D "14) metal-stone" $0D "15) metal-cloth" $0D "16) webs" $0D "17) glass" $0D "18) ice" $0D "19) clearglass" $0D "20) redglass"
      values="0" $0D "1" $0D "2" $0D "3" $0D "4" $0D "5" $0D "6" $0D "7" $0D "8" $0D "9" $0D "10" $0D "11" $0D "12" $0D "13" $0D "14" $0D "15" $0D "16" $0D "17" $0D "18" $0D "19" $0D "20"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     target: =
        {Txt = "&" Hint = "triggered when brush breaks"
       }
     targetname: =
        {Txt = "&" Hint = "brush breaks when this is triggered"
       }
     killtarget: =
        {Txt = "&" Hint = "targeted item disappears when brush breaks"
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
    }
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="TRANSLUCENT"
        Hint="brush is translucent"}
     spawnflags: =
       {Txt="&"
        Typ="X64"
        Cap="INVINCIBLE"
        Hint="brush breaks from targetting, but not bashing"}
     spawnflags: =
       {Txt="&"
        Typ="X128"
        Cap="INVISIBLE"
        Hint="brush is invisible"}
    }
    brush_pushable:form =
    {
     Help = "A brush the player can push"
     mass: =
        {Txt = "&" Hint = "weight (for activating pressure-plates, breaking ice)."
       }
     thingtype: =
        {Txt = "&" Hint = "scrape sound"
      Typ="C"
      Items="1) stone/ceramic" $0D "2) wood" $0D "3) metal"
      values="1" $0D "2" $0D "3"
       }
    }
    camera_remote:form =
    {
     Help = "A camera which the player sees through when triggered. "
     bbox = '-8 -8 -8 8 8 8'
     targetname: =
        {Txt = "&" Hint = "camera starts running when triggered"
       }
     target: =
        {Txt = "&" Hint = "targets a target_null to aim at "
       }
     wait: =
        {Txt = "&" Hint = "how long camera runs & player is frozen; default = 3."
       }
    }
    containment:form =
    {
     Caption = "Containment"
     Help = "No help yet, peer into the Eye of Horus."
     greenmana: =
        {Txt = "&" Hint = "green mana; Arg = amount"
       }
     bluemana: =
        {Txt = "&" Hint = "blue mana; Arg = amount"
       }
     cnt_torch: =
        {Txt = "&" Hint = "torch; Arg = amount (recommend 1)"
       }
     cnt_h_boost: =
        {Txt = "&" Hint = "ordinary health boost; Arg = amount (recommend 1)"
       }
     cnt_sh_boost: =
        {Txt = "&" Hint = "mystic urn; Arg = amount (recommend 1)"
       }
     cnt_mana_boost: =
        {Txt = "&" Hint = "krater of might; Arg = amount (recommend 1)"
       }
     cnt_teleport: =
        {Txt = "&" Hint = "chaos device; Arg = amount (recommend 1)"
       }
     cnt_tome: =
        {Txt = "&" Hint = "tomes of power; Arg = amount (recommend 1)"
       }
     cnt_summon: =
        {Txt = "&" Hint = "stone of summoning; Arg = amount (recommend 1)"
       }
     cnt_invisibility: =
        {Txt = "&" Hint = "invisibility; Arg = amount (recommend 1)"
       }
     cnt_glyph: =
        {Txt = "&" Hint = "glyph of the ancients; Arg = amount (recommend 1)"
       }
     cnt_haste: =
        {Txt = "&" Hint = "boots of speed; Arg = amount (recommend 1)"
       }
     cnt_blast: =
        {Txt = "&" Hint = "disc of repulsion; Arg = amount (recommend 1)"
       }
     cnt_polymorpth: =
        {Txt = "&" Hint = "seal of the ovinimancer; Arg = amount (recommend 1)"
       }
     cnt_cubeofforce: =
        {Txt = "&" Hint = "cube of force; actually effective in PoP" $0D "  Arg = amount (recommend 1)"
       }
     cnt_invincibility: =
        {Txt = "&" Hint = "icon of the defender; Arg = amount (recommend 1)"
       }
    }
    door_trigger:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     targetname: =
        {Txt = "&" Hint = "if specified, door opens when triggered"
       }
     target: =
        {Txt = "&" Hint = "entity triggered when door opens"
       }
     killtarget: =
        {Txt = "&" Hint = "entity removed when door opens"
       }
    }
    func_angletrigger:form =
    {
     Help = "Rotates at certain intervals, and fires off when a set angle is met"
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     cnt: =
        {Txt = "&" Hint = "degrees to turn each move"
       }
     mangle: =
        {Txt = "&" Hint = "angle (relative to world) to trigger at (Y Z X). Set only one component."
       }
     netname: =
        {Txt = "&" Hint = "`unique name for linking to other triggers with the same value'"
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     flags: =
        {Txt = "&" Hint = "function unknown"
       }
     soundtype: =
        {Txt = "&" Hint = "details unknown"
       }
     speed: =
        {Txt = "&" Hint = "speed of rotation, default = 40."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     wait: =
        {Txt = "&" Hint = "not sure, mebbee time before re-triggerable."
       }
    spawnflags: = {Txt="&" Typ="X1" Cap = "1"}
    spawnflags: = {Txt="&" Typ="X2" Cap = "2"}
    spawnflags: = {Txt="&" Typ="X4" Cap = "4"}
    spawnflags: = {Txt="&" Typ="X8" Cap = "8"}
    spawnflags: = {Txt="&" Typ="X16" Cap = "16"}
    spawnflags: = {Txt="&" Typ="X32" Cap = "32"}
    spawnflags: = {Txt="&" Typ="X64" Cap = "64"}
    spawnflags: = {Txt="&" Typ="X128" Cap = "128"}

    }
    func_button:form =
    {
     Help = "Upon touch, it moves & activates something, then returns."
     target: =
        {Txt = "&" Hint = "entity with matching targetname is triggered when button is pushed"
       }
     angle: =
        {Txt = "&" Hint = "goes that way when pushed, -1 for up, 02 for down."
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
     wait: =
        {Txt = "&" Hint = "time till return, -1 means never return"
       }
     lip: =
        {Txt = "&" Hint = "amount left over after movement along some dimension of object, default = 4"
       }
     #message: =
        {Txt = "&" Hint = "message ('#' means you can enter an actual message instead of a message number)"
       }
     soundtype: =
        {Txt = "&" Hint = "sound it makes"
      Typ="C"
      Items="0) steam metal" $0D "1) wooden clunk" $0D "2) metallic clink" $0D "3) in-out"
      values="0" $0D "1" $0D "2" $0D "3"
       }
     speed: =
        {Txt = "&" Hint = "speed of movement, default = 40."
       }
     targetname: =
        {Txt = "&" Hint = "for activation by a trigger_activate"
       }
     #msg2: =
        {Txt = "&" Hint = "message displayed when pushed but not activated"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="DEACTIVATED"
        Hint="must be activated by trigger_activate"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="FIRE_ONLY"
        Hint="must be shot or bashed, not just pushed"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="FIRE_MULTIPLE"
        Hint="can be shot or bashed, many times"}
    }
    func_crusher:form =
    {
     Help = "Makes hamburger."
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     speed: =
        {Txt = "&" Hint = "of movement, default = 150"
       }
     soundtype: =
        {Txt = "&" Hint = "2 is the default sound"
      Typ="C"
      Items="1) base fast" $0D "2) chain slow" $0D "2) guillotine"
      values="1" $0D "2" $0D "3"
       }
     targetname: =
        {Txt = "&" Hint = "triggers movement of crusher:" $0D  "  if MULTIPLE spawnflag is checked, toggles on/off, otherwise 1 cycle"
       }
     dmg: =
        {Txt = "&" Hint = " damage default = 10; 666 = gib"
       }
     height: =
        {Txt = "&" Hint = "how tall it is to be taken to be for determining travel distance."
       }
     lip: =
        {Txt = "&" Hint = "amount left over after movement along some dimension of object, default = 4"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="MULTIPLE"
        Hint="set: each triggering makes one movement; unset: toggles"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="SLIDE"
        Hint="door-style accelerating movement"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="START_OPEN"
        Hint="starts in post-movement position"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="STOP_OPEN"
        Hint="stops in post-movement position"}
    }
    func_door:form =
    {
     Help = "Your basic sliding door."
     angle: =
        {Txt = "&" Hint = "direction it moves on opening; -1 up, -2 down."
       }
     soundtype: =
        {Txt = "&" Hint = "sound it makes"
      Typ="C"
      Items="0) silent" $0D "1) metal swinging" $0D "2) stone sliding" $0D "3) big wood swing" $0D "4) wood swinging" $0D "5) big wood sliding" $0D "6) drawbridge" $0D "7) rotating walksway" $0D "8) big metal sliding" $0D "9) pendulum singing"
      values="0" $0D "1" $0D "2" $0D "3" $0D "4" $0D "5" $0D "6" $0D "7" $0D "8" $0D "9"
       }
     wait: =
        {Txt = "&" Hint = "time to reclose, default=3, -1 = never return"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     dmg: =
        {Txt = "&" Hint = "damage inflicted on player who blocks motion"
       }
     health: =
        {Txt = "&" Hint = "if specified, door can be activate by damage"
       }
     speed: =
        {Txt = "&" Hint = "speed of movement, default = 100"
       }
     delay: =
        {Txt = "&" Hint = "delay before door opens"
       }
     #message: =
        {Txt = "&" Hint = "message displayed on triggered or shot door that hasn't been opened." $0D "('#' means you can enter an actual message instead of a message number)"
       }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="door_trigger:form"
      Hint="specifics for triggering with doors"
    }
    more: = {
      Typ="B"
      Txt="puzzles"
      Cap="Push"
      Form="puzzles:form"
      Hint="specifics for puzzle-doors"
    }
     lip: =
        {Txt = "&" Hint = "amount left over after movement along some dimension of object, default = 4"
       }
     level: =
        {Txt = "&" Hint = "distance door moves; default=size in dir. of move. - lip"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="START_OPEN"
        Hint="starts in post-movement position, & operates in reverse"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="REVERSE"
        Hint="offsets angle by 180 deg. (for linked doors)"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="DOOR_DONT_LINK"
        Hint="don't link to any other touching door"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="TOGGLE"
        Hint="needs trigger for closing as well as opening"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="SLIDE"
        Hint="? prolly obsolete"}
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="NORMAL_MOVE"
        Hint="constant rather than accelerating movement"}
     spawnflags: =
       {Txt="&"
        Typ="X64"
        Cap="REMOVE_PP"
        Hint="for puzzle_doors, takes puzzle_piece off player"}
     spawnflags: =
       {Txt="&"
        Typ="X128"
        Cap="NO_PP"
        Hint="won't open if player has puzzle_pieces."}
    }
    func_door_rotating:form =
    {
     Help = "Rotating door, including trapdoors."
     flags: =
        {Txt = "&" Hint = "angle door opens to (if 0 or undefined, door won't open!)"
       }
     soundtype: =
        {Txt = "&" Hint = "sound it makes"
      Typ="C"
      Items="0) silent" $0D "1) metal swinging" $0D "2) stone sliding" $0D "3) big wood swing" $0D "4) wood swinging" $0D "5) big wood sliding" $0D "6) drawbridge" $0D "7) rotating walksway" $0D "8) big metal sliding" $0D "9) pendulum singing"
      values="0" $0D "1" $0D "2" $0D "3" $0D "4" $0D "5" $0D "6" $0D "7" $0D "8" $0D "9"
       }
     wait: =
        {Txt = "&" Hint = "time to reclose, default=3, -1 = never return"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     dmg: =
        {Txt = "&" Hint = "damage inflicted on player who blocks motion"
       }
     health: =
        {Txt = "&" Hint = "if specified, door can be activate by damage"
       }
     speed: =
        {Txt = "&" Hint = "speed of movement, default = 100"
       }
     delay: =
        {Txt = "&" Hint = "delay before door opens"
       }
     #message: =
        {Txt = "&" Hint = "message displayed on triggered or shot door that hasn't been opened." $0D "('#' means you can enter an actual message instead of a message number)"
       }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="door_trigger:form"
      Hint="specifics for triggering with doors"
    }
    more: = {
      Typ="B"
      Txt="puzzles"
      Cap="Push"
      Form="puzzles:form"
      Hint="specifics for puzzle-doors"
    }
     flags2: =
        {Txt = "&" Hint = "damage when touched"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="START_OPEN"
        Hint="starts in post-movement position, & operates in reverse"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="REVERSE"
        Hint="offsets angle by 180 deg. (for linked doors)"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="DOOR_DONT_LINK"
        Hint="don't link to any other touching door"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="REMOVE_PP"
        Hint="for puzzle_doors, takes puzzle_piece off player"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="NO_PP"
        Hint="won't open if player has puzzle_pieces."}
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="TOGGLE"
        Hint="needs trigger for closing as well as opening"}
     spawnflags: =
       {Txt="&"
        Typ="X64"
        Cap="X_AXIS"
        Hint="door revolves around X_AXIS (trapdoor; can appear with angle key)"}
     spawnflags: =
       {Txt="&"
        Typ="X128"
        Cap="Y_AXIS"
        Hint="door revolves around Y_AXIS (trapdoor; can appear with angle key)"}
    }
    func_door_secret:form =
    {
     Help = "Basic secret door. Slides back, then to the side."
     angle: =
        {Txt = "&" Hint = "direction it moves (first back, & then in angle, default = 0 = West)" $0D " first movement is overrideable by spawnflags; then second is 90 deg. clockwise to that."
       }
     wait: =
        {Txt = "&" Hint = "time to reclose, default 3, -1 = never return"
       }
     dmg: =
        {Txt = "&" Hint = "damage to blocking player"
       }
     soundtype: =
        {Txt = "&" Hint = "generated together with secret door clicks"
      Typ="C"
      Items="0) silent" $0D "1) metal swinging" $0D "2) stone sliding" $0D "3) big wood swing" $0D "4) wood swinging" $0D "5) big wood sliding" $0D "6) drawbridge" $0D "7) rotating walksway" $0D "8) big metal sliding" $0D "9) pendulum singing"
      values="0" $0D "1" $0D "2" $0D "3" $0D "4" $0D "5" $0D "6" $0D "7" $0D "8" $0D "9"
       }
    more: = {
      Typ="B"
      Txt="door_trigger"
      Cap="Push"
      Form="door_trigger:form"
    }
     t_width: =
        {Txt = "&" Hint = "size of first move, overriding door width"
       }
     t_length: =
        {Txt = "&" Hint = "size of second move, overriding door length"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="OPEN_ONCE"
        Hint="doesn't shut"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="1ST_LEFT"
        Hint="first move is 90 deg counterclockwise w.r.t. angle"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="1ST_DOWN"
        Hint="first move is down"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="ALWAYS_SHOOT"
        Hint="door opens from damage" $0D " (can also be triggered)  "}
    }
    func_illusionary:form =
    {
     Help = "A simple entity that looks solid but lets you walk through it."
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="TRANSLUCENT"
        Hint="brush is translucent"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="LIGHT"
        Hint="light from adjacent room passes thru"}
    }
    func_monsterspawn_spot:form =
    {
     Help = "Spawnspot for func_monsterspawner.  Needs cnt field."
     bbox = '-16 -16 0 16 16 56'
     aflag: =
        {Txt = "&" Hint = "position in generation cycle, Required"
       }
     spawnername: =
        {Txt = "&" Hint = "shared with func_monsterspawner"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="IMP"
        Hint="alternate fire & ice imps spawn"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="ARCHER"
        Hint="an archer spawns"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="WIZARD"
        Hint="a wizard spawns"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="SCORPION"
        Hint="alternate brown and black scorpions spawn"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="SPIDER"
        Hint="alternate red and yellow spiders spawn"}
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="ONDEATH"
        Hint="doesn't spawn until current dies."}
     spawnflags: =
       {Txt="&"
        Typ="X64"
        Cap="QUIET"
        Hint="no spawnsound is made"}
     spawnflags: =
       {Txt="&"
        Typ="X128"
        Cap="TRIGGERONLY"
        Hint="spawns only when triggered, instead of continuously"}
     cnt: =
        {Txt = "&" Hint = "probably best  not used"
       }
     wait: =
        {Txt = "&" Hint = "time till next spawning, don't use with TRIGGERONLY spawnflag"
       }
    }
    func_monsterspawner:form =
    {
     Help = "Spawns monsters, telefragging living occupants."
     bbox = '-16 -16 0 16 16 56'
     angle: =
        {Txt = "&" Hint = "direction spawned monsters start out facing"
       }
     targetname: =
        {Txt = "&" Hint = "monster spawns when triggered (otherwise at start of level)"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="IMP"
        Hint="alternate fire & ice imps spawn"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="ARCHER"
        Hint="an archer spawns"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="WIZARD"
        Hint="a wizard spawns"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="SCORPION"
        Hint="alternate brown and black scorpions spawn"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="SPIDER"
        Hint="alternate red and yellow spiders spawn"}
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="ONDEATH"
        Hint="doesn't spawn until current dies."}
     spawnflags: =
       {Txt="&"
        Typ="X64"
        Cap="QUIET"
        Hint="no spawnsound is made"}
     spawnflags: =
       {Txt="&"
        Typ="X128"
        Cap="TRIGGERONLY"
        Hint="spawns only when triggered, instead of continuously"}
     wait: =
        {Txt = "&" Hint = "time before next monster is triggered.  Doesn't go well with TRIGGERONLY spawnflag"
       }
     cnt: =
        {Txt = "&" Hint = "number of monsters to spawn, default = 17"
       }
     spawnername: =
        {Txt = "&" Hint = "shared with func_monsterspawner"
       }
    }
    func_newplat:form =
    {
     Help = "Two-way platform."
     height: =
        {Txt = "&" Hint = "Required for plat to work (default height code doesn't work)" $0D "Plats normally displayed in down position = map. pos - height"
       }
     speed: =
        {Txt = "&" Hint = "speed of movement; default = 150."
       }
     wait: =
        {Txt = "&" Hint = "time before re-triggerable"
       }
     soundtype: =
        {Txt = "&" Hint = "sound it makes"
      Typ="C"
      Items="1) pulley" $0D "2) chain"
      values="1" $0D "2"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="START_BOTTOM"
        Hint="initially drawn at bottom of movement, then rises on use"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="RETURN"
        Hint="returns to start after use (use wait to specify after how long)"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="CONTINOUS"
        Hint="runs continuously after first use"}
    }
    func_plat:form =
    {
     Help = "Elevator"
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     height: =
        {Txt = "&" Hint = "how tall it is to be taken to be for determining travel distance."
       }
     soundtype: =
        {Txt = "&" Hint = "sound it makes"
      Typ="C"
      Items="1) pulley" $0D "2) chain"
      values="1" $0D "2"
       }
     speed: =
        {Txt = "&" Hint = "speed of movement; default = 150."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    func_pressure:form =
    {
     Help = "Like a button, but fires when enough mass is on it."
     angle: =
        {Txt = "&" Hint = "goes that way when enough mass is on, -1 for up, -2 for down"
       }
     target: =
        {Txt = "&" Hint = "entity with matching targetname is triggered when enough mass is on the plate"
       }
     mass: =
        {Txt = "&" Hint = "total needed to activate"
       }
     soundtype: =
        {Txt = "&" Hint = "sound it makes"
      Typ="C"
      Items="0) steam metal" $0D "1) wooden clunk" $0D "2) metallic clink" $0D "3) in-out"
      values="0" $0D "1" $0D "2" $0D "3"
       }
    }
    func_rotating:form =
    {
     Help = "Stuff that spins."
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     speed: =
        {Txt = "&" Hint = "speed of rotation; default = 100."
       }
     dmg: =
        {Txt = "&" Hint = "666 = gib on blockage; other values seem to do nothing"
       }
     health: =
        {Txt = "&" Hint = "how hard to break; requires BREAK spawnflag"
       }
     targetname: =
        {Txt = "&" Hint = "toggles rotation"
       }
     anglespeed: =
        {Txt = "&" Hint = "acceleration if GRADUAL is set:" $0D "1 very slow, 100 instant, 10 = default"
       }
     thingtype: =
        {Txt = "&" Hint = "hit sound and deathstyle; requires BREAK spawnflag"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="START_ON"
        Hint="entity rotates on spawning; required unless rotator is targetted"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="REVERSE"
        Hint="reverses direction of rotation"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="X_AXIS"
        Hint="rotates around x axis instead of default z. can be used with angle"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="Y_AXIS"
        Hint="rotates around y axis instead of default z. can be used with angle"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="BREAK"
        Hint="brush is breakable"}
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="GRADUAL"
        Hint="accelerates & decelerates as specified by anglespeed field"}
     spawnflags: =
       {Txt="&"
        Typ="X64"
        Cap="TOGGLE_REVERSE"
        Hint="switches direction on triggering"}
     spawnflags: =
       {Txt="&"
        Typ="X128"
        Cap="KEEP_START"
        Hint="supposedly stops in starting position, doesn't seem to work"}
    }
    func_train:form =
    {
     Help = "Trains are moving platforms that players can ride."
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     anglespeed: =
        {Txt = "&" Hint = "speed of angle-change (untested by tiglari)"
       }
     dmg: =
        {Txt = "&" Hint = "damage it does.             "
       }
     pausetime: =
        {Txt = "&" Hint = "amount of time train will wait before exploding if path_corner's wait-value is -2"
       }
     soundtype: =
        {Txt = "&" Hint = "sound it makes"
      Typ="C"
      Items="0) silent" $0D "1) ratchet"
      values="0" $0D "1"
       }
     speed: =
        {Txt = "&" Hint = "speed of displacement, default = 1; overridden by speed specified by path_corner."
       }
     thingtype: =
        {Txt = "&" Hint = "sets sound & chunks if train explodes (requires wait = -2).  Uses the same list as breakable_brush; see the Eye of Horus"
       }
     wait: =
        {Txt = "&" Hint = "use unknown"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="GLOW"
        Hint="makes train a light "}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="TOGGLE"
        Hint="makes train restartable (see Eutectic for the detail)"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="TRANSLUCENT"
        Hint="makes the train translucent."}
    }
    func_wall:form =
    {
     Help = "Wall that can glow or be translucent.  Not used in the maps."
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="TRANSLUCENT"
        Hint="makes it translucent"}
    }
    fx_smoke_generator:form =
    {
     Help = "Generates smoke puffs, in various styles"
     bbox = '-8 -8 -8 8 8 8'
     thingtype: =
        {Txt = "&" Hint = "style of puff"
      Typ="C"
      Items="0) white puff" $0D "1) red (lava)" $0D "2) green (slime)" $0D "3) grey (oil)"
      values="0" $0D "1" $0D "2" $0D "3"
       }
     lifespan: =
        {Txt = "&" Hint = "limits duration, endless if absent."
       }
     targetname: =
        {Txt = "&" Hint = "smoke starts when triggered"
       }
     wait: =
        {Txt = "&" Hint = "interpuff interval; default 2."
       }
    }
    info_null:form =
    {
     Help = "Used as a positional target for spotlights, etc."
     bbox = '-4 -4 -4 4 4 4'
     targetname: =
        {Txt = "&" Hint = "targetting light aims here as spotlight"
       }
    }
    info_player_coop:form =
    {
     Help = "potential spawning position for coop games"
     bbox = '-16 -16 -24 16 16 24'
     mdl = "models/paladin.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     targetname: =
        {Txt = "&" Hint = "targetted by trigger_changelevel in another map"
       }
    spawnflags: = {Txt="&" Typ="X1" Cap = "1"}
    spawnflags: = {Txt="&" Typ="X2" Cap = "2"}
    spawnflags: = {Txt="&" Typ="X4" Cap = "4"}
    spawnflags: = {Txt="&" Typ="X8" Cap = "8"}
    spawnflags: = {Txt="&" Typ="X16" Cap = "16"}
    spawnflags: = {Txt="&" Typ="X32" Cap = "32"}
    spawnflags: = {Txt="&" Typ="X64" Cap = "64"}
    spawnflags: = {Txt="&" Typ="X128" Cap = "128"}

    }
    info_player_deathmatch:form =
    {
     Help = "potential spawning position for deathmatch games"
     bbox = '-16 -16 -24 16 16 24'
     mdl = "models/assassin.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
    }
    info_player_start:form =
    {
     Help = "The normal starting point for a level."
     bbox = '-16 -16 -24 16 16 24'
     mdl = "models/crusader.mdl"
     mdlframe = "SunStn1"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     targetname: =
        {Txt = "&" Hint = "targetted by trigger_changelevel in another map"
       }
    }
    info_teleport_destination:form =
    {
     Help = "Teleport destination"
     bbox = '-8 -8 -8 8 8 32'
     targetname: =
        {Txt = "&" Hint = "targetted by trigger_teleport"
       }
     angle: =
        {Txt = "&" Hint = "the direction teleportee comes out facing"
       }
     avelocity_y: =
        {Txt = "&" Hint = "doesn't seem to do anything (2/74 in Raven maps)"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="NO_THROW"
        Hint="player dropped, not thrown, on exit"}
    }
    item_armor_amulet:form =
    {
     Help = "Player gets some armour, depending on class"
     bbox = '-8 -8 -45 8 8 20'
     mdl = "models/i_amulet.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    item_armor_bracer:form =
    {
     Help = "Player gets some armour, depending on class"
     bbox = '-8 -8 -45 8 8 20'
     mdl = "models/i_bracer.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    item_armor_breastplate:form =
    {
     Help = "Player gets some armour, depending on class"
     bbox = '-8 -8 -45 8 8 20'
     mdl = "models/i_bplate.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    item_armor_helmet:form =
    {
     Help = "Player gets some armour, depending on class"
     bbox = '-8 -8 -45 8 8 20'
     mdl = "models/i_helmet.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    item_health:form =
    {
     Help = "Crystal Vial, Player is given 10 health instantly"
     bbox = '-8 -8 -45 8 8 20'
     mdl = "models/i_hboost.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    item_mana_blue:form =
    {
     Help = "Player is given 15 blue mana instantly"
     bbox = '-8 -8 -45 8 8 20'
     mdl = "models/i_bmana.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    item_mana_both:form =
    {
     Help = "Player is given 15 green and 10 blue mana instantly"
     bbox = '-8 -8 -45 8 8 20'
     mdl = "models/i_btmana.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    item_mana_green:form =
    {
     Help = "Player is given 15 green mana instantly"
     bbox = '-8 -8 -45 8 8 20'
     mdl = "models/i_gmana.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    item_spawner:form =
    {
     Help = "Artifact spawner"
     bbox = '-8 -8 -44 8 8 20'
     targetname: =
        {Txt = "&" Hint = "artifact is produced when triggered"
       }
     bluemana: =
        {Txt = "&" Hint = "value is amount of blue mana spawned on death."
       }
     greenmana: =
        {Txt = "&" Hint = "amount of green mana spawned on death"
       }
     cnt_blast: =
        {Txt = "&" Hint = "value is the number of discs of repulsion spawned on death."
       }
     cnt_cubeofforce: =
        {Txt = "&" Hint = "value is number of force cubes spawned on death."
       }
     cnt_glyph: =
        {Txt = "&" Hint = "value is number of glyphs spawned on death"
       }
     cnt_h_boost: =
        {Txt = "&" Hint = "value is number of quartz flasks spawned on death."
       }
     cnt_haste: =
        {Txt = "&" Hint = "value is number of boots of speed spawned on death."
       }
     cnt_invincibility: =
        {Txt = "&" Hint = "value is numbers of icons spawned on death."
       }
     cnt_invisibility: =
        {Txt = "&" Hint = "value is number of invisibility spheres spawned on death."
       }
     cnt_mana_boost: =
        {Txt = "&" Hint = "value is number of kraters spawned on death."
       }
     cnt_polymorph: =
        {Txt = "&" Hint = "value is number of sheep-makers spawned on death."
       }
     cnt_sh_boost: =
        {Txt = "&" Hint = "value is number of mystic urns spawned on death."
       }
     cnt_summon: =
        {Txt = "&" Hint = "value is number of imp-lord summoners spawned on death."
       }
     cnt_teleport: =
        {Txt = "&" Hint = "value is number chaos-devices spawned on death."
       }
     cnt_tome: =
        {Txt = "&" Hint = "value is number of tomes of power spawned on death."
       }
     cnt_torch: =
        {Txt = "&" Hint = "value is number of torches spawned on death."
       }
    }
    item_triggers:form =
    {
     Caption = "Triggers"
     Help = "No help yet, peer into the Eye of Horus."
     target: =
        {Txt = "&" Hint = "triggered when item"
       }
     targetname: =
        {Txt = "&" Hint = "item disappears if killtargetted"
       }
     killtarget: =
        {Txt = "&" Hint = "targetted entity vanishes if item taken"
       }
     netname: =
        {Txt = "&" Hint = "useable with trigger_check and maybe some others"
       }
    }
    light:form =
    {
     Help = "Non-displayed fading light."
     bbox = '-8 -8 -8 8 8 8'
     light: =
        {Txt = "&" Hint = "intensity, default = 200 (pretty dim, max = 800)"
       }
     style: =
        {Txt = "&" Hint = "0 default, 1 fast flicker, 2 steady fade in and out, 3 erratic flicker" $0D " 32-63 for linking banks of lights.  Trigger should share style-value."
       }
     targetname: =
        {Txt = "&" Hint = "target to switch on/off"
       }
     target: =
        {Txt = "&" Hint = "for aiming at an info_null for spotlight effect"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STARTLOW"
        Hint="light starts off"}
    }
    light_flame_large_yellow:form =
    {
     Help = "Large yellow flame"
     bbox = '-10 -10 -12 12 12 18'
     mdl = "models/flame1.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     light: =
        {Txt = "&" Hint = "intensity, default = 200 (pretty dim, max = 800)"
       }
     health: =
        {Txt = "&" Hint = "how hard to break"
       }
     targetname: =
        {Txt = "&" Hint = "goes on/off when triggered"
       }
     style: =
        {Txt = "&" Hint = "0 default, 1 fast flicker, 2 steady fade in and out, 3 erratic flicker" $0D " 32-63 for linking banks of lights.  Trigger should share style-value."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STARTLOW"
        Hint="light starts off"}
    }
    light_flame_small_yellow:form =
    {
     Help = "Small yellow flame ball"
     bbox = '-8 -8 -8 8 8 8'
     mdl = "models/flame2.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     light: =
        {Txt = "&" Hint = "intensity, default = 200 (pretty dim, max = 800)"
       }
     health: =
        {Txt = "&" Hint = "how hard to break"
       }
     targetname: =
        {Txt = "&" Hint = "goes on/off when triggered"
       }
     style: =
        {Txt = "&" Hint = "0 default, 1 fast flicker, 2 steady fade in and out, 3 erratic flicker" $0D " 32-63 for linking banks of lights.  Trigger should share style-value."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STARTLOW"
        Hint="light starts off"}
    }
    light_gem:form =
    {
     Help = "A gem that displays light."
     bbox = '-8 -8 -8 8 8 8'
     mdl = "models/gemlight.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     light: =
        {Txt = "&" Hint = "intensity, default = 200 (pretty dim, max = 800)"
       }
     health: =
        {Txt = "&" Hint = "how hard to break"
       }
     targetname: =
        {Txt = "&" Hint = "turns on/off when triggered"
       }
     style: =
        {Txt = "&" Hint = "0 default, 1 fast flicker, 2 steady fade in and out, 3 erratic flicker" $0D " 32-63 for linking banks of lights.  Trigger should share style-value."
       }
     angles_x: =
        {Txt = "&" Hint = "postive value rotates face upward"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STARTLOW"
        Hint="light starts off"}
    }
    light_thunderstorm:form =
    {
     Help = "Thunder & lightning effects."
     bbox = '-8 -8 -8 8 8 8'
     targetname: =
        {Txt = "&" Hint = " needed to make it work"
       }
     light: =
        {Txt = "&" Hint = "brightness, default is dark storm"
       }
     dmg: =
        {Txt = "&" Hint = " how often lightning strikes ground, default=10"
       }
     lightvalue1: =
        {Txt = "&" Hint = "non-flash lightvalue 1-25, default 11"
       }
     style: =
        {Txt = "&" Hint = "link value 32-63 with lights for unified flash (sharing lightvalue1 as lower value!)"
       }
     wait: =
        {Txt = "&" Hint = "frequency of flashes, max 100, default 33"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="HUH"
        Hint="`causes there to be lighting if dmg is unspecified' ???"}
    }
    light_torch_castle:form =
    {
     Help = "The Castle style torch that displays light"
     bbox = '-8 -8 -8 8 8 8'
     mdl = "models/castrch.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     light: =
        {Txt = "&" Hint = "intensity, default = 200 (pretty dim, max = 800)"
       }
     health: =
        {Txt = "&" Hint = "how hard to break"
       }
     targetname: =
        {Txt = "&" Hint = "goes on/off when triggered"
       }
     style: =
        {Txt = "&" Hint = "0 default, 1 fast flicker, 2 steady fade in and out, 3 erratic flicker" $0D " 32-63 for linking banks of lights.  Trigger should share style-value."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STARTLOW"
        Hint="light starts off"}
    }
    light_torch_eqypt:form =
    {
     Help = "An Egyptian style torch that displays light"
     bbox = '-8 -8 -8 8 8 8'
     mdl = "models/egtorch.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     light: =
        {Txt = "&" Hint = "intensity, default = 200 (pretty dim, max = 800)"
       }
     health: =
        {Txt = "&" Hint = "how hard to break"
       }
     targetname: =
        {Txt = "&" Hint = "goes on/off when triggered"
       }
     style: =
        {Txt = "&" Hint = "0 default, 1 fast flicker, 2 steady fade in and out, 3 erratic flicker" $0D " 32-63 for linking banks of lights.  Trigger should share style-value."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STARTLOW"
        Hint="light starts off"}
    }
    light_torch_meso:form =
    {
     Help = "The Meso style torch that displays light"
     bbox = '-12 -12 -16 12 12 16'
     mdl = "models/mesotrch.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     light: =
        {Txt = "&" Hint = "intensity, default = 200 (pretty dim, max = 800)"
       }
     health: =
        {Txt = "&" Hint = "how hard to break"
       }
     targetname: =
        {Txt = "&" Hint = "goes on/off when triggered"
       }
     style: =
        {Txt = "&" Hint = "0 default, 1 fast flicker, 2 steady fade in and out, 3 erratic flicker" $0D " 32-63 for linking banks of lights.  Trigger should share style-value."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STARTLOW"
        Hint="light starts off"}
    }
    light_torch_rome:form =
    {
     Help = "The Roman style torch that displays light"
     bbox = '-8 -8 -8 8 8 8'
     mdl = "models/rometrch.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     light: =
        {Txt = "&" Hint = "intensity, default = 200 (pretty dim, max = 800)"
       }
     health: =
        {Txt = "&" Hint = "how hard to break"
       }
     targetname: =
        {Txt = "&" Hint = "goes on/off when triggered"
       }
     style: =
        {Txt = "&" Hint = "0 default, 1 fast flicker, 2 steady fade in and out, 3 erratic flicker" $0D " 32-63 for linking banks of lights.  Trigger should share style-value."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STARTLOW"
        Hint="light starts off"}
    }
    light_torch_small_walltorch:form =
    {
     Help = "Short wall torch"
     bbox = '-10 -10 -20 10 10 20'
     mdl = "models/flame.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     light: =
        {Txt = "&" Hint = "intensity, default = 200 (pretty dim, max = 800)"
       }
     health: =
        {Txt = "&" Hint = "how hard to break"
       }
     targetname: =
        {Txt = "&" Hint = "goes on/off when triggered"
       }
     style: =
        {Txt = "&" Hint = "0 default, 1 fast flicker, 2 steady fade in and out, 3 erratic flicker" $0D " 32-63 for linking banks of lights.  Trigger should share style-value."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STARTLOW"
        Hint="light starts off"}
    }
    misc_fireball:form =
    {
     Help = "Lava Balls, Unfinished"
     bbox = '-8 -8 -8 8 8 8'
    }
    misc_fountain:form =
    {
     Help = "Generates a water-spray"
     bbox = '0 0 0 32 32 32'
     cnt: =
        {Txt = "&" Hint = " particle density (default = 2)"
       }
     color: =
        {Txt = "&" Hint = "color from the palette" Typ = "LP"
       }
     movedir: =
        {Txt = "&" Hint = "triple of numbers; initial force of movement in x,y,z directions;" $0D " 1 1 1, 1 1 2 occur in the maps"
       }
     angles: =
        {Txt = "&" Hint = "triple of numbers, directs spray;" $0D "0 0 0 = default for normal orientation"
       }
    }
    monster_archer:form =
    {
     Help = "The Archer Knight monster"
     bbox = '-16 -16 0 16 16 50'
     mdl = "models/archer.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_archer_lord:form =
    {
     Help = "The Archer Lord monster"
     bbox = '-16 -16 0 16 16 50'
     mdl = "models/archer.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_eidolon:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    monster_fallen_angel:form =
    {
     Help = "Fallen angel monster"
     bbox = '-14 -14 -41 14 14 23'
     mdl = "models/fangel.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_fallen_angel_lord:form =
    {
     Help = "Fallen angel lord (translucent, powerful)"
     bbox = '-14 -14 -41 14 14 23'
     mdl = "models/fangel.mdl"
     mdlskin = '1'
     mdlopacity = '0.5'
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_fish:form =
    {
     Help = "Ambient Fish"
     bbox = '-16 -16 -8 16 16 8'
     mdl = "models/fish.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_golem_bronze:form =
    {
     Help = "Bronze Golem."
     bbox = '-64 -64 0 64 64 194'
     mdl = "models/golem_b.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_golem_crystal:form =
    {
     Help = "Crystal Golem."
     bbox = '-32 -32 -24 32 32 64'
     mdl = "models/golem_s.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    monster_golem_iron:form =
    {
     Help = "Iron Golem."
     bbox = '-55 -55 0 55 55 120'
     mdl = "models/golem_i.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_golem_stone:form =
    {
     Help = "Stone Golem."
     bbox = '-32 -32 0 32 32 88'
     mdl = "models/golem_s.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_hydra:form =
    {
     Help = "Hydra monster"
     bbox = '-40 -40 -42 40 40 42'
     mdl = "models/hydra.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_imp_fire:form =
    {
     Help = "Grunt monster - common.  Shoots a fireball. "
     bbox = '-16 -16 0 16 16 55'
     mdl = "models/imp.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="GARGOYLE"
        Hint="a statue until attacked or inspected"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="GARGOYLE"
        Hint="a statue until attacked or inspected"}
    }
    monster_imp_ice:form =
    {
     Help = "Grunt monster - common.  Shoots multiple ice shards. "
     bbox = '-16 -16 0 16 16 55'
     mdl = "models/imp.mdl"
     mdlskin = '1'
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="GARGOYLE"
        Hint="a statue until attacked or inspected"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
     wait: =
        {Txt = "&" Hint = "-1 makes it indestructible decoration."
       }
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="GARGOYLE"
        Hint="a statue until attacked or inspected"}
    }
    monster_medusa_green:form =
    {
     Help = "The medusa monster with its nasty sharp pointy teeth"
     bbox = '-16 -16 0 16 16 56'
     mdl = "models/medusa.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_mummy:form =
    {
     Help = "No, it's not Keith Richards or Bob Dylan."
     bbox = '-16 -16 0 16 16 50'
     mdl = "models/mummy.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_mummy_lord:form =
    {
     Help = "He's big, he's bad, he's wrapped in moldy bandages - he's the mummy."
     bbox = '-16 -16 0 16 16 50'
     mdl = "models/mummy.mdl"
     mdlskin = '1'
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_rat:form =
    {
     Help = "One rat, appears and flees when triggered"
     bbox = '-3 -3 0 3 3 7'
     mdl = "models/rat.mdl"
     targetname: =
        {Txt = "&" Hint = "when triggered, rat appears"
       }
     target: =
        {Txt = "&" Hint = "targets a path_corner that the rat runs to"
       }
    }
    monster_ratnest:form =
    {
     Help = "A group of 3 to 6 rats that appear and flee when triggered"
     bbox = '-20 -20 0 20 20 10'
     targetname: =
        {Txt = "&" Hint = "when triggered, rat appears"
       }
     target: =
        {Txt = "&" Hint = "targets a path_corner that the rat runs to"
       }
    }
    monster_scorpion_black:form =
    {
     Help = "Black scorpion."
     bbox = '-10 -10 0 10 10 64'
     mdl = "models/scorpion.mdl"
     mdlskin = '1'
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_scorpion_yellow:form =
    {
     Help = "Yellow scorpion."
     bbox = '-10 -10 0 10 10 64'
     mdl = "models/scorpion.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_skull_wizard:form =
    {
     Help = "A skull wizard"
     bbox = '-24 -24 0 24 24 64'
     mdl = "models/skullwiz.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_skull_wizard_lord:form =
    {
     Help = "A skull wizard lord"
     bbox = '-24 -24 0 24 24 64'
     mdl = "models/skullwiz.mdl"
     mdlskin = '1'
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_snake:form =
    {
     Help = "Monster snake that comes to life and attacks"
     bbox = '-80 -80 0 80 80 200'
     mdl = "models/snake.mdl"
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     scale: =
        {Txt = "&" Hint = "this is useful for the snake, since it's fixed"
       }
     target: =
        {Txt = "&" Hint = "snake awakens when triggered"
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    monster_spider_red_large:form =
    {
     Help = "Large red spider."
     bbox = '-16 -16 0 16 16 26'
     mdl = "models/spider.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="ONWALL"
        Hint="spider starts out the wall, should be placed at least 8 pixels away"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="ONWALL"
        Hint="spider starts out the wall, should be placed at least 8 pixels away"}
    }
    monster_spider_red_small:form =
    {
     Help = "Small red spider."
     bbox = '-12 -12 0 12 12 16'
     mdl = "models/spider.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="ONWALL"
        Hint="spider starts out the wall, should be placed at least 8 pixels away"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="ONWALL"
        Hint="spider starts out the wall, should be placed at least 8 pixels away"}
    }
    monster_spider_yellow_large:form =
    {
     Help = "Large yellow spider."
     bbox = '-16 -16 0 16 16 26'
     mdl = "models/spider.mdl"
     mdlskin = '1'
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="ONWALL"
        Hint="spider starts out the wall, should be placed at least 8 pixels away"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="ONWALL"
        Hint="spider starts out the wall, should be placed at least 8 pixels away"}
    }
    monster_spider_yellow_small:form =
    {
     Help = "Small yellow spider."
     bbox = '-12 -12 0 12 12 16'
     mdl = "models/spider.mdl"
     mdlskin = '1'
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="ONWALL"
        Hint="spider starts out the wall, should be placed at least 8 pixels away"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="ONWALL"
        Hint="spider starts out the wall, should be placed at least 8 pixels away"}
    }
    monster_triggers:form =
    {
     Caption = "Monster triggers"
     Help = "No help yet, peer into the Eye of Horus."
     target: =
        {Txt = "&" Hint = "triggered when monster dies"
       }
     targetname: =
        {Txt = "&" Hint = "monster wakes up when triggered (unfreezes if frozen;" $0D "disappears if killtargetted)"
       }
     killtarget: =
        {Txt = "&" Hint = "targetted entity vanishes when monster is killed" $0D "  Not sure that this is good for anything, but there it is anyway..."
       }
     netname: =
        {Txt = "&" Hint = "useable with trigger_check and maybe some others"
       }
    }
    monster_werejaguar:form =
    {
     Help = "WereCat with jaguar skin"
     bbox = '-16 -16 0 16 16 56'
     mdl = "models/mezzoman.mdl"
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    monster_werepanther:form =
    {
     Help = "WereCat with panther skin"
     bbox = '-16 -16 0 16 16 56'
     mdl = "models/skullwiz.mdl"
     mdlskin = '1'
     angle: =
        {Txt = "&" Hint = "direction monster starts out facing"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="AMBUSH"
        Hint="supposedly, monster only wakes up on sight of player, not other aroused monster " $0D " sometimes seems to work for me, sometimes not."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="STUCK"
        Hint="makes some monsters stand in position (golems inert, archers shooting) until triggered"}
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for monsters to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="monster_triggers:form"
      Hint="specs for monsters to trigger and be triggered"
    }
    }
    obj_ballista:form =
    {
     Help = "A ballista which is animated to shoot an arrow"
     bbox = '-45 -45 0 45 45 60'
     mdl = "models/ballista.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     dmg: =
        {Txt = "&" Hint = "damage projectile will do, default 50"
       }
     experience_value: =
        {Txt = "&" Hint = "don't think this does anthing"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
     speed: =
        {Txt = "&" Hint = "delay in seconds between auto-firing"
       }
     targetname: =
        {Txt = "&" Hint = "name of trigger_control entity to give player control"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="TRACK_PLAYER"
        Hint="ballista tracks player, can't be taken control of"}
    }
    obj_barrel:form =
    {
     Help = "A barrel, just a plain old barrel"
     bbox = '-13 -13 0 13 13 36'
     mdl = "models/barrel.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="ON_SIDE"
        Hint="spawns on side, rolls in a cool manner"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="SINK"
        Hint="sinks instead of floats in water, won't lift off floor."}
    }
    obj_barrel_exploding:form =
    {
     Help = "An exploding barrel with red XXX on the side"
     bbox = '-13 -13 0 13 13 36'
     mdl = "models/barrel.mdl"
     mdlskin = '1'
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="ON_SIDE"
        Hint="spawns on side, rolls in a cool manner"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="SINK"
        Hint="sinks instead of floats in water, won't lift off floor."}
    }
    obj_barrel_indestructible:form =
    {
     Help = "A barrel you just can't break"
     bbox = '-13 -13 0 13 13 36'
     mdl = "models/barrel.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     mass: =
        {Txt = "&" Hint = "weight (for activating pressure-plates, breaking ice)."
       }
     scale: =
        {Txt = "&" Hint = "multiplier for size; values between .5 and 2.5 seem to work."
       }
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="ON_SIDE"
        Hint="spawns on side, rolls in a cool manner"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="SINK"
        Hint="sinks instead of floats in water, won't lift off floor."}
    }
    obj_barstool:form =
    {
     Help = "A bar stool - Drinks on the house!"
     bbox = '-10 -10 -5 10 10 32'
     mdl = "models/stool.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
    }
    obj_beefslab:form =
    {
     Help = "A slab of beef."
     bbox = '-16 -16 0 16 16 40'
     mdl = "models/beefslab.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_bell:form =
    {
     Help = "A big bell that rings when hit. "
     bbox = '-100 -100 -210 100 100 8'
     mdl = "models/bellring.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_bench:form =
    {
     Help = "A wooden bench "
     bbox = '-30 -30 0 30 30 40'
     mdl = "models/bench.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
    }
    obj_bonepile:form =
    {
     Help = "A pile of bones."
     bbox = '-10 -10 0 10 10 10'
     mdl = "models/bonepile.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_book_closed:form =
    {
     Help = "A book that is closed"
     bbox = '-8 -8 0 8 8 10'
     mdl = "models/bookclos.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_book_open:form =
    {
     Help = "A book that is open"
     bbox = '-8 -8 0 8 8 10'
     mdl = "models/bookopen.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_bush1:form =
    {
     Help = "A small round bush"
     bbox = '-16 -16 0 16 16 40'
     mdl = "models/bush1.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_cart:form =
    {
     Help = "A cart "
     bbox = '-36 -32 -10 36 75 64'
     mdl = "models/cart.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
    }
    obj_catapult2:form =
    {
     Help = "Sheep were meant to fly."
     bbox = '-150 -150 0 150 150 28'
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     health: =
        {Txt = "&" Hint = "default = 1000"
       }
     speed: =
        {Txt = "&" Hint = "supposedly launch speed, default = 300, not sure if works"
       }
     targetname: =
        {Txt = "&" Hint = "targettable for remote fiting"
       }
     thingtype: =
        {Txt = "&" Hint = "determines noise and deathstyle, default = 0 (patterned glass)"
      Typ="C"
      Items="0) glass (default)" $0D "1) stone" $0D "2) wood" $0D "3) metal" $0D "4) flesh" $0D "5) fire" $0D "6) clay" $0D "7) leaves" $0D "8) hay" $0D "9) brownstone" $0D "10) cloth" $0D "11) wood-leaf" $0D "12) wood-metal" $0D "13) wood-stone" $0D "14) metal-stone" $0D "15) metal-cloth" $0D "16) webs" $0D "17) glass" $0D "18) ice" $0D "19) clearglass" $0D "20) redglass"
      values="0" $0D "1" $0D "2" $0D "3" $0D "4" $0D "5" $0D "6" $0D "7" $0D "8" $0D "9" $0D "10" $0D "11" $0D "12" $0D "13" $0D "14" $0D "15" $0D "16" $0D "17" $0D "18" $0D "19" $0D "20"
       }
     wait: =
        {Txt = "&" Hint = "time to reset, default = 3"
       }
    }
    obj_cauldron:form =
    {
     Help = "A cauldron"
     bbox = '-16 -16 0 16 16 40'
     mdl = "models/cauldron.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
    }
    obj_chair:form =
    {
     Help = "A wooden chair. "
     bbox = '-10 -10 -5 10 10 40'
     mdl = "models/chair.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
    }
    obj_chaos_orb:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     netname: =
        {Txt = "&" Hint = "shared with a func_door, etc, in eidolon.bsp, dunno why."
       }
    }
    obj_chest1:form =
    {
     Help = "A treasure chest (2 skins)"
     bbox = '-16 -16 0 16 16 32'
     mdl = "models/chest1.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
     skin: =
        {Txt = "&" Hint = "skin displayed by model"
      Typ="C"
      Items="0) generic/default" $0D "1) Roman"
      values="0" $0D "1"
       }
    }
    obj_chest2:form =
    {
     Help = "A treasure chest on legs (2 skins)"
     bbox = '-16 -16 0 16 16 32'
     mdl = "models/chest2.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
     skin: =
        {Txt = "&" Hint = "skin displayed by model"
      Typ="C"
      Items="0) generic/default" $0D "1) Meso" $0D "2) Egyption"
      values="0" $0D "1" $0D "2"
       }
    }
    obj_chest3:form =
    {
     Help = "A treasure chest on legs"
     bbox = '-16 -16 0 16 16 32'
     mdl = "models/chest3.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
    }
    obj_corpse1:form =
    {
     Help = "A nude male body laying face down"
     bbox = '-32 -32 0 32 32 10'
     mdl = "models/corps1.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     skin: =
        {Txt = "&" Hint = "model skin; 3 has pants"
      Typ="C"
      Items="0) burnt (default)" $0D "1) normal" $0D "2) diseased" $0D "3) wounded"
      values="0" $0D "1" $0D "2" $0D "3"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_corpse2:form =
    {
     Help = "A male body with pants on laying face up"
     bbox = '-32 -32 0 32 32 10'
     mdl = "models/corps2.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     skin: =
        {Txt = "&" Hint = "wound-type skins"
      Typ="C"
      Items="0) face etc." $0D "1) chest" $0D "2) stomach" $0D "3) dead only" $0D "4) webbed"
      values="0" $0D "1" $0D "2" $0D "3" $0D "4"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_fence:form =
    {
     Help = "A section of fence"
     bbox = '-26 -26 0 26 26 70'
     mdl = "models/fence.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
    }
    obj_flag:form =
    {
     Help = "A flag that wave in the breeze"
     bbox = '-16 -16 0 16 16 160'
     mdl = "models/flag.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_fountain:form =
    {
     Help = "A water fountain"
     bbox = '-24 -24 0 24 24 80'
     mdl = "models/fountain.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_hedge1:form =
    {
     Help = "A hedge that looks like an X-mas tree"
     bbox = '-16 -16 0 16 16 80'
     mdl = "models/hedge1.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_hedge2:form =
    {
     Help = "A hedge that is square and of medium height"
     bbox = '-16 -16 0 16 16 80'
     mdl = "models/hedge2.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_hedge3:form =
    {
     Help = "A hedge that is tall and thin"
     bbox = '-16 -16 0 16 16 80'
     mdl = "models/hedge3.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_ice:form =
    {
     Help = "Slippery, slidey ice"
     health: =
        {Txt = "&" Hint = "how hard to break, default = 20"
       }
     friction: =
        {Txt = "&" Hint = "default 0.2, 1 normal, 10 max"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow; default = 0.5"
       }
    }
    obj_pew:form =
    {
     Help = "A church pew - like you might find in a church."
     bbox = '-16 -40 0 16 40 50'
     mdl = "models/pew.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_plant_generic:form =
    {
     Help = "A generic plant that should have some kind of pot placed below it."
     bbox = '-10 -10 0 10 10 20'
     mdl = "models/plantgen.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_plant_meso:form =
    {
     Help = "A plant for the Mesoamerican level (has little pot)."
     bbox = '-10 -10 0 10 10 40'
     mdl = "models/plantmez.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_plant_rome:form =
    {
     Help = "A plant for the Rome area (has tall pot)."
     bbox = '-24 -24 0 24 24 90'
     mdl = "models/plantrom.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_playerhead_assassin:form =
    {
     Help = "The head of the assassin."
     bbox = '-8 -8 0 8 8 16'
     mdl = "models/h_ass.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_playerhead_crusader:form =
    {
     Help = "The head of the crusader."
     bbox = '-8 -8 0 8 8 16'
     mdl = "models/h_cru.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_playerhead_necromancer:form =
    {
     Help = "The head of the necromancer."
     bbox = '-8 -8 0 8 8 16'
     mdl = "models/h_nec.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_playerhead_paladin:form =
    {
     Help = "The head of the paladin."
     bbox = '-8 -8 0 8 8 16'
     mdl = "models/h_pal.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_pot1:form =
    {
     Help = "A clay pot with handles"
     bbox = '-24 -24 0 24 24 50'
     mdl = "models/pot1.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
    }
    obj_pot2:form =
    {
     Help = "A pot with gently curved sides"
     bbox = '-16 -16 0 16 16 40'
     mdl = "models/pot2.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
    }
    obj_pot3:form =
    {
     Help = "A pot with a sharply curved sides"
     bbox = '-16 -16 0 16 16 40'
     mdl = "models/pot3.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    more: = {
      Typ="B"
      Txt="containment"
      Cap="Push"
      Form="containment:form"
      Hint="specifics for objects to contain things"
    }
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="object_triggers:form"
      Hint="specifics for objects to trigger and be triggered"
    }
    }
    obj_seaweed:form =
    {
     Help = "An animate seaweed that sways from side to side."
     bbox = '-8 -8 0 8 8 32'
     mdl = "models/seaweed.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_skull:form =
    {
     Help = "A skull, suitable for over the fireplace or perhaps a colorful holiday display"
     bbox = '-8 -8 0 8 8 16'
     mdl = "models/skull.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_skull_stick2:form =
    {
     Help = "Two skulls on a stick"
     bbox = '-16 -16 0 16 16 40'
     mdl = "models/skllstk2.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_skullstick:form =
    {
     Help = "A skull on a stick - mmm,mmm, good"
     bbox = '-16 -16 0 16 16 40'
     mdl = "models/skllstk1.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_angel:form =
    {
     Help = "A statue of an angle praying."
     bbox = '-60 -60 0 60 60 120'
     mdl = "models/anglstat.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_athena:form =
    {
     Help = "Statue of a Athena"
     bbox = '-30 -30 0 30 30 90'
     mdl = "models/athena.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_caesar:form =
    {
     Help = "Statue of a Caesar Romero"
     bbox = '-24 -24 0 24 24 90'
     mdl = "models/caesar.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_king:form =
    {
     Help = "A statue of a king holding a sword in front of him."
     bbox = '-30 -30 0 30 30 120'
     mdl = "models/king.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_lion:form =
    {
     Help = "Statue of a lion."
     bbox = '-56 -14 0 56 14 60'
     mdl = "models/lion.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_mars:form =
    {
     Help = "A statue of Mars."
     bbox = '-30 -30 0 30 30 80'
     mdl = "models/mars.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_mummy:form =
    {
     Help = "Statue of the mummy monster"
     bbox = '-16 -16 0 16 16 160'
     mdl = "models/mumstatu.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_mummy_head:form =
    {
     Help = "Statue of the nubis head"
     bbox = '-16 -16 -26 16 16 160'
     mdl = "models/mhdstatu.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_neptune:form =
    {
     Help = "Statue of Neptune (I think)"
     bbox = '-30 -30 0 30 30 100'
     mdl = "models/neptune.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_olmec:form =
    {
     Help = "A olmec statue, of course. What the heck is an olmec?"
     bbox = '-40 -40 0 40 40 130'
     mdl = "models/olmec1.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_snake:form =
    {
     Help = "The front of a snake"
     bbox = '-16 -16 0 16 16 80'
     mdl = "models/snkstatu.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="INVINCIBLE"
        Hint="won't take damage"}
    }
    obj_statue_snake_coil:form =
    {
     Help = "Statue of a coiled snake (just like the one that comes to life) but this one doesn't come to life."
     bbox = '-44 -44 0 44 44 90'
     mdl = "models/snake.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_statue_tut:form =
    {
     Help = "An Egyptian statue of a guy with a flat head hat"
     bbox = '-36 -36 0 36 36 248'
     mdl = "models/tutstatu.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_sword:form =
    {
     Help = "A sword "
     bbox = '-16 -16 -8 16 16 8'
     mdl = "models/sword.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
     angles_x: =
        {Txt = "&" Hint = "positive value rotates point upward"
       }
     angles_y: =
        {Txt = "&" Hint = "3D angle field; rotates aound top-bottom axis (i.e. in horizontal plane)."
       }
     angles_z: =
        {Txt = "&" Hint = "3D angle field; rotates around lengthwise axis"
       }
    }
    obj_tombstone1:form =
    {
     Help = "A tombstone in the shape of a cross"
     bbox = '-24 -24 0 24 24 60'
     mdl = "models/tombstn1.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_tombstone2:form =
    {
     Help = "A tombstone with a rounded top"
     bbox = '-16 -16 0 16 16 40'
     mdl = "models/tombstn2.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_tree:form =
    {
     Help = "A tree that has no leaves"
     bbox = '-42 -42 0 42 42 160'
     mdl = "models/tree.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_tree2:form =
    {
     Help = "A tree with a round top of leaves "
     bbox = '-140 -140 -16 140 140 220'
     mdl = "models/tree2.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     health: =
        {Txt = "&" Hint = "how much damage needed to kill."
       }
    }
    obj_webs:form =
    {
     Help = "Big webby stuff."
     bbox = '-25 -25 -25 25 25 25'
     mdl = "models/webs.mdl"
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     angle: =
        {Txt = "&" Hint = "use unknown, default = 0"
       }
     health: =
        {Txt = "&" Hint = "default 0, indestructible, lo value breakable by landing"
       }
     scale: =
        {Txt = "&" Hint = "multiplier for size; values between .5 and 2.5 seem to work."
       }
     targetname: =
        {Txt = "&" Hint = "use unknown"
       }
     v_angle_y: =
        {Txt = "&" Hint = " rotation around Y,Z,X axes of normal to web-sheet"
       }
     skin: =
        {Txt = "&" Hint = "skin displayed by model"
      Typ="C"
      Items="0) littlies" $0D "1) corner" $0D "2) cobwebs" $0D "3) giant" $0D "4) 15x normal!"
      values="0" $0D "1" $0D "2" $0D "3" $0D "4"
       }
     spawnflags: =
       {Txt="&"
        Typ="Xcobwebs"
        Cap="and"
        Hint="corner web.  1&2 make it break apart upon touch."}
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="SOLID"
        Hint="Make it so you can walk on it and not pass though it."}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="ANIMATE"
        Hint="give it a slight constant animation.  Looks best on"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="TOUCHMOVE"
        Hint="Will cycle through it's animation once only when touched, not meant to be used with any other spawnflag"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="FLAT"
        Hint="Use with SOLID, adjust bb-size for walkability"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="NO_TRANSLUCENCY"
        Hint="No translucency, totally solid coloring"}
    }
    object_triggers:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     target: =
        {Txt = "&" Hint = "triggered when object is destroyed"
       }
     targetname: =
        {Txt = "&" Hint = "object breaks when triggered" $0D "(or just disappears if killtargetted)"
       }
     killtarget: =
        {Txt = "&" Hint = "targetted entity vanishes when object breaks"
       }
     netname: =
        {Txt = "&" Hint = "useable with trigger_check and maybe some others"
       }
    }
    path_corner:form =
    {
     Help = "Destination point for monsters and trains; can specify next" $0D "destination as its target-value"
     bbox = '-8 -8 -8 8 8 8'
     targetname: =
        {Txt = "&" Hint = "shared as target-value with monster or train that comes here first"
       }
     angles: =
        {Txt = "&" Hint = "X Y Z angles to modify trains angles by"
       }
     anglespeed: =
        {Txt = "&" Hint = "speed of rotation between this and previous, default 100. 0 means keep previous"
       }
     speed: =
        {Txt = "&" Hint = "displacement speed between this and next"
       }
     target: =
        {Txt = "&" Hint = "targets next path_corner"
       }
     wait: =
        {Txt = "&" Hint = "pause time before proceeding, I guess"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="SYNCH"
        Hint="autocalculation of anglespeed for trains.  does nothing for monsters."}
    }
    plaque:form =
    {
     Help = "A plaque that a player can read"
     #message: =
        {Txt = "&" Hint = "message ('#' means you can enter an actual message instead of a message number)"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     targetname: =
        {Txt = "&" Hint = "targetted by trigger_activate to make readable if DEACTIVATED spawnflag is set"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="INVISIBLE"
        Hint="brush can't be seen"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="DEACTIVATED"
        Hint="must be activated by a trigger_activate in order to display."}
    }
    player_sheep:form =
    {
     Help = "A sheep player model"
     bbox = '-8 -8 -0 8 8 32'
     mdl = "models/sheep.mdl"
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     target: =
        {Txt = "&" Hint = " fires when sheep dies, or, if it's a path_corner," $0D " sheep walks towards it upon spawning"
       }
     targetname: =
        {Txt = "&" Hint = "sheep awakes when trigggered"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STATIONARY"
        Hint="doesn't wander"}
    }
    puzzle_piece:form =
    {
     Help = "Puzzle Piece"
     bbox = '-8 -8 -28 8 8 8'
     netname: =
        {Txt = "&" Hint = "item name used in message when acquired"
       }
     puzzle_id: =
        {Txt = "&" Hint = "name of model (5 letters or less)"
       }
     angle: =
        {Txt = "&" Hint = "useless for standard puzzzle_pieces, which bob and rotate"
       }
     scale: =
        {Txt = "&" Hint = "multiplier for size; values between .5 and 2.5 seem to work."
       }
     targetname: =
        {Txt = "&" Hint = "when triggered, puzzle piece spawns. (requires spawnflag 1)"
       }
     target: =
        {Txt = "&" Hint = "target is triggered when piece is taken by player"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="SPAWN"
        Hint="piece doesn't appear until targetted"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="FLOAT"
        Hint="doesn't drop to floor"}
    }
    puzzle_static_piece:form =
    {
     Help = "Object for used puzzle-pieces, in final display position."
     bbox = '-8 -8 -8 8 8 8'
     puzzle_id: =
        {Txt = "&" Hint = "name of puzzle_piece's model"
       }
     targetname: =
        {Txt = "&" Hint = "piece spawns when triggered"
       }
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     lifespan: =
        {Txt = "&" Hint = "limits duration, endless if absent."
       }
    }
    puzzles:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     puzzle_piece_1: =
        {Txt = "&" Hint = "value should be name of required piece (5 letters)"
       }
     puzzle_piece_2: =
        {Txt = "&" Hint = "value should be name of required piece (5 letters)"
       }
     puzzle_piece_3: =
        {Txt = "&" Hint = "value should be name of required piece (5 letters)"
       }
     puzzle_piece_4: =
        {Txt = "&" Hint = "value should be name of required piece (5 letters)"
       }
     #no_puzzle_msg: =
        {Txt = "&" Hint = "message if piece lacking"
       }
    }
    rider_death:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     map: =
        {Txt = "&" Hint = "name of map to go to on triggering or death of bearer."
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
    }
    rider_famine:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     map: =
        {Txt = "&" Hint = "name of map to go to on triggering or death of bearer."
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
    }
    rider_path:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     next_path_1: =
        {Txt = "&" Hint = "not really known, prolly as obvious ..."
       }
     next_path_2: =
        {Txt = "&" Hint = "not really known, prolly as obvious ..."
       }
     next_path_3: =
        {Txt = "&" Hint = "not really known, prolly as obvious ..."
       }
     next_path_4: =
        {Txt = "&" Hint = "not really known, prolly as obvious ..."
       }
     next_path_5: =
        {Txt = "&" Hint = "not really known, prolly as obvious ..."
       }
     next_path_6: =
        {Txt = "&" Hint = "not really known, prolly as obvious ..."
       }
     path_id: =
        {Txt = "&" Hint = "don't know"
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    rider_pestilence:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     map: =
        {Txt = "&" Hint = "name of map to go to on triggering or death of bearer."
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    rider_quake:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     abslight: =
        {Txt = "&" Hint = "inherent glow, value between 0 and 1"
       }
     rt_chance: =
        {Txt = "&" Hint = "unknown, appears only un rider stuff."
       }
    spawnflags: = {Txt="&" Typ="X1" Cap = "1"}
    spawnflags: = {Txt="&" Typ="X2" Cap = "2"}
    spawnflags: = {Txt="&" Typ="X4" Cap = "4"}
    spawnflags: = {Txt="&" Typ="X8" Cap = "8"}
    spawnflags: = {Txt="&" Typ="X16" Cap = "16"}
    spawnflags: = {Txt="&" Typ="X32" Cap = "32"}
    spawnflags: = {Txt="&" Typ="X64" Cap = "64"}
    spawnflags: = {Txt="&" Typ="X128" Cap = "128"}

    }
    rider_quake_center:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     rt_chance: =
        {Txt = "&" Hint = "unknown, appears only un rider stuff."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    rider_trigger_multiple:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     rt_chance: =
        {Txt = "&" Hint = "unknown, appears only un rider stuff."
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
    }
    rider_trigger_once:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     rt_chance: =
        {Txt = "&" Hint = "unknown, appears only un rider stuff."
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
    }
    rider_war:form =
    {
     Help = "No help yet, peer into the Eye of Horus."
     map: =
        {Txt = "&" Hint = "name of map to go to on triggering or death of bearer."
       }
    spawnflags: = {Txt="&" Typ="X1" Cap = "1"}
    spawnflags: = {Txt="&" Typ="X2" Cap = "2"}
    spawnflags: = {Txt="&" Typ="X4" Cap = "4"}
    spawnflags: = {Txt="&" Typ="X8" Cap = "8"}
    spawnflags: = {Txt="&" Typ="X16" Cap = "16"}
    spawnflags: = {Txt="&" Typ="X32" Cap = "32"}
    spawnflags: = {Txt="&" Typ="X64" Cap = "64"}
    spawnflags: = {Txt="&" Typ="X128" Cap = "128"}

     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    sound_ambient:form =
    {
     Help = "Creates an ambient sound in the world."
     bbox = '-10 -10 -8 10 10 8'
     soundtype: =
        {Txt = "&" Hint = "additional codes don't work, but some can be fixed;" $0D "see the Eye of Horus for details"
      Typ="C"
      Items="1) windmill" $0D "2) dripping echo" $0D "3) dripping no echo" $0D "4) sky/wind" $0D "5) crickets" $0D "6) birds" $0D "7) raven" $0D "8) rocks falling"
      values="1" $0D "2" $0D "3" $0D "4" $0D "5" $0D "6" $0D "7" $0D "8"
       }
    }
    sound_maker:form =
    {
     Help = "Makes sounds that can be triggered (not many in the game)."
     bbox = '-10 -10 -8 10 10 8'
     soundtype: =
        {Txt = "&" Hint = "sound it makes"
      Typ="C"
      Items="1) bell" $0D "2) organ" $0D "3) eerie tones"
      values="1" $0D "2" $0D "3"
       }
     targetname: =
        {Txt = "&" Hint = "sound starts when this is triggered"
       }
     delay: =
        {Txt = "&" Hint = "delay between triggering and action."
       }
    }
    target_null:form =
    {
     Help = "Something to aim the camera at. "
     bbox = '-8 -8 -8 8 8 8'
     targetname: =
        {Txt = "&" Hint = "targetted by camera_remote"
       }
    }
    trap_fireball:form =
    {
     Help = "Fireball shooter"
     bbox = '0 0 0 16 16 16'
     angle: =
        {Txt = "&" Hint = "the direction it starts out pointing"
       }
     targetname: =
        {Txt = "&" Hint = "starts when triggered, without this does nothing."
       }
     dmg: =
        {Txt = "&" Hint = "hit damage, default = 10."
       }
     target: =
        {Txt = "&" Hint = "target; if undefined, player is shot instead"
       }
     wait: =
        {Txt = "&" Hint = "inter-fire interval, default = 0.5."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="TRIGGERONLY"
        Hint="fire one shot each time triggered, instead of continuously"}
    }
    trap_lightning:form =
    {
     Help = "Generates a bolt of lightning which ends at the weather_lightning_end that is the target"
     bbox = '-8 -8 -8 8 8 8'
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     dmg: =
        {Txt = "&" Hint = "hit damage, default = 10"
       }
     target: =
        {Txt = "&" Hint = "targets a weather_lightning_end"
       }
     wait: =
        {Txt = "&" Hint = "inter-fire interval, default 1"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="TRACK"
        Hint="tracks player"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="ONCE"
        Hint="fires once only"}
    }
    trap_shooter:form =
    {
     Help = "Continuously fires spikes."
     bbox = '-8 -8 -8 8 8 8'
     angle: =
        {Txt = "&" Hint = "direction spike goes, -1 up, -2 down"
       }
     wait: =
        {Txt = "&" Hint = "inter-shot interval, default 1."
       }
     nextthink: =
        {Txt = "&" Hint = "delay before shooting begins"
       }
    }
    trap_spikeshooter:form =
    {
     Help = "When triggered, fires a spike in the direction set in QuakeEd."
     bbox = '-8 -8 -8 8 8 8'
     angle: =
        {Txt = "&" Hint = "direction of spike goes, -1 up, -2 down"
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    trap_spikeshooter_spray:form =
    {
     Help = "Fires spikes somewhat randomly, seems unfinished"
     bbox = '-8 -8 -8 8 8 8'
     targetname: =
        {Txt = "&" Hint = "if defined, fires when triggered; otherwise continuously"
       }
     wait: =
        {Txt = "&" Hint = "intershot interval in continuous mode"
       }
    }
    trigger_activate:form =
    {
     Help = "When used, toggles its target between on and off"
     target: =
        {Txt = "&" Hint = "trigger with matching targetname is activated"
       }
     #message: =
        {Txt = "&" Hint = "message ('#' means you can enter an actual message instead of a message number)"
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="ONCE"
        Hint="works once and disappears"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="RELAY"
        Hint="dunno"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="DEACTIVATED"
        Hint="must be activated by a trigger_activate (untested)"}
    }
    trigger_attack:form =
    {
     Help = "Checks to see if a player touching it has tried to fire."
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
    }
    trigger_changelevel:form =
    {
     Help = "When the player touches this, he gets sent to the map listed in the `map' variable."
     angle: =
        {Txt = "&" Hint = "rough direction you have to pass into it in order to activate"
       }
     map: =
        {Txt = "&" Hint = "destination map"
       }
     target: =
        {Txt = "&" Hint = "destination info_(coop-)player_start entity"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="NO_INTERMISSION"
        Hint="suppresses intermission screens"}
    }
    trigger_check:form =
    {
     Help = "Checks to see if its child entities are active, and if they are, it triggers"
     netname: =
        {Txt = "&" Hint = "shared with triggers it checks"
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "does its checking when triggered"
       }
    }
    trigger_combination_assign:form =
    {
     Help = "For assigning a triggering sequence to an ordered trigger_counter."
     mangle: =
        {Txt = "&" Hint = "the sequence of numbers it passes to its targetted ordered trigger_counter"
       }
     target: =
        {Txt = "&" Hint = "the ordered trigger-counter it passes its mangle-value to"
       }
     targetname: =
        {Txt = "&" Hint = "targetted by whatever activates it"
       }
     wait: =
        {Txt = "&" Hint = "set to -1 to make it fire only once"
       }
    }
    trigger_control:form =
    {
     Help = "Takes over a ballista when the player is inside of it"
     target: =
        {Txt = "&" Hint = "targets the obj_ballista it gives control of"
       }
    }
    trigger_counter:form =
    {
     Help = "Acts as an intermediary for an action that takes multiple inputs."
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     count: =
        {Txt = "&" Hint = "#triggers required for unordered; #-1 for ordered"
       }
     #message: =
        {Txt = "&" Hint = "message ('#' means you can enter an actual message instead of a message number)"
       }
     #msg2: =
        {Txt = "&" Hint = "message given when sequence is wrong"
       }
     netname: =
        {Txt = "&" Hint = "shared with triggers (NOT TARGET!) for ordered trigger_counters"
       }
     puzzle_id: =
        {Txt = "&" Hint = "name targetted when you get the sequence wrong (!!)"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="NO_MESSAGES"
        Hint="suppresses progress msg's & sounds (not goof messageO"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="ORDERED"
        Hint="makes it an ordered trigger (set count to #-1)"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="DEACTIVATED"
        Hint="needs to be activated by a trigger_activate"}
    }
    trigger_counter_reset:form =
    {
     Help = "This will reset a trigger_counter to start counting again as if it hasn't been used yet.  Useful for when you want a counter to count more than once but the counting can be interrupted."
     target: =
        {Txt = "&" Hint = "trigger_counter with matching targetname is reset"
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    trigger_crosslevel:form =
    {
     Help = "Fires triggers on other levels, via matching spawnflags"
     map: =
        {Txt = "&" Hint = "always used in Raven maps, but seems to do nothing.  Documentation?"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel_target"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel_target"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel_target"}
     spawnflags: =
       {Txt="&"
        Typ="X6"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel_target"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel_target"}
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel_target"}
     spawnflags: =
       {Txt="&"
        Typ="X64"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel_target"}
     spawnflags: =
       {Txt="&"
        Typ="X128"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel_target"}
     #message: =
        {Txt = "&" Hint = "message ('#' means you can enter an actual message instead of a message number)"
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     delay: =
        {Txt = "&" Hint = "delay between triggering and action."
       }
    }
    trigger_crosslevel_target:form =
    {
     Help = "Triggered by a trigger_crosslevel elsewhere within a unit."
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "don't know what this is doing, 5/15 occurrences"
       }
     delay: =
        {Txt = "&" Hint = "wait till triggered event happens"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel"}
     spawnflags: =
       {Txt="&"
        Typ="X6"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel"}
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel"}
     spawnflags: =
       {Txt="&"
        Typ="X64"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel"}
     spawnflags: =
       {Txt="&"
        Typ="X128"
        Cap="MATCHES"
        Hint="same spawnflag in trigger_crosslevel"}
    }
    trigger_deactivate:form =
    {
     Help = "When used, toggles its target between on and off"
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="ONCE"
        Hint="works once and disappears"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="RELAY"
        Hint="dunno"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="DEACTIVATED"
        Hint="must be activated by a trigger_activate (untested)"}
    }
    trigger_hurt:form =
    {
     Help = "Any object touching this will be hurt"
     dmg: =
        {Txt = "&" Hint = "damage per second, 5 apparent min, default 16"
       }
    }
    trigger_interval:form =
    {
     Help = "Triggers its targets at regular intervals"
     bbox = '-8 -8 -8 8 8 8'
     target: =
        {Txt = "&" Hint = "targets whatever's being repetitively triggered"
       }
     wait: =
        {Txt = "&" Hint = "inter-trigger interval"
       }
    }
    trigger_message_transfer:form =
    {
     Help = "Shows player it's message, and transfers its own target-value to become the target-value of whatever triggered it."
     #message: =
        {Txt = "&" Hint = "message ('#' means you can enter an actual message instead of a message number)"
       }
     target: =
        {Txt = "&" Hint = "this is copied to the target-field of the tmt's trigger"
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    trigger_monsterjump:form =
    {
     Help = "Some monsters that touch this will jump in the direction of the trigger's angle"
     angle: =
        {Txt = "&" Hint = "direction of jump"
       }
     speed: =
        {Txt = "&" Hint = "horizontal speed of jump"
       }
     height: =
        {Txt = "&" Hint = "supposedly upward speed, untested"
       }
     wait: =
        {Txt = "&" Hint = "appears with -1 in Eidolon, dunno what it means"
       }
    }
    trigger_multiple:form =
    {
     Help = "Variable sized repeatable trigger.  Must be targeted at one or more entities."
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     wait: =
        {Txt = "&" Hint = "time till re-triggerable"
       }
     #message: =
        {Txt = "&" Hint = "message ('#' means you can enter an actual message instead of a message number)"
       }
     delay: =
        {Txt = "&" Hint = "interval between being triggered and triggering"
       }
    more: = {
      Typ="B"
      Txt="puzzles"
      Cap="Push"
      Form="puzzles:form"
      Hint="puzzle specifics"
    }
     style: =
        {Txt = "&" Hint = "shared with banks of switchable lights"
       }
     targetname: =
        {Txt = "&" Hint = "is activated with trigger_activate with matching targetname fires" $0D "requires DEACTIVATED spawnflag"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="NOTOUCH"
        Hint="only triggered by targetting not touch (obsolete?)"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="MONSTERTOUCH"
        Hint="only triggered by monsters (untested)"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="DEACTIVATED"
        Hint="must be actived by a trigger_activate, via targetname"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="REMOVE_PP"
        Hint="takes puzzle_piece off player when fires"}
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="LIGHTTOGGLE"
        Hint="for toggling lights, seems unnecessary"}
    }
    trigger_once:form =
    {
     Help = "Variable sized trigger. Triggers once, then removes itself."
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     #message: =
        {Txt = "&" Hint = "message ('#' means you can enter an actual message instead of a message number)"
       }
     delay: =
        {Txt = "&" Hint = "interval between being triggered and triggering"
       }
    more: = {
      Typ="B"
      Txt="puzzles"
      Cap="Push"
      Form="puzzles:form"
      Hint="puzzle specifics"
    }
     style: =
        {Txt = "&" Hint = "shared with banks of switchable lights"
       }
     targetname: =
        {Txt = "&" Hint = "is activated with trigger_activate with matching targetname fires" $0D "requires DEACTIVATED spawnflag"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="NOTOUCH"
        Hint="only triggered by targetting not touch (obsolete?)"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="MONSTERTOUCH"
        Hint="only triggered by monsters (untested)"}
     spawnflags: =
       {Txt="&"
        Typ="X8"
        Cap="DEACTIVATED"
        Hint="must be actived by a trigger_activate, via targetname"}
     spawnflags: =
       {Txt="&"
        Typ="X16"
        Cap="REMOVE_PP"
        Hint="takes puzzle_piece off player when fires"}
     spawnflags: =
       {Txt="&"
        Typ="X32"
        Cap="LIGHTTOGGLE"
        Hint="for toggling lights, seems unnecessary"}
    }
    trigger_push:form =
    {
     Help = "Pushes the player in the direction set by angles"
     angle: =
        {Txt = "&" Hint = "horizontal direction of push"
       }
     targetname: =
        {Txt = "&" Hint = "when triggered, entith does one more push and removes itself"
       }
     speed: =
        {Txt = "&" Hint = "speed of push"
       }
    }
    trigger_quake:form =
    {
     Help = "Earthquake effect"
     bbox = '-10 -10 -10 10 10 10'
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     lifespan: =
        {Txt = "&" Hint = "how long it lasts, default = 2, computed from triggering"
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     wait: =
        {Txt = "&" Hint = "time until start, default = 1, -1 for immediate, ignored by lifespan"
       }
    }
    trigger_relay:form =
    {
     Help = "This fixed size trigger cannot be touched, it can only be fired by other triggers"
     bbox = '-8 -8 -8 8 8 8'
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     #message: =
        {Txt = "&" Hint = "message ('#' means you can enter an actual message instead of a message number)"
       }
     delay: =
        {Txt = "&" Hint = "interval between being triggered and triggering"
       }
    more: = {
      Typ="B"
      Txt="puzzles"
      Cap="Push"
      Form="puzzles:form"
      Hint="puzzle specifics"
    }
     style: =
        {Txt = "&" Hint = "shared with banks of switchable lights"
       }
     wait: =
        {Txt = "&" Hint = "time before re-triggerable"
       }
    }
    trigger_teleport:form =
    {
     Help = "Any object touching this will be transported to the corresponding info_teleport_destination entity. "
     target: =
        {Txt = "&" Hint = "targets destination"
       }
     angle: =
        {Txt = "&" Hint = "direction to activate"
       }
     targetname: =
        {Txt = "&" Hint = "targetted by trigger_activate to activate," $0D "requires DEACTIVATED spawnflag"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="PLAYER_ONLY"
        Hint="won't shift monsters"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="SILENT"
        Hint="no hum (movement sound still produced)"}
     spawnflags: =
       {Txt="&"
        Typ="X4"
        Cap="DEACTIVATED"
        Hint="needs to be activated by a trigger_activate, via targetname"}
    }
    weather_lightning_end:form =
    {
     Help = "Where the spark from weather_lightning_start will hit."
     bbox = '-8 -8 -8 8 8 8'
     targetname: =
        {Txt = "&" Hint = "targetted by weather_lightning_start"
       }
    }
    weather_lightning_start:form =
    {
     Help = "Generates a spark which ends at the weather_lightning_end that is the target"
     bbox = '-8 -8 -8 8 8 8'
     target: =
        {Txt = "&" Hint = " targets weather_lightning_end, where spark goes."
       }
     dmg: =
        {Txt = "&" Hint = "damage it does.             "
       }
     lifespan: =
        {Txt = "&" Hint = "duration of spark, default =~ 1"
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     wait: =
        {Txt = "&" Hint = "-1 default means fire only when triggered, otherwise repeat interval"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="NOISE"
        Hint="check both 1 and 2 to get noise on first triggering"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="NOISE"
        Hint="check both 1 and 2 to get noise on first triggering"}
    }
    weather_rain:form =
    {
     Help = "Nice rainstorm, looks cool"
     counter: =
        {Txt = "&" Hint = "#rain particles per .1 sec, default 300"
       }
     color: =
        //{Txt = "&" Hint = "codes colors by a scheme I don't understand;" $0D " 407 makes nice water"
        {Txt = "&" Typ="LP" Hint = "color code probably from the palette (but it has no effect ?)"
       }
     soundtype: =
        {Txt = "&" Hint = "sound it makes"
      Typ="C"
      Items="0) ordinary (default)" $0D "1) cave drips"
      values="0" $0D "1"
       }
     wait: =
        {Txt = "&" Hint = "how often to generate particles, default .1 sec"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="STRAIGHT"
        Hint="falls straight down rather than at angle"}
     spawnflags: =
       {Txt="&"
        Typ="X2"
        Cap="NO_SPLAT"
        Hint="doesn't make splats on ground"}
    }
    weather_sunbeam_end:form =
    {
     Help = "Where sunbeam from weather_sunbeam_start will hit."
     bbox = '-8 -8 -8 8 8 8'
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
    }
    weather_sunbeam_start:form =
    {
     Help = "Generates a ray of sunlight which ends at the weather_sunbeam_end that is the target"
     bbox = '-8 -8 -8 8 8 8'
     lifespan: =
        {Txt = "&" Hint = "duration of beam, deafult =1"
       }
     target: =
        {Txt = "&" Hint = "object with matching targetname is triggered."
       }
     targetname: =
        {Txt = "&" Hint = "is triggered if entity with matching target fires, or deleted if entity with matching killtarget fires."
       }
     wait: =
        {Txt = "&" Hint = "delay between firings"
       }
     dmg: =
        {Txt = "&" Hint = "damage it does.             "
       }
     noise: =
        {Txt = "&" Hint = "whether silent or not."
      Typ="C"
      Items="1) silent" $0D "2) buzz (default)"
      values="1" $0D "2"
       }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="START_OFF"
        Hint="supposed to make it triggerable, but it is anyway ..."}
    }
    worldspawn:form =
    {
     Help = "Only used for the world entity, specifies various useful things."
     CD: =
        {Txt = "&" Hint = "track to play"
       }
     MIDI: =
        {Txt = "&" Hint = "file to play"
       }
     #message: =
        {Txt = "&" Hint = "message ('#' means you can enter an actual message instead of a message number)"
       }
     wad: =
        {Txt = "&" Hint = "path to texture wad."
       }
     worldtype: =
        {Txt = "&" Hint = "determines features of some objects"
      Typ="C"
      Items="0) medieval (default)" $0D "1) meso-american" $0D "2) egyption" $0D "3) roman"
      values="0" $0D "1" $0D "2" $0D "3"
       }
    }
    wp_weapon2:form =
    {
     Help = "In world weapon 2 pickup for single player mode"
     bbox = '-8 -8 -44 8 8 20'
     mdl  = "models/w_l2_c4.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    wp_weapon3:form =
    {
     Help = "In world weapon 3 pickup for single player mode"
     bbox = '-8 -8 -44 8 8 20'
     mdl  = "models/w_l3_c1.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    wp_weapon4_head:form =
    {
     Help = "In world weapon 4 pickup (staff head) for single player mode"
     bbox = '-8 -8 -44 8 8 20'
     mdl  = "models/w_l41_c3.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }
    wp_weapon4_staff:form =
    {
     Help = "In world weapon 4 pickup (staff) for single player mode"
     bbox = '-8 -8 -44 8 8 20'
     mdl  = "models/w_l42_c2.mdl"
    more: = {
      Typ="B"
      Txt="triggering"
      Cap="Push"
      Form="item_triggers:form"
      Hint="specifics for triggering when item is taken"
    }
     spawnflags: =
       {Txt="&"
        Typ="X1"
        Cap="FLOAT"
        Hint="item doesn't drop to floor when spawned  "}
    }

     // END ENTITY FORMS
  }

   //
   // See file DataQ2.qrk for comments about new entities.
   //

  Textures.qtx =
  {
    ToolBox = "Texture Browser..."
    Root = "Raven Software Textures.qtxfolder"
    Raven Software Textures.qtxfolder =
    {
      Missing.wad =
      {
        rtex094.wl =
        {
          s = "data1"
          b = "egypt4"
        }
        rtex111.wl =
        {
          s = "data1"
          b = "egypt5"
        }
        rtex124.wl =
        {
          s = "data1"
          b = "egypt4"
        }
        rtex131.wl =
        {
          s = "data1"
          b = "egypt4"
        }
        rtex133.wl =
        {
          s = "data1"
          b = "egypt7"
        }
        rtex279.wl =
        {
          s = "data1"
          b = "egypt2"
        }
        rtex390.wl =
        {
          s = "data1"
          b = "egypt4"
        }
        rtex415e.wl =
        {
          s = "data1"
          b = "egypt6"
          n = "rtex415"
        }
      }
      Bas-relief.wad =
      {
        rtex013.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex014.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex062.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex063.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex081.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex091.wl =
        {
          s = "data1"
          b = "demo3"
        }
        rtex252.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex459.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex496.wl =
        {
          s = "data1"
          b = "romeric2"
        }
        rtex474.wl =
        {
          s = "data1"
          b = "romeric3"
        }
        rtex424r.wl =
        {
          s = "data1"
          b = "romeric2"
          n = "rtex424"
        }
        rtex442.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex313.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex261.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex262.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex263.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex264.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex295.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex296.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex307.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        rtex308.wl =
        {
          s = "data1"
          b = "romeric3"
        }
        rtex311.wl =
        {
          s = "data1"
          b = "romeric7"
        }
        rtex312.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex414r.wl =
        {
          s = "data1"
          b = "romeric1"
          n = "rtex414"
        }
        rtex417.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex475.wl =
        {
          s = "data1"
          b = "romeric3"
        }
        rtex476.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
      }
      Blue stones.wad =
      {
        rtex003.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex004.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex005.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex006.wl =
        {
          s = "data1"
          b = "cath"
        }
        rtex052.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex213.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex214.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex215.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex216.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex217.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex218.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex220.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex221.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex223.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex224.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex225.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex226.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex227.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex228.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex229.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex222.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex376.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex342m.wl =
        {
          s = "data1"
          b = "castle5"
          n = "rtex342"
        }
        rtex343m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex343"
        }
        rtex053.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex068.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex001.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex009.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex067.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex446.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex447.wl =
        {
          s = "data1"
          b = "romeric2"
        }
        rtex137.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex065.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex416r.wl =
        {
          s = "data1"
          b = "ravdm1"
          n = "rtex416"
        }
        rtex401.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex339.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex340m.wl =
        {
          s = "data1"
          b = "demo3"
          n = "rtex340"
        }
        rtex341m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex341"
        }
        rtex379m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex379"
        }
        mtex481.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex482.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex508.wl =
        {
          s = "data1"
          b = "romeric1"
        }
      }
      Brown stones.wad =
      {
        rtex002.wl =
        {
          s = "data1"
          b = "meso5"
        }
        rtex265.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex272.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex328.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex329.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex330.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex331.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex337.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex338.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex340e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex340"
        }
        rtex399.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex400.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex412e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex412"
        }
        rtex413e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex413"
        }
        mtex486.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex274.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex275.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex285.wl =
        {
          s = "data1"
          b = "meso6"
        }
        rtex040.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex058.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex165.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex023.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex045.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex050.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex060.wl =
        {
          s = "data1"
          b = "meso5"
        }
        rtex070.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex277.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex021.wl =
        {
          s = "data1"
          b = "demo1"
        }
        mtex436.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex360m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex360"
        }
        rtex414m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex414"
        }
        rtex278.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex022.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex020.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex039.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex164.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex413r.wl =
        {
          s = "data1"
          b = "romeric1"
          n = "rtex413"
        }
        rtex253.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex254.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex256.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex497.wl =
        {
          s = "data1"
          b = "romeric2"
        }
        rtex259.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex019.wl =
        {
          s = "data1"
          b = "demo3"
        }
        rtex034.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex427m.wl =
        {
          s = "data1"
          b = "demo3"
          n = "rtex427"
        }
        rtex422r.wl =
        {
          s = "data1"
          b = "ravdm1"
          n = "rtex422"
        }
        rtex440.wl =
        {
          s = "data1"
          b = "romeric7"
        }
        rtex335.wl =
        {
          s = "data1"
          b = "castle5"
        }
        rtex336.wl =
        {
          s = "data1"
          b = "demo3"
        }
        mtex497.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex425m.wl =
        {
          s = "data1"
          b = "demo3"
          n = "rtex425"
        }
      }
      Buttons.wad =
      {
        +0pyr.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +apyr.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +0sun.wl =
        {
          s = "data1"
          b = "meso2"
        }
        +asun.wl =
        {
          s = "data1"
          b = "meso2"
        }
        +0eye.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        +aeye.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        +0pen.wl =
        {
          s = "data1"
          b = "egypt2"
        }
        +apen.wl =
        {
          s = "data1"
          b = "egypt2"
        }
        +0air.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        +aair.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        +0fire.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        +afire.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        +0steam.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        +asteam.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        +0tria.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        +atria.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        +0wat.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        +awat.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        +0rune1.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +1rune1.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +2rune1.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +3rune1.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +4rune1.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +0rune2.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +1rune2.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +2rune2.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +3rune2.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +4rune2.wl =
        {
          s = "data1"
          b = "demo1"
        }
        +0tri.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        +1tri.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        +2tri.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        +3tri.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        +4tri.wl =
        {
          s = "data1"
          b = "romeric1"
        }
      }
      Clean stones.wad =
      {
        rtex028.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex029.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex173.wl =
        {
          s = "data1"
          b = "demo2"
        }
        mtex435.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex036.wl =
        {
          s = "data1"
          b = "meso6"
        }
        rtex044.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex076.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex273.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex332.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex059.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex368e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex368"
        }
        rtex384e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex384"
        }
        rtex385.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex031.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        rtex433.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex441.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex077.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex282.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex415m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex415"
        }
        rtex439.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex501.wl =
        {
          s = "data1"
          b = "romeric1"
        }
      }
      Columns.wad =
      {
        rtex365m.wl =
        {
          s = "data1"
          b = "cath"
          n = "rtex365"
        }
        rtex047.wl =
        {
          s = "data1"
          b = "cath"
        }
        rtex486.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        rtex255.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex135.wl =
        {
          s = "data1"
          b = "tower"
        }
        trimtex.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex166.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex231.wl =
        {
          s = "data1"
          b = "castle5"
        }
        rtex015.wl =
        {
          s = "data1"
          b = "cath"
        }
      }
      Cornices.wad =
      {
        rtex201.wl =
        {
          s = "data1"
          b = "village2"
        }
        rtex419r.wl =
        {
          s = "data1"
          b = "romeric1"
          n = "rtex419"
        }
        rtex425r.wl =
        {
          s = "data1"
          b = "romeric1"
          n = "rtex425"
        }
        rtex427r.wl =
        {
          s = "data1"
          b = "ravdm1"
          n = "rtex427"
        }
        rtex428.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex435.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex436.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex444.wl =
        {
          s = "data1"
          b = "romeric2"
        }
        rtex455.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex270.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex309.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex310.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex418r.wl =
        {
          s = "data1"
          b = "ravdm1"
          n = "rtex418"
        }
        rtex426r.wl =
        {
          s = "data1"
          b = "romeric1"
          n = "rtex426"
        }
        celt2.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex412r.wl =
        {
          s = "data1"
          b = "romeric1"
          n = "rtex412"
        }
        rtex257.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex258.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
      }
      Curtains.wad =
      {
        rtex082.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex146.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex147.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex151.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex152.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex154.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex158.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex357m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex357"
        }
        rtex358m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex358"
        }
        rtex464.wl =
        {
          s = "data1"
          b = "romeric3"
        }
        rtex481.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        rtex090.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex088.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex089.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex482.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        rtex483.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        rtex484.wl =
        {
          s = "data1"
          b = "romeric4"
        }
      }
      Decorate.wad =
      {
        celtbrown.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex156.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex160.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex161.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex251.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex351m.wl =
        {
          s = "data1"
          b = "demo3"
          n = "rtex351"
        }
        rtex352m.wl =
        {
          s = "data1"
          b = "cath"
          n = "rtex352"
        }
        rtex353m.wl =
        {
          s = "data1"
          b = "cath"
          n = "rtex353"
        }
        rtex354m.wl =
        {
          s = "data1"
          b = "cath"
          n = "rtex354"
        }
        rtex355.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex356m.wl =
        {
          s = "data1"
          b = "castle5"
          n = "rtex356"
        }
        rtex359m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex359"
        }
        rtex361m.wl =
        {
          s = "data1"
          b = "village2"
          n = "rtex361"
        }
        rtex362m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex362"
        }
        rtex368m.wl =
        {
          s = "data1"
          b = "demo3"
          n = "rtex368"
        }
        rtex394m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex394"
        }
        rtex395m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex395"
        }
        rtex420m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex420"
        }
        rtex426m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex426"
        }
        rtex431.wl =
        {
          s = "data1"
          b = "cath"
        }
        rtex432.wl =
        {
          s = "data1"
          b = "demo1"
        }
        thronetex1.wl =
        {
          s = "data1"
          b = "village2"
        }
        mtex402.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex405.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex411.wl =
        {
          s = "data1"
          b = "meso4"
        }
        mtex425.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex456.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex458.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex504.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex510.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex287.wl =
        {
          s = "data1"
          b = "meso9"
        }
        rtex297.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex301.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex326.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex333.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex334.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex424.wl =
        {
          s = "data1"
          b = "meso6"
        }
        rtex370.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex423.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex305.wl =
        {
          s = "data1"
          b = "romeric3"
        }
        rtex403.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex404.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex405.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex407.wl =
        {
          s = "data1"
          b = "romeric2"
        }
        rtex408.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        rtex409.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex410r.wl =
        {
          s = "data1"
          b = "romeric6"
          n = "rtex410"
        }
        rtex454.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex458.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex470.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex495.wl =
        {
          s = "data1"
          b = "romeric5"
        }
        rtex498.wl =
        {
          s = "data1"
          b = "romeric2"
        }
        rtex499.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex511.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex512.wl =
        {
          s = "data1"
          b = "romeric5"
        }
        rtex513.wl =
        {
          s = "data1"
          b = "romeric5"
        }
        rtex514.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        eviltex.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex456.wl =
        {
          s = "data1"
          b = "romeric1"
        }
      }
      Doors.wad =
      {
        rtex162.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex509.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex092.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex250.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex457.wl =
        {
          s = "data1"
          b = "romeric6"
        }
        rtex502.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex509.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex460.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rosearch.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex461.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        rtex462.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        rtex367m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex367"
        }
      }
      Environment.wad =
      {
        *lowlight.wl =
        {
          s = "data1"
          b = "demo1"
        }
        *rtex078.wl =
        {
          s = "data1"
          b = "demo1"
        }
        *rtex346.wl =
        {
          s = "data1"
          b = "demo1"
        }
        *rtex386.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        *rtex345.wl =
        {
          s = "data1"
          b = "village2"
        }
        *rtex396.wl =
        {
          s = "data1"
          b = "egypt2"
        }
        *rtex153.wl =
        {
          s = "data1"
          b = "castle4"
        }
        *skulls.wl =
        {
          s = "data1"
          b = "castle5"
        }
        *skullwarp.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        *lava001.wl =
        {
          s = "data1"
          b = "meso2"
        }
        *lava000.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        sky000.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        sky000e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "sky000"
        }
        sky000t.wl =
        {
          s = "data1"
          b = "tower"
          n = "sky000"
        }
        sky001.wl =
        {
          s = "data1"
          b = "demo1"
        }
        sky001m.wl =
        {
          s = "data1"
          b = "meso1"
          n = "sky001"
        }
        rtex386.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex387m.wl =
        {
          s = "data1"
          b = "village5"
          n = "rtex387"
        }
        mtex484.wl =
        {
          s = "data1"
          b = "meso5"
        }
        mtex485.wl =
        {
          s = "data1"
          b = "meso5"
        }
        rtex510.wl =
        {
          s = "data1"
          b = "romeric1"
        }
      }
      Egypt.wad =
      {
        rtex280.wl =
        {
          s = "data1"
          b = "egypt7"
        }
        rtex281.wl =
        {
          s = "data1"
          b = "egypt7"
        }
        rtex314.wl =
        {
          s = "data1"
          b = "egypt7"
        }
        rtex316.wl =
        {
          s = "data1"
          b = "egypt7"
        }
        rtex317.wl =
        {
          s = "data1"
          b = "egypt7"
        }
        rtex318.wl =
        {
          s = "data1"
          b = "egypt7"
        }
        rtex319.wl =
        {
          s = "data1"
          b = "egypt7"
        }
        rtex320.wl =
        {
          s = "data1"
          b = "egypt7"
        }
        rtex321.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex322.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex323.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex324.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex341e.wl =
        {
          s = "data1"
          b = "egypt2"
          n = "rtex341"
        }
        rtex342e.wl =
        {
          s = "data1"
          b = "egypt6"
          n = "rtex342"
        }
        rtex343e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex343"
        }
        rtex344.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex345.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex347.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex349e.wl =
        {
          s = "data1"
          b = "egypt2"
          n = "rtex349"
        }
        rtex350.wl =
        {
          s = "data1"
          b = "egypt2"
        }
        rtex351e.wl =
        {
          s = "data1"
          b = "rider2c"
          n = "rtex351"
        }
        rtex352e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex352"
        }
        rtex354e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex354"
        }
        rtex356e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex356"
        }
        rtex353e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex353"
        }
        rtex357e.wl =
        {
          s = "data1"
          b = "egypt2"
          n = "rtex357"
        }
        rtex359e.wl =
        {
          s = "data1"
          b = "egypt2"
          n = "rtex359"
        }
        rtex360e.wl =
        {
          s = "data1"
          b = "egypt2"
          n = "rtex360"
        }
        rtex361e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex361"
        }
        rtex362e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex362"
        }
        rtex363e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex363"
        }
        rtex364.wl =
        {
          s = "data1"
          b = "egypt2"
        }
        rtex365e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex365"
        }
        rtex366e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex366"
        }
        rtex367e.wl =
        {
          s = "data1"
          b = "egypt2"
          n = "rtex367"
        }
        rtex369.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex377.wl =
        {
          s = "data1"
          b = "egypt2"
        }
        rtex378.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex379e.wl =
        {
          s = "data1"
          b = "egypt3"
          n = "rtex379"
        }
        rtex380e.wl =
        {
          s = "data1"
          b = "egypt3"
          n = "rtex380"
        }
        rtex381.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex382.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex387e.wl =
        {
          s = "data1"
          b = "egypt4"
          n = "rtex387"
        }
        rtex392.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex393.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex394e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex394"
        }
        rtex395e.wl =
        {
          s = "data1"
          b = "egypt2"
          n = "rtex395"
        }
        rtex411e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex411"
        }
        rtex414e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex414"
        }
        rtex418e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex418"
        }
        rtex419e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex419"
        }
        rtex420e.wl =
        {
          s = "data1"
          b = "egypt5"
          n = "rtex420"
        }
        rtex421e.wl =
        {
          s = "data1"
          b = "egypt7"
          n = "rtex421"
        }
        rtex422e.wl =
        {
          s = "data1"
          b = "egypt5"
          n = "rtex422"
        }
        rtex383e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex383"
        }
      }
      Extra.wad =
      {
        clip.wl =
        {
          s = "data1"
          b = "demo1"
        }
        origin.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex114.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex199.wl =
        {
          s = "data1"
          b = "castle5"
        }
        rtex412m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex412"
        }
        rtex391e.wl =
        {
          s = "data1"
          b = "egypt5"
          n = "rtex391"
        }
        rtex465.wl =
        {
          s = "data1"
          b = "romeric1"
        }
      }
      Floor.wad =
      {
        rtex010.wl =
        {
          s = "data1"
          b = "demo3"
        }
        rtex074.wl =
        {
          s = "data1"
          b = "castle5"
        }
        rtex348.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex349m.wl =
        {
          s = "data1"
          b = "cath"
          n = "rtex349"
        }
        rtex479.wl =
        {
          s = "data1"
          b = "romeric2"
        }
        rtex480.wl =
        {
          s = "data1"
          b = "romeric3"
        }
        rtex306.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex421r.wl =
        {
          s = "data1"
          b = "ravdm1"
          n = "rtex421"
        }
        mtex450.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex267.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex449.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex266.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex437.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex448.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex449.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex451.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex452.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex380m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex380"
        }
        rtex383m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex383"
        }
        rtex384m.wl =
        {
          s = "data1"
          b = "demo2"
          n = "rtex384"
        }
        rtex416m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex416"
        }
        rtex421m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex421"
        }
        rtex429.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex430.wl =
        {
          s = "data1"
          b = "demo1"
        }
      }
      Grass.wad =
      {
        rtex080.wl =
        {
          s = "data1"
          b = "cath"
        }
        rtex388.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex389.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex410m.wl =
        {
          s = "data1"
          b = "tower"
          n = "rtex410"
        }
        rtex411m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex411"
        }
        mtex407.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex408.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex097.wl =
        {
          s = "data1"
          b = "meso4"
        }
        rtex100.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex233.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex468.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex469.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex473.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex500.wl =
        {
          s = "data1"
          b = "romeric2"
        }
      }
      Indian.wad =
      {
        mtex437.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex438.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex439.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex441.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex443.wl =
        {
          s = "data1"
          b = "meso4"
        }
        mtex444.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex446.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex447.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex448.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex451.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex452.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex453.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex454.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex455.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex457.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex472.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex474.wl =
        {
          s = "data1"
          b = "meso4"
        }
        mtex475.wl =
        {
          s = "data1"
          b = "meso6"
        }
        mtex476.wl =
        {
          s = "data1"
          b = "meso4"
        }
        mtex478.wl =
        {
          s = "data1"
          b = "meso6"
        }
        mtex483.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex495.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex496.wl =
        {
          s = "data1"
          b = "meso1"
        }
      }
      Marble.wad =
      {
        marble.wl =
        {
          s = "data1"
          b = "castle4"
        }
        marbleseam.wl =
        {
          s = "data1"
          b = "eidolon"
        }
        rtex032.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex033.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex406.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex466.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex030.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex038.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex358e.wl =
        {
          s = "data1"
          b = "egypt1"
          n = "rtex358"
        }
      }
      Metal.wad =
      {
        rtex011.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex012.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex054.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex072.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex073.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex075.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex095.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex096.wl =
        {
          s = "data1"
          b = "castle5"
        }
        rtex099.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex102.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex103.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex104.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex119.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex120.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex121.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex145.wl =
        {
          s = "data1"
          b = "demo3"
        }
        rtex105.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex110.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex085.wl =
        {
          s = "data1"
          b = "demo2"
        }
      }
      Rocks.wad =
      {
        rtex413m.wl =
        {
          s = "data1"
          b = "demo1"
          n = "rtex413"
        }
        rtex128.wl =
        {
          s = "data1"
          b = "egypt4"
        }
        biessman.wl =
        {
          s = "data1"
          b = "meso2"
        }
        rtex298.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex066.wl =
        {
          s = "data1"
          b = "egypt5"
        }
        rtex129.wl =
        {
          s = "data1"
          b = "egypt1"
        }
        rtex008.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex148.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex163.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex208.wl =
        {
          s = "data1"
          b = "village2"
        }
        rtex241.wl =
        {
          s = "data1"
          b = "demo1"
        }
        mtex501.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex502.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex292.wl =
        {
          s = "data1"
          b = "meso4"
        }
        rtex127.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex123.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex125.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex126.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex130.wl =
        {
          s = "data1"
          b = "ravdm1"
        }
        rtex122.wl =
        {
          s = "data1"
          b = "egypt6"
        }
      }
      Tools.wad =
      {
        rtex200.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex234.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex240.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex242.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex243.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex245.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex248.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex211.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex363m.wl =
        {
          s = "data1"
          b = "cath"
          n = "rtex363"
        }
        rtex366m.wl =
        {
          s = "data1"
          b = "cath"
          n = "rtex366"
        }
        rtex249.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex212.wl =
        {
          s = "data1"
          b = "village2"
        }
        mtex434.wl =
        {
          s = "data1"
          b = "meso3"
        }
        rtex419m.wl =
        {
          s = "data1"
          b = "village2"
          n = "rtex419"
        }
        rtex424m.wl =
        {
          s = "data1"
          b = "demo3"
          n = "rtex424"
        }
        rtex422m.wl =
        {
          s = "data1"
          b = "village1"
          n = "rtex422"
        }
        rtex086.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex087.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex106.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex107.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex108.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex109.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex176.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex177.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex178.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex179.wl =
        {
          s = "data1"
          b = "village2"
        }
        rtex180.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex182.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex183.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex184.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex185.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex186.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex187.wl =
        {
          s = "data1"
          b = "village2"
        }
        rtex188.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex189.wl =
        {
          s = "data1"
          b = "village2"
        }
        rtex190.wl =
        {
          s = "data1"
          b = "village2"
        }
        rtex191.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex192.wl =
        {
          s = "data1"
          b = "village2"
        }
        rtex193.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex194.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex196.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex197.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex198.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex204.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex205.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex206.wl =
        {
          s = "data1"
          b = "tower"
        }
        rtex207.wl =
        {
          s = "data1"
          b = "demo1"
        }
      }
      Windows.wad =
      {
        rtex083.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex467.wl =
        {
          s = "data1"
          b = "romeric1"
        }
        rtex018.wl =
        {
          s = "data1"
          b = "demo1"
        }
      }
      Weird stones.wad =
      {
        mtex466.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex467.wl =
        {
          s = "data1"
          b = "meso9"
        }
        mtex468.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex469.wl =
        {
          s = "data1"
          b = "meso6"
        }
        mtex470.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex471.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex487.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex488.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex489.wl =
        {
          s = "data1"
          b = "meso1"
        }
        rtex276.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex460.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex461.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex462.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex463.wl =
        {
          s = "data1"
          b = "meso2"
        }
        mtex464.wl =
        {
          s = "data1"
          b = "meso5"
        }
        mtex465.wl =
        {
          s = "data1"
          b = "meso1"
        }
        mtex491.wl =
        {
          s = "data1"
          b = "meso3"
        }
        mtex409.wl =
        {
          s = "data1"
          b = "meso8"
        }
        rtex286.wl =
        {
          s = "data1"
          b = "meso2"
        }
      }
      Wood.wad =
      {
        rtex041.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex042.wl =
        {
          s = "data1"
          b = "cath"
        }
        rtex043.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex112.wl =
        {
          s = "data1"
          b = "cath"
        }
        rtex113.wl =
        {
          s = "data1"
          b = "demo1"
        }
        rtex116.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex117.wl =
        {
          s = "data1"
          b = "demo3"
        }
        rtex118.wl =
        {
          s = "data1"
          b = "demo3"
        }
        rtex235.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex236.wl =
        {
          s = "data1"
          b = "cath"
        }
        rtex237.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex238.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex239.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex174.wl =
        {
          s = "data1"
          b = "village1"
        }
        rtex175.wl =
        {
          s = "data1"
          b = "demo2"
        }
        rtex230.wl =
        {
          s = "data1"
          b = "castle4"
        }
        rtex246.wl =
        {
          s = "data1"
          b = "village3"
        }
        rtex485.wl =
        {
          s = "data1"
          b = "romeric4"
        }
        rtex150.wl =
        {
          s = "data1"
          b = "village2"
        }
        rtex149.wl =
        {
          s = "data1"
          b = "village2"
        }
        rtex391m.wl =
        {
          s = "data1"
          b = "village2"
          n = "rtex391"
        }
      }
    }
  }
}
