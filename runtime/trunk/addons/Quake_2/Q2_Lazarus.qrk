QQRKSRC1
// This is a convertion of the original Q2 Lazarus to
// work with the features of QuArK

{
  QuArKProtected = "1"
  Description = "Revision 1.18a+ - By X7 05-30-08"
  Game Directories.qctx =
  {
    //Lazarus is not a stand-alone mod; please read the Lazarus readme!!!
    //Game = "Quake 2"
    //SourceDir = "lazarus"
    //GameDir = "lazarus"
  }

  Lazarus directory infos.qctx =
  {
    TextureFlags:form =     // a form for setting Quake 2 texture flags on polyhedron faces
    {
      Style = "5"

      Reset: =       // Reset button
      {
        Cap = "Reset to default"      // button caption
        Typ = "B"                     // "B"utton
        Hint = "Reset all flags to the texture's default"
        Delete: =
        {
          Flags = ""          // the button deletes these Specifics
          Contents = ""
          Value = ""
        }
      }

      Sep:     ={Txt="" Typ="S"}  // separator

      Contents:={Txt="Brush" Cap="water"          Typ="X32"        Hint="water"}
      Contents:={Txt=""      Cap="slime"          Typ="X16"        Hint="mildly damaging"}
      Contents:={Txt=""      Cap="lava"           Typ="X8"         Hint="very damaging"}
      Contents:={Txt=""      Cap="window"         Typ="X2"         Hint="transparent (the opposite face of windows are not drawn)"}
      Contents:={Txt=""      Cap="translucent"    Typ="X268435456" Hint="translucent (allows light to pass, not vision - e.g. use for water)"}
      Contents:={Txt=""      Cap="mist"           Typ="X64"        Hint="non-solid window (Player can walk through it)"}
      Contents:={Txt=""      Cap="origin"         Typ="X16777216"  Hint="use as centrepoint, for rotating objects only"}
      Contents:={Txt=""      Cap="playerclip"     Typ="X65536"     Hint="Stops Players from passing through"}
      Contents:={Txt=""      Cap="monsterclip"    Typ="X131072"    Hint="Stops monsters passing through"}
      Contents:={Txt=""      Cap="detail"         Typ="X134217728" Hint="for small, detail brushes that QVIS3 can ignore"}
      Contents:={Txt=""      Cap="ladder"         Typ="X536870912" Hint="Player can climb up this"}
      Contents:={Txt=""      Cap="auxi"           Typ="X4"         Hint="??"}

      Sep:     ={Txt="" Typ="S"}  // separator

      Contents:={Txt="Flowing" Cap="current_0"      Typ="X262144"    Hint="Flowing water pushes to 0 west"}
      Contents:={Txt=""        Cap="current_90"     Typ="X524288"    Hint="Flowing water pushes to 90 north"}
      Contents:={Txt=""        Cap="current_180"    Typ="X1048576"   Hint="Flowing water pushes to 180 east"}
      Contents:={Txt=""        Cap="current_270"    Typ="X2097152"   Hint="Flowing water pushes to 270 south"}
      Contents:={Txt=""        Cap="current_up"     Typ="X4194304"   Hint="Flowing water pushes Upwards"}
      Contents:={Txt=""        Cap="current_dn"     Typ="X8388608"   Hint="Flowing water pushes Down"}

      Sep:     ={Txt="" Typ="S"}  // separator

      Flags:   ={Txt="Face" Cap="hint"           Typ="X256"       Hint="tell QBSP3 to cut along this plane first"}
      Flags:   ={Txt=""     Cap="skip"           Typ="X512"       Hint="completely ignore, allowing non-closed brushes"}
      Flags:   ={Txt=""     Cap="light"          Typ="X1"         Hint="'value' is the light quantity"}
      Flags:   ={Txt=""     Cap="slick"          Typ="X2"         Hint="slidy surface"}
      Flags:   ={Txt=""     Cap="sky"            Typ="X4"         Hint="sky -can be used with 'light'"}
      Flags:   ={Txt=""     Cap="warping"        Typ="X8"         Hint="turbulent water warp (for 64x64 textures only)"}
      Flags:   ={Txt=""     Cap="trans33"        Typ="X16"        Hint="transparent, 33% (more see-through than 50%)"}
      Flags:   ={Txt=""     Cap="trans66"        Typ="X32"        Hint="transparent, 66% (less see-through than 50%)"}
      Flags:   ={Txt=""     Cap="flowing"        Typ="X64"        Hint="flow direction towards angle 0"}
      Flags:   ={Txt=""     Cap="nodraw"         Typ="X128"       Hint="for clip textures and trigger textures"}

      Sep:     ={Txt="" Typ="S"}  // separator

      Title:   ={Txt="Lazarus" Typ="S"}  // Title
      Lable:   ={Txt="footstep sounds" Typ="S"}  // Lable
      Flags:   ={Txt=""     Cap="metal"          Typ = "X1024"    Hint = "Metal footstep sounds"}
      Flags:   ={Txt=""     Cap="dirt"           Typ = "X2048"    Hint = "Dirt footstep sounds"}
      Flags:   ={Txt=""     Cap="vent"           Typ = "X4096"    Hint = "Vent footstep sounds"}
      Flags:   ={Txt=""     Cap="grate"          Typ = "X8192"    Hint = "Grate footstep sounds"}
      Flags:   ={Txt=""     Cap="tile"           Typ = "X16384"   Hint = "Tile footstep sounds"}
      Flags:   ={Txt=""     Cap="grass"          Typ = "X32768"   Hint = "Grass footstep sounds"}
      Flags:   ={Txt=""     Cap="snow"           Typ = "X65536"   Hint = "Snow footstep sounds"}
      Flags:   ={Txt=""     Cap="carpet"         Typ = "X131072"  Hint = "Carpet footstep sounds"}
      Flags:   ={Txt=""     Cap="force"          Typ = "X262144"  Hint = "Forcefield footstep sounds"}
      Flags:   ={Txt=""     Cap="gravel"         Typ = "X524288"  Hint = "Gravel footstep sounds"}
      Flags:   ={Txt=""     Cap="ice"            Typ = "X1048576" Hint = "Ice footstep sounds"}

      Sep:     ={Txt="" Typ="S"}  // separator

      Value:   ={Txt="Value" Typ="E" Hint="The meaning of this depends on the other flags"}
    }
  }
  Textures.qtx =
  {
    ToolBox = "Texture Browser..."
    Root = "lazarus Textures.qtxfolder"
    HTML = "intro.texturebrowser.html"

    left = '170'
    lazarus Textures.qtxfolder =
    {
      crane.txlist =
      {
        crane/panel.wl =
        {
          w = "lazarus"
        }
      }
      dhpak.txlist =
      {
        dhpak/arrow.wl =
        {
          w = "lazarus"
        }
        dhpak/bark.wl =
        {
          w = "lazarus"
        }
        dhpak/belt1_4.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel0.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel1.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel2.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel3.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel4.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel5.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel6.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel7.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel8.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel9.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel10.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel11.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel12.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel13.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel14.wl =
        {
          w = "lazarus"
        }
        dhpak/f_wheel15.wl =
        {
          w = "lazarus"
        }
        dhpak/leaf1.wl =
        {
          w = "lazarus"
        }
        dhpak/leaf2.wl =
        {
          w = "lazarus"
        }
        dhpak/leafgras.wl =
        {
          w = "lazarus"
        }
        dhpak/lens.wl =
        {
          w = "lazarus"
        }
        dhpak/redlite0.wl =
        {
          w = "lazarus"
        }
        dhpak/redlite1.wl =
        {
          w = "lazarus"
        }
        dhpak/redlite2.wl =
        {
          w = "lazarus"
        }
        dhpak/redlite3.wl =
        {
          w = "lazarus"
        }
        dhpak/r_wheel.wl =
        {
          w = "lazarus"
        }
        dhpak/snow.wl =
        {
          w = "lazarus"
        }
        dhpak/speed00.wl =
        {
          w = "lazarus"
        }
        dhpak/speed01.wl =
        {
          w = "lazarus"
        }
        dhpak/speed10.wl =
        {
          w = "lazarus"
        }
        dhpak/speed11.wl =
        {
          w = "lazarus"
        }
        dhpak/speed20.wl =
        {
          w = "lazarus"
        }
        dhpak/speed21.wl =
        {
          w = "lazarus"
        }
        dhpak/speed30.wl =
        {
          w = "lazarus"
        }
        dhpak/speed31.wl =
        {
          w = "lazarus"
        }
        dhpak/speedno.wl =
        {
          w = "lazarus"
        }
        dhpak/speedr10.wl =
        {
          w = "lazarus"
        }
        dhpak/speedr11.wl =
        {
          w = "lazarus"
        }
        dhpak/speedr20.wl =
        {
          w = "lazarus"
        }
        dhpak/speedr21.wl =
        {
          w = "lazarus"
        }
        dhpak/speedr30.wl =
        {
          w = "lazarus"
        }
        dhpak/speedr31.wl =
        {
          w = "lazarus"
        }
        dhpak/tread.wl =
        {
          w = "lazarus"
        }
        dhpak/tread0.wl =
        {
          w = "lazarus"
        }
        dhpak/tread1.wl =
        {
          w = "lazarus"
        }
        dhpak/tread2.wl =
        {
          w = "lazarus"
        }
        dhpak/tread3.wl =
        {
          w = "lazarus"
        }
      }
      maddog.txlist =
      {
        maddog/+mon1_1.wl =
        {
          w = "lazarus"
        }
        maddog/+mon1_2.wl =
        {
          w = "lazarus"
        }
        maddog/+mon1_3.wl =
        {
          w = "lazarus"
        }
        maddog/+mon1_4.wl =
        {
          w = "lazarus"
        }
        maddog/+mon1_5.wl =
        {
          w = "lazarus"
        }
        maddog/+mon1_6.wl =
        {
          w = "lazarus"
        }
        maddog/+mon1_7.wl =
        {
          w = "lazarus"
        }
        maddog/+mon1_8.wl =
        {
          w = "lazarus"
        }
        maddog/+mon1_9.wl =
        {
          w = "lazarus"
        }
        maddog/+mon1_10.wl =
        {
          w = "lazarus"
        }
      }
      rl.txlist =
      {
        rl/light01.wl =
        {
          w = "lazarus"
        }
        rl/wood.wl =
        {
          w = "lazarus"
        }
      }
      misc.txlist =
      {
        misc/gfriend.wl =
        {
          w = "lazarus"
        }
      }
      smd.txlist =
      {
        smd/beam2.wl =
        {
          w = "lazarus"
        }
        smd/comp1.wl =
        {
          w = "lazarus"
        }
        smd/comp2.wl =
        {
          w = "lazarus"
        }
        smd/comp3.wl =
        {
          w = "lazarus"
        }
        smd/comp4.wl =
        {
          w = "lazarus"
        }
        smd/crane.wl =
        {
          w = "lazarus"
        }
        smd/cream.wl =
        {
          w = "lazarus"
        }
        smd/darkgray.wl =
        {
          w = "lazarus"
        }
        smd/gray.wl =
        {
          w = "lazarus"
        }
        smd/grypaint.wl =
        {
          w = "lazarus"
        }
        smd/safe2.wl =
        {
          w = "lazarus"
        }
        smd/shiny.wl =
        {
          w = "lazarus"
        }
        smd/tread.wl =
        {
          w = "lazarus"
        }
        smd/warn.wl =
        {
          w = "lazarus"
        }
        smd/wheel.wl =
        {
          w = "lazarus"
        }
        smd/wood.wl =
        {
          w = "lazarus"
        }
      }
      tremor.txlist =
      {
        tremor/cushion.wl =
        {
          w = "lazarus"
        }
        tremor/gray.wl =
        {
          w = "lazarus"
        }
        tremor/help0.wl =
        {
          w = "lazarus"
        }
        tremor/help1.wl =
        {
          w = "lazarus"
        }
        tremor/help2.wl =
        {
          w = "lazarus"
        }
        tremor/help3.wl =
        {
          w = "lazarus"
        }
        tremor/mesh2.wl =
        {
          w = "lazarus"
        }
      }
    }
  }
  NewMapItems.qtx =
  {
    ToolBox = "New map items..."
    Root = "Lazarus Entities.qtxfolder"
    Lazarus Entities.qtxfolder =
    {
      ;desc = "Created from quake2_lazarus.fgd"
      Info_Player_* entities.qtxfolder =
      {
        info_player_start:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "The normal starting point for a level."
        }
        info_player_coop:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Potential spawning position for coop games."
        }
        info_player_deathmatch:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Potential spawning position for deathmatch games."
        }
        info_player_intermission:e =
        {
          origin = "0 0 0"
          angles = "30 225 0"
          ;desc = "The end of Level , end of Match, intermission point will be"
           " at one of these."
        }
      }
      Light_* entities.qtxfolder =
      {
        light:e =
        {
          origin = "0 0 0"
          light = "300"
          _color = "1 1 1"
          ;desc = "Invisible Light Source"
        }
        light_mine1:e =
        {
          origin = "0 0 0"
          angle = "360"
          light = "300"
          _color = "1 1 1"
          ;desc = "Dusty Fluorescent Light Fixture."
        }
        light_mine2:e =
        {
          origin = "0 0 0"
          angle = "360"
          light = "300"
          _color = "1 1 1"
          ;desc = "Clean Fluorescent Light Fixture."
        }
      }
      Null entities.qtxfolder =
      {
        info_null:e =
        {
          origin = "0 0 0"
          ;desc = "A target for light to create a spotlight."
        }
        info_notnull:e =
        {
          origin = "0 0 0"
          ;desc = "Lighting target or put this at the end of the gun on a turr"
           "et_breach."
        }
      }
      Weapon_* entities.qtxfolder =
      {
        weapon_blaster:e =
        {
          origin = "0 0 0"
          ;desc = "This is the Blaster unlimited ammo"
        }
        weapon_shotgun:e =
        {
          origin = "0 0 0"
          ;desc = "This is the ShotGun uses ammo_shells."
        }
        weapon_supershotgun:e =
        {
          origin = "0 0 0"
          ;desc = "This is the Super ShotGun uses ammo_shells."
        }
        weapon_machinegun:e =
        {
          origin = "0 0 0"
          ;desc = "This is the  MachineGun uses ammo_bullets."
        }
        weapon_chaingun:e =
        {
          origin = "0 0 0"
          ;desc = "This is the ChainGun uses ammo_bullets."
        }
        weapon_grenadelauncher:e =
        {
          origin = "0 0 0"
          ;desc = "This is the Grenade Launcher uses ammo_grenades."
        }
        weapon_rocketlauncher:e =
        {
          origin = "0 0 0"
          ;desc = "This is the Rocket Launcher uses ammo_rockets."
        }
        weapon_hyperblaster:e =
        {
          origin = "0 0 0"
          ;desc = "This is the HyperBlaster uses ammo_cells."
        }
        weapon_railgun:e =
        {
          origin = "0 0 0"
          ;desc = "This is the RailGun uses ammo_slugs"
        }
        weapon_bfg:e =
        {
          origin = "0 0 0"
          ;desc = "This is the BFG10k uses ammo_cells"
        }
      }
      Ammo_* entities.qtxfolder =
      {
        ammo_shells:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for The ShotGun & Super ShotGun."
        }
        ammo_bullets:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the Machine & ChainGun."
        }
        ammo_grenades:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the Grenade Launcher it's also a Hand "
           "Grenade."
        }
        ammo_rockets:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the Rocket Launcher."
        }
        ammo_homing_missiles:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the Homing Rocket Launcher."
        }
        ammo_cells:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the HyperBlaster and BFG10k."
        }
        ammo_slugs:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the RailGun."
        }
        ammo_fuel:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Jetpack Fuel."
        }
      }
      Monster_* entities.qtxfolder =
      {
        monster_berserk:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.20"
          gib_health = "-60"
          health = "240"
          mass = "250"
          powerarmor = "0"
          ;desc = "This is the Berserker."
        }
        monster_boss2:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          health = "2000"
          powerarmor = "0"
          ;desc = "This is a flying Boss (Hornet)."
        }
        monster_boss3_stand:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is Makron standing around (just for looks)."
        }
        monster_brain:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.10"
          gib_health = "-150"
          health = "300"
          mass = "400"
          ;desc = "This is the Brains."
        }
        monster_chick:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.40"
          gib_health = "-70"
          health = "175"
          mass = "200"
          powerarmor = "0"
          ;desc = "This is the Iron Maiden."
        }
        monster_commander_body:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the tank commander's destroyed body (just for looks"
           ")."
        }
        monster_flipper:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          gib_health = "-30"
          flies = "0.90"
          health = "50"
          mass = "100"
          ;desc = "This is the Barracuda Shark."
        }
        monster_floater:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          health = "200"
          powerarmor = "0"
          ;desc = "This is the Technician."
        }
        monster_flyer:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          health = "50"
          powerarmor = "0"
          ;desc = "This is the Flyer."
        }
        monster_gladiator:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.05"
          gib_health = "-175"
          health = "400"
          mass = "400"
          powerarmor = "0"
          ;desc = "This is the Gladiator."
        }
        monster_gunner:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.30"
          gib_health = "-70"
          health = "175"
          mass = "200"
          powerarmor = "0"
          ;desc = "This is the Gunner."
        }
        monster_hover:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          health = "240"
          powerarmor = "0"
          ;desc = "This is the Icarus."
        }
        monster_infantry:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.40"
          gib_health = "-40"
          health = "100"
          mass = "200"
          powerarmor = "0"
          ;desc = "This is the Enforcer."
        }
        monster_jorg:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0"
          gib_health = "-900"
          health = "3000"
          health2 = "3000"
          mass = "1000"
          mass2 = "500"
          powerarmor = "0"
          ;desc = "This is the Jorg."
        }
        monster_makron:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.20"
          gib_health = "-900"
          health = "3000"
          mass = "500"
          powerarmor = "0"
          ;desc = "This is the Makron."
        }
        monster_medic:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.15"
          gib_health = "-130"
          health = "300"
          mass = "400"
          powerarmor = "0"
          ;desc = "This is the Medic."
        }
        monster_mutant:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.90"
          gib_health = "-120"
          health = "300"
          mass = "300"
          ;desc = "This is the Mutant."
        }
        monster_parasite:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.35"
          gib_health = "-50"
          health = "175"
          mass = "250"
          powerarmor = "0"
          ;desc = "This is the Parasite."
        }
        monster_soldier:e =
        {
          origin = "0 0 0"
          angle = "360"
          flies = "0.40"
          gib_health = "-30"
          health = "30"
          mass = "100"
          powerarmor = "0"
          ;desc = "This Guard has a MachineGun."
        }
        monster_soldier_light:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.40"
          gib_health = "-30"
          health = "20"
          mass = "100"
          powerarmor = "0"
          ;desc = "This Guard has a Blaster like the one you start with."
        }
        monster_soldier_ss:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.40"
          gib_health = "-30"
          health = "40"
          mass = "100"
          powerarmor = "0"
          ;desc = "This Guard has a ShotGun."
        }
        monster_supertank:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          health = "1500"
          mass = "800"
          powerarmor = "0"
          ;desc = "This is the Super Tank."
        }
        monster_tank:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.05"
          gib_health = "-200"
          health = "750"
          mass = "500"
          powerarmor = "0"
          ;desc = "This is the Tank."
        }
        monster_tank_commander:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "1280"
          flies = "0.05"
          gib_health = "-225"
          health = "1000"
          mass = "500"
          powerarmor = "0"
          ;desc = "This is the Tank Commander."
        }
      }
      Path Combat Hint.qtxfolder =
      {
        Hint_* entities.qtxfolder =
        {
          hint_path:e =
          {
            origin = "0 0 0"
            ;desc = "Monster hint path."
          }
        }
        Path_* entities.qtxfolder =
        {
          path_corner:e =
          {
            origin = "0 0 0"
            ;desc = "Use this to get the monsters to walk around the map."
          }
          path_track:e =
          {
            origin = "0 0 0"
            speed = "0"
            ;desc = "This the path marker for the Tracktrain."
          }
        }
        Point_* entities.qtxfolder =
        {
          point_combat:e =
          {
            origin = "0 0 0"
            ;desc = "Used for making a monster push a button or whatever when "
             "it sees the player."
          }
        }
      }
      Misc_* entities.qtxfolder =
      {
        misc_actor:e =
        {
          origin = "0 0 0"
          angle = "360"
          flies = "0"
          gib_health = "-40"
          health = "100"
          mass = "200"
          powerarmor = "0"
          sounds = "0"
          style = "0"
          ;desc = "Actor"
        }
        misc_banner:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Flowing banner"
        }
        misc_blackhole:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Blackhole"
        }
        misc_deadsoldier:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is a dead soldier (Player model)."
          style = "0"
        }
        misc_eastertank:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Tank sitting down (Just for looks)."
        }
        misc_easterchick:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Iron Maiden kind of sitting down (Just for Look"
           "s)."
        }
        misc_easterchick2:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Iron Maiden a little different (also just for l"
           "ooks)."
        }
        misc_explobox:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Large exploding box"
          mass = "100"
          health = "80"
          dmg = "150"
        }
        misc_gib_arm:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "A gibbed Arm, use with target_spawner."
        }
        misc_gib_head:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "A gibbed Head, use with target_spawner."
        }
        misc_gib_leg:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "A gibbed Leg, use with target_spawner."
        }
        misc_insane:e =
        {
          origin = "0 0 0"
          angle = "360"
          flies = "0.30"
          gib_health = "-50"
          health = "100"
          mass = "300"
          ;desc = "The is a Soldier gone insane (Player model)."
        }
        misc_satellite_dish:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Satellite Dish"
        }
        misc_strogg_ship:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Strogg ship for flybys"
          health = "0"
          mass = "1200"
          dmg = "200"
        }
        misc_teleporter:e =
        {
          origin = "0 0 0"
          angle = "360"
          target = "tele_1"
          ;desc = "Teleporter"
        }
        misc_teleporter_dest:e =
        {
          origin = "0 0 0"
          angle = "360"
          targetname = "tele_1"
          ;desc = "Teleport Destination"
        }
        misc_bigviper:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Large stationary Viper"
        }
        misc_viper:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Viper for flybys"
          health = "0"
          mass = "1200"
          dmg = "200"
        }
        misc_viper_bomb:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Viper Bomb"
          dmg = "1000"
        }
      }
      Key_* entities.qtxfolder =
      {
        key_airstrike_target:e =
        {
          origin = "0 0 0"
          ;desc = "Airstrike Target Key."
        }
        key_blue_key:e =
        {
          origin = "0 0 0"
          ;desc = "Blue Key."
        }
        key_commander_head:e =
        {
          origin = "0 0 0"
          ;desc = "Commander Head Key."
        }
        key_data_cd:e =
        {
          origin = "0 0 0"
          ;desc = "Data CD Key."
        }
        key_data_spinner:e =
        {
          origin = "0 0 0"
          ;desc = "Data Spinner Key."
        }
        key_pass:e =
        {
          origin = "0 0 0"
          ;desc = "Security Pass Key."
        }
        key_power_cube:e =
        {
          origin = "0 0 0"
          ;desc = "Power Cube Key."
        }
        key_pyramid:e =
        {
          origin = "0 0 0"
          ;desc = "Pyramid Key."
        }
        key_red_key:e =
        {
          origin = "0 0 0"
          ;desc = "Red Key."
        }
      }
      Item_* entities.qtxfolder =
      {
        item_adrenaline:e =
        {
          origin = "0 0 0"
          ;desc = "This sligthly increases your health permanently. +1 to max "
           "health"
        }
        item_ancient_head:e =
        {
          origin = "0 0 0"
          ;desc = "John Carmacks head, adds 2 to max health."
        }
        item_armor_body:e =
        {
          origin = "0 0 0"
          ;desc = "Adds 100 to your armor."
        }
        item_armor_combat:e =
        {
          origin = "0 0 0"
          ;desc = "Adds 50 to your armor."
        }
        item_armor_jacket:e =
        {
          origin = "0 0 0"
          ;desc = "Adds 25 to your armor."
        }
        item_armor_shard:e =
        {
          origin = "0 0 0"
          ;desc = "Adds 2 to your armor."
        }
        item_bandolier:e =
        {
          origin = "0 0 0"
          ;desc = "Increases your carrying capacity for all ammunition except "
           "grenades & rockets."
        }
        item_breather:e =
        {
          origin = "0 0 0"
          ;desc = "This provides oxygen when submerged in liquids."
        }
        item_enviro:e =
        {
          origin = "0 0 0"
          ;desc = "This provides protection from harmful fluids."
        }
        item_flashlight:e =
        {
          origin = "0 0 0"
          count = "0"
          ;desc = "Flashlight to light up dark spots."
        }
        item_freeze:e =
        {
          origin = "0 0 0"
          ;desc = "Stasis Generator stops time."
        }
        item_health:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Heals 10 hit points."
        }
        item_health_small:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Gives you 2 more hit points even if your health is at maxim"
           "um."
        }
        item_health_large:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Heals 25 hit points."
        }
        item_health_mega:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Adds 100 hit points to whatever you have, slowly goes back "
           "down."
        }
        item_invulnerability:e =
        {
          origin = "0 0 0"
          ;desc = "Renders you temporarily indestructible."
        }
        item_jetpack:e =
        {
          origin = "0 0 0"
          count = "500"
          ;desc = "JetPack uses ammo_fuel."
        }
        item_pack:e =
        {
          origin = "0 0 0"
          ;desc = "This allows you to carry more ammo on your back."
        }
        item_power_screen:e =
        {
          origin = "0 0 0"
          ;desc = "Gives you 200 armor towards energy weapons."
        }
        item_power_shield:e =
        {
          origin = "0 0 0"
          ;desc = "Provides improved protection against energy weapons."
        }
        item_quad:e =
        {
          origin = "0 0 0"
          ;desc = "Temporarily multiplies all your weapon's strengths by four."
        }
        item_silencer:e =
        {
          origin = "0 0 0"
          ;desc = "Silences the discharge of any weapon."
        }
      }
      Crane_* entities.qtxfolder =
      {
        crane_beam:b =
        {
          angle = "360"
          ;desc = "Crane body"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        crane_control:b =
        {
          angle = "360"
          ;desc = "Crane control panel"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        crane_hoist:b =
        {
          angle = "360"
          ;desc = "Crane hoist"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        crane_hook:b =
        {
          angle = "360"
          ;desc = "Crane hook"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        crane_reset:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Crane_reset"
        }
      }
      Func_* entities.qtxfolder =
      {
        func_areaportal:b =
        {
          ;desc = "Use this combined with doors as a Area portal (Vis blocker)"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Flags = "128"
              Value = "0"
              Contents = "32768"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "32768"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "32768"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Flags = "128"
              Value = "0"
              Contents = "32768"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Flags = "128"
              Value = "0"
              Contents = "32768"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "32768"
            }
          }
        }
        func_bobbingwater:b =
        {
          angle = "-2"
          ;desc = "Moveable, bobbing water"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "e1u1/bluwter"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "e1u1/bluwter"
              m = "1"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "e1u1/bluwter"
              m = "1"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "e1u1/bluwter"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "e1u1/bluwter"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "e1u1/bluwter"
              m = "1"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
          }
        }
        func_button:b =
        {
          angle = "360"
          lip = "4"
          sounds = "0"
          speed = "40"
          wait = "3"
          ;desc = "Just an every day Button."
          poly:p =
          {
            east:f =
            {
              v = '16 16 16 16 144 16 16 16 144'
              tex = "e1u1/arrow0"
              tv = '-33 33 95 33 -33 -95'
            }
            west:f =
            {
              v = '-16 16 16 -16 16 144 -16 144 16'
              tex = "e1u1/arrow0"
              tv = '-1 33 127 33 -1 -95'
            }
            north:f =
            {
              v = '32 16 16 32 16 144 160 16 16'
              tex = "e1u1/arrow0"
              tv = '15 33 143 33 15 -95'
            }
            south:f =
            {
              v = '32 -16 16 160 -16 16 32 -16 144'
              tex = "e1u1/arrow0"
              tv = '-49 33 79 33 -49 -95'
            }
            up:f =
            {
              v = '32 16 16 160 16 16 32 144 16'
              tex = "e1u1/arrow0"
              tv = '-33 -49 -33 79 95 -49'
            }
            down:f =
            {
              v = '32 16 -16 32 144 -16 160 16 -16'
              tex = "e1u1/arrow0"
              tv = '1 49 1 -79 -127 49'
            }
          }
        }
        func_clock:e =
        {
          origin = "0 0 0"
          ;desc = "Use this to make timed explosions."
          style = "0"
        }
        func_conveyor:b =
        {
          angle = "360"
          ;desc = "This will push you, but the texture itself won't move.Never"
           " used in Quake2."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_door:b =
        {
          angle = "360"
          ;desc = "The standard entity for doors."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_door_rotating:b =
        {
          dmg = "2"
          distance = "90"
          sounds = "0"
          speed = "100"
          wait = "3"
          ;desc = "A rotating door."
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -72 -16 16 -8 -16 16 -72 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            west:f =
            {
              v = '-16 -84 -16 -16 -84 48 -16 -20 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            north:f =
            {
              v = '-52 -48 -16 -52 -48 48 12 -48 -16'
              tex = "[origin]"
              tv = '-68 0 60 0 -68 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            south:f =
            {
              v = '-52 -80 -16 12 -80 -16 -52 -80 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            up:f =
            {
              v = '-52 -84 16 12 -84 16 -52 -20 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            down:f =
            {
              v = '-52 -84 -16 -52 -20 -16 12 -84 -16'
              tex = "[origin]"
              tv = '36 -36 36 -164 -92 -36'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '8 0 0 8 128 0 8 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-8 0 0 -8 0 128 -8 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_door_rot_dh:b =
        {
          dmg = "2"
          distance = "90"
          sounds = "0"
          speed = "100"
          wait = "3"
          ;desc = "A Rotating Door"
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -72 -16 16 -8 -16 16 -72 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            west:f =
            {
              v = '-16 -84 -16 -16 -84 48 -16 -20 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            north:f =
            {
              v = '-52 -48 -16 -52 -48 48 12 -48 -16'
              tex = "[origin]"
              tv = '-68 0 60 0 -68 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            south:f =
            {
              v = '-52 -80 -16 12 -80 -16 -52 -80 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            up:f =
            {
              v = '-52 -84 16 12 -84 16 -52 -20 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            down:f =
            {
              v = '-52 -84 -16 -52 -20 -16 12 -84 -16'
              tex = "[origin]"
              tv = '36 -36 36 -164 -92 -36'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '8 0 0 8 128 0 8 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-8 0 0 -8 0 128 -8 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_door_secret:b =
        {
          angle = "360"
          ;desc = "This is for the making of Secret doors."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_door_swinging:b =
        {
          dmg = "2"
          distance = "90"
          sounds = "0"
          speed = "100"
          wait = "3"
          ;desc = "2-way Rotating Door"
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -72 -16 16 -8 -16 16 -72 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            west:f =
            {
              v = '-16 -84 -16 -16 -84 48 -16 -20 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            north:f =
            {
              v = '-52 -48 -16 -52 -48 48 12 -48 -16'
              tex = "[origin]"
              tv = '-68 0 60 0 -68 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            south:f =
            {
              v = '-52 -80 -16 12 -80 -16 -52 -80 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            up:f =
            {
              v = '-52 -84 16 12 -84 16 -52 -20 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            down:f =
            {
              v = '-52 -84 -16 -52 -20 -16 12 -84 -16'
              tex = "[origin]"
              tv = '36 -36 36 -164 -92 -36'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '8 0 0 8 128 0 8 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-8 0 0 -8 0 128 -8 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_explosive:b =
        {
          ;desc = "Exploding/Breakable brush. This is used for shootable windo"
           "ws, boxes, walls and more."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_force_wall:b =
        {
          dmg = "0"
          style = "208"
          ;desc = "Force field"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        func_group:b =
        {
          ;incl = "defpoly"
          ;desc = "Not used in game, used for editor convenience. Non-Entity G"
           "rouping "
        }
        func_killbox:b =
        {
          ;desc = "Instant death. This kills everything inside it."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        func_monitor:b =
        {
          ;desc = "Security camera monitor"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_object:b =
        {
          ;desc = "This falls down when triggered. Solid bmodel, will fall if "
           "its support is removed"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_pendulum:b =
        {
          distance = "90"
          dmg = "5"
          mass = "100"
          move_origin = "0 0 0"
          radius = "100"
          noise = "world/land.wav"
          ;desc = "Pendulum"
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -8 -16 16 56 -16 16 -8 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            west:f =
            {
              v = '-16 -20 -16 -16 -20 48 -16 44 -16'
              tex = "[origin]"
              tv = '-4 0 124 0 -4 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            north:f =
            {
              v = '-52 16 -16 -52 16 48 12 16 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            south:f =
            {
              v = '-52 -16 -16 12 -16 -16 -52 -16 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            up:f =
            {
              v = '-52 -20 16 12 -20 16 -52 44 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            down:f =
            {
              v = '-52 -20 -16 -52 44 -16 12 -20 -16'
              tex = "[origin]"
              tv = '4 -36 4 -164 -124 -36'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
              tv = '-64 -64 -64 64 64 -64'
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              tv = '64 64 64 -64 -64 64'
              m = "1"
            }
          }
        }
        func_pivot:b =
        {
          dmg = "2"
          speed = "100"
          ;desc = "works like a see-saw"
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -8 -16 16 56 -16 16 -8 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            west:f =
            {
              v = '-16 -20 -16 -16 -20 48 -16 44 -16'
              tex = "[origin]"
              tv = '-4 0 124 0 -4 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            north:f =
            {
              v = '-52 16 -16 -52 16 48 12 16 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            south:f =
            {
              v = '-52 -16 -16 12 -16 -16 -52 -16 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            up:f =
            {
              v = '-52 -20 16 12 -20 16 -52 44 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            down:f =
            {
              v = '-52 -20 -16 -52 44 -16 12 -20 -16'
              tex = "[origin]"
              tv = '4 -36 4 -164 -124 -36'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
              tv = '-64 -64 -64 64 64 -64'
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              tv = '64 64 64 -64 -64 64'
              m = "1"
            }
          }
        }
        func_plat:b =
        {
          ;desc = "This is used for platforms or elevators."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_pushable:b =
        {
          mass = "400"
          ;desc = "Pushable Object"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_reflect:b =
        {
          lip = "3"
          style = "3"
          ;desc = "Mirrors in Quake2."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        func_rotating:b =
        {
          dmg = "2"
          speed = "100"
          ;desc = "This is for making things rotate or spin."
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -8 -16 16 56 -16 16 -8 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            west:f =
            {
              v = '-16 -20 -16 -16 -20 48 -16 44 -16'
              tex = "[origin]"
              tv = '-4 0 124 0 -4 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            north:f =
            {
              v = '-52 16 -16 -52 16 48 12 16 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            south:f =
            {
              v = '-52 -16 -16 12 -16 -16 -52 -16 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            up:f =
            {
              v = '-52 -20 16 12 -20 16 -52 44 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            down:f =
            {
              v = '-52 -20 -16 -52 44 -16 12 -20 -16'
              tex = "[origin]"
              tv = '4 -36 4 -164 -124 -36'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
              tv = '-64 -64 -64 64 64 -64'
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              tv = '64 64 64 -64 -64 64'
              m = "1"
            }
          }
        }
        func_rotating_dh:b =
        {
          dmg = "2"
          speed = "100"
          ;desc = "Rotating brush"
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -8 -16 16 56 -16 16 -8 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            west:f =
            {
              v = '-16 -20 -16 -16 -20 48 -16 44 -16'
              tex = "[origin]"
              tv = '-4 0 124 0 -4 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            north:f =
            {
              v = '-52 16 -16 -52 16 48 12 16 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            south:f =
            {
              v = '-52 -16 -16 12 -16 -16 -52 -16 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            up:f =
            {
              v = '-52 -20 16 12 -20 16 -52 44 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            down:f =
            {
              v = '-52 -20 -16 -52 44 -16 12 -20 -16'
              tex = "[origin]"
              tv = '4 -36 4 -164 -124 -36'
              m = "1"
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
              tv = '-64 -64 -64 64 64 -64'
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              tv = '64 64 64 -64 -64 64'
              m = "1"
            }
          }
        }
        func_timer:e =
        {
          origin = "0 0 0"
          ;desc = "Use this to make timed events."
          wait = "1"
        }
        func_trackchange:b =
        {
          ;desc = "Train track changing platform"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_tracktrain:b =
        {
          bleft = "-16 -16 -16"
          distance = "50"
          height = "4"
          sounds = "1"
          speed = "64"
          tright = "16 16 16"
          ;desc = "Track Train"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_train:b =
        {
          ;desc = "This is for making moving things."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_trainbutton:b =
        {
          angle = "360"
          lip = "4"
          sounds = "0"
          speed = "40"
          wait = "3"
          ;desc = "Button on a train"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_vehicle:b =
        {
          mass = "2000"
          move_origin = "0 0 0"
          radius = "256"
          speed = "200"
          angle = "360"
          ;desc = "Controllable vehicle"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_wall:b =
        {
          ;desc = "Make a wall appear or dissappear by connecting a func_butto"
           "n to this."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_water:b =
        {
          angle = "-2"
          speed = "25"
          sounds = "1"
          wait = "-1"
          ;desc = "Use this one to make water, lava or slime move."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "e1u1/bluwter"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "e1u1/bluwter"
              m = "1"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "e1u1/bluwter"
              m = "1"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "e1u1/bluwter"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "e1u1/bluwter"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "e1u1/bluwter"
              m = "1"
              Flags = "9"
              Value = "100"
              Contents = "32"
            }
          }
        }
      }
      Model_* entities.qtxfolder =
      {
        model_spawn:e =
        {
          origin = "0 0 0"
          angle = "360"
          framenumbers = "1"
          solidstate = "1"
          style = "0"
          health = "0"
          bleft = "-16 -16 -16"
          tright = "16 16 16"
          ;desc = "User models"
        }
        model_train:e =
        {
          origin = "0 0 0"
          angle = "360"
          bleft = "-16 -16 -16"
          tright = "16 16 16"
          ;desc = "Moving model"
        }
        model_turret:e =
        {
          origin = "0 0 0"
          angle = "360"
          framenumbers = "1"
          solidstate = "1"
          style = "0"
          health = "0"
          bleft = "-16 -16 -16"
          tright = "16 16 16"
          ;desc = "Model Turret"
        }
      }
      Target_* entities.qtxfolder =
      {
        target_actor:e =
        {
          origin = "0 0 0"
          ;desc = "Actor path"
        }
        target_anger:e =
        {
          origin = "0 0 0"
          ;desc = "Make someone mad"
        }
        target_animation:e =
        {
          origin = "0 0 0"
          sounds = "0"
          framenumbers = "1"
          ;desc = "Entity animator"
        }
        target_attractor:e =
        {
          origin = "0 0 0"
          sounds = "0"
          ;desc = "Entity magnet"
        }
        target_blaster:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Fires a blaster (your 1st weapon). Use a trigger on this."
          sounds = "0"
          dmg = "15"
          speed = "1000"
          wait = "0"
        }
        target_bmodel_spawner:e =
        {
          angle = "360"
          origin = "0 0 0"
          ;desc = "Clones brush entities"
        }
        target_cd:e =
        {
          origin = "0 0 0"
          sounds = "2"
          dmg = "1"
          ;desc = "CD track player"
        }
        target_change:e =
        {
          origin = "0 0 0"
          ;desc = "Entity changer"
        }
        target_changelevel:e =
        {
          origin = "0 0 0"
          ;desc = "Use this to change to another map."
        }
        target_character:b =
        {
          ;desc = "This is a brush that functions as a display for a func_cloc"
           "k. Use with target_string and func_clock."
          poly:p =
          {
            east:f =
            {
              v = '8 -4 -16 8 124 -16 8 -4 112'
              tex = "test/num_0"
              tv = '-4 -4 124 -4 -4 -100'
            }
            west:f =
            {
              v = '-8 -4 -16 -8 -4 112 -8 124 -16'
              tex = "test/num_0"
              tv = '-12 -4 116 -4 -12 -100'
              m = "1"
            }
            north:f =
            {
              v = '-8 8 -16 -8 8 112 120 8 -16'
              tex = "test/num_0"
              tv = '-16 -4 112 -4 -16 -100'
              m = "1"
            }
            south:f =
            {
              v = '-8 -8 -16 120 -8 -16 -8 -8 112'
              tex = "test/num_0"
              tv = '0 -4 128 -4 0 -100'
            }
            up:f =
            {
              v = '-8 -4 12 120 -4 12 -8 124 12'
              tex = "test/num_0"
              tv = '-4 0 -4 128 60 0'
            }
            down:f =
            {
              v = '-8 -4 -12 -8 124 -12 120 -4 -12'
              tex = "test/num_0"
              tv = '12 0 12 -128 -52 0'
              m = "1"
            }
          }
        }
        target_clone:e =
        {
          origin = "0 0 0"
          count = "0"
          ;desc = "Spawns a new entity."
        }
        target_crosslevel_target:e =
        {
          origin = "0 0 0"
          ;desc = "This is a target on another map."
        }
        target_crosslevel_trigger:e =
        {
          origin = "0 0 0"
          ;desc = "This is to trigger a target_crosslevel_target on another ma"
           "p."
        }
        target_earthquake:e =
        {
          origin = "0 0 0"
          count = "5"
          speed = "200"
          ;desc = "This is for starting an earthquake."
        }
        target_effect:e =
        {
          angle = "360"
          origin = "0 0 0"
          style = "0"
          ;desc = "Calls an effect when used"
        }
        target_explosion:e =
        {
          origin = "0 0 0"
          dmg = "0"
          ;desc = "Use a trigger to set off this explosion."
        }
        target_fade:e =
        {
          origin = "0 0 0"
          angle = "360"
          alpha = "0"
          color = "0 0 0"
          fadein = "0"
          fadeout = "0"
          holdtime = "0"
          ;desc = "Fade the screen"
        }
        target_failure:e =
        {
          origin = "0 0 0"
          ;desc = "Mission failure"
        }
        target_fog:e =
        {
          origin = "0 0 0"
          angle = "360"
          density = "0"
          fog_color = "0.5 0.5 0.5"
          fog_model = "1"
          fog_near = "64"
          fog_far = "1024"
          fog_density = "20"
          ;desc = "Fog maker"
        }
        target_fountain:e =
        {
          origin = "0 0 0"
          angle = "360"
          bleft = "0 0 0"
          count = "1"
          mass = "0"
          mass2 = "8"
          sounds = "183"
          speed = "300"
          tright = "0 0 0"
          ;desc = "Model fountain"
        }
        target_goal:e =
        {
          origin = "0 0 0"
          ;desc = "Use this to tell a player that he/she has completed a goal."
        }
        target_help:e =
        {
          origin = "0 0 0"
          ;desc = "This is used to tell the player what the goal of the map is"
           ".."
        }
        target_laser:e =
        {
          origin = "0 0 0"
          angle = "360"
          dmg = "100"
          style = "0"
          mass = "0"
          wait = "0"
          delay = "0"
          ;desc = "Put this where you want a laser to hit."
        }
        target_lightramp:e =
        {
          origin = "0 0 0"
          ;desc = "This makes a light fade in or out."
        }
        target_lightswitch:e =
        {
          origin = "0 0 0"
          message = "a"
          ;desc = "Light switch"
        }
        target_locator:e =
        {
          origin = "0 0 0"
          ;desc = "Entity mover"
        }
        target_lock:e =
        {
          origin = "0 0 0"
          ;desc = "Combination lock"
        }
        target_lock_code:e =
        {
          origin = "0 0 0"
          ;desc = "Reveals lock combination"
        }
        target_lock_clue:e =
        {
          origin = "0 0 0"
          ;desc = "Use with target lock"
        }
        target_lock_digit:b =
        {
          ;desc = "Use with target_lock"
          poly:p =
          {
            east:f =
            {
              v = '8 -4 -16 8 124 -16 8 -4 112'
              tex = "test/num_0"
              tv = '-4 -4 124 -4 -4 -100'
            }
            west:f =
            {
              v = '-8 -4 -16 -8 -4 112 -8 124 -16'
              tex = "test/num_0"
              tv = '-12 -4 116 -4 -12 -100'
              m = "1"
            }
            north:f =
            {
              v = '-8 8 -16 -8 8 112 120 8 -16'
              tex = "test/num_0"
              tv = '-16 -4 112 -4 -16 -100'
              m = "1"
            }
            south:f =
            {
              v = '-8 -8 -16 120 -8 -16 -8 -8 112'
              tex = "test/num_0"
              tv = '0 -4 128 -4 0 -100'
            }
            up:f =
            {
              v = '-8 -4 12 120 -4 12 -8 124 12'
              tex = "test/num_0"
              tv = '-4 0 -4 128 60 0'
            }
            down:f =
            {
              v = '-8 -4 -12 -8 124 -12 120 -4 -12'
              tex = "test/num_0"
              tv = '12 0 12 -128 -52 0'
              m = "1"
            }
          }
        }
        target_monitor:e =
        {
          origin = "0 0 0"
          angle = "360"
          distance = "128"
          height = "16"
          wait = "3"
          ;desc = "Temporary viewpoint"
        }
        target_monsterbattle:e =
        {
          origin = "0 0 0"
          ;desc = "Make monster teams fight"
        }
        target_movewith:e =
        {
          origin = "0 0 0"
          ;desc = "Adds/removes movewith association"
        }
        target_playback:e =
        {
          origin = "0 0 0"
          ;desc = "Music player"
          volume = "1"
          fadein = "0"
          fadeout = "0"
        }
        target_precipitation:e =
        {
          origin = "0 0 0"
          angles = "90 0 0"
          style = "0"
          bleft = "0 0 0"
          count = "1"
          mass = "0"
          mass2 = "8"
          sounds = "183"
          speed = "300"
          tright = "0 0 0"
          ;desc = "Rain/snow"
        }
        target_rocks:e =
        {
          origin = "0 0 0"
          angles = "0 0 0"
          mass = "500"
          speed = "400"
          ;desc = "Rock slide"
        }
        target_rotation:e =
        {
          origin = "0 0 0"
          ;desc = "Target cycler"
        }
        target_secret:e =
        {
          origin = "0 0 0"
          ;desc = "This is used for counting how many secrets the player has f"
           "ound."
        }
        target_set_effect:e =
        {
          origin = "0 0 0"
          style = "0"
          ;desc = "Add eyecandy to other entities"
        }
        target_skill:e =
        {
          origin = "0 0 0"
          ;desc = "Change skill"
        }
        target_sky:e =
        {
          origin = "0 0 0"
          ;desc = "Change env sky"
        }
        target_spawner:e =
        {
          angle = "-1"
          origin = "0 0 0"
          ;desc = "Makes anything of your choice spawn at the target_spawner p"
           "oint."
        }
        target_speaker:e =
        {
          origin = "0 0 0"
          volume = "1.0"
          ;desc = "This is used for the sounds in Q2, like breaking glass and "
           "such."
        }
        target_splash:e =
        {
          origin = "0 0 0"
          angle = "-1"
          count = "20"
          sounds = "2"
          ;desc = "This is for effects like sparks and such."
        }
        target_string:e =
        {
          origin = "0 0 0"
          ;desc = "This acts as the relay from the func_clock to the target_ch"
           "aracters."
        }
        target_temp_entity:e =
        {
          origin = "0 0 0"
          style = "22"
          ;desc = "This can be used for some great effects."
        }
        target_text:e =
        {
          origin = "0 0 0"
          ;desc = "General text display"
        }
      }
      Tremor_* entities.qtxfolder =
      {
        tremor_trigger_multiple:b =
        {
          ;desc = "Multiple fire toggling trigger"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
      }
      Trigger_* entities.qtxfolder =
      {
        trigger_always:e =
        {
          origin = "0 0 0"
          ;desc = "This trigger will always fire, it is activated by the world"
           "."
        }
        trigger_bbox:e =
        {
          origin = "0 0 0"
          angle = "360"
          wait = "0"
          bleft = "-16 -16 -16"
          tright = "16 16 16"
          ;desc = "Multiple fire trigger"
        }
        trigger_counter:e =
        {
          origin = "0 0 0"
          count = "2"
          delay = "0.2"
          ;desc = "Use this if the player has to push more than one button to "
           "open a door."
        }
        trigger_disguise:b =
        {
          ;desc = "Anything passing through this trigger when it is active wil"
           "l be marked as disguised."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_elevator:e =
        {
          origin = "0 0 0"
          ;desc = "Use this if you need an elevator that has to stop at differ"
           "ent heights."
        }
        trigger_fog:b =
        {
          angle = "360"
          fog_color = "0.5 0.5 0.5"
          fog_model = "1"
          fog_near = "64"
          fog_far = "1024"
          fog_density = "20"
          density = "0"
          ;desc = "Fog field"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_gravity:b =
        {
          ;desc = "This only work on spawn weapons and gibs not the player."
          gravity = "1"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_hurt:b =
        {
          ;desc = "This causes damage to the player when he touches this."
          dmg = "5"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_inside:b =
        {
          ;desc = "Multiple fire trigger"
          wait = "0"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_key:e =
        {
          origin = "0 0 0"
          item = "key_blue_key"
          ;desc = "This will make the door it is used with require a key to op"
           "en."
        }
        trigger_look:b =
        {
          angle = "360"
          wait = "0"
          bleft = "-16 -16 -16"
          tright = "16 16 16"
          ;desc = "Viewpoint trigger"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_mass:b =
        {
          wait = "0"
          mass = "100"
          ;desc = "Weight limit trigger"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_monsterjump:b =
        {
          angle = "360"
          speed = "200"
          height = "200"
          ;desc = "Use this to get the monsters to jump."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_multiple:b =
        {
          wait = "0"
          ;desc = "Use this if you want something to a be trigger more than on"
           "ce.."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_once:b =
        {
          ;desc = "Use this to trigger something only once."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_push:b =
        {
          angles = "0 0 0"
          ;desc = "Just as in Q1 use it to push the player in a given directio"
           "n."
          speed = "100"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_relay:e =
        {
          origin = "0 0 0"
          ;desc = "This cannot be touched, it must be triggered by other event"
           "s."
        }
        trigger_scales:b =
        {
          ;desc = "Scales"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_switch:b =
        {
          spawnflags = "64"
          target = "reflection2"
          delay = "0"
          sounds = "0"
          wait = "1"
          ;desc = "trigger_switch"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_teleporter:b =
        {
          target = "tele_1"
          ;desc = "Any Player or Monster/Actor touching this will be transport"
           "ed."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
        trigger_transition:b =
        {
          ;desc = "Level changer"
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Value = "0"
              Flags = "128"
            }
          }
        }
      }
      Turret_* entities.qtxfolder =
      {
        turret_base:b =
        {
          angle = "360"
          ;desc = "Turret Base"
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -8 -16 16 56 -16 16 -8 48'
              tex = "e1u1/origin"
              tv = '-8 0 120 0 -8 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            west:f =
            {
              v = '-16 -20 -16 -16 -20 48 -16 44 -16'
              tex = "e1u1/origin"
              tv = '-4 0 124 0 -4 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            north:f =
            {
              v = '-52 16 -16 -52 16 48 12 16 -16'
              tex = "e1u1/origin"
              tv = '-36 0 92 0 -36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            south:f =
            {
              v = '-52 -16 -16 12 -16 -16 -52 -16 48'
              tex = "e1u1/origin"
              tv = '36 0 164 0 36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            up:f =
            {
              v = '-52 -20 16 12 -20 16 -52 44 16'
              tex = "e1u1/origin"
              tv = '4 36 4 164 132 36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            down:f =
            {
              v = '-52 -20 -16 -52 44 -16 12 -20 -16'
              tex = "e1u1/origin"
              tv = '4 -36 4 -164 -124 -36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
              tv = '-64 -64 -64 64 64 -64'
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              tv = '64 64 64 -64 -64 64'
              m = "1"
            }
          }
        }
        turret_breach:b =
        {
          angle = "360"
          dmg = "10"
          maxpitch = "30"
          minpitch = "-30"
          maxyaw = "360"
          minyaw = "0"
          sounds = "2"
          speed = "50"
          ;desc = "Turret Breach"
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -8 -16 16 56 -16 16 -8 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            west:f =
            {
              v = '-16 -20 -16 -16 -20 48 -16 44 -16'
              tex = "[origin]"
              tv = '-4 0 124 0 -4 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            north:f =
            {
              v = '-52 16 -16 -52 16 48 12 16 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            south:f =
            {
              v = '-52 -16 -16 12 -16 -16 -52 -16 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            up:f =
            {
              v = '-52 -20 16 12 -20 16 -52 44 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
            down:f =
            {
              v = '-52 -20 -16 -52 44 -16 12 -20 -16'
              tex = "[origin]"
              tv = '4 -36 4 -164 -124 -36'
              Flags = "128"
              Value = "0"
              Contents = "16777216"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
              tv = '-64 64 64 64 -64 -64'
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
              tv = '-64 -64 -64 64 64 -64'
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              tv = '64 64 64 -64 -64 64'
              m = "1"
            }
          }
        }
        turret_driver:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Turret Driver"
        }
      }
      other entities.qtxfolder =
      {
        viewthing:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Just for debugging level (DON'T USE)."
        }
      }
    }
  }
  Default forms.fctx =
  {
    t_actor_form:form =
    {
      Caption = "Available Actor Models"
      usermodel: =
      {
        typ = "C"
        txt = "Actors Models"
        items = "Alien skins 0-3"$0D"Hunter skins 0-4"$0D"Paranoid Marine skin"
         "s 0-3"$0D"Ratamahatta skins 0-5"$0D"Rhino skins 0-2"$0D"SAS skin 0"$0D
         "Slith skins 0-3"$0D"Terran Marine skins 0-22"$0D"Walker skins 0-2"$0D
         "Waste skin 0"$0D"Xenoid skins 0-2"$0D"Zumlin skins 0-5"
        values = "alien"$0D"hunter"$0D"marine"$0D"ratamahatta"$0D"rhino"$0D"sa"
         "s"$0D"slith"$0D"terran"$0D"walker"$0D"waste"$0D"xenoid"$0D"zumlin"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Player Models"
        items = "Male skins 0-14"$0D"Female skins 0-9"$0D"Cyborg skins 0-2"
        values = "male"$0D"female"$0D"cyborg"
      }
    }
    t_effect_form:form =
    {
      Help = "Effects Combine"
      Caption = "Available Color"
      sounds: =
      {
        Txt = "Colors with style 10"
        Typ = "C"
        Items = "1) Sparks"$0D"2) Blue Water"$0D"3) Brown Water"$0D"4) Slime"$0D
         "5) Lava"$0D"6) Blood"
        Values = "1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        Hint = "For style=10 SPLASH, sounds is identical to the definition for"
         " a target_splash."
      }
      sounds: =
      {
        typ = "C"
        Txt = "Colors with style 15,25,40"
        Hint = "For style=15 LASER_SPARKS, style=25 WELDING_SPARKS, and style="
         "40 STEAM, sounds is the index in the standard Quake2 palette to use."
        Items = "6) white-A"$0D"7) white-B"$0D"8) white-C"$0D"9) white-D"$0D"8"
         "0) Brown Water"$0D"176) Blue Water"$0D"208) Slime"$0D"224) Sparks"$0D
         "232) Blood"
        Values = "6"$0D"7"$0D"8"$0D"9"$0D"80"$0D"176"$0D"208"$0D"224"$0D"232"
      }
    }
    t_effects_form:form =
    {
      Caption = "Effects Combine"
      effects: =
      {
        txt = "&"
        Typ = "X1"
        Cap = "rotate"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X2"
        Cap = "gib"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X8"
        Cap = "blaster"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X16"
        Cap = "rocket"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X32"
        Cap = "grenade"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X64"
        Cap = "hyperblaster"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X128"
        Cap = "bfg"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X256"
        Cap = "color_shell"
        Hint = "Use renderfx - shell_*"
      }
      effects: =
      {
        txt = "&"
        Typ = "X512"
        Cap = "powerscreen"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X16384"
        Cap = "flies"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X32768"
        Cap = "quad"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X65536"
        Cap = "pent"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X131072"
        Cap = "teleporter"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X262144"
        Cap = "flag1"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X524288"
        Cap = "flag2"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X1048576"
        Cap = "ionripper"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X2097152"
        Cap = "greengib"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X4194304"
        Cap = "blue_hb"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X8388608"
        Cap = "spinning_lights"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X16777216"
        Cap = "plasma"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X33554432"
        Cap = "trap"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X67108864"
        Cap = "tracker"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X134217728"
        Cap = "double"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X268435456"
        Cap = "spheretrans"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X536870912"
        Cap = "tagtrail"
        Hint = ""
      }
      effects: =
      {
        txt = "&"
        Typ = "X1073741824"
        Cap = "half_damage"
        Hint = ""
      }
    }
    t_item4_form:form =
    {
      Caption = "Monster item Spawns"
      item: =
      {
        typ = "C"
        txt = "Weapons Classes"
        items = "weapon_blaster"$0D"weapon_shotgun"$0D"weapon_supershotgun"$0D
         "weapon_machinegun"$0D"weapon_chaingun"$0D"weapon_grenadelauncher"$0D
         "weapon_rocketlauncher"$0D"weapon_hyperblaster"$0D"weapon_railgun"$0D
         "weapon_bfg"
        values = "weapon_blaster"$0D"weapon_shotgun"$0D"weapon_supershotgun"$0D
         "weapon_machinegun"$0D"weapon_chaingun"$0D"weapon_grenadelauncher"$0D
         "weapon_rocketlauncher"$0D"weapon_hyperblaster"$0D"weapon_railgun"$0D
         "weapon_bfg"
      }
      item: =
      {
        typ = "C"
        txt = "Ammo Classes"
        items = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rocke"
         "ts"$0D"ammo_homing_missiles"$0D"ammo_cells"$0D"ammo_slugs"$0D"ammo_f"
         "uel"
        values = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rock"
         "ets"$0D"ammo_homing_missiles"$0D"ammo_cells"$0D"ammo_slugs"$0D"ammo_"
         "fuel"
      }
      item: =
      {
        typ = "C"
        txt = "Key Classes"
        items = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"$0D
         "key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
        values = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"
         $0D"key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
      }
      item: =
      {
        typ = "C"
        txt = "Item Classes"
        items = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_flashlight"$0D
         "item_freeze"$0D"item_health_small"$0D"item_health"$0D"item_health_la"
         "rge"$0D"item_health_mega"$0D"item_invulnerability"$0D"item_jetpack"$0D
         "item_pack"$0D"item_power_screen"$0D"item_power_shield"$0D"item_quad"$0D
         "item_silencer"
        values = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_flashlight"$0D
         "item_freeze"$0D"item_health_small"$0D"item_health"$0D"item_health_la"
         "rge"$0D"item_health_mega"$0D"item_invulnerability"$0D"item_jetpack"$0D
         "item_pack"$0D"item_power_screen"$0D"item_power_shield"$0D"item_quad"$0D
         "item_silencer"
      }
    }
    t_noise4_form:form =
    {
      Caption = "Quake II Sounds"
      noise: =
      {
        Typ = "C"
        Txt = "Item Sounds"
        Hint = "Nunber of sounds = 14"
        Items = "items/airout.wav"$0D"items/damage.wav"$0D"items/damage2.wav"$0D
         "items/damage3.wav"$0D"items/l_health.wav"$0D"items/m_health.wav"$0D"i"
         "tems/n_health.wav"$0D"items/pkup.wav"$0D"items/protect.wav"$0D"items"
         "/protect2.wav"$0D"items/protect3.wav"$0D"items/protect4.wav"$0D"item"
         "s/respawn1.wav"$0D"items/s_health.wav"
        Values = "items/airout.wav"$0D"items/damage.wav"$0D"items/damage2.wav"$0D
         "items/damage3.wav"$0D"items/l_health.wav"$0D"items/m_health.wav"$0D"i"
         "tems/n_health.wav"$0D"items/pkup.wav"$0D"items/protect.wav"$0D"items"
         "/protect2.wav"$0D"items/protect3.wav"$0D"items/protect4.wav"$0D"item"
         "s/respawn1.wav"$0D"items/s_health.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Miscellaneous Sounds"
        Hint = "Nunber of sounds = 26"
        Items = "misc/am_pkup.wav"$0D"misc/ar1_pkup.wav"$0D"misc/ar2_pkup.wav"$0D
         "misc/ar3_pkup.wav"$0D"misc/bigtele.wav"$0D"misc/comp_up.wav"$0D"misc"
         "/fhit3.wav"$0D"misc/h2ohit1.wav"$0D"misc/keytry.wav"$0D"misc/keyuse."
         "wav"$0D"misc/lasfly.wav"$0D"misc/menu1.wav"$0D"misc/menu2.wav"$0D"mi"
         "sc/menu3.wav"$0D"misc/pc_up.wav"$0D"misc/power1.wav"$0D"misc/power2."
         "wav"$0D"misc/secret.wav"$0D"misc/spawn1.wav"$0D"misc/talk.wav"$0D"mi"
         "sc/talk1.wav"$0D"misc/tele_up.wav"$0D"misc/tele1.wav"$0D"misc/udeath"
         ".wav"$0D"misc/w_pkup.wav"$0D"misc/windfly.wav"
        Values = "misc/am_pkup.wav"$0D"misc/ar1_pkup.wav"$0D"misc/ar2_pkup.wav"
         $0D"misc/ar3_pkup.wav"$0D"misc/bigtele.wav"$0D"misc/comp_up.wav"$0D"m"
         "isc/fhit3.wav"$0D"misc/h2ohit1.wav"$0D"misc/keytry.wav"$0D"misc/keyu"
         "se.wav"$0D"misc/lasfly.wav"$0D"misc/menu1.wav"$0D"misc/menu2.wav"$0D
         "misc/menu3.wav"$0D"misc/pc_up.wav"$0D"misc/power1.wav"$0D"misc/power"
         "2.wav"$0D"misc/secret.wav"$0D"misc/spawn1.wav"$0D"misc/talk.wav"$0D"m"
         "isc/talk1.wav"$0D"misc/tele_up.wav"$0D"misc/tele1.wav"$0D"misc/udeat"
         "h.wav"$0D"misc/w_pkup.wav"$0D"misc/windfly.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Weapon Sounds"
        Hint = "Nunber of sounds = 41"
        Items = "weapons/bfg__f1y.wav"$0D"weapons/bfg__1a.wav"$0D"weapons/bfg_"
         "_x1b.wav"$0D"weapons/bfg_hum.wav"$0D"weapons/blastf1a.wav"$0D"weapon"
         "s/chngnd1a.wav"$0D"weapons/chngnl1a.wav"$0D"weapons/chngnu1a.wav"$0D
         "weapons/grenlb1b.wav"$0D"weapons/grenlf1a.wav"$0D"weapons/grenlr1b.w"
         "av"$0D"weapons/grenlx1a.wav"$0D"weapons/hgrena1b.wav"$0D"weapons/hgr"
         "enb1a.wav"$0D"weapons/hgrenb2a.wav"$0D"weapons/hgrenc1b.wav"$0D"weap"
         "ons/hgrent1a.wav"$0D"weapons/hyprbd1a.wav"$0D"weapons/hyprbf1a.wav"$0D
         "weapons/hyprbl1a.wav"$0D"weapons/hyprbu1a.wav"$0D"weapons/laser2.wav"
         $0D"weapons/lashit.wav"$0D"weapons/machgf1b.wav"$0D"weapons/machgf2b."
         "wav"$0D"weapons/machgf3b.wav"$0D"weapons/machgf4b.wav"$0D"weapons/ma"
         "chgf5b.wav"$0D"weapons/noammo.wav"$0D"weapons/railgf1a.wav"$0D"weapo"
         "ns/railgr1a.wav"$0D"weapons/rg_hum.wav"$0D"weapons/rockfly.wav"$0D"w"
         "eapons/rocklf1a.wav"$0D"weapons/rocklr1b.wav"$0D"weapons/rocklx1a.wa"
         "v"$0D"weapons/shotgf1b.wav"$0D"weapons/shotgr1b.wav"$0D"weapons/ssho"
         "tf1b.wav"$0D"weapons/sshotr1b.wav"$0D"weapons/xpld_wat.wav"
        Values = "weapons/bfg__f1y.wav"$0D"weapons/bfg__1a.wav"$0D"weapons/bfg"
         "__x1b.wav"$0D"weapons/bfg_hum.wav"$0D"weapons/blastf1a.wav"$0D"weapo"
         "ns/chngnd1a.wav"$0D"weapons/chngnl1a.wav"$0D"weapons/chngnu1a.wav"$0D
         "weapons/grenlb1b.wav"$0D"weapons/grenlf1a.wav"$0D"weapons/grenlr1b.w"
         "av"$0D"weapons/grenlx1a.wav"$0D"weapons/hgrena1b.wav"$0D"weapons/hgr"
         "enb1a.wav"$0D"weapons/hgrenb2a.wav"$0D"weapons/hgrenc1b.wav"$0D"weap"
         "ons/hgrent1a.wav"$0D"weapons/hyprbd1a.wav"$0D"weapons/hyprbf1a.wav"$0D
         "weapons/hyprbl1a.wav"$0D"weapons/hyprbu1a.wav"$0D"weapons/laser2.wav"
         $0D"weapons/lashit.wav"$0D"weapons/machgf1b.wav"$0D"weapons/machgf2b."
         "wav"$0D"weapons/machgf3b.wav"$0D"weapons/machgf4b.wav"$0D"weapons/ma"
         "chgf5b.wav"$0D"weapons/noammo.wav"$0D"weapons/railgf1a.wav"$0D"weapo"
         "ns/railgr1a.wav"$0D"weapons/rg_hum.wav"$0D"weapons/rockfly.wav"$0D"w"
         "eapons/rocklf1a.wav"$0D"weapons/rocklr1b.wav"$0D"weapons/rocklx1a.wa"
         "v"$0D"weapons/shotgf1b.wav"$0D"weapons/shotgr1b.wav"$0D"weapons/ssho"
         "tf1b.wav"$0D"weapons/sshotr1b.wav"$0D"weapons/xpld_wat.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "World Sounds"
        Hint = "Nunber of sounds = 157"
        Items = "world/10_0.wav"$0D"world/airhiss1.wav"$0D"world/airhiss2.wav"$0D
         "world/amb1.wav"$0D"world/amb2.wav"$0D"world/amb3.wav"$0D"world/amb4."
         "wav"$0D"world/amb5.wav"$0D"world/amb6.wav"$0D"world/amb7.wav"$0D"wor"
         "ld/amb8.wav"$0D"world/amb9.wav"$0D"world/amb10.wav"$0D"world/amb11.w"
         "av"$0D"world/amb12.wav"$0D"world/amb13.wav"$0D"world/amb14.wav"$0D"w"
         "orld/amb15.wav"$0D"world/amb16.wav"$0D"world/amb17.wav"$0D"world/amb"
         "18.wav"$0D"world/amb19.wav"$0D"world/amb20.wav"$0D"world/amb21.wav"$0D
         "world/amb22.wav"$0D"world/amb23.wav"$0D"world/amb24.wav"$0D"world/ba"
         "ttle1.wav"$0D"world/battle2.wav"$0D"world/battle3.wav"$0D"world/batt"
         "le4.wav"$0D"world/battle5.wav"$0D"world/bigpump.wav"$0D"world/bigpum"
         "p2.wav"$0D"world/blackhole.wav"$0D"world/brkglas.wav"$0D"world/bubbl"
         "4.wav"$0D"world/bubl1.wav"$0D"world/bubl2.wav"$0D"world/bubl3.wav"$0D
         "world/comlas1.wav"$0D"world/comp_hum1.wav"$0D"world/comp_hum2.wav"$0D
         "world/comp_hum3.wav"$0D"world/curnt1.wav"$0D"world/curnt2.wav"$0D"wo"
         "rld/curnt3.wav"$0D"world/dataspin.wav"$0D"world/deactivated.wav"$0D"w"
         "orld/dish1.wav"$0D"world/dr_long.wav"$0D"world/dr_short.wav"$0D"worl"
         "d/drill1.wav"$0D"world/drill2a.wav"$0D"world/driller1.wav"$0D"world/"
         "drip_amb.wav"$0D"world/drip1.wav"$0D"world/drip2.wav"$0D"world/drip3"
         ".wav"$0D"world/electro.wav"$0D"world/explod1.wav"$0D"world/explod2.w"
         "av"$0D"world/fan1.wav"$0D"world/flesh1.wav"$0D"world/flesh2.wav"$0D"w"
         "orld/flyby.wav"$0D"world/flyby1.wav"$0D"world/flyby2.wav"$0D"world/f"
         "lyby3.wav"$0D"world/force1.wav"$0D"world/force2.wav"$0D"world/force3"
         ".wav"$0D"world/fusein.wav"$0D"world/fuseout.wav"$0D"world/incoming.w"
         "av"$0D"world/klaxon1.wav"$0D"world/klaxon2.wav"$0D"world/l_hum1.wav"$0D
         "world/l_hum2.wav"$0D"world/land.wav"$0D"world/laser.wav"$0D"world/la"
         "shum1.wav"$0D"world/lasoff1.wav"$0D"world/lava1.wav"$0D"world/lite_o"
         "n1.wav"$0D"world/lite_on2.wav"$0D"world/lite_on3.wav"$0D"world/lite_"
         "out.wav"$0D"world/mach1.wav"$0D"world/mach2.wav"$0D"world/mach3.wav"$0D
         "world/mov_watr.wav"$0D"world/pilot1.wav"$0D"world/pilot2.wav"$0D"wor"
         "ld/pilot3.wav"$0D"world/pump1.wav"$0D"world/pump2.wav"$0D"world/pump"
         "3.wav"$0D"world/pumping.wav"$0D"world/pyramid.wav"$0D"world/quake.wa"
         "v"$0D"world/radio2.wav"$0D"world/radio3.wav"$0D"world/reactor.wav"$0D
         "world/redforce.wav"$0D"world/ric1.wav"$0D"world/ric2.wav"$0D"world/r"
         "ic3.wav"$0D"world/rocks1.wav"$0D"world/scan1.wav"$0D"world/short1.wa"
         "v"$0D"world/spark1.wav"$0D"world/spark2.wav"$0D"world/spark3.wav"$0D
         "world/spark5.wav"$0D"world/spark6.wav"$0D"world/spark7.wav"$0D"world"
         "/steam1.wav"$0D"world/steam2.wav"$0D"world/steam3.wav"$0D"world/stp_"
         "watr.wav"$0D"world/tele1.wav"$0D"world/train1.wav"$0D"world/train2.w"
         "av"$0D"world/turbine1.wav"$0D"world/uplink2.wav"$0D"world/v_bas1.wav"
         $0D"world/v_bas2.wav"$0D"world/v_bas3.wav"$0D"world/v_bas4.wav"$0D"wo"
         "rld/v_bas5.wav"$0D"world/v_bas6.wav"$0D"world/v_cit1.wav"$0D"world/v"
         "_cit2.wav"$0D"world/v_cmd1.wav"$0D"world/v_cmd2.wav"$0D"world/v_fac2"
         ".wav"$0D"world/v_fac3.wav"$0D"world/v_gun1.wav"$0D"world/v_gun2.wav"$0D
         "world/v_war1.wav"$0D"world/ventsys.wav"$0D"world/voice1.wav"$0D"worl"
         "d/voice3.wav"$0D"world/voice4.wav"$0D"world/voice5.wav"$0D"world/voi"
         "ce6.wav"$0D"world/voice7.wav"$0D"world/voice10.wav"$0D"world/voice11"
         ".wav"$0D"world/water1.wav"$0D"world/wind2.wav"$0D"world/x_alarm.wav"$0D
         "world/x_light.wav"$0D"world/xian1.wav"$0D"world/xianbeats.wav"$0D"wo"
         "rld/yelforce.wav"
        Values = "world/10_0.wav"$0D"world/airhiss1.wav"$0D"world/airhiss2.wav"
         $0D"world/amb1.wav"$0D"world/amb2.wav"$0D"world/amb3.wav"$0D"world/am"
         "b4.wav"$0D"world/amb5.wav"$0D"world/amb6.wav"$0D"world/amb7.wav"$0D"w"
         "orld/amb8.wav"$0D"world/amb9.wav"$0D"world/amb10.wav"$0D"world/amb11"
         ".wav"$0D"world/amb12.wav"$0D"world/amb13.wav"$0D"world/amb14.wav"$0D
         "world/amb15.wav"$0D"world/amb16.wav"$0D"world/amb17.wav"$0D"world/am"
         "b18.wav"$0D"world/amb19.wav"$0D"world/amb20.wav"$0D"world/amb21.wav"$0D
         "world/amb22.wav"$0D"world/amb23.wav"$0D"world/amb24.wav"$0D"world/ba"
         "ttle1.wav"$0D"world/battle2.wav"$0D"world/battle3.wav"$0D"world/batt"
         "le4.wav"$0D"world/battle5.wav"$0D"world/bigpump.wav"$0D"world/bigpum"
         "p2.wav"$0D"world/blackhole.wav"$0D"world/brkglas.wav"$0D"world/bubbl"
         "4.wav"$0D"world/bubl1.wav"$0D"world/bubl2.wav"$0D"world/bubl3.wav"$0D
         "world/comlas1.wav"$0D"world/comp_hum1.wav"$0D"world/comp_hum2.wav"$0D
         "world/comp_hum3.wav"$0D"world/curnt1.wav"$0D"world/curnt2.wav"$0D"wo"
         "rld/curnt3.wav"$0D"world/dataspin.wav"$0D"world/deactivated.wav"$0D"w"
         "orld/dish1.wav"$0D"world/dr_long.wav"$0D"world/dr_short.wav"$0D"worl"
         "d/drill1.wav"$0D"world/drill2a.wav"$0D"world/driller1.wav"$0D"world/"
         "drip_amb.wav"$0D"world/drip1.wav"$0D"world/drip2.wav"$0D"world/drip3"
         ".wav"$0D"world/electro.wav"$0D"world/explod1.wav"$0D"world/explod2.w"
         "av"$0D"world/fan1.wav"$0D"world/flesh1.wav"$0D"world/flesh2.wav"$0D"w"
         "orld/flyby.wav"$0D"world/flyby1.wav"$0D"world/flyby2.wav"$0D"world/f"
         "lyby3.wav"$0D"world/force1.wav"$0D"world/force2.wav"$0D"world/force3"
         ".wav"$0D"world/fusein.wav"$0D"world/fuseout.wav"$0D"world/incoming.w"
         "av"$0D"world/klaxon1.wav"$0D"world/klaxon2.wav"$0D"world/l_hum1.wav"$0D
         "world/l_hum2.wav"$0D"world/land.wav"$0D"world/laser.wav"$0D"world/la"
         "shum1.wav"$0D"world/lasoff1.wav"$0D"world/lava1.wav"$0D"world/lite_o"
         "n1.wav"$0D"world/lite_on2.wav"$0D"world/lite_on3.wav"$0D"world/lite_"
         "out.wav"$0D"world/mach1.wav"$0D"world/mach2.wav"$0D"world/mach3.wav"$0D
         "world/mov_watr.wav"$0D"world/pilot1.wav"$0D"world/pilot2.wav"$0D"wor"
         "ld/pilot3.wav"$0D"world/pump1.wav"$0D"world/pump2.wav"$0D"world/pump"
         "3.wav"$0D"world/pumping.wav"$0D"world/pyramid.wav"$0D"world/quake.wa"
         "v"$0D"world/radio2.wav"$0D"world/radio3.wav"$0D"world/reactor.wav"$0D
         "world/redforce.wav"$0D"world/ric1.wav"$0D"world/ric2.wav"$0D"world/r"
         "ic3.wav"$0D"world/rocks1.wav"$0D"world/scan1.wav"$0D"world/short1.wa"
         "v"$0D"world/spark1.wav"$0D"world/spark2.wav"$0D"world/spark3.wav"$0D
         "world/spark5.wav"$0D"world/spark6.wav"$0D"world/spark7.wav"$0D"world"
         "/steam1.wav"$0D"world/steam2.wav"$0D"world/steam3.wav"$0D"world/stp_"
         "watr.wav"$0D"world/tele1.wav"$0D"world/train1.wav"$0D"world/train2.w"
         "av"$0D"world/turbine1.wav"$0D"world/uplink2.wav"$0D"world/v_bas1.wav"
         $0D"world/v_bas2.wav"$0D"world/v_bas3.wav"$0D"world/v_bas4.wav"$0D"wo"
         "rld/v_bas5.wav"$0D"world/v_bas6.wav"$0D"world/v_cit1.wav"$0D"world/v"
         "_cit2.wav"$0D"world/v_cmd1.wav"$0D"world/v_cmd2.wav"$0D"world/v_fac2"
         ".wav"$0D"world/v_fac3.wav"$0D"world/v_gun1.wav"$0D"world/v_gun2.wav"$0D
         "world/v_war1.wav"$0D"world/ventsys.wav"$0D"world/voice1.wav"$0D"worl"
         "d/voice3.wav"$0D"world/voice4.wav"$0D"world/voice5.wav"$0D"world/voi"
         "ce6.wav"$0D"world/voice7.wav"$0D"world/voice10.wav"$0D"world/voice11"
         ".wav"$0D"world/water1.wav"$0D"world/wind2.wav"$0D"world/x_alarm.wav"$0D
         "world/x_light.wav"$0D"world/xian1.wav"$0D"world/xianbeats.wav"$0D"wo"
         "rld/yelforce.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Func_ Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "doors/dr1_end.wav"$0D"doors/dr1_mid.wav"$0D"doors/dr1.strt.wa"
         "v"$0D"plats/pt1_end.wav"$0D"plats/pt1_mid.wav"$0D"plats/pt1_strt.wav"
         $0D"rotate/h_rot1.wav"$0D"rotate/h_rot2.wav"$0D"switches/butn2.wav"
        Values = "doors/dr1_end.wav"$0D"doors/dr1_mid.wav"$0D"doors/dr1.strt.w"
         "av"$0D"plats/pt1_end.wav"$0D"plats/pt1_mid.wav"$0D"plats/pt1_strt.wa"
         "v"$0D"rotate/h_rot1.wav"$0D"rotate/h_rot2.wav"$0D"switches/butn2.wav"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      noise: =
      {
        Typ = "C"
        Txt = "Player Sounds"
        Hint = "Nunber of sounds = 26"
        Items = "player/burn1.wav"$0D"player/burn2.wav"$0D"player/death4.wav"$0D
         "player/drown1.wav"$0D"player/fall1.wav"$0D"player/fall2.wav"$0D"play"
         "er/fry.wav"$0D"player/gasp1.wav"$0D"player/gasp2.wav"$0D"player/jump"
         "1.wav"$0D"player/land1.wav"$0D"player/lava_in.wav"$0D"player/lava1.w"
         "av"$0D"player/lava2.wav"$0D"player/step1.wav"$0D"player/step2.wav"$0D
         "player/step3.wav"$0D"player/step4.wav"$0D"player/u_breath1.wav"$0D"p"
         "layer/u_breath2.wav"$0D"player/wade1.wav"$0D"player/wade2.wav"$0D"pl"
         "ayer/wade3.wav"$0D"player/watr_in.wav"$0D"player/watr_out.wav"$0D"pl"
         "ayer/watr_un.wav"
        Values = "player/burn1.wav"$0D"player/burn2.wav"$0D"player/death4.wav"$0D
         "player/drown1.wav"$0D"player/fall1.wav"$0D"player/fall2.wav"$0D"play"
         "er/fry.wav"$0D"player/gasp1.wav"$0D"player/gasp2.wav"$0D"player/jump"
         "1.wav"$0D"player/land1.wav"$0D"player/lava_in.wav"$0D"player/lava1.w"
         "av"$0D"player/lava2.wav"$0D"player/step1.wav"$0D"player/step2.wav"$0D
         "player/step3.wav"$0D"player/step4.wav"$0D"player/u_breath1.wav"$0D"p"
         "layer/u_breath2.wav"$0D"player/wade1.wav"$0D"player/wade2.wav"$0D"pl"
         "ayer/wade3.wav"$0D"player/watr_in.wav"$0D"player/watr_out.wav"$0D"pl"
         "ayer/watr_un.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Female Player Sounds"
        Hint = "Nunber of sounds = 18"
        Items = "player/female/death1.wav"$0D"player/female/death2.wav"$0D"pla"
         "yer/female/death3.wav"$0D"player/female/death4.wav"$0D"player/female"
         "/drown.wav"$0D"player/female/fall1.wav"$0D"player/female/fall2.wav"$0D
         "player/female/gurp1.wav"$0D"player/female/gurp2.wav"$0D"player/femal"
         "e/jump1.wav"$0D"player/female/pain25_1.wav"$0D"player/female/pain25_"
         "2.wav"$0D"player/female/pain50_1.wav"$0D"player/female/pain50_2.wav"$0D
         "player/female/pain75_1.wav"$0D"player/female/pain75_2.wav"$0D"player"
         "/female/pain100_1.wav"$0D"player/female/pain100_2.wav"
        Values = "player/female/death1.wav"$0D"player/female/death2.wav"$0D"pl"
         "ayer/female/death3.wav"$0D"player/female/death4.wav"$0D"player/femal"
         "e/drown.wav"$0D"player/female/fall1.wav"$0D"player/female/fall2.wav"$0D
         "player/female/gurp1.wav"$0D"player/female/gurp2.wav"$0D"player/femal"
         "e/jump1.wav"$0D"player/female/pain25_1.wav"$0D"player/female/pain25_"
         "2.wav"$0D"player/female/pain50_1.wav"$0D"player/female/pain50_2.wav"$0D
         "player/female/pain75_1.wav"$0D"player/female/pain75_2.wav"$0D"player"
         "/female/pain100_1.wav"$0D"player/female/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Male Player Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "player/male/bump1.wav"$0D"player/male/death1.wav"$0D"player/m"
         "ale/death2.wav"$0D"player/male/death3.wav"$0D"player/male/death4.wav"
         $0D"player/male/drown1.wav"$0D"player/male/fall1.wav"$0D"player/male/"
         "fall2.wav"$0D"player/male/gurp1.wav"$0D"player/male/gurp2.wav"$0D"pl"
         "ayer/male/jump1.wav"$0D"player/male/pain25_1.wav"$0D"player/male/pai"
         "n25_2.wav"$0D"player/male/pain50_1.wav"$0D"player/male/pain50_2.wav"$0D
         "player/male/pain75_1.wav"$0D"player/male/pain75_2.wav"$0D"player/mal"
         "e/pain100_1.wav"$0D"player/male/pain100_2.wav"
        Values = "player/male/bump1.wav"$0D"player/male/death1.wav"$0D"player/"
         "male/death2.wav"$0D"player/male/death3.wav"$0D"player/male/death4.wa"
         "v"$0D"player/male/drown1.wav"$0D"player/male/fall1.wav"$0D"player/ma"
         "le/fall2.wav"$0D"player/male/gurp1.wav"$0D"player/male/gurp2.wav"$0D
         "player/male/jump1.wav"$0D"player/male/pain25_1.wav"$0D"player/male/p"
         "ain25_2.wav"$0D"player/male/pain50_1.wav"$0D"player/male/pain50_2.wa"
         "v"$0D"player/male/pain75_1.wav"$0D"player/male/pain75_2.wav"$0D"play"
         "er/male/pain100_1.wav"$0D"player/male/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Misc_insane Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "insane/insane1.wav"$0D"insane/insane2.wav"$0D"insane/insane3."
         "wav"$0D"insane/insane4.wav"$0D"insane/insane5.wav"$0D"insane/insane6"
         ".wav"$0D"insane/insane7.wav"$0D"insane/insane8.wav"$0D"insane/insane"
         "9.wav"$0D"insane/insane10.wav"$0D"insane/insane11.wav"
        Values = "insane/insane1.wav"$0D"insane/insane2.wav"$0D"insane/insane3"
         ".wav"$0D"insane/insane4.wav"$0D"insane/insane5.wav"$0D"insane/insane"
         "6.wav"$0D"insane/insane7.wav"$0D"insane/insane8.wav"$0D"insane/insan"
         "e9.wav"$0D"insane/insane10.wav"$0D"insane/insane11.wav"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_berserk Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "berserk/attack.wav"$0D"berserk/berdeth2.wav"$0D"berserk/berid"
         "le1.wav"$0D"berserk/berpain2.wav"$0D"berserk/bersrch1.wav"$0D"berser"
         "k/death.wav"$0D"berserk/idle.wav"$0D"berserk/sight.wav"$0D"berserk/x"
         "fire.wav"
        Values = "berserk/attack.wav"$0D"berserk/berdeth2.wav"$0D"berserk/beri"
         "dle1.wav"$0D"berserk/berpain2.wav"$0D"berserk/bersrch1.wav"$0D"berse"
         "rk/death.wav"$0D"berserk/idle.wav"$0D"berserk/sight.wav"$0D"berserk/"
         "xfire.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_boss1 Sounds"
        Hint = "Nunber of sounds = 7"
        Items = "bosstank/btkdeth1.wav"$0D"bosstank/btkengn1.wav"$0D"bosstank/"
         "btkpain1.wav"$0D"bosstank/btkpain2.wav"$0D"bosstank/btkpain3.wav"$0D
         "bosstank/btkunqv1.wav"$0D"bosstank/btkunqv2.wav"
        Values = "bosstank/btkdeth1.wav"$0D"bosstank/btkengn1.wav"$0D"bosstank"
         "/btkpain1.wav"$0D"bosstank/btkpain2.wav"$0D"bosstank/btkpain3.wav"$0D
         "bosstank/btkunqv1.wav"$0D"bosstank/btkunqv2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_boss2 Sounds"
        Hint = "Nunber of sounds = 6"
        Items = "bosshovr/bhvdeth1.wav"$0D"bosshovr/bhvengn1.wav"$0D"bosshovr/"
         "bhvpain1.wav"$0D"bosshovr/bhvpain2.wav"$0D"bosshovr/bhvpain3.wav"$0D
         "bosshovr/bhvunqv1.wav"
        Values = "bosshovr/bhvdeth1.wav"$0D"bosshovr/bhvengn1.wav"$0D"bosshovr"
         "/bhvpain1.wav"$0D"bosshovr/bhvpain2.wav"$0D"bosshovr/bhvpain3.wav"$0D
         "bosshovr/bhvunqv1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_boss3 Sounds"
        Hint = "Nunber of sounds = 15"
        Items = "boss3/bs3atck1.wav"$0D"boss3/bs3atck2.wav"$0D"boss3/bs3deth1."
         "wav"$0D"boss3/bs3idle1.wav"$0D"boss3/bs3pain1.wav"$0D"boss3/bs3pain2"
         ".wav"$0D"boss3/bs3pain3.wav"$0D"boss3/bsp3srch1.wav"$0D"boss3/bsp3sr"
         "ch2.wav"$0D"boss3/bsp3srch3.wav"$0D"boss3/d_hit.wav"$0D"boss3/step1."
         "wav"$0D"boss3/step2.wav"$0D"boss3/w_loop.wav"$0D"boss3/xfire.wav"
        Values = "boss3/bs3atck1.wav"$0D"boss3/bs3atck2.wav"$0D"boss3/bs3deth1"
         ".wav"$0D"boss3/bs3idle1.wav"$0D"boss3/bs3pain1.wav"$0D"boss3/bs3pain"
         "2.wav"$0D"boss3/bs3pain3.wav"$0D"boss3/bsp3srch1.wav"$0D"boss3/bsp3s"
         "rch2.wav"$0D"boss3/bsp3srch3.wav"$0D"boss3/d_hit.wav"$0D"boss3/step1"
         ".wav"$0D"boss3/step2.wav"$0D"boss3/w_loop.wav"$0D"boss3/xfire.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_brain Sounds"
        Hint = "Nunber of sounds = 14"
        Items = "brain/brnatck1.wav"$0D"brain/brnatck2.wav"$0D"brain/brnatck3."
         "wav"$0D"brain/brndeth1.wav"$0D"brain/brnidle1.wav"$0D"brain/brnidle2"
         ".wav"$0D"brain/brnlens1.wav"$0D"brain/brnpain1.wav"$0D"brain/brnpain"
         "2.wav"$0D"brain/brnsght1.wav"$0D"brain/brnsrch1.wav"$0D"brain/melee1"
         ".wav"$0D"brain/melee2.wav"$0D"brain/melee3.wav"
        Values = "brain/brnatck1.wav"$0D"brain/brnatck2.wav"$0D"brain/brnatck3"
         ".wav"$0D"brain/brndeth1.wav"$0D"brain/brnidle1.wav"$0D"brain/brnidle"
         "2.wav"$0D"brain/brnlens1.wav"$0D"brain/brnpain1.wav"$0D"brain/brnpai"
         "n2.wav"$0D"brain/brnsght1.wav"$0D"brain/brnsrch1.wav"$0D"brain/melee"
         "1.wav"$0D"brain/melee2.wav"$0D"brain/melee3.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_chick Sounds"
        Hint = "Nunber of sounds = 15"
        Items = "chick/chkatck1.wav"$0D"chick/chkatck2.wav"$0D"chick/chkatck3."
         "wav"$0D"chick/chkatck4.wav"$0D"chick/chkatck5.wav"$0D"chick/chkdeth1"
         ".wav"$0D"chick/chkdeth2.wav"$0D"chick/chkfall1.wav"$0D"chick/chkidle"
         "1.wav"$0D"chick/chkidle2.wav"$0D"chick/chkpain1.wav"$0D"chick/chkpai"
         "n2.wav"$0D"chick/chkpain3.wav"$0D"chick/chksght1.wav"$0D"chick/chksr"
         "ch1.wav"
        Values = "chick/chkatck1.wav"$0D"chick/chkatck2.wav"$0D"chick/chkatck3"
         ".wav"$0D"chick/chkatck4.wav"$0D"chick/chkatck5.wav"$0D"chick/chkdeth"
         "1.wav"$0D"chick/chkdeth2.wav"$0D"chick/chkfall1.wav"$0D"chick/chkidl"
         "e1.wav"$0D"chick/chkidle2.wav"$0D"chick/chkpain1.wav"$0D"chick/chkpa"
         "in2.wav"$0D"chick/chkpain3.wav"$0D"chick/chksght1.wav"$0D"chick/chks"
         "rch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_flipper Sounds"
        Hint = "Nunber of sounds = 8"
        Items = "flipper/flpatck1.wav"$0D"flipper/flpatck2.wav"$0D"flipper/flp"
         "deth1.wav"$0D"flipper/flpidle1.wav"$0D"flipper/flppain1.wav"$0D"flip"
         "per/flppain2.wav"$0D"flipper/flpsght1.wav"$0D"flipper/flpsrch1.wav"
        Values = "flipper/flpatck1.wav"$0D"flipper/flpatck2.wav"$0D"flipper/fl"
         "pdeth1.wav"$0D"flipper/flpidle1.wav"$0D"flipper/flppain1.wav"$0D"fli"
         "pper/flppain2.wav"$0D"flipper/flpsght1.wav"$0D"flipper/flpsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_floater Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "floater/fltatck1.wav"$0D"floater/fltatck2.wav"$0D"floater/flt"
         "atck3.wav"$0D"floater/fltdeth1.wav"$0D"floater/fltidle1.wav"$0D"floa"
         "ter/fltpain1.wav"$0D"floater/fltpain2.wav"$0D"floater/fltsght1.wav"$0D
         "floater/fltsrch1.wav"
        Values = "floater/fltatck1.wav"$0D"floater/fltatck2.wav"$0D"floater/fl"
         "tatck3.wav"$0D"floater/fltdeth1.wav"$0D"floater/fltidle1.wav"$0D"flo"
         "ater/fltpain1.wav"$0D"floater/fltpain2.wav"$0D"floater/fltsght1.wav"$0D
         "floater/fltsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_flyer Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "flyer/flyatck1.wav"$0D"flyer/flyatck2.wav"$0D"flyer/flyatck3."
         "wav"$0D"flyer/flydeth1.wav"$0D"flyer/flyidle1.wav"$0D"flyer/flypain1"
         ".wav"$0D"flyer/flypain2.wav"$0D"flyer/flysght1.wav"$0D"flyer/flysrch"
         "1.wav"
        Values = "flyer/flyatck1.wav"$0D"flyer/flyatck2.wav"$0D"flyer/flyatck3"
         ".wav"$0D"flyer/flydeth1.wav"$0D"flyer/flyidle1.wav"$0D"flyer/flypain"
         "1.wav"$0D"flyer/flypain2.wav"$0D"flyer/flysght1.wav"$0D"flyer/flysrc"
         "h1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_gladiator Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "gladiator/death.wav"$0D"gladiator/glddeth2.wav"$0D"gladiator/"
         "gldidle1.wav"$0D"gladiator/gldpain2.wav"$0D"gladiator/gldsrch1.wav"$0D
         "gladiator/melee1.wav"$0D"gladiator/melee2.wav"$0D"gladiator/melee3.w"
         "av"$0D"gladiator/pain.wav"$0D"gladiator/railgun.wav"$0D"gladiator/si"
         "ght.wav"
        Values = "gladiator/death.wav"$0D"gladiator/glddeth2.wav"$0D"gladiator"
         "/gldidle1.wav"$0D"gladiator/gldpain2.wav"$0D"gladiator/gldsrch1.wav"$0D
         "gladiator/melee1.wav"$0D"gladiator/melee2.wav"$0D"gladiator/melee3.w"
         "av"$0D"gladiator/pain.wav"$0D"gladiator/railgun.wav"$0D"gladiator/si"
         "ght.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_gunner Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "gunner/death1.wav"$0D"gunner/gunatck1.wav"$0D"gunner/gunatck2"
         ".wav"$0D"gunner/gunatck3.wav"$0D"gunner/gunidle1.wav"$0D"gunner/gunp"
         "ain1.wav"$0D"gunner/gunpain2.wav"$0D"gunner/gunsrch1.wav"$0D"gunner/"
         "sight1.wav"
        Values = "gunner/death1.wav"$0D"gunner/gunatck1.wav"$0D"gunner/gunatck"
         "2.wav"$0D"gunner/gunatck3.wav"$0D"gunner/gunidle1.wav"$0D"gunner/gun"
         "pain1.wav"$0D"gunner/gunpain2.wav"$0D"gunner/gunsrch1.wav"$0D"gunner"
         "/sight1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_hover Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "hover/hovatck1.wav"$0D"hover/hovdeth1.wav"$0D"hover/hovdeth2."
         "wav"$0D"hover/hovidle1.wav"$0D"hover/hovpain1.wav"$0D"hover/hovpain2"
         ".wav"$0D"hover/hovsght1.wav"$0D"hover/hovsrch1.wav"$0D"hover/hovsrch"
         "2.wav"
        Values = "hover/hovatck1.wav"$0D"hover/hovdeth1.wav"$0D"hover/hovdeth2"
         ".wav"$0D"hover/hovidle1.wav"$0D"hover/hovpain1.wav"$0D"hover/hovpain"
         "2.wav"$0D"hover/hovsght1.wav"$0D"hover/hovsrch1.wav"$0D"hover/hovsrc"
         "h2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_infantry Sounds"
        Hint = "Nunber of sounds = 12"
        Items = "infantry/infatck1.wav"$0D"infantry/infatck2.wav"$0D"infantry/"
         "infatck3.wav"$0D"infantry/infdeth1.wav"$0D"infantry/infdeth2.wav"$0D
         "infantry/infidle1.wav"$0D"infantry/inflies1.wav"$0D"infantry/infpain"
         "1.wav"$0D"infantry/infpain2.wav"$0D"infantry/infsght1.wav"$0D"infant"
         "ry/infsrch1.wav"$0D"infantry/melee2.wav"
        Values = "infantry/infatck1.wav"$0D"infantry/infatck2.wav"$0D"infantry"
         "/infatck3.wav"$0D"infantry/infdeth1.wav"$0D"infantry/infdeth2.wav"$0D
         "infantry/infidle1.wav"$0D"infantry/inflies1.wav"$0D"infantry/infpain"
         "1.wav"$0D"infantry/infpain2.wav"$0D"infantry/infsght1.wav"$0D"infant"
         "ry/infsrch1.wav"$0D"infantry/melee2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_makron Sounds"
        Hint = "Nunber of sounds = 27"
        Items = "makron/bfg_fire.wav"$0D"makron/bfg_hum.wav"$0D"makron/bhit.wa"
         "v"$0D"makron/blaster.wav"$0D"makron/brain1.wav"$0D"makron/death.wav"$0D
         "makron/head1.wav"$0D"makron/head2.wav"$0D"makron/laf1.wav"$0D"makron"
         "/laf2.wav"$0D"makron/laf3.wav"$0D"makron/laf4.wav"$0D"makron/pain1.w"
         "av"$0D"makron/pain2.wav"$0D"makron/pain3.wav"$0D"makron/popup.wav"$0D
         "makron/rail_up.wav"$0D"makron/roar1.wav"$0D"makron/roar2.wav"$0D"mak"
         "ron/spine.wav"$0D"makron/step1.wav"$0D"makron/step2.wav"$0D"makron/v"
         "oice.wav"$0D"makron/voice1.wav"$0D"makron/voice2.wav"$0D"makron/voic"
         "e3.wav"$0D"makron/voice4.wav"
        Values = "makron/bfg_fire.wav"$0D"makron/bfg_hum.wav"$0D"makron/bhit.w"
         "av"$0D"makron/blaster.wav"$0D"makron/brain1.wav"$0D"makron/death.wav"
         $0D"makron/head1.wav"$0D"makron/head2.wav"$0D"makron/laf1.wav"$0D"mak"
         "ron/laf2.wav"$0D"makron/laf3.wav"$0D"makron/laf4.wav"$0D"makron/pain"
         "1.wav"$0D"makron/pain2.wav"$0D"makron/pain3.wav"$0D"makron/popup.wav"
         $0D"makron/rail_up.wav"$0D"makron/roar1.wav"$0D"makron/roar2.wav"$0D"m"
         "akron/spine.wav"$0D"makron/step1.wav"$0D"makron/step2.wav"$0D"makron"
         "/voice.wav"$0D"makron/voice1.wav"$0D"makron/voice2.wav"$0D"makron/vo"
         "ice3.wav"$0D"makron/voice4.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_medic Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "medic/idle.wav"$0D"medic/medatck1.wav"$0D"medic/medatck2.wav"$0D
         "medic/medatck3.wav"$0D"medic/medatck4.wav"$0D"medic/medatck5.wav"$0D
         "medic/meddeth1.wav"$0D"medic/medpain1.wav"$0D"medic/medpain2.wav"$0D
         "medic/medsght1.wav"$0D"medic/medsrch1.wav"
        Values = "medic/idle.wav"$0D"medic/medatck1.wav"$0D"medic/medatck2.wav"
         $0D"medic/medatck3.wav"$0D"medic/medatck4.wav"$0D"medic/medatck5.wav"$0D
         "medic/meddeth1.wav"$0D"medic/medpain1.wav"$0D"medic/medpain2.wav"$0D
         "medic/medsght1.wav"$0D"medic/medsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_mutant Sounds"
        Hint = "Nunber of sounds = 13"
        Items = "mutant/mutatck1.wav"$0D"mutant/mutatck2.wav"$0D"mutant/mutatc"
         "k3.wav"$0D"mutant/mutdeth1.wav"$0D"mutant/mutidle1.wav"$0D"mutant/mu"
         "tpain1.wav"$0D"mutant/mutpain2.wav"$0D"mutant/mutsght1.wav"$0D"mutan"
         "t/mutsrch1.wav"$0D"mutant/step1.wav"$0D"mutant/step2.wav"$0D"mutant/"
         "step3.wav"$0D"mutant/thud1.wav"
        Values = "mutant/mutatck1.wav"$0D"mutant/mutatck2.wav"$0D"mutant/mutat"
         "ck3.wav"$0D"mutant/mutdeth1.wav"$0D"mutant/mutidle1.wav"$0D"mutant/m"
         "utpain1.wav"$0D"mutant/mutpain2.wav"$0D"mutant/mutsght1.wav"$0D"muta"
         "nt/mutsrch1.wav"$0D"mutant/step1.wav"$0D"mutant/step2.wav"$0D"mutant"
         "/step3.wav"$0D"mutant/thud1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_parasite Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "parasite/paratck1.wav"$0D"parasite/paratck2.wav"$0D"parasite/"
         "paratck3.wav"$0D"parasite/paratck4.wav"$0D"parasite/pardeth1.wav"$0D
         "parasite/paridle1.wav"$0D"parasite/paridle2.wav"$0D"parasite/parpain"
         "1.wav"$0D"parasite/parpain2.wav"$0D"parasite/parsght1.wav"$0D"parasi"
         "te/parsrch1.wav"
        Values = "parasite/paratck1.wav"$0D"parasite/paratck2.wav"$0D"parasite"
         "/paratck3.wav"$0D"parasite/paratck4.wav"$0D"parasite/pardeth1.wav"$0D
         "parasite/paridle1.wav"$0D"parasite/paridle2.wav"$0D"parasite/parpain"
         "1.wav"$0D"parasite/parpain2.wav"$0D"parasite/parsght1.wav"$0D"parasi"
         "te/parsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_soldier Sounds"
        Hint = "Nunber of sounds = 12"
        Items = "soldier/solatck1.wav"$0D"soldier/solatck2.wav"$0D"soldier/sol"
         "atck3.wav"$0D"soldier/soldeth1.wav"$0D"soldier/soldeth2.wav"$0D"sold"
         "ier/soldeth3.wav"$0D"soldier/solidle1.wav"$0D"soldier/solpain1.wav"$0D
         "soldier/solpain2.wav"$0D"soldier/solpain3.wav"$0D"soldier/solsght1.w"
         "av"$0D"soldier/solsrch1.wav"
        Values = "soldier/solatck1.wav"$0D"soldier/solatck2.wav"$0D"soldier/so"
         "latck3.wav"$0D"soldier/soldeth1.wav"$0D"soldier/soldeth2.wav"$0D"sol"
         "dier/soldeth3.wav"$0D"soldier/solidle1.wav"$0D"soldier/solpain1.wav"$0D
         "soldier/solpain2.wav"$0D"soldier/solpain3.wav"$0D"soldier/solsght1.w"
         "av"$0D"soldier/solsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_tank Sounds"
        Hint = "Nunber of sounds = 18"
        Items = "tank/death.wav"$0D"tank/pain.wav"$0D"tank/rocket.wav"$0D"tank"
         "/sight1.wav"$0D"tank/step.wav"$0D"tank/thud.wav"$0D"tank/tnkatck1.wa"
         "v"$0D"tank/tnkatck3.wav"$0D"tank/tnkatck4.wav"$0D"tank/tnkatck5.wav"$0D
         "tank/tnkatk2a.wav"$0D"tank/tnkatk2b.wav"$0D"tank/tnkatk2c.wav"$0D"ta"
         "nk/tnkatk2d.wav"$0D"tank/tnkatk2e.wav"$0D"tank/tnkdeth2.wav"$0D"tank"
         "/tnkidle1.wav"$0D"tank/tnkpain2.wav"
        Values = "tank/death.wav"$0D"tank/pain.wav"$0D"tank/rocket.wav"$0D"tan"
         "k/sight1.wav"$0D"tank/step.wav"$0D"tank/thud.wav"$0D"tank/tnkatck1.w"
         "av"$0D"tank/tnkatck3.wav"$0D"tank/tnkatck4.wav"$0D"tank/tnkatck5.wav"
         $0D"tank/tnkatk2a.wav"$0D"tank/tnkatk2b.wav"$0D"tank/tnkatk2c.wav"$0D
         "tank/tnkatk2d.wav"$0D"tank/tnkatk2e.wav"$0D"tank/tnkdeth2.wav"$0D"ta"
         "nk/tnkidle1.wav"$0D"tank/tnkpain2.wav"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "Lazarus Sounds"
        Typ = "S"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Player Sounds"
        Hint = "Nunber of sounds = 48"
        Items = "player/pl_carpet1.wav"$0D"player/pl_carpet2.wav"$0D"player/pl"
         "_carpet3.wav"$0D"player/pl_carpet4.wav"$0D"player/pl_dirt1.wav"$0D"p"
         "layer/pl_dirt2.wav"$0D"player/pl_dirt3.wav"$0D"player/pl_dirt4.wav"$0D
         "player/pl_duct1.wav"$0D"player/pl_duct2.wav"$0D"player/pl_duct3.wav"$0D
         "player/pl_duct4.wav"$0D"player/pl_force1.wav"$0D"player/pl_force2.wa"
         "v"$0D"player/pl_force3.wav"$0D"player/pl_force4.wav"$0D"player/pl_gr"
         "ass1.wav"$0D"player/pl_grass2.wav"$0D"player/pl_grass3.wav"$0D"playe"
         "r/pl_grass4.wav"$0D"player/pl_grate1.wav"$0D"player/pl_grate2.wav"$0D
         "player/pl_grate3.wav"$0D"player/pl_grate4.wav"$0D"player/pl_ladder1."
         "wav"$0D"player/pl_ladder2.wav"$0D"player/pl_ladder3.wav"$0D"player/p"
         "l_ladder4.wav"$0D"player/pl_metal1.wav"$0D"player/pl_metal2.wav"$0D"p"
         "layer/pl_metal3.wav"$0D"player/pl_metal4.wav"$0D"player/pl_slosh1.wa"
         "v"$0D"player/pl_slosh2.wav"$0D"player/pl_slosh3.wav"$0D"player/pl_sl"
         "osh4.wav"$0D"player/pl_snow1.wav"$0D"player/pl_snow2.wav"$0D"player/"
         "pl_snow3.wav"$0D"player/pl_snow4.wav"$0D"player/pl_tile1.wav"$0D"pla"
         "yer/pl_tile2.wav"$0D"player/pl_tile3.wav"$0D"player/pl_tile4.wav"$0D
         "player/pl_wade1.wav"$0D"player/pl_wade2.wav"$0D"player/pl_wade3.wav"$0D
         "player/pl_wade4.wav"
        Values = "player/pl_carpet1.wav"$0D"player/pl_carpet2.wav"$0D"player/p"
         "l_carpet3.wav"$0D"player/pl_carpet4.wav"$0D"player/pl_dirt1.wav"$0D"p"
         "layer/pl_dirt2.wav"$0D"player/pl_dirt3.wav"$0D"player/pl_dirt4.wav"$0D
         "player/pl_duct1.wav"$0D"player/pl_duct2.wav"$0D"player/pl_duct3.wav"$0D
         "player/pl_duct4.wav"$0D"player/pl_force1.wav"$0D"player/pl_force2.wa"
         "v"$0D"player/pl_force3.wav"$0D"player/pl_force4.wav"$0D"player/pl_gr"
         "ass1.wav"$0D"player/pl_grass2.wav"$0D"player/pl_grass3.wav"$0D"playe"
         "r/pl_grass4.wav"$0D"player/pl_grate1.wav"$0D"player/pl_grate2.wav"$0D
         "player/pl_grate3.wav"$0D"player/pl_grate4.wav"$0D"player/pl_ladder1."
         "wav"$0D"player/pl_ladder2.wav"$0D"player/pl_ladder3.wav"$0D"player/p"
         "l_ladder4.wav"$0D"player/pl_metal1.wav"$0D"player/pl_metal2.wav"$0D"p"
         "layer/pl_metal3.wav"$0D"player/pl_metal4.wav"$0D"player/pl_slosh1.wa"
         "v"$0D"player/pl_slosh2.wav"$0D"player/pl_slosh3.wav"$0D"player/pl_sl"
         "osh4.wav"$0D"player/pl_snow1.wav"$0D"player/pl_snow2.wav"$0D"player/"
         "pl_snow3.wav"$0D"player/pl_snow4.wav"$0D"player/pl_tile1.wav"$0D"pla"
         "yer/pl_tile2.wav"$0D"player/pl_tile3.wav"$0D"player/pl_tile4.wav"$0D
         "player/pl_wade1.wav"$0D"player/pl_wade2.wav"$0D"player/pl_wade3.wav"$0D
         "player/pl_wade4.wav"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor Alien Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "players/alien/bump1.wav"$0D"players/alien/death1.wav"$0D"play"
         "ers/alien/death2.wav"$0D"players/alien/death3.wav"$0D"players/alien/"
         "death4.wav"$0D"players/alien/drown1.wav"$0D"players/alien/fall1.wav"$0D
         "players/alien/fall2.wav"$0D"players/alien/gurp1.wav"$0D"players/alie"
         "n/gurp2.wav"$0D"players/alien/jump1.wav"$0D"players/alien/pain25_1.w"
         "av"$0D"players/alien/pain25_2.wav"$0D"players/alien/pain50_1.wav"$0D
         "players/alien/pain50_2.wav"$0D"players/alien/pain75_1.wav"$0D"player"
         "s/alien/pain75_2.wav"$0D"players/alien/pain100_1.wav"$0D"players/ali"
         "en/pain100_2.wav"
        Values = "../players/alien/bump1.wav"$0D"../players/alien/death1.wav"$0D
         "../players/alien/death2.wav"$0D"../players/alien/death3.wav"$0D"../p"
         "layers/alien/death4.wav"$0D"../players/alien/drown1.wav"$0D"../playe"
         "rs/alien/fall1.wav"$0D"../players/alien/fall2.wav"$0D"../players/ali"
         "en/gurp1.wav"$0D"../players/alien/gurp2.wav"$0D"../players/alien/jum"
         "p1.wav"$0D"../players/alien/pain25_1.wav"$0D"../players/alien/pain25"
         "_2.wav"$0D"../players/alien/pain50_1.wav"$0D"../players/alien/pain50"
         "_2.wav"$0D"../players/alien/pain75_1.wav"$0D"../players/alien/pain75"
         "_2.wav"$0D"../players/alien/pain100_1.wav"$0D"../players/alien/pain1"
         "00_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor Hunter Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "players/hunter/bump1.wav"$0D"players/hunter/death1.wav"$0D"pl"
         "ayers/hunter/death2.wav"$0D"players/hunter/death3.wav"$0D"players/hu"
         "nter/death4.wav"$0D"players/hunter/drown1.wav"$0D"players/hunter/fal"
         "l1.wav"$0D"players/hunter/fall2.wav"$0D"players/hunter/gurp1.wav"$0D
         "players/hunter/gurp2.wav"$0D"players/hunter/jump1.wav"$0D"players/hu"
         "nter/pain25_1.wav"$0D"players/hunter/pain25_2.wav"$0D"players/hunter"
         "/pain50_1.wav"$0D"players/hunter/pain50_2.wav"$0D"players/hunter/pai"
         "n75_1.wav"$0D"players/hunter/pain75_2.wav"$0D"players/hunter/pain100"
         "_1.wav"$0D"players/hunter/pain100_2.wav"
        Values = "../players/hunter/bump1.wav"$0D"../players/hunter/death1.wav"
         $0D"../players/hunter/death2.wav"$0D"../players/hunter/death3.wav"$0D
         "../players/hunter/death4.wav"$0D"../players/hunter/drown1.wav"$0D".."
         "/players/hunter/fall1.wav"$0D"../players/hunter/fall2.wav"$0D"../pla"
         "yers/hunter/gurp1.wav"$0D"../players/hunter/gurp2.wav"$0D"../players"
         "/hunter/jump1.wav"$0D"../players/hunter/pain25_1.wav"$0D"../players/"
         "hunter/pain25_2.wav"$0D"../players/hunter/pain50_1.wav"$0D"../player"
         "s/hunter/pain50_2.wav"$0D"../players/hunter/pain75_1.wav"$0D"../play"
         "ers/hunter/pain75_2.wav"$0D"../players/hunter/pain100_1.wav"$0D"../p"
         "layers/hunter/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor Paranoid Marine Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "players/marine/bump1.wav"$0D"players/marine/death1.wav"$0D"pl"
         "ayers/marine/death2.wav"$0D"players/marine/death3.wav"$0D"players/ma"
         "rine/death4.wav"$0D"players/marine/drown1.wav"$0D"players/marine/fal"
         "l1.wav"$0D"players/marine/fall2.wav"$0D"players/marine/gurp1.wav"$0D
         "players/marine/gurp2.wav"$0D"players/marine/jump1.wav"$0D"players/ma"
         "rine/pain25_1.wav"$0D"players/marine/pain25_2.wav"$0D"players/marine"
         "/pain50_1.wav"$0D"players/marine/pain50_2.wav"$0D"players/marine/pai"
         "n75_1.wav"$0D"players/marine/pain75_2.wav"$0D"players/marine/pain100"
         "_1.wav"$0D"players/marine/pain100_2.wav"
        Values = "../players/marine/bump1.wav"$0D"../players/marine/death1.wav"
         $0D"../players/marine/death2.wav"$0D"../players/marine/death3.wav"$0D
         "../players/marine/death4.wav"$0D"../players/marine/drown1.wav"$0D".."
         "/players/marine/fall1.wav"$0D"../players/marine/fall2.wav"$0D"../pla"
         "yers/marine/gurp1.wav"$0D"../players/marine/gurp2.wav"$0D"../players"
         "/marine/jump1.wav"$0D"../players/marine/pain25_1.wav"$0D"../players/"
         "marine/pain25_2.wav"$0D"../players/marine/pain50_1.wav"$0D"../player"
         "s/marine/pain50_2.wav"$0D"../players/marine/pain75_1.wav"$0D"../play"
         "ers/marine/pain75_2.wav"$0D"../players/marine/pain100_1.wav"$0D"../p"
         "layers/marine/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor Ratamahatta Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "players/ratamahatta/bump1.wav"$0D"players/ratamahatta/death1."
         "wav"$0D"players/ratamahatta/death2.wav"$0D"players/ratamahatta/death"
         "3.wav"$0D"players/ratamahatta/death4.wav"$0D"players/ratamahatta/dro"
         "wn1.wav"$0D"players/ratamahatta/fall1.wav"$0D"players/ratamahatta/fa"
         "ll2.wav"$0D"players/ratamahatta/gurp1.wav"$0D"players/ratamahatta/gu"
         "rp2.wav"$0D"players/ratamahatta/jump1.wav"$0D"players/ratamahatta/pa"
         "in25_1.wav"$0D"players/ratamahatta/pain25_2.wav"$0D"players/ratamaha"
         "tta/pain50_1.wav"$0D"players/ratamahatta/pain50_2.wav"$0D"players/ra"
         "tamahatta/pain75_1.wav"$0D"players/ratamahatta/pain75_2.wav"$0D"play"
         "ers/ratamahatta/pain100_1.wav"$0D"players/ratamahatta/pain100_2.wav"
        Values = "../players/ratamahatta/bump1.wav"$0D"../players/ratamahatta/"
         "death1.wav"$0D"../players/ratamahatta/death2.wav"$0D"../players/rata"
         "mahatta/death3.wav"$0D"../players/ratamahatta/death4.wav"$0D"../play"
         "ers/ratamahatta/drown1.wav"$0D"../players/ratamahatta/fall1.wav"$0D"."
         "./players/ratamahatta/fall2.wav"$0D"../players/ratamahatta/gurp1.wav"
         $0D"../players/ratamahatta/gurp2.wav"$0D"../players/ratamahatta/jump1"
         ".wav"$0D"../players/ratamahatta/pain25_1.wav"$0D"../players/ratamaha"
         "tta/pain25_2.wav"$0D"../players/ratamahatta/pain50_1.wav"$0D"../play"
         "ers/ratamahatta/pain50_2.wav"$0D"../players/ratamahatta/pain75_1.wav"
         $0D"../players/ratamahatta/pain75_2.wav"$0D"../players/ratamahatta/pa"
         "in100_1.wav"$0D"../players/ratamahatta/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor Rhino Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "players/rhino/bump1.wav"$0D"players/rhino/death1.wav"$0D"play"
         "ers/rhino/death2.wav"$0D"players/rhino/death3.wav"$0D"players/rhino/"
         "death4.wav"$0D"players/rhino/drown1.wav"$0D"players/rhino/fall1.wav"$0D
         "players/rhino/fall2.wav"$0D"players/rhino/gurp1.wav"$0D"players/rhin"
         "o/gurp2.wav"$0D"players/rhino/jump1.wav"$0D"players/rhino/pain25_1.w"
         "av"$0D"players/rhino/pain25_2.wav"$0D"players/rhino/pain50_1.wav"$0D
         "players/rhino/pain50_2.wav"$0D"players/rhino/pain75_1.wav"$0D"player"
         "s/rhino/pain75_2.wav"$0D"players/rhino/pain100_1.wav"$0D"players/rhi"
         "no/pain100_2.wav"
        Values = "../players/rhino/bump1.wav"$0D"../players/rhino/death1.wav"$0D
         "../players/rhino/death2.wav"$0D"../players/rhino/death3.wav"$0D"../p"
         "layers/rhino/death4.wav"$0D"../players/rhino/drown1.wav"$0D"../playe"
         "rs/rhino/fall1.wav"$0D"../players/rhino/fall2.wav"$0D"../players/rhi"
         "no/gurp1.wav"$0D"../players/rhino/gurp2.wav"$0D"../players/rhino/jum"
         "p1.wav"$0D"../players/rhino/pain25_1.wav"$0D"../players/rhino/pain25"
         "_2.wav"$0D"../players/rhino/pain50_1.wav"$0D"../players/rhino/pain50"
         "_2.wav"$0D"../players/rhino/pain75_1.wav"$0D"../players/rhino/pain75"
         "_2.wav"$0D"../players/rhino/pain100_1.wav"$0D"../players/rhino/pain1"
         "00_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor SAS Sounds"
        Hint = "Nunber of sounds = 0"
        Items = ""
        Values = ""
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor Slith Sounds"
        Hint = "Nunber of sounds = 20"
        Items = "players/slith/bump1.wav"$0D"players/slith/death1.wav"$0D"play"
         "ers/slith/death2.wav"$0D"players/slith/death3.wav"$0D"players/slith/"
         "death4.wav"$0D"players/slith/drown1.wav"$0D"players/slith/fall1.wav"$0D
         "players/slith/fall2.wav"$0D"players/slith/gurp1.wav"$0D"players/slit"
         "h/gurp2.wav"$0D"players/slith/jump.wav"$0D"players/slith/jump1.wav"$0D
         "players/slith/pain25_1.wav"$0D"players/slith/pain25_2.wav"$0D"player"
         "s/slith/pain50_1.wav"$0D"players/slith/pain50_2.wav"$0D"players/slit"
         "h/pain75_1.wav"$0D"players/slith/pain75_2.wav"$0D"players/slith/pain"
         "100_1.wav"$0D"players/slith/pain100_2.wav"
        Values = "../players/slith/bump1.wav"$0D"../players/slith/death1.wav"$0D
         "../players/slith/death2.wav"$0D"../players/slith/death3.wav"$0D"../p"
         "layers/slith/death4.wav"$0D"../players/slith/drown1.wav"$0D"../playe"
         "rs/slith/fall1.wav"$0D"../players/slith/fall2.wav"$0D"../players/sli"
         "th/gurp1.wav"$0D"../players/slith/gurp2.wav"$0D"../players/slith/jum"
         "p.wav"$0D"../players/slith/jump1.wav"$0D"../players/slith/pain25_1.w"
         "av"$0D"../players/slith/pain25_2.wav"$0D"../players/slith/pain50_1.w"
         "av"$0D"../players/slith/pain50_2.wav"$0D"../players/slith/pain75_1.w"
         "av"$0D"../players/slith/pain75_2.wav"$0D"../players/slith/pain100_1."
         "wav"$0D"../players/slith/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor Terran Marine Sounds"
        Hint = "Nunber of sounds = 0"
        Items = ""
        Values = ""
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor Walker Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "players/walker/bump1.wav"$0D"players/walker/death1.wav"$0D"pl"
         "ayers/walker/death2.wav"$0D"players/walker/death3.wav"$0D"players/wa"
         "lker/death4.wav"$0D"players/walker/drown1.wav"$0D"players/walker/fal"
         "l1.wav"$0D"players/walker/fall2.wav"$0D"players/walker/gurp1.wav"$0D
         "players/walker/gurp2.wav"$0D"players/walker/jump1.wav"$0D"players/wa"
         "lker/pain25_1.wav"$0D"players/walker/pain25_2.wav"$0D"players/walker"
         "/pain50_1.wav"$0D"players/walker/pain50_2.wav"$0D"players/walker/pai"
         "n75_1.wav"$0D"players/walker/pain75_2.wav"$0D"players/walker/pain100"
         "_1.wav"$0D"players/walker/pain100_2.wav"
        Values = "../players/walker/bump1.wav"$0D"../players/walker/death1.wav"
         $0D"../players/walker/death2.wav"$0D"../players/walker/death3.wav"$0D
         "../players/walker/death4.wav"$0D"../players/walker/drown1.wav"$0D".."
         "/players/walker/fall1.wav"$0D"../players/walker/fall2.wav"$0D"../pla"
         "yers/walker/gurp1.wav"$0D"../players/walker/gurp2.wav"$0D"../players"
         "/walker/jump1.wav"$0D"../players/walker/pain25_1.wav"$0D"../players/"
         "walker/pain25_2.wav"$0D"../players/walker/pain50_1.wav"$0D"../player"
         "s/walker/pain50_2.wav"$0D"../players/walker/pain75_1.wav"$0D"../play"
         "ers/walker/pain75_2.wav"$0D"../players/walker/pain100_1.wav"$0D"../p"
         "layers/walker/pain100_2.wav"
      }
      noise: =
      {
        typ = "C"
        txt = "Actor Waste Sounds"
        Hint = "Nunber of sounds = 19"
        items = "players/waste/bump1.wav <-"$0D"players/waste/death1.wav <-"$0D
         "players/waste/death2.wav <-"$0D"players/waste/death3.wav <-"$0D"play"
         "ers/waste/death4.wav <-"$0D"players/waste/drown1.wav <-"$0D"players/"
         "waste/fall1.wav <-"$0D"players/waste/fall2.wav <-"$0D"players/waste/"
         "gurp1.wav <-"$0D"players/waste/gurp2.wav <-"$0D"players/waste/jump1."
         "wav <-"$0D"players/waste/pain25_1.wav <-"$0D"players/waste/pain25_2."
         "wav <-"$0D"players/waste/pain50_1.wav <-"$0D"players/waste/pain50_2."
         "wav <-"$0D"players/waste/pain75_1.wav <-"$0D"players/waste/pain75_2."
         "wav <-"$0D"players/waste/pain100_1.wav <-"$0D"players/waste/pain100_"
         "2.wav <-"
        values = "../players/waste/bump1.wav"$0D"../players/waste/death1.wav"$0D
         "../players/waste/death2.wav"$0D"../players/waste/death3.wav"$0D"../p"
         "layers/waste/death4.wav"$0D"../players/waste/drown1.wav"$0D"../playe"
         "rs/waste/fall1.wav"$0D"../players/waste/fall2.wav"$0D"../players/was"
         "te/gurp1.wav"$0D"../players/waste/gurp2.wav"$0D"../players/waste/jum"
         "p1.wav"$0D"../players/waste/pain25_1.wav"$0D"../players/waste/pain25"
         "_2.wav"$0D"../players/waste/pain50_1.wav"$0D"../players/waste/pain50"
         "_2.wav"$0D"../players/waste/pain75_1.wav"$0D"../players/waste/pain75"
         "_2.wav"$0D"../players/waste/pain100_1.wav"$0D"../players/waste/pain1"
         "00_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor Xenoid Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "players/xenoid/bump1.wav"$0D"players/xenoid/death1.wav"$0D"pl"
         "ayers/xenoid/death2.wav"$0D"players/xenoid/death3.wav"$0D"players/xe"
         "noid/death4.wav"$0D"players/xenoid/drown1.wav"$0D"players/xenoid/fal"
         "l1.wav"$0D"players/xenoid/fall2.wav"$0D"players/xenoid/gurp1.wav"$0D
         "players/xenoid/gurp2.wav"$0D"players/xenoid/jump1.wav"$0D"players/xe"
         "noid/pain25_1.wav"$0D"players/xenoid/pain25_2.wav"$0D"players/xenoid"
         "/pain50_1.wav"$0D"players/xenoid/pain50_2.wav"$0D"players/xenoid/pai"
         "n75_1.wav"$0D"players/xenoid/pain75_2.wav"$0D"players/xenoid/pain100"
         "_1.wav"$0D"players/xenoid/pain100_2.wav"
        Values = "../players/xenoid/bump1.wav"$0D"../players/xenoid/death1.wav"
         $0D"../players/xenoid/death2.wav"$0D"../players/xenoid/death3.wav"$0D
         "../players/xenoid/death4.wav"$0D"../players/xenoid/drown1.wav"$0D".."
         "/players/xenoid/fall1.wav"$0D"../players/xenoid/fall2.wav"$0D"../pla"
         "yers/xenoid/gurp1.wav"$0D"../players/xenoid/gurp2.wav"$0D"../players"
         "/xenoid/jump1.wav"$0D"../players/xenoid/pain25_1.wav"$0D"../players/"
         "xenoid/pain25_2.wav"$0D"../players/xenoid/pain50_1.wav"$0D"../player"
         "s/xenoid/pain50_2.wav"$0D"../players/xenoid/pain75_1.wav"$0D"../play"
         "ers/xenoid/pain75_2.wav"$0D"../players/xenoid/pain100_1.wav"$0D"../p"
         "layers/xenoid/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Actor Zumlin Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "players/zumlin/bump1.wav"$0D"players/zumlin/death1.wav"$0D"pl"
         "ayers/zumlin/death2.wav"$0D"players/zumlin/death3.wav"$0D"players/zu"
         "mlin/death4.wav"$0D"players/zumlin/drown1.wav"$0D"players/zumlin/fal"
         "l1.wav"$0D"players/zumlin/fall2.wav"$0D"players/zumlin/gurp1.wav"$0D
         "players/zumlin/gurp2.wav"$0D"players/zumlin/jump1.wav"$0D"players/zu"
         "mlin/pain25_1.wav"$0D"players/zumlin/pain25_2.wav"$0D"players/zumlin"
         "/pain50_1.wav"$0D"players/zumlin/pain50_2.wav"$0D"players/zumlin/pai"
         "n75_1.wav"$0D"players/zumlin/pain75_2.wav"$0D"players/zumlin/pain100"
         "_1.wav"$0D"players/zumlin/pain100_2.wav"
        Values = "../players/zumlin/bump1.wav"$0D"../players/zumlin/death1.wav"
         $0D"../players/zumlin/death2.wav"$0D"../players/zumlin/death3.wav"$0D
         "../players/zumlin/death4.wav"$0D"../players/zumlin/drown1.wav"$0D".."
         "/players/zumlin/fall1.wav"$0D"../players/zumlin/fall2.wav"$0D"../pla"
         "yers/zumlin/gurp1.wav"$0D"../players/zumlin/gurp2.wav"$0D"../players"
         "/zumlin/jump1.wav"$0D"../players/zumlin/pain25_1.wav"$0D"../players/"
         "zumlin/pain25_2.wav"$0D"../players/zumlin/pain50_1.wav"$0D"../player"
         "s/zumlin/pain50_2.wav"$0D"../players/zumlin/pain75_1.wav"$0D"../play"
         "ers/zumlin/pain75_2.wav"$0D"../players/zumlin/pain100_1.wav"$0D"../p"
         "layers/zumlin/pain100_2.wav"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Engine Sounds"
        Hint = "Nunber of sounds = 2"
        Items = "engine/engine.wav"$0D"engine/idle.wav"
        Values = "engine/engine.wav"$0D"engine/idle.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Items Sounds"
        Hint = "Nunber of sounds = 3"
        Items = "items/stasis.wav"$0D"items/stasis_start.wav"$0D"items/stasis_"
         "stop.wav"
        Values = "items/stasis.wav"$0D"items/stasis_start.wav"$0D"items/stasis"
         "_stop.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "JetPack Sounds"
        Hint = "Nunber of sounds = 6"
        Items = "jetpack/activate.wav"$0D"jetpack/rev.wav"$0D"jetpack/revrun.w"
         "av"$0D"jetpack/running.wav"$0D"jetpack/shutdown.wav"$0D"jetpack/stut"
         "ter.wav"
        Values = "jetpack/activate.wav"$0D"jetpack/rev.wav"$0D"jetpack/revrun."
         "wav"$0D"jetpack/running.wav"$0D"jetpack/shutdown.wav"$0D"jetpack/stu"
         "tter.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Mud Sounds"
        Hint = "Nunber of sounds = 5"
        Items = "mud/mud_in2.wav"$0D"mud/mud_out1.wav"$0D"mud/mud_un1.wav"$0D"m"
         "ud/wade_mud1.wav"$0D"mud/wade_mud2.wav"
        Values = "mud/mud_in2.wav"$0D"mud/mud_out1.wav"$0D"mud/mud_un1.wav"$0D
         "mud/wade_mud1.wav"$0D"mud/wade_mud2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Train Sounds"
        Hint = "Nunber of sounds = 6"
        Items = "train/1/speed1.wav"$0D"train/1/speed2.wav"$0D"train/1/speed3."
         "wav"$0D"train/2/speed1.wav"$0D"train/2/speed2.wav"$0D"train/2/speed3"
         ".wav"
        Values = "train/1/speed1.wav"$0D"train/1/speed2.wav"$0D"train/1/speed3"
         ".wav"$0D"train/2/speed1.wav"$0D"train/2/speed2.wav"$0D"train/2/speed"
         "3.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Vehicles Sounds"
        Hint = "Nunber of sounds = 2"
        Items = "vehicles/chopper.wav"$0D"vehicles/jet.wav"
        Values = "vehicles/chopper.wav"$0D"vehicles/jet.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Weapons Sounds"
        Hint = "Nunber of sounds = 4"
        Items = "weapons/grenlf1a.wav"$0D"weapons/kick.wav"$0D"weapons/rocklx1"
         "a.wav"$0D"weapons/homing/lockon.wav"
        Values = "weapons/grenlf1a.wav"$0D"weapons/kick.wav"$0D"weapons/rocklx"
         "1a.wav"$0D"weapons/homing/lockon.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Weather Sounds"
        Hint = "Nunber of sounds = 7"
        Items = "sound/weather/rain1.wav"$0D"sound/weather/rain2.wav"$0D"sound"
         "/weather/rain3.wav"$0D"sound/weather/thunder1.mp3"$0D"sound/weather/"
         "thunder2.wav"$0D"sound/weather/thunder3.wav"$0D"sound/weather/thunde"
         "r4.wav"
        Values = "sound/weather/rain1.wav"$0D"sound/weather/rain2.wav"$0D"soun"
         "d/weather/rain3.wav"$0D"sound/weather/thunder1.mp3"$0D"sound/weather"
         "/thunder2.wav"$0D"sound/weather/thunder3.wav"$0D"sound/weather/thund"
         "er4.wav"
      }
    }
    t_renderfx_form:form =
    {
      Caption = "Renderfx Combine"
      renderfx: =
      {
        txt = "&"
        Typ = "X1"
        Cap = "minlight"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X2"
        Cap = "viewermodel"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X4"
        Cap = "weaponmodel"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X8"
        Cap = "fullbright"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X16"
        Cap = "depthhack"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X32"
        Cap = "translucent"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X64"
        Cap = "framelerp"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X128"
        Cap = "beam"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X512"
        Cap = "glow"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X1024"
        Cap = "shell_red"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X2048"
        Cap = "shell_green"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X4096"
        Cap = "shell_blue"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X32768"
        Cap = "ir_visible"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X65536"
        Cap = "shell_double"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X131072"
        Cap = "shell_half_damage"
        Hint = ""
      }
      renderfx: =
      {
        txt = "&"
        Typ = "X262144"
        Cap = "use_disguise"
        Hint = ""
      }
    }
    t_spawner4_form:form =
    {
      Caption = "Items Spawner"
      target: =
      {
        typ = "C"
        txt = "Weapons Classes"
        items = "weapon_blaster"$0D"weapon_shotgun"$0D"weapon_supershotgun"$0D
         "weapon_machinegun"$0D"weapon_chaingun"$0D"weapon_grenadelauncher"$0D
         "weapon_rocketlauncher"$0D"weapon_hyperblaster"$0D"weapon_railgun"$0D
         "weapon_bfg"
        values = "weapon_blaster"$0D"weapon_shotgun"$0D"weapon_supershotgun"$0D
         "weapon_machinegun"$0D"weapon_chaingun"$0D"weapon_grenadelauncher"$0D
         "weapon_rocketlauncher"$0D"weapon_hyperblaster"$0D"weapon_railgun"$0D
         "weapon_bfg"
      }
      target: =
      {
        typ = "C"
        txt = "Ammo Classes"
        items = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rocke"
         "ts"$0D"ammo_homing_missiles"$0D"ammo_cells"$0D"ammo_slugs"$0D"ammo_f"
         "uel"
        values = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rock"
         "ets"$0D"ammo_homing_missiles"$0D"ammo_cells"$0D"ammo_slugs"$0D"ammo_"
         "fuel"
      }
      target: =
      {
        typ = "C"
        txt = "Monster Classes"
        items = "monster_berserk"$0D"monster_boss2"$0D"monster_brain"$0D"monst"
         "er_chick"$0D"monster_flipper"$0D"monster_floater"$0D"monster_flyer"$0D
         "monster_gladiator"$0D"monster_gunner"$0D"monster_hover"$0D"monster_i"
         "nfantry"$0D"monster_jorg"$0D"monster_mutant"$0D"monster_medic"$0D"mo"
         "nster_parasite"$0D"monster_soldier"$0D"monster_soldier_light"$0D"mon"
         "ster_soldier_ss"$0D"monster_tank"$0D"monster_tank_commander"$0D"mons"
         "ter_supertank"$0D"monster_boss3_stand"$0D"monster_commander_body"
        values = "monster_berserk"$0D"monster_boss2"$0D"monster_brain"$0D"mons"
         "ter_chick"$0D"monster_flipper"$0D"monster_floater"$0D"monster_flyer"$0D
         "monster_gladiator"$0D"monster_gunner"$0D"monster_hover"$0D"monster_i"
         "nfantry"$0D"monster_jorg"$0D"monster_mutant"$0D"monster_medic"$0D"mo"
         "nster_parasite"$0D"monster_soldier"$0D"monster_soldier_light"$0D"mon"
         "ster_soldier_ss"$0D"monster_tank"$0D"monster_tank_commander"$0D"mons"
         "ter_supertank"$0D"monster_boss3_stand"$0D"monster_commander_body"
      }
      target: =
      {
        typ = "C"
        txt = "Misc Classes"
        items = "misc_banner"$0D"misc_blackhole"$0D"misc_deadsoldier"$0D"misc_"
         "easterchick"$0D"misc_easterchick2"$0D"misc_eastertank"$0D"misc_explo"
         "box"$0D"misc_gib_arm"$0D"misc_gib_head"$0D"misc_gib_leg"$0D"misc_ins"
         "ane"$0D"misc_satellite_dish"$0D"misc_teleporter_dest"$0D"misc_bigvip"
         "er"
        values = "misc_banner"$0D"misc_blackhole"$0D"misc_deadsoldier"$0D"misc"
         "_easterchick"$0D"misc_easterchick2"$0D"misc_eastertank"$0D"misc_expl"
         "obox"$0D"misc_gib_arm"$0D"misc_gib_head"$0D"misc_gib_leg"$0D"misc_in"
         "sane"$0D"misc_satellite_dish"$0D"misc_teleporter_dest"$0D"misc_bigvi"
         "per"
      }
      target: =
      {
        typ = "C"
        txt = "Key Classes"
        items = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"$0D
         "key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
        values = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"
         $0D"key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
      }
      target: =
      {
        typ = "C"
        txt = "Item Classes"
        items = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_flashlight"$0D
         "item_freeze"$0D"item_invulnerability"$0D"item_jetpack"$0D"item_pack"$0D
         "item_power_screen"$0D"item_power_shield"$0D"item_quad"$0D"item_silen"
         "cer"
        values = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_flashlight"$0D
         "item_freeze"$0D"item_invulnerability"$0D"item_jetpack"$0D"item_pack"$0D
         "item_power_screen"$0D"item_power_shield"$0D"item_quad"$0D"item_silen"
         "cer"
      }
    }
    t_usermodel_form:form =
    {
      Caption = "User Models"
      Title: =
      {
        Txt = "Available User Model Lazarus"
        Typ = "S"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Actors Models"
        items = "Alien skins 0-3"$0D"Hunter skins 0-4"$0D"Paranoid Marine skin"
         "s 0-3"$0D"Ratamahatta skins 0-5"$0D"Rhino skins 0-2"$0D"SAS skin 0"$0D
         "Slith skins 0-3"$0D"Terran Marine skins 0-22"$0D"Walker skins 0-2"$0D
         "Waste skin 0"$0D"Xenoid skins 0-2"$0D"Zumlin skins 0-5"
        values = "alien"$0D"hunter"$0D"marine"$0D"ratamahatta"$0D"rhino"$0D"sa"
         "s"$0D"slith"$0D"terran"$0D"walker"$0D"waste"$0D"xenoid"$0D"zumlin"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Player Models"
        items = "Male skins 0-14"$0D"Female skins 0-9"$0D"Cyborg skins 0-2"
        values = "male"$0D"female"$0D"cyborg"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Camera"
        items = "camera.md2"$0D"cameramount.md2"$0D"cameramount_ceiling.md2"$0D
        values = "objects/camera/camera.md2"$0D"objects/camera/cameramount.md2"
         $0D"objects/camera/cameramount_ceiling.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Effects"
        items = "shockwave.md2"
        Values = "effects/shockwave.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Sprites"
        items = "lightning.sp2"$0D"point.sp2"
        values = "lightning.sp2"$0D"point.sp2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Turrets"
        items = "minigun.md2"$0D"mount_light.md2"$0D"mount_wall.md2"$0D"turret"
         ".md2"$0D"turret_heavy.md2"$0D"x12bfgcannon.md2"$0D"z4pointgun.md2"
        values = "objects/turret/minigun.md2"$0D"objects/turret/mount_light.md"
         "2"$0D"objects/turret/mount_wall.md2"$0D"objects/turret/turret.md2"$0D
         "objects/turret/turret_heavy.md2"$0D"objects/turret/x12bfgcannon.md2"$0D
         "objects/turret/z4pointgun.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Cable"
        items = "cable/tris.md2"
        values = "cable/tris.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Rain Drop"
        items = "drop/heavy.md2"$0D"drop/tris.md2"
        values = "objects/drop/heavy.md2"$0D"objects/drop/tris.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Homing Rocket"
        items = "hrocket/tris.md2"
        values = "objects/hrocket/tris.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "LaserGate"
        items = "lasergate/lasergate_floor.md2"
        values = "objects/lasergate/lasergate_floor.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Leafs"
        items = "leaf1/tris.md2"$0D"leaf2/tris.md2"$0D"leaf3/tris.md2"
        values = "objects/leaf1/tris.md2"$0D"objects/leaf2/tris.md2"$0D"object"
         "s/leaf3/tris.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Snow"
        items = "snow/tris.md2"
        values = "objects/snow/tris.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Barrel Gibs"
        items = "barrel_gibs/gib1.md2"$0D"barrel_gibs/gib2.md2"$0D"barrel_gibs"
         "/gib3.md2"$0D"barrel_gibs/gib4.md2"$0D"barrel_gibs/gib5.md2"
        values = "objects/barrel_gibs/gib1.md2"$0D"objects/barrel_gibs/gib2.md"
         "2"$0D"objects/barrel_gibs/gib3.md2"$0D"objects/barrel_gibs/gib4.md2"$0D
         "objects/barrel_gibs/gib5.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Crate Gibs"
        items = "crate_gibs/gib1.md2"$0D"crate_gibs/gib2.md2"$0D"crate_gibs/gi"
         "b3.md2"$0D"crate_gibs/gib4.md2"$0D"crate_gibs/gib5.md2"
        values = "objects/crate_gibs/gib1.md2"$0D"objects/crate_gibs/gib2.md2"$0D
         "objects/crate_gibs/gib3.md2"$0D"objects/crate_gibs/gib4.md2"$0D"obje"
         "cts/crate_gibs/gib5.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Crystal Gibs"
        items = "crystal_gibs/gib1.md2"$0D"crystal_gibs/gib2.md2"$0D"crystal_g"
         "ibs/gib3.md2"$0D"crystal_gibs/gib4.md2"$0D"crystal_gibs/gib5.md2"
        values = "objects/crystal_gibs/gib1.md2"$0D"objects/crystal_gibs/gib2."
         "md2"$0D"objects/crystal_gibs/gib3.md2"$0D"objects/crystal_gibs/gib4."
         "md2"$0D"objects/crystal_gibs/gib5.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Glass Gibs"
        items = "glass_gibs/gib1.md2"$0D"glass_gibs/gib2.md2"$0D"glass_gibs/gi"
         "b3.md2"$0D"glass_gibs/gib4.md2"$0D"glass_gibs/gib5.md2"
        values = "objects/glass_gibs/gib1.md2"$0D"objects/glass_gibs/gib2.md2"$0D
         "objects/glass_gibs/gib3.md2"$0D"objects/glass_gibs/gib4.md2"$0D"obje"
         "cts/glass_gibs/gib5.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Mech Gibs"
        items = "mech_gibs/gib1.md2"$0D"mech_gibs/gib2.md2"$0D"mech_gibs/gib3."
         "md2"$0D"mech_gibs/gib4.md2"$0D"mech_gibs/gib5.md2"
        values = "objects/mech_gibs/gib1.md2"$0D"objects/mech_gibs/gib2.md2"$0D
         "objects/mech_gibs/gib3.md2"$0D"objects/mech_gibs/gib4.md2"$0D"object"
         "s/mech_gibs/gib5.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Metal Gibs"
        items = "metal_gibs/gib1.md2"$0D"metal_gibs/gib2.md2"$0D"metal_gibs/gi"
         "b3.md2"$0D"metal_gibs/gib4.md2"$0D"metal_gibs/gib5.md2"
        values = "objects/metal_gibs/gib1.md2"$0D"objects/metal_gibs/gib2.md2"$0D
         "objects/metal_gibs/gib3.md2"$0D"objects/metal_gibs/gib4.md2"$0D"obje"
         "cts/metal_gibs/gib5.md2"
      }
      usermodel: =
      {
        typ = "C"
        Txt = "Rocks Rock Gibs"
        items = "rock1/tris.md2"$0D"rock2/tris.md2"$0D"rock_gibs/gib1.md2"$0D"r"
         "ock_gibs/gib2.md2"$0D"rock_gibs/gib3.md2"$0D"rock_gibs/gib4.md2"$0D"r"
         "ock_gibs/gib5.md2"
        values = "objects/rock1/tris.md2"$0D"objects/rock2/tris.md2"$0D"object"
         "s/rock_gibs/gib1.md2"$0D"objects/rock_gibs/gib2.md2"$0D"objects/rock"
         "_gibs/gib3.md2"$0D"objects/rock_gibs/gib4.md2"$0D"objects/rock_gibs/"
         "gib5.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Tech Gibs"
        items = "tech_gibs/gib1.md2"$0D"tech_gibs/gib2.md2"$0D"tech_gibs/gib3."
         "md2"$0D"tech_gibs/gib4.md2"$0D"tech_gibs/gib5.md2"
        values = "objects/tech_gibs/gib1.md2"$0D"objects/tech_gibs/gib2.md2"$0D
         "objects/tech_gibs/gib3.md2"$0D"objects/tech_gibs/gib4.md2"$0D"object"
         "s/tech_gibs/gib5.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Wood Gibs"
        items = "wood_gibs/gib1.md2"$0D"wood_gibs/gib2.md2"$0D"wood_gibs/gib3."
         "md2"$0D"wood_gibs/gib4.md2"$0D"wood_gibs/gib5.md2"
        values = "objects/wood_gibs/gib1.md2"$0D"objects/wood_gibs/gib2.md2"$0D
         "objects/wood_gibs/gib3.md2"$0D"objects/wood_gibs/gib4.md2"$0D"object"
         "s/wood_gibs/gib5.md2"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "Available User Model"
        Typ = "S"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Minelight models"
        items = "Minelight1"$0D"Minelight2"
        values = "objects/minelite/light1/tris.md2"$0D"objects/minelite/light2"
         "/tris.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Weapon models"
        items = "Blaster"$0D"ShotGun"$0D"Super ShotGun"$0D"MachineGun"$0D"Chai"
         "nGun"$0D"Grenade Launcher"$0D"Rocket Launcher"$0D"HyperBlaster"$0D"R"
         "ailGgun"$0D"BFG10K"
        values = "weapons/g_blast/tris.md2"$0D"weapons/g_shotg/tris.md2"$0D"we"
         "apons/g_shotg2/tris.md2"$0D"weapons/g_machn/tris.md2"$0D"weapons/g_c"
         "hain/tris.md2"$0D"weapons/g_launch/tris.md2"$0D"weapons/g_rocket/tri"
         "s.md2"$0D"weapons/g_hyperb/tris.md2"$0D"weapons/g_rail/tris.md2"$0D"w"
         "eapons/g_bfg/tris.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Ammo models"
        items = "Shells"$0D"Bullets"$0D"Grenades"$0D"Rockets"$0D"Homing Rocket"
         "s"$0D"Cells"$0D"Slugs"$0D"Fuel"
        values = "items/ammo/shells/medium/tris.md2"$0D"items/ammo/bullets/med"
         "ium/tris.md2"$0D"items/ammo/grenades/medium/tris.md2"$0D"items/ammo/"
         "rockets/medium/tris.md2"$0D"items/ammo/homing/medium/tris.md2"$0D"it"
         "ems/ammo/cells/medium/tris.md2"$0D"items/ammo/slugs/medium/tris.md2"$0D
         "items/ammo/fuel/medium/tris.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Monster models"
        Items = "Berserk - 0"$0D"Brain - 162"$0D"Boss1 SuperTank - 194"$0D"Bos"
         "s2 Hornet - 0"$0D"Boss3 Jorg - 112"$0D"Boss3 Markon - 414"$0D"Bitch "
         "Iron Maiden - 121"$0D"Flipper Barracuda Shark - 0"$0D"Float Technici"
         "an - 13"$0D"Flyer - 13"$0D"Gladiator - 0"$0D"Gunner - 0"$0D"Hover Ic"
         "arus - 0"$0D"Infantry Enforcer - 48"$0D"Medic - 12"$0D"Mutant - 62"$0D
         "Parasite - 83"$0D"Soldier -146"$0D"Tank & Tank Commander - 0"$0D"Dec"
         "apitated Tank Commander - 0"
        values = "monsters/berserk/tris.md2"$0D"monsters/brain/tris.md2"$0D"mo"
         "nsters/boss1/tris.md2"$0D"monsters/boss2/tris.md2"$0D"monsters/boss3"
         "/jorg/tris.md2"$0D"monsters/boss3/rider/tris.md2"$0D"monsters/bitch/"
         "tris.md2"$0D"monsters/flipper/tris.md2"$0D"monsters/float/tris.md2"$0D
         "monsters/flyer/tris.md2"$0D"monsters/gladiatr/tris.md2"$0D"monsters/"
         "gunner/tris.md2"$0D"monsters/hover/tris.md2"$0D"monsters/infantry/tr"
         "is.md2"$0D"monsters/medic/tris.md2"$0D"monsters/mutant/tris.md2"$0D"m"
         "onsters/parasite/tris.md2"$0D"monsters/soldier/tris.md2"$0D"monsters"
         "/tank/tris.md2"$0D"monsters/commandr/tris.md2"
        Hint = "Stand startframe #"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Misc models"
        items = "Banner"$0D"Black Hole"$0D"Dead Dude"$0D"Barrels"$0D"Gibs Arm"$0D
         "Gibs Head"$0D"Gibs Leg"$0D"Insane"$0D"Satellite Dish"$0D"Strogg Ship"
         $0D"Big Viper"$0D"Viper"$0D"Viper Bomb"$0D"DM Spot"
        values = "objects/banner/tris.md2"$0D"objects/black/tris.md2"$0D"deadb"
         "ods/dude/tris.md2"$0D"objects/barrels/tris.md2"$0D"objects/gibs/arm/"
         "tris.md2"$0D"objects/gibs/head/tris.md2"$0D"objects/gibs/leg/tris.md"
         "2"$0D"monsters/insane/tris.md2"$0D"objects/satellite/tris.md2"$0D"sh"
         "ips/strogg1/tris.md2"$0D"ships/bigviper/tris.md2"$0D"ships/viper/tri"
         "s.md2"$0D"objects/bomb/tris.md2"$0D"objects/dmspot/tris.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Key models"
        items = "Air Strike Marker"$0D"Blue Key"$0D"Tank Commander's Head"$0D"D"
         "ata CD Key"$0D"Data Spinner Key"$0D"Security Pass Key"$0D"Power Cube"
         $0D"Pyramid Key"$0D"Red Key"
        values = "items/keys/target/tris.md2"$0D"items/keys/key/tris.md2"$0D"m"
         "onsters/commandr/head/tris.md2"$0D"items/keys/data_cd/tris.md2"$0D"i"
         "tems/keys/spinner/tris.md2"$0D"items/keys/pass/tris.md2"$0D"items/ke"
         "ys/power/tris.md2"$0D"items/keys/pyramid/tris.md2"$0D"items/keys/red"
         "_key/tris.md2"
      }
      usermodel: =
      {
        typ = "C"
        txt = "Item models"
        Items = "Adrenaline"$0D"Ancient Head"$0D"Armor Body"$0D"Armor Combat"$0D
         "Armor Jacket"$0D"Armor Shard"$0D"Bandolier"$0D"Rebreather"$0D"Enviro"
         "nment Suit"$0D"Flashlight"$0D"Stasis Generator"$0D"Health Small"$0D"H"
         "ealth"$0D"Health Large"$0D"Health Mega"$0D"Invulnerability"$0D"JetPa"
         "ck"$0D"Pack"$0D"Power Screen"$0D"Power Shield"$0D"Quad"$0D"Silencer"
        values = "items/adrenal/tris.md2"$0D"items/c_head/tris.md2"$0D"items/a"
         "rmor/body/tris.md2"$0D"items/armor/combat/tris.md2"$0D"items/armor/j"
         "acket/tris.md2"$0D"items/armor/shard/tris.md2"$0D"items/band/tris.md"
         "2"$0D"items/breather/tris.md2"$0D"items/enviro/tris.md2"$0D"items/f_"
         "light/tris.md2"$0D"items/stasis/tris.md2"$0D"items/healing/stimpack/"
         "tris.md2"$0D"items/healing/medium/tris.md2"$0D"items/healing/large/t"
         "ris.md2"$0D"items/mega_h/tris.md2"$0D"items/invulner/tris.md2"$0D"it"
         "ems/jet/tris.md2"$0D"items/pack/tris.md2"$0D"items/armor/screen/tris"
         ".md2"$0D"items/armor/shield/tris.md2"$0D"items/quaddama/tris.md2"$0D
         "items/silencer/tris.md2"
      }
    }
  }
  Entity Forms.fctx =
  {
    ammo_shells:form =
    {
      Help = "This is the ammo for weapon_shotgun and weapon_supershotgun."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/shells/medium/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity."$0D"This is only releva"
         "nt when deathmatch=1."$0D"When multiple pickups have identical team "
         "names, the first to appear in the .map file will be the one that app"
         "ears on map load."$0D"This pickup entity serves as the master, and i"
         "ts teammates are the slaves."$0D"When the master pickup entity is pi"
         "cked up by a player, any of the teammates will spawn on a randomly r"
         "otating basis."$0D"Ammo entities may be teamed with other ammo, item"
         "s, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The ammo_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The ammo_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    ammo_bullets:form =
    {
      Help = "This is the ammo for weapon_machinegun and weapon_chaingun."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/bullets/medium/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity."$0D"This is only releva"
         "nt when deathmatch=1."$0D"When multiple pickups have identical team "
         "names, the first to appear in the .map file will be the one that app"
         "ears on map load."$0D"This pickup entity serves as the master, and i"
         "ts teammates are the slaves."$0D"When the master pickup entity is pi"
         "cked up by a player, any of the teammates will spawn on a randomly r"
         "otating basis."$0D"Ammo entities may be teamed with other ammo, item"
         "s, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The ammo_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The ammo_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    ammo_grenades:form =
    {
      Help = "This is handthrown grenades and the ammo for weapon_grenadelaunc"
       "her."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/grenades/medium/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity."$0D"This is only releva"
         "nt when deathmatch=1."$0D"When multiple pickups have identical team "
         "names, the first to appear in the .map file will be the one that app"
         "ears on map load."$0D"This pickup entity serves as the master, and i"
         "ts teammates are the slaves."$0D"When the master pickup entity is pi"
         "cked up by a player, any of the teammates will spawn on a randomly r"
         "otating basis."$0D"Ammo entities may be teamed with other ammo, item"
         "s, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The ammo_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The ammo_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    ammo_rockets:form =
    {
      Help = "This is the ammo for weapon_rocketlauncher."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/rockets/medium/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity."$0D"This is only releva"
         "nt when deathmatch=1."$0D"When multiple pickups have identical team "
         "names, the first to appear in the .map file will be the one that app"
         "ears on map load."$0D"This pickup entity serves as the master, and i"
         "ts teammates are the slaves."$0D"When the master pickup entity is pi"
         "cked up by a player, any of the teammates will spawn on a randomly r"
         "otating basis."$0D"Ammo entities may be teamed with other ammo, item"
         "s, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The ammo_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The ammo_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    ammo_homing_missiles:form =
    {
      Help = "Homing rockets are damageable, so all is not lost if you find yo"
       "urself in an open area and hear the "$22"lock-on"$22" sound. You'll mo"
       "st likely find that they are a bit difficult to hit. Unfortunately thi"
       "s is not a problem with your aiming; it is that the game doesn't keep "
       "track of the rocket position frequently enough, and as far as the game"
       " is concerned the rocket isn't really where you see it. You'll have th"
       "e best luck hitting rockets with one of the bullet/shot weapons. Havin"
       "g said this... as far as we're concerned allowing monsters in open are"
       "as to use homing rockets against the player will most likely guarantee"
       " that the player will become frustrated with your map. Remember that i"
       "t's supposed to be fun :-) "
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/homing/medium/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity."$0D"This is only releva"
         "nt when deathmatch=1."$0D"When multiple pickups have identical team "
         "names, the first to appear in the .map file will be the one that app"
         "ears on map load."$0D"This pickup entity serves as the master, and i"
         "ts teammates are the slaves."$0D"When the master pickup entity is pi"
         "cked up by a player, any of the teammates will spawn on a randomly r"
         "otating basis."$0D"Ammo entities may be teamed with other ammo, item"
         "s, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The ammo_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The ammo_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    ammo_cells:form =
    {
      Help = "This is the ammo for weapon_hyperblaster and weapon_bfg."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/cells/medium/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity."$0D"This is only releva"
         "nt when deathmatch=1."$0D"When multiple pickups have identical team "
         "names, the first to appear in the .map file will be the one that app"
         "ears on map load."$0D"This pickup entity serves as the master, and i"
         "ts teammates are the slaves."$0D"When the master pickup entity is pi"
         "cked up by a player, any of the teammates will spawn on a randomly r"
         "otating basis."$0D"Ammo entities may be teamed with other ammo, item"
         "s, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The ammo_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The ammo_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    ammo_slugs:form =
    {
      Help = "This is the ammo for weapon_railgun."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/slugs/medium/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity."$0D"This is only releva"
         "nt when deathmatch=1."$0D"When multiple pickups have identical team "
         "names, the first to appear in the .map file will be the one that app"
         "ears on map load."$0D"This pickup entity serves as the master, and i"
         "ts teammates are the slaves."$0D"When the master pickup entity is pi"
         "cked up by a player, any of the teammates will spawn on a randomly r"
         "otating basis."$0D"Ammo entities may be teamed with other ammo, item"
         "s, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The ammo_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The ammo_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    ammo_fuel:form =
    {
      Help = "This is fuel for the Jetpack."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/fuel/medium/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity."$0D"This is only releva"
         "nt when deathmatch=1."$0D"When multiple pickups have identical team "
         "names, the first to appear in the .map file will be the one that app"
         "ears on map load."$0D"This pickup entity serves as the master, and i"
         "ts teammates are the slaves."$0D"When the master pickup entity is pi"
         "cked up by a player, any of the teammates will spawn on a randomly r"
         "otating basis."$0D"Ammo entities may be teamed with other ammo, item"
         "s, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The ammo_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The ammo_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    crane_beam:form =
    {
      Help = "crane_beam is the supporting mechanism that spans across a room."
      dmg: =
      {
        txt = "&"
        Hint = "Damage to blocking entity"
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "First in a sequence of 2 path_corners describing extents of tr"
         "avel."
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed of crane_beam in units/sec"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the crane_hoist."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the crane_beam. This field should be used as the targe"
         "t of crane_control."
      }
      team: =
      {
        txt = "&"
        Hint = "Name shared by crane_control for onboard controls."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The crane_beam will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The crane_beam will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The crane_beam will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The crane_beam will be inhibited and not appear when deathmatc"
         "h=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    crane_control:form =
    {
      Help = "Crane_control starts off unless spawnflags=1. If targeted, crane"
       "_control toggles on/off. If the player attempts to use crane_control w"
       "hile off, a message "$22"No power"$22" (or the message specified by cr"
       "ane_control's message key) is displayed."
      style: =
      {
        typ = "C"
        txt = "&"
        Hint = "Direction faced by player when facing crane_control. 0=East, 1"
         "=North, 2=West, 3=South"
        items = "0) East"$0D"1) North"$0D"2) West"$0D"3) South"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the crane_beam."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the crane_control. Not optional if "$22"Start On"$22" "
         "spawnflag is not set. It is not strictly necessary, but to avoid con"
         "fusion all crane_controls for a crane should have the same targetnam"
         "e."
      }
      team: =
      {
        txt = "&"
        Hint = "Name shared by crane_beam for onboard controls."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "If set, crane is initially powered up. If not set, crane_contr"
         "ol must be targeted. Crane power is toggled each time crane_control "
         "is triggered."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The crane_control will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The crane_control will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The crane_control will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The crane_control will be inhibited and not appear when deathm"
         "atch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    crane_hoist:form =
    {
      Help = "crane_hoist"
      dmg: =
      {
        txt = "&"
        Hint = "Damage to blocking entity"
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "First in a sequence of 2 path_corners describing extents of tr"
         "avel."
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed of crane_hoist in units/sec"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the crane_hook."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the crane_hoist. This field should be used as the targ"
         "et of crane_beam."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The crane_hoist will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The crane_hoist will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The crane_hoist will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The crane_hoist will be inhibited and not appear when deathmat"
         "ch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    crane_hook:form =
    {
      Help = "crane_hook"
      dmg: =
      {
        txt = "&"
        Hint = "Damage to blocking entity"
      }
      move_origin: =
      {
        txt = "&"
        hint = "Move_origin>Offset to cable XYZ"
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "First in a sequence of 2 path_corners describing extents of tr"
         "avel."
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed of crane_hook in units/sec"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the crane_hook. This field should be used as the targe"
         "t of crane_hoist."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Spotlight"
        Hint = "If set, an invisible light-emanating sprite is projected below"
         " the crane_hook when any part of the crane is moving. This provides "
         "the player with visual cues missing because of the loss of perspecti"
         "ve you get with a 2D monitor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The crane_hook will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The crane_hook will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The crane_hook will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The crane_hook will be inhibited and not appear when deathmatc"
         "h=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    crane_reset:form =
    {
      Help = "crane_reset"
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "If non-zero, the value of count specifies the number of times "
         "the crane_reset can be used before it is auto-killtargeted."
      }
      target: =
      {
        txt = "&"
        Hint = "Name of crane_beam. When triggered, crane_reset calls the cran"
         "e_beam to move to the extent closest to the crane_reset. In practice"
         " the crane_reset will normally be triggered by a func_button."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the crane_reset. Crane_reset must be targeted to funct"
         "ion."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The crane_reset will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The crane_reset will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The crane_reset will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The crane_reset will be inhibited and not appear when deathmat"
         "ch=1."
      }
    }
    func_areaportal:form =
    {
      Help = "This is a non-visible object that divides the world into areas t"
       "hat are seperated when this portal is not activated. Usually enclosed "
       "in the middle of a door."
      style: =
      {
        txt = "&"
        hint = "set 1 next AP 2 etc"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Targeted buy a func_door or func_door_rotating or func_door_ro"
         "t_dh."
      }
    }
    func_bobbingwater:form =
    {
      Help = "Func_bobbingwater is identical in operation to the Quake2 func_w"
       "ater brush model, except that it bobs up and down in a smooth sinusoid"
       "al motion."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the bobbingwater will move on the XY plane. (Default"
         "=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the bobbingwater will move in 3 dimensions, specifie"
         "d by pitch and yaw. Roll is ignored. Syntax is pitch yaw 0. (Default"
         "=0 0 0)."
      }
      bob: =
      {
        txt = "&"
        Hint = "Specifies the amplitude of motion, in units. (Default=16)."
      }
      duration: =
      {
        txt = "&"
        Hint = "Specifies the time between bobbing cycles, in seconds. (Defaul"
         "t=8)."
      }
      lip: =
      {
        txt = "&"
        Hint = "When activated, the bobbingwater will move [brush thickness]+["
         "-2]-[lip value] units. (Default=0)."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies sounds to be played while the bobbingwater is moving"
         "."
        typ = "C"
        Items = "0) Silent"$0D"1) Water"$0D"2) Lava"
        values = "0"$0D"1"$0D"2"
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in units/second that the bobbingwater moves. (Default=25"
         ")."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_bobbingwater."
      }
      team: =
      {
        txt = "&"
        Hint = "Team name of the specific bobbingwater. Bobbingwaters with a i"
         "dentical team names will move together, and if solid, will all stop "
         "if one is blocked. A func_bobbingwater may be teamed with a func_wat"
         "er."
      }
      wait: =
      {
        txt = "&"
        Hint = "Time in seconds for the bobbingwater to wait before it returns"
         " to its "$22"closed"$22" position. If wait=-1, the bobbingwater must"
         " be retriggered in order for it to close.This will also result in th"
         "e bob effect taking place on both ends of the bobbingwater's motion,"
         " rather than just its "$22"opening"$22" motion. (Default=-1)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start Open"
        Hint = "Bobbingwater will appear in its "$22"open"$22" position rather"
         " than its "$22"closed"$22" position."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Mud"
        Hint = "The func_bobbingwater brush will have the properties of mud."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_bobbingwater will be inhibited and not appear when sk"
         "ill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_bobbingwater will be inhibited and not appear when sk"
         "ill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_bobbingwater will be inhibited and not appear when sk"
         "ill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_bobbingwater will be inhibited and not appear when de"
         "athmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_button:form =
    {
      Help = "When a button is touched, it moves some distance in the directio"
       "n of it's angle, and then triggers all of it's targets."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the button will move on the XY plane. (Default=0). ("
         "-1 is up, -2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the button will move in 3 dimensions, specified by p"
         "itch and yaw. Roll is ignored. Syntax is pitch yaw 0. (Default=0 0 0"
         ")."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the button fires. (Defau"
         "lt=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "When non-zero, makes the button shootable, and specifies hit p"
         "oints required before activating. A shootable button is not pushable"
         ". (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the b"
         "utton fires."
      }
      lip: =
      {
        txt = "&"
        Hint = "When activated, the button will move [brush thickness]+[-2]-[l"
         "ip value] units. (Default=4)."
      }
      message: =
      {
        txt = "&"
        Hint = "Character string to print to the screen when the button fires."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the button is to movewith."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies sounds to be played when activated. Choices are 0=au"
         "dible; 1=silent. Default=0."
        typ = "C"
        Items = "0) Audible"$0D"1) Silent"
        values = "0"$0D"1"
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in units/second that the button moves. (Default=40)."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the button fires"
         "."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific button. A button with a targetname cannot"
         " be pressed, but it can be shot (if health>0) and it can be triggere"
         "d with another triggering entity."
      }
      wait: =
      {
        txt = "&"
        Hint = "Time in seconds for the button to wait before it returns to it"
         "s ready position. If wait=-1, the button will never return. (Default"
         "=3)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_button will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_button will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_button will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_button will be inhibited and not appear when deathmat"
         "ch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_clock:form =
    {
      Help = "Target a target_string with this. The default is to be a time of"
       " day clock."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "Clock Time 60 = 1 min."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      style: =
      {
        txt = "&"
        typ = "C"
        Items = "0) xx"$0D"1) xx:xx"$0D"2) xx:xx:xx"
        values = "0"$0D"1"$0D"2"
        Hint = "What the clock should look like."
      }
      target: =
      {
        txt = "&"
        Hint = "This should be the name of a target_string."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Set this if it needs to be activated before it will start."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Timer Up"
        Hint = "The func_clock will start at 0 and countup, when is reaches it"
         " set time the pathtarget will fire."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Timer Down"
        Hint = "The func_clock will start at is set time and countdown to 0, t"
         "hen the pathtarget will fire."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Start Off"
        Hint = "Use a trigger to start the func_clock."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Multi Use"
        Hint = "The func_clock will reset and count again."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_clock will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_clock will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_clock will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_clock will be inhibited and not appear when deathmatc"
         "h=1."
      }
    }
    func_conveyor:form =
    {
      Help = "Conveyors are stationary brushes that move what's on them. The e"
       "ntity itself, as well as one side of the brush, must BOTH have one cur"
       "rent content activated."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the conveyor will move on the XY plane. (Default=0)."
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in units/second that the conveyor moves. (Default=100)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_conveyor. If START_ON is not set the"
         "n the func_conveyor must be triggered to function."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "Func_conveyor will be solid and visible and move objects when "
         "the map loads. If START_ON is not set, the conveyor will be nonsolid"
         " and invisible and will not move objects."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Toggle"
        Hint = "The func_conveyor will be toggle on/off each time it is trigge"
         "red"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_conveyor will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_conveyor will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_conveyor will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_conveyor will be inhibited and not appear when deathm"
         "atch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_door:form =
    {
      Help = "The standard entity for doors.."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the door will move on the XY plane. (Default=0). (-1"
         " is up, -2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the door will move in 3 dimensions, specified by pit"
         "ch and yaw. Roll is ignored. Syntax is pitch yaw 0. (Default=0 0 0)."
      }
      accel: =
      {
        txt = "&"
        Hint = "Acceleration rate when the door begins moving. (Default=0)."
      }
      decel: =
      {
        txt = "&"
        Hint = "Deceleration rate when the door comes to a stop. (Default=0)."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Damage in hit points the door will do to an entity that blocks"
         " its movement. (Default=2)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies the debris model to use. Default=0. This value is ig"
         "nored if health is greater than or equal to 0."
        typ = "C"
        Items = "0) Default"$0D"1) Metal"$0D"2) Glass"$0D"3) Barrel"$0D"4) Cra"
         "te"$0D"5) Rock"$0D"6) Crystal"$0D"7) Mechanical"$0D"8) Wood"$0D"9) T"
         "ech"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
      }
      health: =
      {
        txt = "&"
        Hint = "When greater than zero, makes the door shootable, and specifie"
         "s hit points required before activating. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be killtargeted when the door is a"
         "ctivated."
      }
      lip: =
      {
        txt = "&"
        Hint = "When activated, the door will move [brush thickness]+[-2]-[lip"
         " value] units. (Default=8)."
      }
      mass: =
      {
        txt = "&"
        Hint = "Ignored if health is 0 or greater. Mass controls the number an"
         "d size of debris chunks spawned when the door is destroyed. (Default"
         "=75)."
      }
      message: =
      {
        txt = "&"
        Hint = "Character string to print to the screen when the player approa"
         "ches the door if its trigger is inactive."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the door is to movewith."
      }
      skinnum: =
      {
        txt = "&"
        Hint = "Specifies the skin number to use with the debris models for de"
         "stroyable doors."
        typ = "C"
        Items = "0) box3_7 (explosive crate)"$0D"1) box1_5"$0D"2) box3_1"$0D"3"
         ") box3_2"$0D"4) box3_3"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      sounds: =
      {
        txt = "&"
        typ = "C"
        Items = "0) Audible"$0D"1) Silent"
        values = "0"$0D"1"
        Hint = "Specifies sounds to be played when activated. Choices are 0=au"
         "dible; 1=silent. Default=0."
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in units/second that the door moves. (Default=100)."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the door opens. "
         "If the target is a func_areaportal, the areaportal will be triggered"
         " again when the door closes."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific door. A door with a targetname cannot be "
         "opened without another triggering entity which targets it, but it ca"
         "n be shot (if health>0)."
      }
      team: =
      {
        txt = "&"
        Hint = "Team name of the specific door. Doors with a identical team na"
         "mes will move together, and will all stop if one is blocked. With so"
         "me care concerning timing elements, a func_door may be teamed with a"
         " func_door_rotating."
      }
      wait: =
      {
        txt = "&"
        Hint = "Time in seconds for the door to wait before it returns to its "
         "closed position. If wait=-1, the door will never return. (Default=3)"
         "."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start Open"
        Hint = "The func_door will appear in its open position rather than its"
         " closed position."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "x"
        Hint = "If you check this the door won't open if you get crushed in it"
         ". It will just keep pressing until you die."$0D0D"X7: nothing in the"
         " code for this spawnflag."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Crusher"
        Hint = "The func_door will not bounce back open when blocked, and inst"
         "ead will continue to apply its dmg value every 0.1 seconds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "No Monsters"
        Hint = "The func_door will not be triggered by monsters."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Animated"
        Hint = "The func_door will display a sequence of animated textures at "
         "the rate of 4 animations/second if an animated texture is applied to"
         " it."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Toggle"
        Hint = "The func_door must be triggered to close as well as being trig"
         "gered to open."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X64"
        Cap = "Animated Fast"
        Hint = "The func_door will display a sequence of animated textures at "
         "the rate of 10 animations/second if an animated texture is applied t"
         "o it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_door will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_door will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_door will be inhibited and not appear when skill=2 or"
         " greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_door will be inhibited and not appear when deathmatch"
         "=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_door_rotating:form =
    {
      Help = "You need to have an origin brush as part of this entity.  The ce"
       "nter of that brush will be the point around which it is rotated."
      distance: =
      {
        txt = "&"
        Hint = "Size of the arc in degrees that the door will describe when mo"
         "ving. (Default=90)."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Damage in hit points the door will do to an entity that blocks"
         " its movement. (Default=2)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies the debris model to use. Default=0. This value is ig"
         "nored if health is greater than or equal to 0."
        typ = "C"
        Items = "0) Default"$0D"1) Metal"$0D"2) Glass"$0D"3) Barrel"$0D"4) Cra"
         "te"$0D"5) Rock"$0D"6) Crystal"$0D"7) Mechanical"$0D"8) Wood"$0D"9) T"
         "ech"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
      }
      health: =
      {
        txt = "&"
        Hint = "When greater than zero, makes the door shootable, and specifie"
         "s hit points required before activating. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be killtargeted when the door is a"
         "ctivated."
      }
      mass: =
      {
        txt = "&"
        Hint = "Ignored if health is 0 or greater. Mass controls the number an"
         "d size of debris chunks spawned when the door is destroyed. (Default"
         "=75)."
      }
      message: =
      {
        txt = "&"
        Hint = "Character string to print to the screen when the player approa"
         "ches the door if its trigger is inactive."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the door is to movewith."
      }
      skinnum: =
      {
        txt = "&"
        Hint = "Specifies the skin number to use with the debris models for de"
         "stroyable doors."
        typ = "C"
        Items = "0) box3_7 (explosive crate)"$0D"1) box1_5"$0D"2) box3_1"$0D"3"
         ") box3_2"$0D"4) box3_3"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      sounds: =
      {
        txt = "&"
        typ = "C"
        Items = "0) Audible"$0D"1) Silent"
        values = "0"$0D"1"
        Hint = "Specifies sounds to be played when activated. Choices are 0=au"
         "dible; 1=silent. (Default=0)."
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in degrees/second that the door moves. Default=100."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the door opens. "
         "If the target is a func_areaportal, the areaportal will be triggered"
         " again when the door closes."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific door. A door with a targetname cannot be "
         "opened without another triggering entity which targets it, but it ca"
         "n be shot (if health>0)."
      }
      team: =
      {
        txt = "&"
        Hint = "Team name of the specific door. Doors with a identical team na"
         "mes will move together, and will all stop if one is blocked. With so"
         "me care concerning timing elements, a func_door_rotating may be team"
         "ed with a func_door."
      }
      turn_rider: =
      {
        txt = "&"
        Hint = "If non-zero, a player or other entity riding on the func_door_"
         "rotating will rotate as the door rotates. (Default=0)."
        typ = "C"
        Items = "0) Don't turn rider"$0D"1) Turn rider w/model"
        values = "0"$0D"1"
      }
      wait: =
      {
        txt = "&"
        Hint = "Time in seconds for the door to wait before it returns to its "
         "closed position. If wait=-1, the door will never return. Default=3."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start Open"
        Hint = "The func_door_rotating will appear in its open position rather"
         " than its closed position."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Reverse"
        Hint = "The func_door_rotating Reverses the direction of rotation."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Crusher"
        Hint = "The func_door_rotating will not bounce back open when blocked,"
         " and instead will continue to apply its dmg value every 0.1 seconds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "No Monsters"
        Hint = "The func_door_rotating will not be triggered by monsters."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Animated"
        Hint = "The func_door_rotating will display a sequence of animated tex"
         "tures at the rate of 4 animations/second if an animated texture is a"
         "pplied to it."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Toggle"
        Hint = "The func_door_rotating must be triggered to close as well as b"
         "eing triggered to open."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X64"
        Cap = "X Axis"
        Hint = "The func_door_rotating will rotate around the X-axis rather th"
         "an the Z-axis."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X128"
        Cap = "Y Axis"
        Hint = "The func_door_rotating will rotate around the Y-axis rather th"
         "an the Z-axis."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_door_rotating will be inhibited and not appear when s"
         "kill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_door_rotating will be inhibited and not appear when s"
         "kill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_door_rotating will be inhibited and not appear when s"
         "kill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_door_rotating will be inhibited and not appear when d"
         "eathmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_door_rot_dh:form =
    {
      Help = "The func_door_rot_dh is a new Lazarus brush model, which is iden"
       "tical to the func_door_rotating, with one exception: The origin of the"
       " brush model is shifted to the origin of the entity specified by the p"
       "athtarget key at runtime. This feature allows you to build your rotati"
       "ng door in an area where you can ensure that its lighting will be corr"
       "ect, without fouling up the lighting of adjacent world brushes in the "
       "process. "
      distance: =
      {
        txt = "&"
        Hint = "Size of the arc in degrees that the door will describe when mo"
         "ving. (Default=90)."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Damage in hit points the door will do to an entity that blocks"
         " its movement. (Default=2)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies the debris model to use. Default=0. This value is ig"
         "nored if health is greater than or equal to 0."
        typ = "C"
        Items = "0) Default"$0D"1) Metal"$0D"2) Glass"$0D"3) Barrel"$0D"4) Cra"
         "te"$0D"5) Rock"$0D"6) Crystal"$0D"7) Mechanical"$0D"8) Wood"$0D"9) T"
         "ech"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
      }
      health: =
      {
        txt = "&"
        Hint = "When greater than zero, makes the door shootable, and specifie"
         "s hit points required before activating."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be killtargeted when the door is a"
         "ctivated."
      }
      mass: =
      {
        txt = "&"
        Hint = "Ignored if health is 0 or greater. Mass controls the number an"
         "d size of debris chunks spawned when the door is destroyed. (Default"
         "=75)."
      }
      message: =
      {
        txt = "&"
        hint = "Message>print when trig inactive"
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the door is to movewith."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity whose origin the func_door_rot_dh is "
         "to use as a spawning location at runtime. Normally this locating ent"
         "ity should be an info_notnull."
      }
      skinnum: =
      {
        txt = "&"
        Hint = "Specifies the skin number to use with the debris models for de"
         "stroyable doors."
        typ = "C"
        Items = "0) box3_7 (explosive crate)"$0D"1) box1_5"$0D"2) box3_1"$0D"3"
         ") box3_2"$0D"4) box3_3"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      sounds: =
      {
        txt = "&"
        typ = "C"
        Items = "0) Audible"$0D"1) Silent"
        values = "0"$0D"1"
        Hint = "Specifies sounds to be played when activated. Choices are 0=au"
         "dible; 1=silent. (Default=0)."
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in degrees/second that the door moves. (Default=100)."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the door opens. "
         "If the target is a func_areaportal, the areaportal will be triggered"
         " again when the door closes."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific door. A door with a targetname cannot be "
         "opened without another triggering entity which targets it, but it ca"
         "n be shot (if health>0)."
      }
      team: =
      {
        txt = "&"
        Hint = "Team name of the specific door. Doors with a identical team na"
         "mes will move together, and will all stop if one is blocked. With so"
         "me care concerning timing elements, a func_door_rotating may be team"
         "ed with a func_door."
      }
      turn_rider: =
      {
        txt = "&"
        Hint = "If non-zero, a player or other entity riding on the func_door_"
         "rot_dh will rotate as the door rotates. (Default=0)."
        typ = "C"
        Items = "0) Don't turn rider"$0D"1) Turn rider w/model"
        values = "0"$0D"1"
      }
      wait: =
      {
        txt = "&"
        Hint = "Time in seconds for the door to wait before it returns to its "
         "closed position. If wait=-1, the door will never return. (Default=3)"
         "."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start Open"
        Hint = "The func_door_rot_dh will appear in its open position rather t"
         "han its closed position."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Reverse"
        Hint = "The func_door_rot_dh Reverses the direction of rotation."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Crusher"
        Hint = "The func_door_rot_dh will not bounce back open when blocked, a"
         "nd instead will continue to apply its dmg value every 0.1 seconds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "No Monsters"
        Hint = "The func_door_rot_dh will not be triggered by monsters."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Animated"
        Hint = "The func_door_rot_dh will display a sequence of animated textu"
         "res at the rate of 4 animations/second if an animated texture is app"
         "lied to it."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Toggle"
        Hint = "The func_door_rot_dh must be triggered to close as well as bei"
         "ng triggered to open."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X64"
        Cap = "X Axis"
        Hint = "The func_door_rot_dh will rotate around the X-axis rather than"
         " the Z-axis."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X128"
        Cap = "Y Axis"
        Hint = "The func_door_rot_dh will rotate around the Y-axis rather than"
         " the Z-axis."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_door_rot_dh will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_door_rot_dh will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_door_rot_dh will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_door_rot_dh will be inhibited and not appear when dea"
         "thmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_door_secret:form =
    {
      Help = "A secret door. Slides back and then to the side."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_door_secret will move on the XY plane. (Def"
         "ault=0). (-1 is up, -2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the func_door_secret will move in 3 dimensions, spec"
         "ified by pitch and yaw. Roll is ignored. Syntax is pitch yaw 0. (Def"
         "ault=0 0 0)."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Damage in hit points the func_door_secret will do to an entity"
         " that blocks its movement. (Default=2)."
      }
      message: =
      {
        Txt = "&"
        Hint = "Character string to print to the screen when the player approa"
         "ches the func_door_secret. Only when targeted."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the door opens."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific door. A door with a targetname cannot be "
         "opened without another triggering entity which targets it, but it ca"
         "n be shot."
      }
      wait: =
      {
        txt = "&"
        Hint = "Time in seconds for the func_door_secret to wait before it ret"
         "urns to its closed position. If wait=-1, the door will never return."
         " (Default=5)."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Always Shoot"
        Hint = "The func_door_secret is shootable even if targeted."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "1st Left"
        Hint = "The func_door_secret 1st move is left of arrow."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "1st Down"
        Hint = "The func_door_secret 1st move is down from arrow."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_door_secret will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_door_secret will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_door_secret will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_door_secret will be inhibited and not appear when dea"
         "thmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_door_swinging:form =
    {
      Help = "The Lazarus func_door_swinging is a rotating brush model which i"
       "s similar to a func_door_rotating, in that when it's triggered, it tur"
       "ns."
      distance: =
      {
        txt = "&"
        Hint = "Size of the arc in degrees that the door will describe when mo"
         "ving in one of its two directions. If this value is negative, the do"
         "or's rotational behavior is reversed. (Default=90)."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Damage in hit points the door will do to an entity that blocks"
         " its movement. (Default=2)."
      }
      followtarget: =
      {
        txt = "&"
        Hint = "Targetname of the info_notnull used to identify the point oppo"
         "site the door's origin. All func_door_swinging's must have a followt"
         "arget set. The info_notnull will be removed at runtime for efficienc"
         "y reasons."
      }
      health: =
      {
        txt = "&"
        Hint = "When non-zero, makes the door shootable, and specifies hit poi"
         "nts required before activating. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be killtargeted when the door is a"
         "ctivated."
      }
      message: =
      {
        txt = "&"
        Hint = "Character string to print to the screen when the player approa"
         "ches the door if its trigger is inactive."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the door is to movewith."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity whose origin the func_door_swinging i"
         "s to use as a spawning location at runtime. Normally this locating e"
         "ntity should be an info_notnull."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies sounds to be played when activated. Choices are 0=au"
         "dible; 1=silent. Default=0."
        typ = "C"
        Items = "0) Audible"$0D"1) Silent"
        values = "0"$0D"1"
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in degrees/second that the door moves. (Default=100)."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the door opens. "
         "If the target is a func_areaportal, the areaportal will be triggered"
         " again when the door closes."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific door. A door with a targetname cannot be "
         "opened without another triggering entity which targets it, but it ca"
         "n be shot (if health>0)."
      }
      team: =
      {
        txt = "&"
        Hint = "Team name of the specific door. Doors with a identical team na"
         "mes will move together, and will all stop if one is blocked."
      }
      turn_rider: =
      {
        txt = "&"
        Hint = "If non-zero, a player or other entity riding on the func_door_"
         "swinging will rotate as the door rotates. (Default=0)."
        typ = "C"
        Items = "0) Don't turn rider"$0D"1) Turn rider w/model"
        values = "0"$0D"1"
      }
      wait: =
      {
        txt = "&"
        Hint = "If REVOLVING is not set, this is the time in seconds for the d"
         "oor to wait before returning to its closed position. If wait=-1, the"
         " door will never return. For non-REVOLVING doors, the default=3."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ignore Activator"
        Hint = "The code that determines what side of the func_door_swinging t"
         "he activator is on is disabled."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Revolving"
        Hint = "The func_door_swinging will never close, but instead can be re"
         "peatedly triggered to rotate distance degrees again, in either direc"
         "tion."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Crusher"
        Hint = "The func_door_swinging will not bounce back open when blocked,"
         " and instead will continue to apply its dmg value every 0.1 seconds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No Monsters"
        Hint = "The func_door_swinging will not be triggered by monsters."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Animated"
        Hint = "The func_door_swinging will display a sequence of animated tex"
         "tures at the rate of 4 animations/second if an animated texture is a"
         "pplied to it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Toggle"
        Hint = "The func_door_swinging must be triggered to close as well as b"
         "eing triggered to open."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        Cap = "X Axis"
        Hint = "The func_door_swinging will rotate around the X-axis rather th"
         "an the Z-axis."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Y Axis"
        Hint = "The func_door_swinging will rotate around the Y-axis rather th"
         "an the Z-axis."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_door_swinging will be inhibited and not appear when s"
         "kill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_door_swinging will be inhibited and not appear when s"
         "kill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_door_swinging will be inhibited and not appear when s"
         "kill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_door_swinging will be inhibited and not appear when d"
         "eathmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_explosive:form =
    {
      Help = "Use this for any brush that you want to explode or break apart, "
       "including windows."
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay, in seconds, after a func_explosive is tri"
         "ggered or killed before it detonates. (Default=0). "
      }
      dmg: =
      {
        txt = "&"
        Hint = "The amount of damage in hit points that the explosive will do "
         "at its origin when triggered. If dmg=0, no explosion effect or sound"
         " will occur. (Default=0)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies the debris model to use. (Default=0). This value is "
         "ignored if health is greater than or equal to 0."
        typ = "C"
        Items = "0) Default"$0D"1) Metal"$0D"2) Glass"$0D"3) Barrel"$0D"4) Cra"
         "te"$0D"5) Rock"$0D"6) Crystal"$0D"7) Mechanical"$0D"8) Wood"$0D"9) T"
         "ech"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the explosive will fire. (Default="
         "100)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the e"
         "xplosive fires."
      }
      mass: =
      {
        txt = "&"
        Hint = "The amount of debris to spawn when the explosive fires. Also s"
         "pecifies mass used in impact damage calculations. (Default=75).- MAX"
         " 800"
      }
      message: =
      {
        Txt = "&"
        Hint = "Character string to print to the screen when the func_explosiv"
         "e fires. Can't be targeted."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the explosive is to movewith."
      }
      skinnum: =
      {
        txt = "&"
        Hint = "Specifies the skin number to use with the debris models for de"
         "stroyable doors."
        typ = "C"
        Items = "0) box3_7 (explosive crate)"$0D"1) box1_5"$0D"2) box3_1"$0D"3"
         ") box3_2"$0D"4) box3_3"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the explosive fi"
         "res."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Specific name of the explosive. An explosive with a targetname"
         " cannot be damaged by weapon fire or impact damage, but instead must"
         " be triggered by another triggering entity, UNLESS the TRIGGER_SPAWN"
         " flag is set."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The func_explosive must be called by another entity before it "
         "appears in the map."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Animated"
        Hint = "The func_explosive will display a sequence of animated texture"
         "s at the rate of 4 animations/second if an animated texture is appli"
         "ed to it."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Animated Fast"
        Hint = "The func_explosive will display a sequence of animated texture"
         "s at the rate of 10 animations/second if an animated texture is appl"
         "ied to it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Explosives Only"
        Hint = "If set, func_explosive may only be damaged by explosions (gren"
         "ades, rockets, BFG blast, target_explosion, etc.) "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_explosive will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_explosive will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_explosive will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_explosive will be inhibited and not appear when death"
         "match=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_force_wall:form =
    {
      Help = "A vertical particle force wall."
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the force wall wi"
         "ll be turned off before it is auto-killtargeted (see this page for d"
         "etails). (Default=0)."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Specifies the amount of health point damage per second that th"
         "e force wall will do when touched. (Default=0)."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies the color of the force wall particles, using the Qua"
         "ke2 palette index as its definition. (Default = 208 Green)"
        Items = "192) Yellow"$0D"208) Green(Default)"$0D"215) White"$0D"224) O"
         "range"$0D"240) Red"$0D"241) Blue"$0D"256) Black"
        values = "192"$0D"208"$0D"215"$0D"224"$0D"240"$0D"241"$0D"256"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_force_wall. When triggered, it will "
         "toggle on/off."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "Sets the func_force_wall  to be active when the map loads."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_force_wall  will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_force_wall  will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_force_wall  will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_force_wall will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    func_group:form =
    {
      Help = "Used to group brushes together just for editor convenience."
    }
    func_killbox:form =
    {
      Help = "Kills everything inside when fired, irrespective of protection."
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the killbox will "
         "be called before it is auto-killtargeted (see this page for details)"
         ". (Default=0(."
      }
      targetname: =
      {
        txt = "&"
        Hint = "The name of the specific func_killbox."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_killbox will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_killbox will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_killbox will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_killbox will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    func_monitor:form =
    {
      Help = "Security Camera viewing stations."
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity (or entities) used as the func_monito"
         "r's viewpoint. "
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific func_monitor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Animated"
        Hint = "Monitor will display a sequence of animated textures at the ra"
         "te of 4 animations/second if an animated texture is applied to it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Animated Fast"
        Hint = "Monitor will display a sequence of animated textures at the ra"
         "te of 10 animations/second if an animated texture is applied to it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Third Person"
        Hint = "If not set and the monitor's target is a misc_actor, then the "
         "misc_actor model will be made invisible while in use."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_monitor will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_monitor will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_monitor will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_monitor will be inhibited and not appear when deathma"
         "tch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_object:form =
    {
      Help = "This is solid bmodel that will fall if it's support is removed."
      dmg: =
      {
        txt = "&"
        Hint = "Damage in hit points the func_object will do to an entity that"
         " blocks its movement. (Default=2)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_object."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The func_object must be called by another entity before it app"
         "ears in the map."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Animated"
        Hint = "The func_object will display a sequence of animated textures a"
         "t the rate of 4 animations/second if an animated texture is applied "
         "to it."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Animated Fast"
        Hint = "The func_object will display a sequence of animated textures a"
         "t the rate of 10 animations/second if an animated texture is applied"
         " to it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_object will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_object will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_object will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_object will be inhibited and not appear when deathmat"
         "ch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_pendulum:form =
    {
      Help = "The Lazarus func_pendulum is... well, a pendulum. It swings back"
       " and forth indefinitely, or can be triggered on and off."
      attenuation: =
      {
        txt = "&"
        Hint = "Valid range is >0.0 to 1.0. Default value is 0.5. This value h"
         "as no effect on player or monster impacts."
      }
      distance: =
      {
        txt = "&"
        Hint = "Total arc that the pendulum rotates through, in degrees. The m"
         "aximum distance value is 359 degrees, but really anything greater th"
         "an 160 or so will look strange if you're attempting to model a reali"
         "stic pendulum. (Default=90)."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Damage to blocker. (Default=5)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the amount of damage required to destroy the pendulu"
         "m."
      }
      mass: =
      {
        txt = "&"
        Hint = "Mass is only used when figuring the knockback of solid brush m"
         "odels that block the pendulum motion (e.g. func_pushable). (Default="
         "200)."
      }
      move_origin: =
      {
        txt = "&"
        Hint = "Move_origin is a vector from the origin to the center of gravi"
         "ty of the pendulum. Normally this vector would be (0 0 -radius). "
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      phase: =
      {
        txt = "&"
        Hint = "Specifies a built-in delay for a pendulum, equal to phase * pe"
         "riod. Phase should be between 0.0 and 1.0."
      }
      radius: =
      {
        txt = "&"
        Hint = "The distance from the pivot point to the center of gravity of "
         "the pendulum. (Default=100)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the func_pendulum. Func_pendulum without the START_ON "
         "spawnflag must be triggered (and so must have a targetname) to opera"
         "te."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "If set, the func_pendulum will begin rotating at startup. Othe"
         "rwise the pendulum must be triggered to begin moving."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Stop at Top"
        Hint = "If set, when a moving pendulum is triggered it will continue t"
         "o its initial topmost position before stopping. If not set then unde"
         "r the same conditions the pendulum will stop immediately."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_pendulum will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_pendulum will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_pendulum will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_pendulum will be inhibited and not appear when deathm"
         "atch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_pivot:form =
    {
      Help = "works like a see-saw"
      dmg: =
      {
        txt = "&"
        Hint = "Damage to blocker. (Default=2)."
      }
      roll: =
      {
        txt = "&"
        Hint = ""
      }
      pitch: =
      {
        txt = "&"
        Hint = ""
      }
      speed: =
      {
        txt = "&"
        Hint = "(Default=100)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the func_pivot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_pivot will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_pivot will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_pivot will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_pivot will be inhibited and not appear when deathmatc"
         "h=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_plat:form =
    {
      Help = "Plats are always drawn in the extended position, so they will li"
       "ght correctly.If the plat is the target of another trigger or button, "
       "it will start out disabled in the extended position until it is trigge"
       "r, when it will lower and become a normal plat."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_plat will move on the XY plane. (-1 is up, "
         "-2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the func_plat will move in 3 dimensions, specified b"
         "y pitch and yaw. Roll is ignored. Syntax is pitch yaw 0."
      }
      accel: =
      {
        Txt = "&"
        Hint = "Acceleration speed when activated, goes from stopped to speed "
         "(Default=500)."
      }
      decel: =
      {
        Txt = "&"
        Hint = "Deceleration speed when deactivated, goes from speed to 0 (def"
         "ault=?)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Damage in hit points the func_plat will do to an entity that b"
         "locks its movement. (Default=2)."
      }
      height: =
      {
        Txt = "&"
        Hint = "If the height key is set, that will determine the amount the f"
         "unc_plat moves, instead of being implicitly determoveinfoned by the "
         "model's height."
      }
      lip: =
      {
        Txt = "&"
        Hint = "Lip remaining at end of func_plat move (Default=8)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the func_plat is to movewith."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "1) Base Fast"$0D"2) Chain Slow"
        Values = "1"$0D"2"
        Hint = "Sound it makes while moving."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in units/second that the func_plat moves. (Default=150)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "If set, no touch field will be spawned and a remote button or "
         "trigger field activates the func_plat."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Platform low trigger"
        Hint = "If you check this, the func_plat will trigger a the bottom and"
         " move up & down."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_plat will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_plat will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_plat will be inhibited and not appear when skill=2 or"
         " greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_plat will be inhibited and not appear when deathmatch"
         "=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_pushable:form =
    {
      Help = "The Lazarus func_pushable is a brush model which can be moved ab"
       "out by the player or other moving entities in the game."
      dmg: =
      {
        txt = "&"
        Hint = "The amount of damage in hit points that the pushable will do a"
         "t its origin when destroyed. If dmg=0, no explosion effect or sound "
         "will occur. (Default=0)."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the pushable's d"
         "estruction."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies the debris model to use. Default=0. This value is ig"
         "nored if health is greater than or equal to 0."
        typ = "C"
        Items = "0) Default"$0D"1) Metal"$0D"2) Glass"$0D"3) Barrel"$0D"4) Cra"
         "te"$0D"5) Rock"$0D"6) Crystal"$0D"7) Mechanical"$0D"8) Wood"$0D"9) T"
         "ech"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the pushable will be destroyed. (D"
         "efault=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the p"
         "ushable's destruction."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the func_pushable. The mass value will determine how"
         " quickly it can be pushed, if it floats or sinks in a liquid, and ho"
         "w much damage it will do if dropped on another damageable entity. (D"
         "efault=400)."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen upon the"
         " pushable's destruction."
      }
      skinnum: =
      {
        txt = "&"
        Hint = "Specifies the skin number to use with the debris models for de"
         "stroyable doors."
        typ = "C"
        Items = "0) box3_7 (explosive crate)"$0D"1) box1_5"$0D"2) box3_1"$0D"3"
         ") box3_2"$0D"4) box3_3"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      sounds: =
      {
        txt = "&"
        Hint = "Sound to be played when the pushable is moved along while on t"
         "he ground."
        typ = "C"
        Items = "0) Silent"$0D"1) Tank Thud"$0D"2) Rail Gun Hum"$0D"3) Rocket "
         "Fly"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_pushable. The pushable may be trigge"
         "red and made to explode like a func_explosive."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The func_pushable must be called by another entity before it a"
         "ppears in the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Knockback"
        Hint = "Normally, damageable func_pushables (health > 0) are pushed ar"
         "ound by weapon fire in the same way that players and monsters are."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_pushable will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_pushable will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_pushable will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_pushable will be inhibited and not appear when deathm"
         "atch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_reflect:form =
    {
      Help = "This is just a solid wall if not inhibited."
      count: =
      {
        txt = "&"
        Hint = "Count>kill at # deactivations ??"
      }
      lip: =
      {
        txt = "&"
        Hint = "Specifies an additional standoff distance from the applicable "
         "func_reflect reflecting plane that reflected entities will be placed"
         ". (Default=3)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the button is to movewith."
      }
      style: =
      {
        typ = "C"
        txt = "&"
        Hint = "Specifies the side of an area that the func_reflect sits on."
        items = "0) Floor"$0D"1) Ceiling"$0D"2) East wall"$0D"3) West wall"$0D
         "4) North wall"$0D"5) South wall"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_reflect. You can toggle the state of"
         " func_reflect on/off if the appropriate spawnflags are set, or you m"
         "ight want to killtarget func_reflect after destroying."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X1"
        Cap = "Start Off"
        Hint = "If set, the func_reflect will not reflect any entities when th"
         "e map loads, and must be targeted to work."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Toggle"
        Hint = "If set, func_reflect toggles on/off every time it is triggered"
         ". If not set, func_reflect changes states the first time it is trigg"
         "ered, but subsequent trigger events do nothing."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_reflect will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_reflect will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_reflect will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_reflect will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    func_rotating:form =
    {
      Help = "You need to have an origin brush as part of this entity. The cen"
       "ter of that brush will be the point around which it is rotated."
      dmg: =
      {
        txt = "&"
        Hint = "Damage in hit points the func_rotating will do to an entity th"
         "at blocks its movement. (Default=2)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the func_rotating is to movewi"
         "th."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in degrees/second that the func_rotating turns. (Default"
         "=100)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_rotating. When triggered, it will to"
         "ggle on/off."
      }
      team: =
      {
        txt = "&"
        Hint = "Team name of the specific func_rotating. Func_rotatings with a"
         " identical team names will turn together, and will all stop if one i"
         "s blocked. With some care concerning timing elements, a func_rotatin"
         "g may be teamed with a func_train."
      }
      turn_rider: =
      {
        txt = "&"
        Hint = "If non-zero, a player or other entity riding on the func_rotat"
         "ing will rotate as the func_rotating rotates. (Default=0)."
        typ = "C"
        Items = "0) Don't turn rider"$0D"1) Turn rider w/model"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start On"
        Hint = "Sets the func_rotating to be active when the map loads."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Reverse"
        Hint = "The func_rotating Reverses the direction of rotation."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "X  Axis"
        Hint = "The func_rotating will rotate around the X-axis rather than th"
         "e Z-axis."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Y Axis"
        Hint = "The func_rotating will rotate around the Y-axis rather than th"
         "e Z-axis."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Pain on Touch"
        Hint = "The func_rotating will apply its dmg value every 0.1 seconds b"
         "y simply coming into contact with it - blocking it isn't necessary."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Stop"
        Hint = "The func_rotating will stop moving instead of pushing entities"
         "."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X64"
        Cap = "Animated"
        Hint = "The func_rotating will display a sequence of animated textures"
         " at the rate of 4 animations/second if an animated texture is applie"
         "d to it."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X128"
        Cap = "Animated Fast"
        Hint = "The func_rotating will display a sequence of animated textures"
         " at the rate of 10 animations/second if an animated texture is appli"
         "ed to it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_rotating will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_rotating will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_rotating will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_rotating will be inhibited and not appear when deathm"
         "atch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_rotating_dh:form =
    {
      Help = "You need to have an origin brush as part of this entity. The cen"
       "ter of that brush will be the point around which it is rotated."
      dmg: =
      {
        txt = "&"
        Hint = "Damage in hit points the func_rotating_dh will do to an entity"
         " that blocks its movement. Default=2."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the func_rotating_dh is to mov"
         "ewith."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity whose origin the func_rotating_dh is "
         "to use as a spawning location at runtime. Normally this locating ent"
         "ity should be an info_notnull."
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in degrees/second that the func_rotating_dh turns. Defau"
         "lt=100."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_rotating_dh. When triggered, it will"
         " toggle on/off."
      }
      team: =
      {
        txt = "&"
        Hint = "Team name of the specific func_rotating_dh. Func_rotatings wit"
         "h a identical team names will turn together, and will all stop if on"
         "e is blocked. With some care concerning timing elements, a func_rota"
         "ting may be teamed with a func_train."
      }
      turn_rider: =
      {
        txt = "&"
        Hint = "If non-zero, a player or other entity riding on the func_rotat"
         "ing_dh will rotate as the func_rotating rotates. (Default=0)."
        typ = "C"
        Items = "0) Don't turn rider"$0D"1) Turn rider w/model"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start On"
        Hint = "Sets the func_rotating_dh to be active when the map loads."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Reverse"
        Hint = "The func_rotating_dh Reverses the direction of rotation."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "X  Axis"
        Hint = "The func_rotating_dh will rotate around the X-axis rather than"
         " the Z-axis."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Y Axis"
        Hint = "The func_rotating_dh will rotate around the Y-axis rather than"
         " the Z-axis."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Pain on Touch"
        Hint = "The func_rotating_dh will apply its dmg value every 0.1 second"
         "s by simply coming into contact with it - blocking it isn't necessar"
         "y."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Stop"
        Hint = "The func_rotating_dh will stop moving instead of pushing entit"
         "ies."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X64"
        Cap = "Animated"
        Hint = "The func_rotating_dh will display a sequence of animated textu"
         "res at the rate of 4 animations/second if an animated texture is app"
         "lied to it."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X128"
        Cap = "Animated Fast"
        Hint = "The func_rotating_dh will display a sequence of animated textu"
         "res at the rate of 10 animations/second if an animated texture is ap"
         "plied to it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_rotating_dh will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_rotating_dh will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_rotating_dh will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_rotating_dh will be inhibited and not appear when dea"
         "thmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_timer:form =
    {
      Help = "A timer. When the time is up, the timer triggers all of its targ"
       "ets, and then starts over. These can be used but not touched."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the timer will be"
         " turned off before it is auto-killtargeted. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the timer will fire afte"
         "r being triggered."
      }
      pausetime: =
      {
        txt = "&"
        Hint = "Specifies an initial delay before firing. Similar to delay, bu"
         "t only used when the START_ON spawnflag is set."
      }
      random: =
      {
        txt = "&"
        Hint = "Specifies a +/- variance modifier to the wait value. The value"
         " of random must always be less than the value of wait."
      }
      target: =
      {
        txt = "&"
        Hint = "The targetname of the entity the timer is to trigger."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_timer. The timer toggles on/off each"
         " time it is triggered."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the time is seconds between firings. Modified by ran"
         "dom."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "Sets the func_timer to be active when the map loads."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_timer will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_timer will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_timer will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_timer will be inhibited and not appear when deathmatc"
         "h=1."
      }
    }
    func_trackchange:form =
    {
      Help = "Train track changing platform."
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the path_track defining the trackchange's "$22"b"
         "ottom"$22" position."
      }
      distance: =
      {
        txt = "&"
        Hint = "Angle that the train will turn when travelling from its "$22"t"
         "op"$22" path_track (defined by pathtarget) to its "$22"bottom"$22" p"
         "ath_track (defined by combattarget). For non-zero rotations, func_tr"
         "ackchange must include an origin brush. (Default=0)."
      }
      height: =
      {
        txt = "&"
        Hint = "Travel distance from the "$22"top"$22" (pathtarget) to the "$22
         "bottom"$22" (combattarget) path_tracks. (Default=0)."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the path_track defining the trackchange's "$22"t"
         "op"$22" position."
      }
      speed: =
      {
        txt = "&"
        Hint = "Maximum translational speed (units/sec) and rotational speed ("
         "degrees/sec). "
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the func_tracktrain moved by the trackchange. If"
         " the train is within its distance value of the starting path_track, "
         "the train will be moved along with trackchange. "
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the func_trackchange. This field is required."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Activate Train"
        Hint = "If set, train will automatically begin moving towards the next"
         " path_track when the trackchange reaches its destination."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Start Bottom"
        Hint = "The func_trackchange will start in its bottom position (define"
         "d by combattarget)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        Cap = "X Axis"
        Hint = "The func_trackchange will move along and/or rotate around the "
         "X axis rather than Z."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Y Axis"
        Hint = "The func_trackchange will move along and/or rotate around the "
         "Y axis rather than Z."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_trackchange will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_trackchange will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_trackchange will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_trackchange will be inhibited and not appear when dea"
         "thmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_tracktrain:form =
    {
      Help = "The Lazarus func_tracktrain brush model provides the same sort o"
       "f functionality as its namesake from Half-Life."
      bleft: =
      {
        txt = "&"
        Hint = "Specifies bottom-left (minY/minX/minZ) bounding box coordinate"
         "s for the train control field, using the tracktrain's origin as the "
         "reference. See also tright. Ignored if NOCONTROL is set."
      }
      distance: =
      {
        txt = "&"
        Hint = "This may loosely be defined as the train wheelbase."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Specifies the damage inflicted by the func_tracktrain every 0."
         "1 seconds on entities that block its progress. (Default=0)."
      }
      height: =
      {
        txt = "&"
        Hint = "Sets the height above path_tracks that the train will ride."
      }
      message: =
      {
        txt = "&"
        Hint = "Character string to print to the screen the first time the pla"
         "yer enters the bleft/tright train control zone of an enabled train. "
         "This message will only appear once."
      }
      roll: =
      {
        txt = "&"
        Hint = "Sets the bank angle when going through turns at any speed. Non"
         "-zero values will override roll_speed. See movement notes for more d"
         "etails. Default=0."
      }
      roll_speed: =
      {
        txt = "&"
        Hint = "Similar to roll, this sets the bank angle when going through t"
         "urns at full speed. Default=0."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Defines the family of sounds used by the func_tracktrain."
        typ = "C"
        Items = "-1) none (silent)"$0D"1) Steel Wheels(Default)"$0D"2) Squeaky"
         " Steel Wheels"
        values = "-1"$0D"1"$0D"2"$0D"3"
      }
      speed: =
      {
        txt = "&"
        Hint = "Sets the maximum speed of the func_tracktrain. (Default=64)."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_track where the func_tracktrain will sp"
         "awn."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_tracktrain. "
      }
      tright: =
      {
        txt = "&"
        Hint = "Specifies top-right (maxY/maxX/maxZ) bounding box coordinates "
         "for the train control field, using the tracktrain's origin as the re"
         "ference. See also bleft. Ignored if NOCONTROL is set."
      }
      viewmessage: =
      {
        txt = "&"
        Hint = "Character string to print to the screen when the player enters"
         " the bleft/tright train control zone and the tracktrain has been dis"
         "abled by calling its targetname."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "No Pitch"
        Hint = "The func_tracktrain will not pitch as it changes grades."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Control"
        Hint = "The func_tracktrain cannot be controlled by the player in the "
         "normal manner, and instead must be triggered directly by calling its"
         " targetname. When activated, it immediately accelerates to its full "
         "speed."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "One Way"
        Hint = "The func_tracktrain may move forward only, and can never back "
         "up."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Other Map"
        Hint = "The func_tracktrain will start out invisible, nonsolid, and di"
         "sabled. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Hud"
        Hint = "The func_tracktrain will not cause the HUD graphic to appear w"
         "hen the player takes control."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Animate Indicator"
        Hint = "The func_tracktrain will display selected frames of a 15-frame"
         " (0-14) animated texture, if applied, which can serve to indicate th"
         "e tracktrain's speed/direction status."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        Cap = "Animate"
        Hint = "The func_tracktrain will display a sequence of animated textur"
         "es at the rate of 4 animations/second if an animated texture is appl"
         "ied to it. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Start Off"
        Hint = "The func_tracktrain will be disabled when the map loads. This "
         "spawnflag applies to drivable trains only. Drivable trains toggle be"
         "tween disabled/enabled each time they are triggered."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_tracktrain will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_tracktrain will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_tracktrain will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_tracktrain will be inhibited and not appear when deat"
         "hmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_train:form =
    {
      Help = "Trains are moving platforms that players can ride."
      dmg: =
      {
        Txt = "&"
        Hint = "The damage inflicted by the func_train on entities that block "
         "its progress."$0D"Ignored if BLOCK_STOPS is set. (Default=2)."
      }
      health: =
      {
        txt = "&"
        Hint = "A non-zero health value will make your func_train damageable b"
         "y weapons fire. When "$22"dead"$22", the func_train will explode wit"
         "h a zero-damage explosion."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the func_train is to movewith."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      pitch_speed: =
      {
        txt = "&"
        hint = "Pitch_Speed>deg/sec"
      }
      roll_speed: =
      {
        txt = "&"
        hint = "Roll_Speed>deg/sec"
      }
      yaw_speed: =
      {
        txt = "&"
        hint = "Yaw_Speed>deg/sec"
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in units/second that the func_train moves. (Default=100)"
         "."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the first path_corner on the func_train's route."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the func_train."$0D"Unnamed func_train will always sta"
         "rt on, regardless of the START_ON setting."
      }
      team: =
      {
        Txt = "&"
        Hint = "Team name of the func_train."$0D"Trains with an identical team"
         " name will move together, and will all stop if one is blocked."
      }
      turn_rider: =
      {
        txt = "&"
        Hint = "If non-zero, all gravity-affected riders will be turned along "
         "with the train. (Default=0)"
        typ = "C"
        Items = "0) Don't turn rider"$0D"1) Turn rider w/model"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start On"
        Hint = "By default a func_train with a targetname will only start movi"
         "ng when triggered by another entity."$0D"If you set the START_ON spa"
         "wnflag then the func_train will start moving when the level starts."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Toggle"
        Hint = "If set, allows the func_train to be toggled on/off multiple ti"
         "mes."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Block Stops"
        Hint = "The func_train will stop completely when an entity is blocking"
         " its way."$0D"The blocking entity will not take damage, even if a po"
         "sitive dmg value is used."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Rotate"
        Hint = "If set, func_train will alter its pitch and yaw angles to turn"
         " towards the next path_corner in its sequence, and also alter its ro"
         "ll angle to turn towards the roll value of that same path_corner, un"
         "less that path_corner has the NO_ROTATE spawnflag set. Rotational sp"
         "eeds are controlled with the pitch_speed, roll_speed, and yaw_speed "
         "values."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Rotate Const"
        Hint = "If set, the func_train will constantly rotate around one or mo"
         "re axes continuously, until the train is toggled off or the rotation"
         "al speeds are changed by a path_corner."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Animated"
        Hint = "Will cycle through texture animations while train is on, 1 fra"
         "me/second."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        Cap = "Animated Fast"
        Hint = "Will cycle through ALL texture animation frames in 1 second wh"
         "ile train is on."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Smooth"
        Hint = "f set, the game will skip the last 0.1 second slowdown and pro"
         "ceed as if the train had arrived at the path_corner, though it may b"
         "e up to 0.1*speed units short of that location. This does not effect"
         " path_corner pathtargets in any way - they will still be triggered."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_train will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_train will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_train will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_train will be inhibited and not appear when deathmatc"
         "h=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4096"
        Cap = "Spline"
        Hint = "If SPLINE is set, the func_train will follow a spline curve be"
         "tween path_corners."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_trainbutton:form =
    {
      Help = "The Lazarus func_trainbutton is a new brush model entity which i"
       "s based on the standard Quake2 func_button, except that it can move al"
       "ong with a func_train."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_trainbutton will move on the XY plane. (Def"
         "ault=0). (-1 is up, -2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the func_trainbutton will move in 3 dimensions, spec"
         "ified by pitch and yaw. Roll is ignored. Syntax is pitch yaw 0. (Def"
         "ault=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the func_trainbutton fir"
         "es. (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "When non-zero, makes the func_trainbutton shootable, and speci"
         "fies hit points required before activating. A shootable button is no"
         "t pushable. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the f"
         "unc_trainbutton fires."
      }
      lip: =
      {
        txt = "&"
        Hint = "When activated, the func_trainbutton will move [brush thicknes"
         "s]+[-2]-[lip value] units. (Default=4)."
      }
      message: =
      {
        txt = "&"
        Hint = "Character string to print to the screen when the func_trainbut"
         "ton fires."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the func_trainbutton is to mov"
         "ewith."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies sounds to be played when activated. Choices are 0=au"
         "dible; 1=silent. Default=0."
        typ = "C"
        Items = "0) Audible"$0D"1) Silent"
        values = "0"$0D"1"
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in units/second that the func_trainbutton moves. (Defaul"
         "t=40)."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the func_trainbu"
         "tton fires."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_trainbutton. A func_trainbutton with"
         " a targetname cannot be pressed, but it can be shot (if health>0) an"
         "d it can be triggered with another triggering entity."
      }
      wait: =
      {
        txt = "&"
        Hint = "Time in seconds for the func_trainbutton to wait before it ret"
         "urns to its ready position. If wait=-1, the button will never return"
         ". (Default=3)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "+Attack"
        Hint = "Can be activated by looking at it and pressing +attack"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Touch"
        Hint = "Can NOT be activated by touching - must use +attack"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_trainbutton will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_trainbutton will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_trainbutton will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_trainbutton will be inhibited and not appear when dea"
         "thmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_vehicle:form =
    {
      Help = "The Lazarus func_vehicle is a brush model that may be "$22"drive"
       "n"$22" by the player."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the vehicle on the XY plane. (De"
         "fault=0)."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when vehicle damage p"
         "oints meets or exceeds its health."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Damage in hit points the vehicle will do when destroyed, accom"
         "panied by the familiar fireball. If dmg=0, no fireball will appear. "
         "(Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Damage hit points the vehicle will sustain before blowing up. "
         "If health=0; the vehicle is invulnerable."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the vehicle."$0D"Used for calculating impact damage "
         "to other entities (destroyable bmodels, monsters, other players, etc"
         ")."$0D"(Default=2000)."
      }
      message: =
      {
        txt = "&"
        Hint = "Text string displayed to the screen when the player takes cont"
         "rol of the func_vehicle for the first time."
      }
      move_origin: =
      {
        txt = "&"
        Hint = "Specifies the offset in 3 dimensions from the func_vehicle ori"
         "gin to the driver origin."$0D"The player origin must be within 16 un"
         "its of this point before the game allows him to take control of the "
         "vehicle."$0D"(Default=0 0 0)."
      }
      radius: =
      {
        txt = "&"
        Hint = "Specifies the turning radius of the vehicle in map units. (Def"
         "ault=256)."
      }
      speed: =
      {
        txt = "&"
        Hint = "Maximum allowable full forward speed of the func_vehicle, in u"
         "nits/sec."$0D"Func_vehicle accelerates to full speed in roughly 1 se"
         "cond."$0D"It decelerates by 1/2 of its current speed every frame, un"
         "til the speed is at or below 10 units/sec (at which point it comes t"
         "o a full stop)."$0D"(Default=200)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_vehicle."
      }
      turn_rider: =
      {
        txt = "&"
        Hint = "If non-zero, and the func_vehicle is serving as a movewith par"
         "ent, then its movewith children will rotate as the func_vehicle turn"
         "s. (Default=0). "
        typ = "C"
        Items = "0) Don't turn children"$0D"1) Turn children w/vehicle"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Block Stops"
        Hint = "The func_vehicle's movement will be blocked by all solid entit"
         "ies, including monsters, players, func_explosives and func_pushables"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Hud"
        Hint = "The func_vehicle will not cause the HUD graphic to appear when"
         " the player takes control."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_vehicle will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_vehicle will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_vehicle will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_vehicle will be inhibited and not appear when deathma"
         "tch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_wall:form =
    {
      Help = "This is just a solid wall if not inhibited."
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the wall will be "
         "turned off before it is auto-killtargeted (see this page for details"
         "). (Default=0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the wall is to movewith."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific func_wall. When triggered, it will toggle"
         " on/off."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The func_wall must be called by another entity before it appea"
         "rs in the map."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Toggle"
        Hint = "The func_wall can be toggled on and off."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Start On"
        Hint = "Sets func_wall to be active when the map loads. TOGGLE must be"
         " set also."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Animated"
        Hint = "The func_wall will display a sequence of animated textures at "
         "the rate of 4 animations/second if an animated texture is applied to"
         " it."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Animated Fast"
        Hint = "The func_wall will display a sequence of animated textures at "
         "the rate of 10 animations/second if an animated texture is applied t"
         "o it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_wall will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_wall will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_wall will be inhibited and not appear when skill=2 or"
         " greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_wall will be inhibited and not appear when deathmatch"
         "=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    func_water:form =
    {
      Help = "Func_water is a moveable water brush.  It must be targeted to op"
       "erate."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_water will move on the XY plane. (-1 is up,"
         " -2 is down). (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the func_water will move in 3 dimensions, specified "
         "by pitch and yaw. Roll is ignored. Syntax is pitch yaw 0. (Default=0"
         " 0 0)."
      }
      lip: =
      {
        Txt = "&"
        Hint = "When activated, the func_water will move [brush thickness]+[-2"
         "]-[lip value] units. (Default=0)."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "1) No Sound"$0D"2) Water"$0D"3) Lava"
        Values = "1"$0D"2"$0D"3"
        Hint = "Specifies sounds to be played while the func_water is moving."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in units/second that the func_water moves. (Default=25)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the func_water m"
         "oves."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_water."
      }
      team: =
      {
        Txt = "&"
        Hint = "Team name of the specific func_water."$0D"Func_water's with a "
         "identical team names will move together, and if solid, will all stop"
         " if one is blocked."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Time in seconds for the func_water to wait before it returns t"
         "o its "$22"closed"$22" position."$0D"If wait=-1, the func_water must"
         " be retriggered in order for it to close. (Default=-1)."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start Open"
        Hint = "The func_water will appear in its "$22"open"$22" position rath"
         "er than its "$22"closed"$22" position."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Mud"
        Hint = "The func_water brush will have the properties of mud."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_water will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_water will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_water will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_water will be inhibited and not appear when deathmatc"
         "h=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    hint_path:form =
    {
      Help = "Use this to get the monsters to walk around the map."
      bbox = '-8 -8 -8 8 8 8'
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the next hint_path in a sequence. All hint_paths"
         " other than the last in a sequence should have a target."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific hint_path. All hint_paths other than the "
         "first in a sequence should have a targetname."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the time in seconds that a monster should pause at a"
         " hint_path before proceeding to the next. (Default=0)."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "End"
        Hint = "Sets a hint_path to be a chain end. The two hint_paths at eith"
         "er end of the sequence chain should use this flag. END hint_paths sh"
         "ould have a target or targetname, but not both."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The hint_path will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The hint_path will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The hint_path will be inhibited and not appear when skill=2 or"
         " greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The hint_path will be inhibited and not appear when deathmatch"
         "=1."
      }
    }
    info_notnull:form =
    {
      Help = "Place this at the tip of a turret_breach."
      bbox = '-4 -4 -4 4 4 4'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Only relevant if the info_notnull is used as a teleporter destinatio"
         "n."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Only relevant if the info_notn"
         "ull is used as a teleporter destination."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the info_notnull is to movewit"
         "h."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific info_notnull."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "Info_notnull will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "Info_notnull will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "Info_notnull will be inhibited and not appear when skill=2 or "
         "greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "Info_notnull will be inhibited and not appear when deathmatch="
         "1."
      }
    }
    info_null:form =
    {
      Help = "Used as a positional target for spotlights, etc."
      bbox = '-4 -4 -4 4 4 4'
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific info_null."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "Info_null will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "Info_null will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "Info_null will be inhibited and not appear when skill=2 or gre"
         "ater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "Info_null will be inhibited and not appear when deathmatch=1."
      }
    }
    info_player_start:form =
    {
      Help = "The normal starting point for a level."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "players/male/tris.md2"
      mdlskin = "players/male/cipher.pcx"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the start will be"
         " used as a spawn point before being auto-killtargeted. (Default=0). "
         "Ignored unless deathmatch=0."
      }
      health: =
      {
        txt = "&"
        hint = "If non-zero, health specifies an upper-end for the player's he"
         "alth when he spawns into the map at this location."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the player's starting weapon. Overrides the style se"
         "tting used by worldspawn."
        typ = "C"
        Items = "0) Don't specify"$0D"1) Blaster"$0D"2) SG w/Blaster"$0D"3) SS"
         "G w/Blaster"$0D"4) MG w/Blaster"$0D"5) CG w/Blaster"$0D"6) GL w/Blas"
         "ter"$0D"7) RL w/Blaster"$0D"8) HB w/Blaster"$0D"9) RG w/Blaster"$0D"1"
         "0) BFG w/Blaster"$0D"-1) None"$0D"-2) SG (no Blaster)"$0D"-3) SSG (n"
         "o Blaster)"$0D"-4) MG (no Blaster)"$0D"-5) CG (no Blaster)"$0D"-6) G"
         "L (no Blaster)"$0D"-7) RL (no Blaster)"$0D"-8) HB (no Blaster)"$0D"-"
         "9) RG (no Blaster)"$0D"-10) BFG (no Blaster)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"-1"$0D"-2"$0D"-3"$0D"-4"$0D"-5"$0D"-6"$0D"-7"$0D"-8"$0D"-9"$0D
         "-10"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific info_player_start."$0D"When loading a map"
         " with multiple info_player_starts from the console,"$0D"the start th"
         "at the player will spawn at will be the first unnamed start found in"
         " the map file."$0D"If all starts are named, it will be the first sta"
         "rt found."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "This info_player_start will be inhibited and not appear when s"
         "kill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "This info_player_start will be inhibited and not appear when s"
         "kill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "This info_player_start will be inhibited and not appear when s"
         "kill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "This info_player_start will be inhibited and not appear when d"
         "eathmatch=1."
      }
    }
    info_player_coop:form =
    {
      Help = "Potential spawning position for coop games."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "players/female/tris.md2"
      mdlskin = "players/female/brianna.pcx"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the player's starting weapon. Overrides the style se"
         "tting used by worldspawn."
        typ = "C"
        Items = "0) Don't specify"$0D"1) Blaster"$0D"2) SG w/Blaster"$0D"3) SS"
         "G w/Blaster"$0D"4) MG w/Blaster"$0D"5) CG w/Blaster"$0D"6) GL w/Blas"
         "ter"$0D"7) RL w/Blaster"$0D"8) HB w/Blaster"$0D"9) RG w/Blaster"$0D"1"
         "0) BFG w/Blaster"$0D"-1) None"$0D"-2) SG (no Blaster)"$0D"-3) SSG (n"
         "o Blaster)"$0D"-4) MG (no Blaster)"$0D"-5) CG (no Blaster)"$0D"-6) G"
         "L (no Blaster)"$0D"-7) RL (no Blaster)"$0D"-8) HB (no Blaster)"$0D"-"
         "9) RG (no Blaster)"$0D"-10) BFG (no Blaster)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"-1"$0D"-2"$0D"-3"$0D"-4"$0D"-5"$0D"-6"$0D"-7"$0D"-8"$0D"-9"$0D
         "-10"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name used for changing from other maps."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "This info_player_coop will be inhibited and not appear when sk"
         "ill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "This info_player_coop will be inhibited and not appear when sk"
         "ill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "This info_player_coop will be inhibited and not appear when sk"
         "ill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "This info_player_coop will be inhibited and not appear when de"
         "athmatch=1."
      }
    }
    info_player_deathmatch:form =
    {
      Help = "Potential spawning position for deathmatch games."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/objects/dmspot/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the player's starting weapon. Overrides the style se"
         "tting used by worldspawn."
        typ = "C"
        Items = "0) Don't specify"$0D"1) Blaster"$0D"2) SG w/Blaster"$0D"3) SS"
         "G w/Blaster"$0D"4) MG w/Blaster"$0D"5) CG w/Blaster"$0D"6) GL w/Blas"
         "ter"$0D"7) RL w/Blaster"$0D"8) HB w/Blaster"$0D"9) RG w/Blaster"$0D"1"
         "0) BFG w/Blaster"$0D"-1) None"$0D"-2) SG (no Blaster)"$0D"-3) SSG (n"
         "o Blaster)"$0D"-4) MG (no Blaster)"$0D"-5) CG (no Blaster)"$0D"-6) G"
         "L (no Blaster)"$0D"-7) RL (no Blaster)"$0D"-8) HB (no Blaster)"$0D"-"
         "9) RG (no Blaster)"$0D"-10) BFG (no Blaster)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"-1"$0D"-2"$0D"-3"$0D"-4"$0D"-5"$0D"-6"$0D"-7"$0D"-8"$0D"-9"$0D
         "-10"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific info_player_deathmatch."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "This info_player_deathmatch will be inhibited and not appear w"
         "hen skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "This info_player_deathmatch will be inhibited and not appear w"
         "hen skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "This info_player_deathmatch will be inhibited and not appear w"
         "hen skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "This info_player_deathmatch will be inhibited and not appear w"
         "hen deathmatch=1."
      }
    }
    info_player_intermission:form =
    {
      Help = "The end of Level , end of Match, intermission point will be at o"
       "ne of these."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/weapons/g_flareg/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific info_player_intermission."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "This info_player_intermission will be inhibited and not appear"
         " when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "This info_player_intermission will be inhibited and not appear"
         " when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "This info_player_intermission will be inhibited and not appear"
         " when skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "This info_player_intermission will be inhibited and not appear"
         " when deathmatch=1."
      }
    }
    item_adrenaline:form =
    {
      Help = "Gives +1 to maximum health."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/adrenal/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_ancient_head:form =
    {
      Help = "Special item that gives +2 to maximum health."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/c_head/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_armor_body:form =
    {
      Help = "Adds 100 to your armor."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/body/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_armor_combat:form =
    {
      Help = "Adds 50 to your armor."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/combat/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_armor_jacket:form =
    {
      Help = "Adds 25 to your armor"
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/jacket/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_armor_shard:form =
    {
      Help = "Adds 2 to your armor."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/shard/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_bandolier:form =
    {
      Help = "Increases your carrying capacity for all ammunition except grena"
       "des & rockets."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/band/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_breather:form =
    {
      Help = "This provides oxygen when submerged in liquids."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/breather/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_enviro:form =
    {
      Help = "This provides protection from harmful fluids."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/enviro/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_flashlight:form =
    {
      Help = "This allows the user to see in the dark."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/f_light/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      count: =
      {
        txt = "&"
        Hint = "Specifies the amount of cell ammo used per minute while the fl"
         "ashlight is in use. Count=0 means the flashlight use is free. Flashl"
         "ight count (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_freeze:form =
    {
      Help = "This allows the user to stop time."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/stasis/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_health:form =
    {
      Help = "Heals 10 hit points."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/healing/medium/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_health_small:form =
    {
      Help = "Heals 2 hit points."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/healing/stimpack/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_health_large:form =
    {
      Help = "Heals 25 hit points."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/healing/large/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_health_mega:form =
    {
      Help = "Gives 100 extra hit points, wears off after a short time."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/mega_h/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_invulnerability:form =
    {
      Help = "Renders you temporarily indestructible."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/invulner/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_jetpack:form =
    {
      Help = "This allows the user to fly around a map. It requires fuel."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/jet/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      count: =
      {
        txt = "&"
        Hint = "specifies the amount of fuel units contained in the jetpack wh"
         "en picked up. A negative count means the jetpack contains infinite f"
         "uel. Jetpack count (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_pack:form =
    {
      Help = "This allows you to carry more on your back."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/pack/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_power_screen:form =
    {
      Help = "Gives you 200 armor towards energy weapons."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/screen/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_power_shield:form =
    {
      Help = "Provides improved protection against power weapons."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/shield/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_quad:form =
    {
      Help = "Temporarily multiplies all your weapon's strengths by four."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/quaddama/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_silencer:form =
    {
      Help = "Silences the discharge of any weapon."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/silencer/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the ammo will explode if the SHOOT"
         "ABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the ammo is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific ammo entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific ammo entity. This is only relevant w"
         "hen deathmatch=1. When multiple pickups have identical team names, t"
         "he first to appear in the .map file will be the one that appears on "
         "map load. This pickup entity serves as the master, and its teammates"
         " are the slaves. When the master pickup entity is picked up by a pla"
         "yer, any of the teammates will spawn on a randomly rotating basis. A"
         "mmo entities may be teamed with other ammo, items, and/or weapons."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The item_* entity will not spin (of course this doesn't affect"
         " items which don't spin to begin with). This allows proper use of th"
         "e angle and angles keys. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The item_* entity will remain wherever it was placed in the ma"
         "p editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The item_* entity will be destroyable by weapon fire, as deter"
         "mined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    key_airstrike_target:form =
    {
      Help = "Use this with a trigger_key and misc_viper_bomb."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/target/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the key will explode if the SHOOTA"
         "BLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the key is to movewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The key_* entity must be called by another entity before it ap"
         "pears in the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Touch"
        Hint = "The key_* entity cannot be picked up by the player, and as a r"
         "esult it will exhibit a "$22"solid"$22" bounding box."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The key_* entity will not spin (of course this doesn't affect "
         "keys which don't spin to begin with)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The key_* entity will remain wherever it was placed in the map"
         " editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The key_* entity will be destroyable by weapon fire, as determ"
         "ined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    key_blue_key:form =
    {
      Help = "Normal door key - blue."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/key/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the key will explode if the SHOOTA"
         "BLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the key is to movewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The key_* entity must be called by another entity before it ap"
         "pears in the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Touch"
        Hint = "The key_* entity cannot be picked up by the player, and as a r"
         "esult it will exhibit a "$22"solid"$22" bounding box."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The key_* entity will not spin (of course this doesn't affect "
         "keys which don't spin to begin with)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The key_* entity will remain wherever it was placed in the map"
         " editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The key_* entity will be destroyable by weapon fire, as determ"
         "ined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    key_commander_head:form =
    {
      Help = "Tank commander's head, use this with a monster_commander_body as"
       " the target."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/monsters/commandr/head/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the key will explode if the SHOOTA"
         "BLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the key is to movewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The key_* entity must be called by another entity before it ap"
         "pears in the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Touch"
        Hint = "The key_* entity cannot be picked up by the player, and as a r"
         "esult it will exhibit a "$22"solid"$22" bounding box."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The key_* entity will remain wherever it was placed in the map"
         " editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The key_* entity will be destroyable by weapon fire, as determ"
         "ined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    key_data_cd:form =
    {
      Help = "Key for computer centers."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/data_cd/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the key will explode if the SHOOTA"
         "BLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the key is to movewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The key_* entity must be called by another entity before it ap"
         "pears in the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Touch"
        Hint = "The key_* entity cannot be picked up by the player, and as a r"
         "esult it will exhibit a "$22"solid"$22" bounding box."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The key_* entity will not spin (of course this doesn't affect "
         "keys which don't spin to begin with)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The key_* entity will remain wherever it was placed in the map"
         " editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The key_* entity will be destroyable by weapon fire, as determ"
         "ined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    key_data_spinner:form =
    {
      Help = "Key for the city computer."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/spinner/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the key will explode if the SHOOTA"
         "BLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the key is to movewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The key_* entity must be called by another entity before it ap"
         "pears in the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Touch"
        Hint = "The key_* entity cannot be picked up by the player, and as a r"
         "esult it will exhibit a "$22"solid"$22" bounding box."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The key_* entity will not spin (of course this doesn't affect "
         "keys which don't spin to begin with)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The key_* entity will remain wherever it was placed in the map"
         " editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The key_* entity will be destroyable by weapon fire, as determ"
         "ined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    key_pass:form =
    {
      Help = "Security pass for the security level."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/pass/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the key will explode if the SHOOTA"
         "BLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the key is to movewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The key_* entity must be called by another entity before it ap"
         "pears in the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Touch"
        Hint = "The key_* entity cannot be picked up by the player, and as a r"
         "esult it will exhibit a "$22"solid"$22" bounding box."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The key_* entity will not spin (of course this doesn't affect "
         "keys which don't spin to begin with)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The key_* entity will remain wherever it was placed in the map"
         " editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The key_* entity will be destroyable by weapon fire, as determ"
         "ined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    key_power_cube:form =
    {
      Help = "Warehouse circuits."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/power/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the key will explode if the SHOOTA"
         "BLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the key is to movewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The key_* entity must be called by another entity before it ap"
         "pears in the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Touch"
        Hint = "The key_* entity cannot be picked up by the player, and as a r"
         "esult it will exhibit a "$22"solid"$22" bounding box."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The key_* entity will not spin (of course this doesn't affect "
         "keys which don't spin to begin with)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The key_* entity will remain wherever it was placed in the map"
         " editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The key_* entity will be destroyable by weapon fire, as determ"
         "ined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    key_pyramid:form =
    {
      Help = "Key for the entrance of jail3."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/pyramid/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the key will explode if the SHOOTA"
         "BLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the key is to movewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The key_* entity must be called by another entity before it ap"
         "pears in the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Touch"
        Hint = "The key_* entity cannot be picked up by the player, and as a r"
         "esult it will exhibit a "$22"solid"$22" bounding box."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The key_* entity will not spin (of course this doesn't affect "
         "keys which don't spin to begin with)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The key_* entity will remain wherever it was placed in the map"
         " editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The key_* entity will be destroyable by weapon fire, as determ"
         "ined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    key_red_key:form =
    {
      Help = "Normal door key - red."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/red_key/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the key will explode if the SHOOTA"
         "BLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the key is to movewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "The key_* entity must be called by another entity before it ap"
         "pears in the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Touch"
        Hint = "The key_* entity cannot be picked up by the player, and as a r"
         "esult it will exhibit a "$22"solid"$22" bounding box."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The key_* entity will not spin (of course this doesn't affect "
         "keys which don't spin to begin with)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The key_* entity will remain wherever it was placed in the map"
         " editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The key_* entity will be destroyable by weapon fire, as determ"
         "ined by health."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    light:form =
    {
      Help = "Invisible Light Source."
      bbox = '-8 -8 -8 8 8 8'
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Specifies light color in relative RGB values. (Default=1 1 1)."
      }
      _color: =
      {
        Txt = "&"
        Hint = "Specifies light color in relative RGB values. (Default=1 1 1)."
      }
      _cone: =
      {
        Txt = "&"
        Hint = "Specifies size of spotlight cone arc, in degrees. Range is 10-"
         "90. (Default=10)."$0D"Ignored if no target set."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the light will be"
         " turned off before it is auto-killtargeted."
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies light brightness level. (Default=300)."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Specifies lightstyle type. (Default=0)."$0D"Ignored when death"
         "match=1."$0D"styles 32-62 are assigned by the light program for swit"
         "chable lights."$0D"63 is for testing."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity the light aims at. If the light has a"
         " target set, it is a spotlight. info_null to make a spotlight."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific light."$0D"Lights with targetnames are pr"
         "esent as entities at runtime, and are therefore edicts."$0D"Addition"
         "ally, each uniquely named light is considered as a unique lightstyle"
         " during the radiosity compile process."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start Off"
        Hint = "Sets the light to be inactive when the map loads."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "Light will be inhibited and not appear when skill=0. Only rele"
         "vant for lights with a targetname."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "Light will be inhibited and not appear when skill=1. Only rele"
         "vant for lights with a targetname."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "Light will be inhibited and not appear when skill=2 or greater"
         ". Only relevant for lights with a targetname."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = ""
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      _angfade: =
      {
        txt = "&"
        hint = "_angfade>fade on angled surfaces (0.8)"
      }
      _fade: =
      {
        txt = "&"
        hint = "_fade>fade dist (less=further)(0.65)"
      }
      _falloff: =
      {
        txt = "&"
        hint = "_falloff>falloff ratio"
        typ = "C"
        Items = "0) Linear"$0D"1) Inverse"$0D"2) Inverse-square"
        values = "0"$0D"1"$0D"2"
      }
      _focus: =
      {
        txt = "&"
        hint = "_focus>fade cone edge (12)"
      }
      _spotangle: =
      {
        txt = "&"
        hint = "_spotangle>aim yaw(0-360)/pitch(-90-90)= (0 -90)"
      }
      _spotpoint: =
      {
        txt = "&"
        hint = "_spotpoint>spot XYZ point"
      }
      _spotvector: =
      {
        txt = "&"
        hint = "_spotvector>spot XYZ vector"
      }
    }
    light_mine1:form =
    {
      Help = "Dusty Fluorescent Fixture entity from the mine levels."
      bbox = '-2 -2 -12 2 2 12'
      mdl = "models/objects/minelite/light1/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the model facing direction on the XY plane. (Default"
         "=0)."$0D"Has no effect on the actual light."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the model facing direction in 3 dimensions, defined "
         "by pitch, yaw, and roll. (Default=0 0 0)."$0D"Has no effect on the a"
         "ctual light."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Specifies light color in relative RGB values. (Default=1 1 1)."
      }
      _color: =
      {
        Txt = "&"
        Hint = "Specifies light color in relative RGB values. (Default=1 1 1)."
      }
      _cone: =
      {
        Txt = "&"
        Hint = "Specifies size of spotlight cone arc, in degrees. Range is 10-"
         "90. (Default=10)."$0D"Ignored if no target set."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the light will be"
         " turned off before it is auto-killtargeted."
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies light brightness level. (Default=300)."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Specifies lightstyle type. (Default=0)."$0D"Ignored when death"
         "match=1."$0D"styles 32-62 are assigned by the light program for swit"
         "chable lights."$0D"63 is for testing."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "If targeted, the light will toggle between on and off. Must ha"
         "ve a "$22"light entitie"$22" with the same targetname to work."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The light_mine1 "$22"model"$22" will be inhibited and not appe"
         "ar when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The light_mine1 "$22"model"$22" will be inhibited and not appe"
         "ar when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The light_mine1 "$22"model"$22" will be inhibited and not appe"
         "ar when skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The light_mine1 "$22"model"$22" will be inhibited and not appe"
         "ar when deathmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      _angfade: =
      {
        txt = "&"
        hint = "_angfade>fade on angled surfaces (0.8)"
      }
      _fade: =
      {
        txt = "&"
        hint = "_fade>fade dist (less=further)(0.65)"
      }
      _falloff: =
      {
        txt = "&"
        hint = "_falloff>falloff ratio"
        typ = "C"
        Items = "0) Linear"$0D"1) Inverse"$0D"2) Inverse-square"
        values = "0"$0D"1"$0D"2"
      }
      _focus: =
      {
        txt = "&"
        hint = "_focus>fade cone edge (12)"
      }
      _spotangle: =
      {
        txt = "&"
        hint = "_spotangle>aim yaw(0-360)/pitch(-90-90)= (0 -90)"
      }
      _spotpoint: =
      {
        txt = "&"
        hint = "_spotpoint>spot XYZ point"
      }
      _spotvector: =
      {
        txt = "&"
        hint = "_spotvector>spot XYZ vector"
      }
    }
    light_mine2:form =
    {
      Help = "Clean Fluorescent Fixture entity from the mine levels."
      bbox = '-2 -2 -12 2 2 12'
      mdl = "models/objects/minelite/light2/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the model facing direction on the XY plane. (Default"
         "=0)."$0D"Has no effect on the actual light."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the model facing direction in 3 dimensions, defined "
         "by pitch, yaw, and roll. (Default=0 0 0)."$0D"Has no effect on the a"
         "ctual light."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Specifies light color in relative RGB values. (Default=1 1 1)."
      }
      _color: =
      {
        Txt = "&"
        Hint = "Specifies light color in relative RGB values. (Default=1 1 1)."
      }
      _cone: =
      {
        Txt = "&"
        Hint = "Specifies size of spotlight cone arc, in degrees. Range is 10-"
         "90. (Default=10)."$0D"Ignored if no target set."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the light will be"
         " turned off before it is auto-killtargeted."
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies light brightness level. (Default=300)."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Specifies lightstyle type. (Default=0)."$0D"Ignored when death"
         "match=1."$0D"styles 32-62 are assigned by the light program for swit"
         "chable lights."$0D"63 is for testing."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "If targeted, the light will toggle between on and off. Must ha"
         "ve a "$22"light entitie"$22" with the same targetname to work."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The light_mine2 "$22"model"$22" will be inhibited and not appe"
         "ar when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The light_mine2  "$22"model"$22" will be inhibited and not app"
         "ear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The light_mine2 "$22"model"$22" will be inhibited and not appe"
         "ar when skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The light_mine2 "$22"model"$22" will be inhibited and not appe"
         "ar when deathmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      _angfade: =
      {
        txt = "&"
        hint = "_angfade>fade on angled surfaces (0.8)"
      }
      _fade: =
      {
        txt = "&"
        hint = "_fade>fade dist (less=further)(0.65)"
      }
      _falloff: =
      {
        txt = "&"
        hint = "_falloff>falloff ratio"
        typ = "C"
        Items = "0) Linear"$0D"1) Inverse"$0D"2) Inverse-square"
        values = "0"$0D"1"$0D"2"
      }
      _focus: =
      {
        txt = "&"
        hint = "_focus>fade cone edge (12)"
      }
      _spotangle: =
      {
        txt = "&"
        hint = "_spotangle>aim yaw(0-360)/pitch(-90-90)= (0 -90)"
      }
      _spotpoint: =
      {
        txt = "&"
        hint = "_spotpoint>spot XYZ point"
      }
      _spotvector: =
      {
        txt = "&"
        hint = "_spotvector>spot XYZ vector"
      }
    }
    misc_actor:form =
    {
      Help = "This allows you to use your own custom entity 3D-models."$0D"Use"
       "d as additional actors. These models will move around in the"$0D"game "
       "and can be set to do different things with the flags below."$0D"For ju"
       "st special effect custom models use the model_spawn entity."$0D"Click "
       "on this Help Book for more details."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "[_3Dmodel]"
      frame1 = "[Frame]"
      _3Dmodel: =
      {
        Txt = "3D Model"
        Typ = "EP"
        BasePath = "$Game\baseq2"
        CutPath = "$Game\?\"
        DefExt = "md2"
        DirSep = "/"
        hint = "Type in the model path or use the file browser button to the r"
         "ight."$0D"This is a custom model for QuArK 3d views only."$0D"It onl"
         "y uses the 0 skin and will not show in the actual game."$0D"For that"
         " use usermodel below."
      }
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the actor on the XY plane. (Defa"
         "ult=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the actor in 3 dimensions as def"
         "ined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      bleft: =
      {
        txt = "&"
        Hint = "Specifies bottom-left (minY/minX/minZ) bounding box coordinate"
         "s for the actor relative to the actor's origin."$0D"If no value is s"
         "pecified for either bleft or tright,"$0D"and the value of usermodel "
         "is a player model in the Lazarus ActorPak,"$0D"then the suggested bo"
         "unding box as listed on the ActorPak page for that model will be use"
         "d."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. (Default=0)."
        typ = "C"
        items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      count: =
      {
        txt = "&"
        Hint = "Specifies the position number in a series of misc_actor target"
         "ed by the same func_monitor."
      }
      combattarget: =
      {
        txt = "&"
        hint = "Targetname of the point_combat the actor will move to when ang"
         "ered."
      }
      deathtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered upon the actor's deat"
         "h."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the actor can"
         " be from the player or other enemy and will still see and shoot at h"
         "im."$0D"Minimum value is 500 (values<500 are reset to 500 by the cod"
         "e)."$0D"(Default=1280)."
      }
      dmgteam: =
      {
        txt = "&"
        hint = "An actor with a dmgteam value set will treat all attacks upon "
         "other actor(s) or monster(s) with the same dmgteam value as an attac"
         "k on himself."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the actor's corpse will produce"
         " flies."$0D" When they appear, they will have a duration of 60 secon"
         "ds before they expire."$0D" Flies will never appear if the actor's c"
         "orpse is in a liquid."$0D" Normal probability values range from 0.00"
         "-1.00; 0.00=0% probability (never produce flies); 1.00=100% probabil"
         "ity (always produce flies)."$0D" If flies>1, the actor will have fli"
         "es buzzing about him even while alive. (Default=0)."$0D" Ignored if "
         "health<0, unless flies=1. In that event, the initially dead actor wi"
         "ll have flies which never expire."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the actor's"
         " corpse. Ignored when NO_GIB is set. (Default=40)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the actor."
         $0D"If health=0 it will be reset to the default."$0D"If health<0 the "
         "actor will be dead on startup."$0D"If health=100000 or more the acto"
         "r is invulnerable, and will ignore attacks."$0D"(Default=100)."
      }
      item: =
      {
        txt = "&"
        hint = "Classname of the entity to be spawned by the actor upon his de"
         "ath."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map upon the a"
         "ctor's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the actor. (Default=200)."
      }
      move_origin: =
      {
        txt = "&"
        hint = "This vector (x y z) offset is only meaningful if the actor is "
         "the target of a func_monitor."$0D"When the player accesses a func_mo"
         "nitor that targets this actor,"$0D"his viewpoint will be offset from"
         " the actor origin by this vector."$0D"X is in the forward direction,"
         " positive Y is to the left,"$0D"and Z is vertical."$0D"If move_origi"
         "n is left blank or is '0 0 0',"$0D"then the player's viewpoint will "
         "be at the actor's viewheight (22 units above the origin)."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the actor is to movewith."
      }
      moreflags: =
      {
        txt = "&"
        Hint = "??."
      }
      muzzle: =
      {
        txt = "&"
        hint = "Specifies weapon firing origin, offset from the actor origin. "
         "defaults to (18.4 7.4 9.6)"
      }
      muzzle2: =
      {
        txt = "&"
        hint = "Specifies an optional 2nd weapon firing origin, offset from th"
         "e actor origin."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the actor has."
         " (Default=0)."
      }
      sounds: =
      {
        txt = "&"
        hint = "Specifies the weapon the actor will carry."
        typ = "C"
        items = "0000) None/None"$0D"0100) Blaster"$0D"0200) Shot Gun"$0D"0300"
         ") Super Shot Gun"$0D"0400) Machine Gun"$0D"0500) Chaingun"$0D"0505) "
         "CG/CG"$0D"0600) Grenade Launcher"$0D"0603) GL/SSG"$0D"0700) Rocket L"
         "auncher"$0D"0703) RL/SSG"$0D"0800) Hyper Blaster"$0D"0900) Rail Gun"$0D
         "1000) Big Gun (BFG10K)"$0D"1003) BFG/SSG"
        values = "0"$0D"100"$0D"200"$0D"300"$0D"400"$0D"500"$0D"505"$0D"600"$0D
         "603"$0D"700"$0D"703"$0D"800"$0D"900"$0D"1000"$0D"1003"
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the actor will use. (D"
         "efault=0)."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the path_corner the actor will move to."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific actor."
      }
      tright: =
      {
        txt = "&"
        hint = "Specifies top-right (maxY/maxX/maxZ) bounding box coordinates "
         "for the actor relative to the actor's origin."
      }
      viewmessage: =
      {
        txt = "&"
        Hint = "Message which appears on the screen when a turret is accessed "
         "using a func_monitor."
      }
      usermodel: =
      {
        Txt = "usermodel"
        Typ = "EP"
        BasePath = "$Game\baseq2"
        CutPath = "$Game\?\"
        DefExt = "md2"
        DirSep = "/"
        AugPath = "../"
        hint = "Type in the model path or use the file browser button to the r"
         "ight."$0D"This is a custom model for the actual game play only."$0D"I"
         "t will not show in QuArK's 3D views."$0D"For that use 3Dmodel above."
      }
      usermodel: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Available Actor Models"
        Form = "t_actor_form:form"
        Hint = "Available User Model"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."$0D"At this time the actor has no idle sounds, so currentl"
         "y this distinction is meaningless."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The actor won't appear in the map until his targetname is call"
         "ed."$0D"If the actor has BE_A MONSTER set, he will not appear in the"
         $0D"monster count tally on map load, but will appear once he is actua"
         "lly spawned."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The actor won't attack until angered or he has line-of-sight t"
         "o his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."$0D
         "Currently this flag is meaningless for actors that do not also have "
         "the BE_A_MONSTER flag set."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The actor will treat all attacks upon the player as an attack "
         "on himself,"$0D"and will attack any monster that he can see who gets"
         " mad at the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The actor cannot be gibbed. Visual evidence is that the corpse"
         " produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Homing"
        Hint = "The actor uses homing rockets instead of standard rockets."$0D
         "This flag is ignored if neither of the actor's weapons is a rocket l"
         "auncher."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        Cap = "Be Monster"
        Hint = "The actor is a monster, and will attack the player on sight, u"
         "nless GOOD_GUY is also set."$0D"Monster actors appear in the monster"
         "/kill count tallies."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The actor can shoot other actors/monsters without them getting"
         " mad at him."$0D"In practical terms, for this flag really only appli"
         "es to BE_A_MONSTER actors."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The actor will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The actor will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The actor will be inhibited and not appear when skill=2 or gre"
         "ater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
      }
    }
    misc_banner:form =
    {
      Help = "The origin is the bottom of the banner. The banner is 128 units "
       "tall."
      bbox = '-4 -4 0 4 4 246'
      mdl = "models/objects/banner/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_banner. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_banner will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_banner will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_banner will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_banner will be inhibited and not appear when deathmat"
         "ch=1."
        Cap = "Not in Deathmatch"
      }
    }
    misc_blackhole:form =
    {
      Help = "This just spins, and is huge."
      bbox = '-204 -204 -160 204 204 160'
      mdl = "models/objects/black/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the misc_blackhole. When triggered the misc_blackhole "
         "will be removed from the map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_blackhole will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_blackhole will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_blackhole will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_blackhole will be inhibited and not appear when death"
         "match=1."
      }
    }
    misc_deadsoldier:form =
    {
      Help = "This is the Dead player model, there are 6 different death style"
       "s."
      bbox = '-16 -16 0 16 16 16'
      mdl = "models/deadbods/dude/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies facing angle on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies facing angle in 3 dimensions, defined as pitch, yaw,"
         " and roll. (Default=0 0 0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the misc_deadsoldier is to mov"
         "ewith."
      }
      style: =
      {
        txt = "&"
        Hint = "The style value allows you to specify an alternate skin to use"
         " with misc_deadsoldier to add a bit of variety to your map. Note tha"
         "t since the normal male player model does not include pain skins, th"
         "e misc_deadsoldier will be bloodless for all but the default skin, w"
         "hich looks at best a bit odd with headless soldiers."
        typ = "C"
        Items = "0) Default"$0D"1) Cipher"$0D"2) Claymore"$0D"3) Flak"$0D"4) G"
         "runt"$0D"5) Howitzer"$0D"6) Major"$0D"7) Nightops"$0D"8) Pointman"$0D
         "9) Psycho"$0D"10) Rampage"$0D"11) Razor"$0D"12) Recon"$0D"13) Scout"$0D
         "14) Sniper"$0D"15) Viper"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_deadsoldier. Use this to make it dis"
         "appear by making it triggered by killtarget."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "On Back"
        Hint = "The misc_deadsoldier is lying on his back."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "On Stomach"
        Hint = "The misc_deadsoldier is lying on his stomach."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "On Back, Decapitated"
        Hint = "The misc_deadsoldier is headless and lying on his back."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Fetal Position"
        Hint = "The misc_deadsoldier is curled in the fetal position."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Sitting, Decapitated"
        Hint = "The misc_deadsoldier is headless and sitting."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Impaled"
        Hint = "The misc_deadsoldier is on his back with limbs hanging."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        Cap = "Flies"
        Hint = "The misc_deadsoldier has flies buzzing around him."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_deadsoldier will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_deadsoldier will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_deadsoldier will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = ""
      }
    }
    misc_easterchick:form =
    {
      Help = "This is Iron Maiden sitting down (Just for looks)."
      bbox = '-32 -32 0 32 32 32'
      mdl = "models/monsters/bitch/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies facing angle on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies facing angle in 3 dimensions, defined as pitch, yaw,"
         " and roll. (Default=0 0 0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity to movewith."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_easterchick. Use if the monster is t"
         "o be killtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Non Solid"
        Hint = "If set, the entity is not solid."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    misc_easterchick2:form =
    {
      Help = "This is Iron Maiden alittle different (Just for looks)."
      bbox = '-32 -32 0 32 32 32'
      mdl = "models/monsters/bitch/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies facing angle on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies facing angle in 3 dimensions, defined as pitch, yaw,"
         " and roll. (Default=0 0 0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity to movewith."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_easterchick2. Use if the monster is "
         "to be killtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Non Solid"
        Hint = "If set, the entity is not solid."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    misc_eastertank:form =
    {
      Help = "The Tank Sitting Down (Just for Looks)."
      bbox = '-32 -32 -16 32 32 32'
      mdl = "models/monsters/tank/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies facing angle on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies facing angle in 3 dimensions, defined as pitch, yaw,"
         " and roll. (Default=0 0 0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity to movewith."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_eastertank. Use if the monster is to"
         " be killtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Non Solid"
        Hint = "If set, the entity is not solid."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    misc_explobox:form =
    {
      Help = "Large exploding box."
      bbox = '-16 -16 0 16 16 40'
      mdl = "models/objects/barrels/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the initial direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the initial direction in 3 dimensions, defined by pi"
         "tch and yaw (roll is ignored). (Default=0 0 0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the amount of damage hit points the misc_explobox wi"
         "ll generate when it is destroyed. (Default=150)."
      }
      health: =
      {
        Txt = "&"
        Hint = "Damage sustained by the misc_explobox before destruction. (Def"
         "ault=10)."
      }
      mass: =
      {
        Txt = "&"
        Hint = "The weight of misc_explobox. Heavier barrels are pushed slower"
         ". (Default=400)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity to movewith."
      }
      target: =
      {
        Txt = "&"
        Hint = "Trigger entity when the Barrel explods."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_explobox. Use this to explods this B"
         "arrel."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Barrel Gibs"
        Hint = "If set, custom debris models are used when misc_explobox deton"
         "ates."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The misc_explobox will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The misc_explobox will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The misc_explobox will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
      }
    }
    misc_gib_arm:form =
    {
      Help = "Intended for use with the target_spawner."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/gibs/arm/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the initial direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the initial direction in 3 dimensions, defined by pi"
         "tch and yaw (roll is ignored). (Default=0 0 0)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific misc_gib_arm."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The misc_gib_arm will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The misc_gib_arm will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The misc_gib_arm will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The misc_gib_arm will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    misc_gib_head:form =
    {
      Help = "Intended for use with the target_spawner."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/gibs/head/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the initial direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the initial direction in 3 dimensions, defined by pi"
         "tch and yaw (roll is ignored). (Default=0 0 0)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific misc_gib_head."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The misc_gib_head will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The misc_gib_head will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The misc_gib_head will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The misc_gib_head will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    misc_gib_leg:form =
    {
      Help = "Intended for use with the target_spawner."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/gibs/leg/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the initial direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the initial direction in 3 dimensions, defined by pi"
         "tch and yaw (roll is ignored). (Default=0 0 0)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific misc_gib_leg."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The misc_gib_leg will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The misc_gib_leg will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The misc_gib_leg will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The misc_gib_leg will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    misc_insane:form =
    {
      Help = "This is the Soldier gone mad."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/insane/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the insane guy on the XY plane. "
         "(Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the insane guy in 3 dimensions, "
         "defined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the insane guy will move to whe"
         "n triggered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the insane guy's"
         " death."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the insane guy's corpse will pr"
         "oduce flies. (Default=0.30)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the insane "
         "guy's corpse. (Default= -50)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the insane"
         " guy. (Default=100)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the insane guy upon h"
         "is death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the i"
         "nsane guy's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the insane guy. (Default=300)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the insane guy is to movewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the insane guy will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific misc_insane."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "The misc_insane won't move to his point_combat until he sees t"
         "he player, or until the player injures him."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The misc_insane won't appear in the map until his targetname i"
         "s called."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Crawl"
        Hint = "Insane guy crawls instead of walks."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Crucified"
        Hint = "The misc_insane is in an immobile crucified position."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Stand Ground"
        Hint = "The misc_insane will stand in place and never walk around."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Always Stand"
        Hint = "The misc_insane will never drop to his knees."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_insane will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_insane will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_insane will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = ""
      }
    }
    misc_satellite_dish:form =
    {
      Help = "You can either place this in a map on its own or you can trigger"
       " it."
      bbox = '-64 -64 0 64 64 128'
      mdl = "models/objects/satellite/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the insane guy on the XY plane. "
         "(Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the insane guy in 3 dimensions, "
         "defined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the actor is to movewith."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific misc_satellite_dish. This should only be "
         "triggered once."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The misc_satellite_dish will be inhibited and not appear when "
         "skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The misc_satellite_dish will be inhibited and not appear when "
         "skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The misc_satellite_dish will be inhibited and not appear when "
         "skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The misc_satellite_dish will be inhibited and not appear when "
         "deathmatch=1."
      }
    }
    misc_teleporter:form =
    {
      Help = "Stepping onto this disc will teleport players to the targeted mi"
       "sc_teleporter_dest object."
      bbox = '-32 -32 -24 32 32 16'
      mdl = "models/objects/dmspot/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the teleporter is to movewith."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity the teleporter will use as a destinat"
         "ion."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_teleporter."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start Off"
        Hint = "Sets the teleporter to be inactive when the map loads."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Toggle"
        Hint = "Allows the teleporter to be toggled on/off."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Model"
        Hint = "The teleporter base model will not appear, the particle effect"
         "s will not be rendered, and the teleporter idle sound will not be pl"
         "ayed."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Monster"
        Hint = "The teleporter can transmit monsters and actors."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        Cap = "Landmark"
        Hint = "The teleporter will cause the player's view angles and velocit"
         "y to be preserved when he spawns at his destination. View angles are"
         " rotated by the angles value of the destination entity minus the inh"
         "erited angles. If this flag is set, a trigger_transition may be used"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_teleporter will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_teleporter will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_teleporter will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_teleporter will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    misc_teleporter_dest:form =
    {
      Help = "The Lazarus misc_teleporter_dest is identical to the standard Qu"
       "ake2 misc_teleporter_dest point entity, with the addition of movewith "
       "support. This allows it to move with its parent entity."
      bbox = '-32 -32 -24 32 32 16'
      mdl = "models/objects/dmspot/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the teleporter_dest's model on t"
         "he XY plane. Also sets the facing angle of the player, monster, or a"
         "ctor which spawns at it. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the teleporter_dest's model in 3"
         " dimensions as defined by pitch, yaw, and roll. Also sets the facing"
         " angle in 3 dimensions of the player, monster, or actor which spawns"
         " at it. (Default=0 0 0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the teleporter_dest is to move"
         "with."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_teleporter_dest."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_teleporter_dest will be inhibited and not appear when"
         " skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_teleporter_dest will be inhibited and not appear when"
         " skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_teleporter_dest will be inhibited and not appear when"
         " skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_teleporter_dest will be inhibited and not appear when"
         " deathmatch=1."
      }
    }
    misc_strogg_ship:form =
    {
      Help = "This is a Strogg ship for the flybys."
      bbox = '-16 -16 0 16 16 32'
      mdl = "models/ships/strogg1/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Specifies the entity to trigger when the viper is destroyed. N"
         "ot used if health=0."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Specifies the amount of damage hit points the misc_strogg_ship"
         " will generate when it is destroyed. Ignored if health=0. (Default=2"
         "00)."
      }
      health: =
      {
        txt = "&"
        Hint = "Damage sustained by the misc_strogg_ship before destruction. ("
         "Default=0) (invulnerable)."
      }
      mass: =
      {
        txt = "&"
        Hint = "Determines the number and size of debris particles generated w"
         "hen viper is killed. Ignored if health=0. (Default=800)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies the speed of the misc_viper, in units/sec. (Default="
         "300)."
      }
      pitch_speed: =
      {
        txt = "&"
        Hint = "The rotational speed around the ship's lateral Y axis, in degr"
         "ees/second, that ROTATE misc_strogg_ships will use while turning up "
         "or down. The current pitch_speed may be changed at each path_corner "
         "in the sequence by setting the path_corner's pitch_speed. Note that "
         "pitch_speed does not have a default value, so if you want your misc_"
         "strogg_ship to pitch up or down you must supply a value here."
      }
      roll_speed: =
      {
        txt = "&"
        Hint = "The rotational speed around the ship's longitudinal axis, in d"
         "egrees/second, that ROTATE misc_strogg_ships will use while turning "
         "toward the next path_corner's roll value. The current roll_speed may"
         " be changed at each path_corner in the sequence by setting the path_"
         "corner's roll_speed. Note that roll_speed does not have a default va"
         "lue, so if you want your misc_strogg_ship to roll you must supply a "
         "value here."
      }
      yaw_speed: =
      {
        txt = "&"
        Hint = "The rotational speed around the Z axis, in degrees/second, tha"
         "t ROTATE misc_strogg_ships will use while turning. The current yaw_s"
         "peed may be changed at each path_corner in the sequence by setting t"
         "he path_corner's yaw_speed. Note that yaw_speed does not have a defa"
         "ult value, so if you want your misc_strogg_ship to rotate around the"
         " Z axis you must supply a value here."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the first path_corner in a path_corner sequence "
         "that the misc_viper will follow."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_strogg_ship."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "If set, misc_strogg_ship begins its movement when the map load"
         "s."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Rotate"
        Hint = "If set, the misc_strogg_ship will turn towards the next path_c"
         "orner using its current yaw_speed and pitch_speed values (degrees/se"
         "cond)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Smooth"
        Hint = "If set, misc_strogg_ship will skip the last 0.1 second slowdow"
         "n before reaching a path_corner so that it maintains a constant velo"
         "city. For more information see the description for SMOOTH_MOVE in th"
         "e func_train reference."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_strogg_ship will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_strogg_ship will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_strogg_ship will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_strogg_ship will be inhibited and not appear when dea"
         "thmatch=1."
      }
    }
    misc_bigviper:form =
    {
      Help = "This is a large stationary viper as seen in Paul's intro."
      bbox = '-176 -120 -24 176 120 72'
      mdl = "models/ships/bigviper/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity to movewith."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_bigviper. Make it disappear by makin"
         "g it triggered by killtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_bigviper will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_bigviper will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_bigviper will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_bigviper will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    misc_viper:form =
    {
      Help = "This is the Viper for the flyby bombing."
      bbox = '-16 -16 0 16 16 32'
      mdl = "models/ships/viper/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Specifies the entity to trigger when the viper is destroyed. N"
         "ot used if health=0."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Specifies the amount of damage hit points the misc_viper will "
         "generate when it is destroyed. Ignored if health=0. (Default=200)."
      }
      health: =
      {
        txt = "&"
        Hint = "Damage sustained by the misc_viper before destruction. (Defaul"
         "t=0) (invulnerable)."
      }
      mass: =
      {
        txt = "&"
        Hint = "Determines the number and size of debris particles generated w"
         "hen viper is killed. Ignored if health=0. (Default=800)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies the speed of the misc_viper, in units/sec. (Default="
         "300)."
      }
      pitch_speed: =
      {
        txt = "&"
        Hint = "The rotational speed around the viper's lateral Y axis, in deg"
         "rees/second, that ROTATE misc_vipers will use while turning up or do"
         "wn. The current pitch_speed may be changed at each path_corner in th"
         "e sequence by setting the path_corner's pitch_speed. Note that pitch"
         "_speed does not have a default value, so if you want your misc_viper"
         " to pitch up or down you must supply a value here."
      }
      roll_speed: =
      {
        txt = "&"
        Hint = "The rotational speed around the viper's longitudinal axis, in "
         "degrees/second, that ROTATE misc_vipers will use while turning towar"
         "d the next path_corner's roll value. The current roll_speed may be c"
         "hanged at each path_corner in the sequence by setting the path_corne"
         "r's roll_speed. Note that roll_speed does not have a default value, "
         "so if you want your misc_viper to roll you must supply a value here."
      }
      yaw_speed: =
      {
        txt = "&"
        Hint = "The rotational speed around the Z axis, in degrees/second, tha"
         "t ROTATE misc_vipers will use while turning. The current yaw_speed m"
         "ay be changed at each path_corner in the sequence by setting the pat"
         "h_corner's yaw_speed. Note that yaw_speed does not have a default va"
         "lue, so if you want your misc_viper to rotate around the Z axis you "
         "must supply a value here."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the first path_corner in a path_corner sequence "
         "that the misc_viper will follow."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_viper."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "If set, misc_viper begins its movement when the map loads."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Rotate"
        Hint = "If set, the misc_viper will turn towards the next path_corner "
         "using its current yaw_speed and pitch_speed values (degrees/second)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Smooth"
        Hint = "If set, misc_viper will skip the last 0.1 second slowdown befo"
         "re reaching a path_corner so that it maintains a constant velocity. "
         "For more information see the description for SMOOTH_MOVE in the func"
         "_train reference."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_viper will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_viper will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_viper will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_viper will be inhibited and not appear when deathmatc"
         "h=1."
      }
    }
    misc_viper_bomb:form =
    {
      Help = "Lazarus modifies the standard Quake2 misc_viper_bomb point entit"
       "y by making it re-usable, if the new MULTI_USE spawnflag is set. And, "
       "with the addition of count support, this entity may be optionally auto"
       "-killtargeted after a specified number of uses."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/bomb/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0). Ign"
         "ored if the pathtarget value is not equal to the value of the viper "
         "bomb's targetname."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0). Ignored if the pathtarget value is"
         " not equal to the value of the viper bomb's targetname."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the misc_viper_bo"
         "mb will be called before being auto-killtargeted (see this page for "
         "details). (Default=0). Ignored when MULTI_USE is not set."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the amount of damage hit points the misc_viper_bomb "
         "will generate at its origin. (Default=1000)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the v"
         "iper bomb explodes."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity the viper bomb will use as a speed an"
         "d trajectory reference. The viper bomb may pathtarget itself and the"
         "refore use itself as a reference; in that event speed and angle/angl"
         "es should be given meaningful values. If no pathtarget is set, the f"
         "irst misc_viper found in the map will be used as the reference entit"
         "y."
      }
      speed: =
      {
        txt = "&"
        Hint = "Specifies the initial bomb speed in units/second. (Default=0)."
         " Ignored if the pathtarget value is not equal to the value of the vi"
         "per bomb's targetname."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the viper bomb e"
         "xplodes."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_viper_bomb. Must be triggered in ord"
         "er to work."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Multi Use"
        Hint = "Specifies that the misc_viper_bomb may be triggered more than "
         "once."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_viper_bomb will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_viper_bomb will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_viper_bomb will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_viper_bomb will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    model_spawn:form =
    {
      Help = "This allows you to use your own custom entity 3D-models."$0D"Use"
       "d for special effects, you can control which model frames"$0D"are used"
       ". But the models do not fight like misc_actor entities do."$0D"Click o"
       "n this Help Book for more details."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "[_3Dmodel]"
      frame1 = "[Frame]"
      HTML = "help/intro.mapeditor.menu.html#optionsmenu"
      _3Dmodel: =
      {
        Txt = "3D Model"
        Typ = "EP"
        Hint = "Type in the model path or use the file browser button to the r"
         "ight."$0D"This is a custom model for QuArK 3d views only."$0D"It wil"
         "l not show in the actual game."$0D"For that use usermodel below."
        BasePath = "$Game\baseq2\models"
        CutPath = "$Game\?\?\"
        DefExt = "md2"
        DirSep = "/"
        AugPath = "models/"
      }
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the model_spawn on the XY plane."
         " (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the model_spawn in 3 dimensions "
         "as defined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      count: =
      {
        Txt = "&"
        Hint = "Specifies the position number in a series of model_spawn targe"
         "ted by the same func_monitor."
      }
      effects: =
      {
        Txt = "&"
        Hint = "Sets geewhiz rendering effects. Add values together to combine"
         " multiple effects."
        Typ = "C"
        Items = "0) combine:add values"$0D"1) rotate"$0D"2) gib"$0D"8) blaster"
         $0D"16) rocket"$0D"32) grenade"$0D"64) hyperblaster"$0D"128) bfg"$0D"2"
         "56) color_shell"$0D"512) powerscreen"$0D"16384) flies"$0D"32768) qua"
         "d"$0D"65536) pent"$0D"131072) teleporter"$0D"262144) flag1"$0D"52428"
         "8) flag2"$0D"1048576) ionripper"$0D"2097152) greengib"$0D"4194304) b"
         "lue_hb"$0D"8388608) spinning_lights"$0D"16777216) plasma"$0D"3355443"
         "2) trap"$0D"67108864) tracker"$0D"134217728) double"$0D"268435456) s"
         "pheretrans"$0D"536870912) tagtrail"$0D"1073741824) half_damage"$0D"2"
         "147483648) tracker_trail"
        values = "0"$0D"1"$0D"2"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"256"$0D
         "512"$0D"16384"$0D"32768"$0D"65536"$0D"131072"$0D"262144"$0D"524288"$0D
         "1048576"$0D"2097152"$0D"4194304"$0D"8388608"$0D"16777216"$0D"3355443"
         "2"$0D"67108864"$0D"134217728"$0D"268435456"$0D"536870912"$0D"1073741"
         "824"$0D"2147483648"
      }
      effects: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Effects combine:add values"
        Form = "t_effects_form:form"
        Hint = "Available Effects"
      }
      framenumbers: =
      {
        Txt = "&"
        Hint = "The number of frames you want to display after startframe."
      }
      health: =
      {
        Txt = "&"
        Hint = "If non-zero and solidstate is 3 or 4 (solid), the entity will "
         "be shootable. When destroyed, it blows up with a no-damage explosion"
         "."
      }
      noise: =
      {
        Txt = "&"
        Typ = "EP"
        Hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Hint = "Available .WAV files"
        Form = "t_noise4_form:form"
        Cap = "sounds..."
      }
      movewith: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to move with."
      }
      renderfx: =
      {
        Txt = "&"
        Hint = "Sets eyecandy rendering effects. Add values together to combin"
         "e multiple effects."
        Typ = "C"
        Items = "0) combine:add values"$0D"1) minlight"$0D"2) viewermodel"$0D"4"
         ") weaponmodel"$0D"8) fullbright"$0D"16) depthhack"$0D"32) translucen"
         "t"$0D"64) framelerp"$0D"128) beam"$0D"512) glow"$0D"1024) shell_red"$0D
         "2048) shell_green"$0D"4096) shell_blue"$0D"32768) ir_visible"$0D"655"
         "36) shell_double"$0D"131072) shell_half_damage"$0D"262144) use_disgu"
         "ise"
        Values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"5"
         "12"$0D"1024"$0D"2048"$0D"4096"$0D"32768"$0D"65536"$0D"131072"$0D"262"
         "144"
      }
      renderfx: =
      {
        Txt = " "
        Typ = "B"
        Hint = "Available Renderfx"
        Form = "t_renderfx_form:form"
        Cap = "Renderfx combine:add values"
      }
      skinnum: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin (.pcx file) to use on "
         "the model. (Default=0)."
      }
      solidstate: =
      {
        Txt = "&"
        Hint = "if you want the model to be solid and/or drop to the floor the"
         "n you must enter vector values for bleft and tright."
        typ = "C"
        Items = "1) unsolid, nodrop"$0D"2) solid, drop"$0D"3) solid, nodrop"$0D
         "4) unsolid, drop"
        Values = "1"$0D"2"$0D"3"$0D"4"
      }
      startframe: =
      {
        Txt = "&"
        Hint = "The starting frame. (Default=0)."
      }
      style: =
      {
        Txt = "&"
        Hint = "Specifies the animation type to use."
        typ = "C"
        Items = "0) None(use framenumbers)"$0D"1) Anim01"$0D"2) Anim23"$0D"3) "
         "Anim All"$0D"4) Anim AllFast"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Targetname>name"
      }
      bleft: =
      {
        Txt = "&"
        Hint = "The point that is at the bottom left of the model's bounding b"
         "ox in a model editor. (Default= -16 -16 -16)"
      }
      tright: =
      {
        Txt = "&"
        Hint = "The point that is at the top left of the model's bounding box "
         "in a model editor. (Default= 16 16 16)"
      }
      usermodel: =
      {
        Txt = "usermodel"
        Typ = "EP"
        Hint = "Type in the model path or use the file browser button to the r"
         "ight."$0D"This is a custom model for the actual game play only."$0D"I"
         "t will not show in QuArK's 3D views."$0D"For that use 3Dmodel above."
        BasePath = "$Game\baseq2\models"
        CutPath = "$Game\?\?\"
        DefExt = "md2"
        DirSep = "/"
        AugPath = "../models/"
      }
      usermodel: =
      {
        Txt = " "
        Typ = "B"
        Hint = "Available User Model"
        Form = "t_usermodel_form:form"
        Cap = "Available User Model"
      }
      viewmessage: =
      {
        Txt = "&"
        Hint = "Message which appears on the screen when a model_turret is acc"
         "essed using a func_monitor."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Hint = "Start active, when triggered become inactive."
        Cap = "Toggle"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Hint = "Set this if you want to use a player model. If  usermodel is b"
         "lank, model_spawn will use the model of the player."
        Cap = "Player"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Hint = "Don't use a model. Useful for placing particle effects and dyn"
         "amic lights."
        Cap = "No Model"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Hint = "Each time the model_spawn is triggered, it runs through one an"
         "imation cycle and shuts off. TOGGLE will automatically be set if ANI"
         "M_ONCE is set."
        Cap = "Anim Once"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X256"
        Hint = "The model_spawn will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X512"
        Hint = "The model_spawn will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The model_spawn will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The model_spawn will be inhibited and not appear when deathmat"
         "ch=1."
        Cap = "Not in Deathmatch"
      }
    }
    model_train:form =
    {
      Help = "This allows you to use your own custom entity 3D-models."$0D"Use"
       "d for special effects, you can control which model frames"$0D"are used"
       ". But the models do not fight like misc_actor entities do."$0D"Click o"
       "n this Help Book for more details."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "[_3Dmodel]"
      frame1 = "[Frame]"
      _3Dmodel: =
      {
        Txt = "3D Model"
        Typ = "EP"
        Hint = "Type in the model path or use the file browser button to the r"
         "ight."$0D"This is a custom model for QuArK 3d views only."$0D"It wil"
         "l not show in the actual game."$0D"For that use usermodel below."
        BasePath = "$Game\baseq2\models"
        CutPath = "$Game\?\?\"
        DefExt = "md2"
        DirSep = "/"
        AugPath = "models/"
      }
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      dmg: =
      {
        txt = "&"
        Hint = "The damage inflicted by the model_train on entities that block"
         " its progress. Ignored if BLOCK_STOPS is set."
      }
      effects: =
      {
        txt = "&"
        Hint = "Sets geewhiz rendering effects. Add values together to combine"
         " multiple effects."
        typ = "C"
        items = "0) combine:add values"$0D"1) rotate"$0D"2) gib"$0D"8) blaster"
         $0D"16) rocket"$0D"32) grenade"$0D"64) hyperblaster"$0D"128) bfg"$0D"2"
         "56) color_shell"$0D"512) powerscreen"$0D"16384) flies"$0D"32768) qua"
         "d"$0D"65536) pent"$0D"131072) teleporter"$0D"262144) flag1"$0D"52428"
         "8) flag2"$0D"1048576) ionripper"$0D"2097152) greengib"$0D"4194304) b"
         "lue_hb"$0D"8388608) spinning_lights"$0D"16777216) plasma"$0D"3355443"
         "2) trap"$0D"67108864) tracker"$0D"134217728) double"$0D"268435456) s"
         "pheretrans"$0D"536870912) tagtrail"$0D"1073741824) half_damage"$0D"2"
         "147483648) tracker_trail"
        values = "0"$0D"1"$0D"2"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"256"$0D
         "512"$0D"16384"$0D"32768"$0D"65536"$0D"131072"$0D"262144"$0D"524288"$0D
         "1048576"$0D"2097152"$0D"4194304"$0D"8388608"$0D"16777216"$0D"3355443"
         "2"$0D"67108864"$0D"134217728"$0D"268435456"$0D"536870912"$0D"1073741"
         "824"$0D"2147483648"
      }
      effects: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Effects combine:add values"
        Form = "t_effects_form:form"
        Hint = "Available Effects"
      }
      framenumbers: =
      {
        txt = "&"
        Hint = "The number of frames you want to display after startframe."
      }
      health: =
      {
        txt = "&"
        Hint = "If non-zero and solidstate is set to SOLID_BBOX, the entity wi"
         "ll be shootable. When destroyed, it blows up with a no-damage explos"
         "ion."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      renderfx: =
      {
        txt = "&"
        Hint = "Sets eyecandy rendering effects. Add values together to combin"
         "e multiple effects."
        typ = "C"
        items = "0) combine:add values"$0D"1) minlight"$0D"2) viewermodel"$0D"4"
         ") weaponmodel"$0D"8) fullbright"$0D"16) depthhack"$0D"32) translucen"
         "t"$0D"64) framelerp"$0D"128) beam"$0D"512) glow"$0D"1024) shell_red"$0D
         "2048) shell_green"$0D"4096) shell_blue"$0D"32768) ir_visible"$0D"655"
         "36) shell_double"$0D"131072) shell_half_damage"$0D"262144) use_disgu"
         "ise"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"5"
         "12"$0D"1024"$0D"2048"$0D"4096"$0D"32768"$0D"65536"$0D"131072"$0D"262"
         "144"
      }
      renderfx: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Renderfx combine:add values"
        Form = "t_renderfx_form:form"
        Hint = "Available Renderfx"
      }
      skinnum: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin (.pcx file) to use on "
         "the model. (Default=0)."
      }
      solidstate: =
      {
        txt = "&"
        Hint = "If you want the model to be solid then you must enter vector v"
         "alues for bleft and tright."
        typ = "C"
        Items = "1) Not solid"$0D"2) Bounding box"
        values = "1"$0D"2"
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed in units/second that the model_train moves. (Default=100"
         ")."
      }
      startframe: =
      {
        txt = "&"
        Hint = "The frame to display (ignored if style=3 or 4): (Default=0)."
      }
      pitch_speed: =
      {
        txt = "&"
        hint = "Pitch_Speed>deg/sec"
      }
      roll_speed: =
      {
        txt = "&"
        hint = "Roll_Speed>deg/sec"
      }
      yaw_speed: =
      {
        txt = "&"
        hint = "Yaw_Speed>deg/sec"
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the animation type to use."
        typ = "C"
        Items = "0) None"$0D"3) Anim All"$0D"4) Anim AllFast"
        values = "0"$0D"3"$0D"4"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the first path_corner on the model_train's route"
         "."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the model_train. Unnamed model_trains will always star"
         "t on, regardless of the START_ON setting."
      }
      team: =
      {
        txt = "&"
        Hint = "Team name of the model_train. Trains with an identical team na"
         "me will move together, and will all stop if one is blocked."
      }
      bleft: =
      {
        txt = "&"
        Hint = "The point that is at the bottom left of the model's bounding b"
         "ox in a model editor. (Default= -16 -16 -16)"
      }
      tright: =
      {
        txt = "&"
        Hint = "The point that is at the top left of the model's bounding box "
         "in a model editor. (Default= 16 16 16)"
      }
      usermodel: =
      {
        Txt = "usermodel"
        Typ = "EP"
        Hint = "Type in the model path or use the file browser button to the r"
         "ight."$0D"This is a custom model for the actual game play only."$0D"I"
         "t will not show in QuArK's 3D views."$0D"For that use 3Dmodel above."
        BasePath = "$Game\baseq2\models"
        CutPath = "$Game\?\?\"
        DefExt = "md2"
        DirSep = "/"
        AugPath = "../models/"
      }
      usermodel: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Available User Model"
        Form = "t_usermodel_form:form"
        Hint = "Available User Model"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "If set, model_train begins its movement when the map loads."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Toggle"
        Hint = "If set, allows the train to be toggled on/off multiple times."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Block Stops"
        Hint = "The model_train will stop completely when an entity is blockin"
         "g its way."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Player"
        Hint = "Set this if you want to use a player model. If  usermodel is b"
         "lank, model_train will use the model of the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Model"
        Hint = "Don't use a model. Useful for placing particle effects and dyn"
         "amic lights."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Rotate"
        Hint = "If set, the model_train will turn towards the next path_corner"
         " using its current yaw_speed and pitch_speed values (degrees/second)"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        Cap = "Rotate Constant"
        Hint = "If set, the model_train will constantly rotate around one or m"
         "ore axes continuously, until the train is toggled off or the rotatio"
         "nal speeds are changed by a path_corner."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Smooth Move"
        Hint = "If set, model_train will skip the last 0.1 second slowdown bef"
         "ore reaching a path_corner so that it maintains a constant velocity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The model_train will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The model_train will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The model_train will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The model_train will be inhibited and not appear when deathmat"
         "ch=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4096"
        Cap = "SPLINE"
        Hint = "The model_train will follow a spline curve that is defined by "
         "the path_corner origins and angles vector."
      }
    }
    model_turret:form =
    {
      Help = "This allows you to use your own custom entity 3D-models."$0D"Use"
       "d for special effects, you can control which model frames"$0D"are used"
       ". But the models do not fight like misc_actor entities do."$0D"Click o"
       "n this Help Book for more details."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "[_3Dmodel]"
      frame1 = "[Frame]"
      _3Dmodel: =
      {
        Txt = "3D Model"
        Typ = "EP"
        Hint = "Type in the model path or use the file browser button to the r"
         "ight."$0D"This is a custom model for QuArK 3d views only."$0D"It wil"
         "l not show in the actual game."$0D"For that use usermodel below."
        BasePath = "$Game\baseq2\models"
        CutPath = "$Game\?\?\"
        DefExt = "md2"
        DirSep = "/"
        AugPath = "models/"
      }
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the model_turret on the XY plane"
         ". (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the model_turret in 3 dimensions"
         " as defined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      count: =
      {
        txt = "&"
        Hint = "Specifies the position number in a series of model_turret targ"
         "eted by the same func_monitor."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Trigger which fires when the turret's health is depleted."
      }
      destroytarget: =
      {
        txt = "&"
        Hint = "Trigger which fires when the turret's gib_health is depleted."
      }
      distance: =
      {
        txt = "&"
        Hint = "Sets the initial velocity of fired grenades in units/sec."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Damage done to the entity blocking the turret's rotation, in h"
         "ealth points/0.1 second. (Default=10)."
      }
      followtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity a TRACK turret will aim at and follow"
         ", if there are no better targets found."
      }
      effects: =
      {
        txt = "&"
        Hint = "Sets geewhiz rendering effects. Add values together to combine"
         " multiple effects."
        typ = "C"
        items = "0) combine:add values"$0D"1) rotate"$0D"2) gib"$0D"8) blaster"
         $0D"16) rocket"$0D"32) grenade"$0D"64) hyperblaster"$0D"128) bfg"$0D"2"
         "56) color_shell"$0D"512) powerscreen"$0D"16384) flies"$0D"32768) qua"
         "d"$0D"65536) pent"$0D"131072) teleporter"$0D"262144) flag1"$0D"52428"
         "8) flag2"$0D"1048576) ionripper"$0D"2097152) greengib"$0D"4194304) b"
         "lue_hb"$0D"8388608) spinning_lights"$0D"16777216) plasma"$0D"3355443"
         "2) trap"$0D"67108864) tracker"$0D"134217728) double"$0D"268435456) s"
         "pheretrans"$0D"536870912) tagtrail"$0D"1073741824) half_damage"$0D"2"
         "147483648) tracker_trail"
        values = "0"$0D"1"$0D"2"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"256"$0D
         "512"$0D"16384"$0D"32768"$0D"65536"$0D"131072"$0D"262144"$0D"524288"$0D
         "1048576"$0D"2097152"$0D"4194304"$0D"8388608"$0D"16777216"$0D"3355443"
         "2"$0D"67108864"$0D"134217728"$0D"268435456"$0D"536870912"$0D"1073741"
         "824"$0D"2147483648"
      }
      effects: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Effects combine:add values"
        Form = "t_effects_form:form"
        Hint = "Available Effects"
      }
      framenumbers: =
      {
        txt = "&"
        Hint = "The number of frames you want to display after startframe."
      }
      health: =
      {
        txt = "&"
        Hint = "If non-zero and solidstate is 3 or 4 (solid), the entity will "
         "be shootable. When destroyed, it blows up with a no-damage explosion"
         "."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Hit points of an already-disabled turret.(Default=0)."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      maxpitch: =
      {
        txt = "&"
        Hint = "Maximum allowable pitch angle. (Default = 30)."
      }
      minpitch: =
      {
        txt = "&"
        Hint = "Minimum allowable pitch angle. (Default = -30)."
      }
      maxyaw: =
      {
        txt = "&"
        Hint = "Maximum allowable yaw angle. (Default = 360)."
      }
      minyaw: =
      {
        txt = "&"
        Hint = "Minimum allowable yaw angle. (Default = 0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the model_turret is to movewit"
         "h."
      }
      renderfx: =
      {
        txt = "&"
        Hint = "Sets eyecandy rendering effects. Add values together to combin"
         "e multiple effects."
        typ = "C"
        items = "0) combine:add values"$0D"1) minlight"$0D"2) viewermodel"$0D"4"
         ") weaponmodel"$0D"8) fullbright"$0D"16) depthhack"$0D"32) translucen"
         "t"$0D"64) framelerp"$0D"128) beam"$0D"512) glow"$0D"1024) shell_red"$0D
         "2048) shell_green"$0D"4096) shell_blue"$0D"32768) ir_visible"$0D"655"
         "36) shell_double"$0D"131072) shell_half_damage"$0D"262144) use_disgu"
         "ise"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"5"
         "12"$0D"1024"$0D"2048"$0D"4096"$0D"32768"$0D"65536"$0D"131072"$0D"262"
         "144"
      }
      renderfx: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Renderfx combine:add values"
        Form = "t_renderfx_form:form"
        Hint = "Available Renderfx"
      }
      skinnum: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin (.pcx file) to use on "
         "the model. (Default=0)."
      }
      solidstate: =
      {
        txt = "&"
        Hint = "If you want the model to be solid and/or drop to the floor the"
         "n you must enter vector values for bleft and tright."
        typ = "C"
        items = "1>unsolid, nodrop"$0D"2>solid, drop"$0D"3>solid, nodrop"$0D"4"
         ">unsolid, drop"
        values = "1"$0D"2"$0D"3"$0D"4"
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies what the turret will fire. Firing behavior is determ"
         "ined by wait, and in the case of grenade turrets, distance as well. "
         "(Default=2)."
        typ = "C"
        Items = "-1) No fire"$0D"1) Railgun"$0D"2) Rocket"$0D"3) BFG"$0D"4) Ho"
         "ming Rockets"$0D"5) Machinegun"$0D"6) Hyperblaster"$0D"7) Grenade"
        values = "-1"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed of pitch and yaw rotations in degrees/second. (Default=5"
         "0)."
      }
      startframe: =
      {
        txt = "&"
        Hint = "The starting frame. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the animation type to use."
        typ = "C"
        Items = "0) None(use framenumbers)"$0D"1) Anim01"$0D"2) Anim23"$0D"3) "
         "Anim All"$0D"4) Anim AllFast"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of an info_notnull, so placed as to determine the w"
         "eapon firing origin distance from the breach's origin. Every turret "
         "must target an info_notnull in order to function."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific model_turret. TRACK turrets may be toggle"
         "d on/off by triggering them."
      }
      team: =
      {
        txt = "&"
        Hint = "Value shared by the corresponding turret_base."
      }
      bleft: =
      {
        txt = "&"
        Hint = "The point that is at the bottom left of the model's bounding b"
         "ox in a model editor. (Default= -16 -16 -16)"
      }
      tright: =
      {
        txt = "&"
        Hint = "The point that is at the top left of the model's bounding box "
         "in a model editor. (Default= 16 16 16)"
      }
      usermodel: =
      {
        Txt = "usermodel"
        Typ = "EP"
        Hint = "Type in the model path or use the file browser button to the r"
         "ight."$0D"This is a custom model for the actual game play only."$0D"I"
         "t will not show in QuArK's 3D views."$0D"For that use 3Dmodel above."
        BasePath = "$Game\baseq2\models"
        CutPath = "$Game\?\?\"
        DefExt = "md2"
        DirSep = "/"
        AugPath = "../models/"
      }
      usermodel: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Available User Model"
        Form = "t_usermodel_form:form"
        Hint = "Available User Model"
      }
      wait: =
      {
        txt = "&"
        Hint = "The meaning of "$22"wait"$22" is dependent on the weapon type "
         "(sounds) used."
      }
      viewmessage: =
      {
        txt = "&"
        Hint = "Message which appears on the screen when a model_turret is acc"
         "essed using a func_monitor."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X1"
        Cap = "Player"
        Hint = "The turret may function as a "$22"ride-on"$22" turret."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The model_turret will not spawn in the game until triggered, b"
         "y calling its targetname."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X4"
        Cap = "Track"
        Hint = "The turret will act without being controlled by either a turre"
         "t_driver or a player. It is fully automated and will look for the ne"
         "arest player, monster, corpse, or followtarget (in that order) and f"
         "ollow their movements, if any. If sounds is not equal to -1 (no fire"
         ") then a non-GOODGUY  turret will always select the closest player i"
         "f he is visible and will then ignore other targets. GOODGUY turrets "
         "ignore players if a monster is visible."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X8"
        Cap = "Good Guy"
        Hint = "Turret will attack monsters rather than players. If set, TRACK"
         " is automatically turned on also. NOTE: To prevent killing monsters "
         "at map startup before the player arrives on the scene, GOODGUY turre"
         "ts are initially disabled and must be triggered into activity by cal"
         "ling its targetname."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X16"
        Cap = "Start Off"
        Hint = "If set the model_turret needs to be triggered to become active"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The model_turret will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The model_turret will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The model_turret will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The model_turret will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    monster_berserk:form =
    {
      Help = "This is the Berserker."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/berserk/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.20)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -60)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=240)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=250)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_boss2:form =
    {
      Help = "This is a flying Boss (Hornet)"
      bbox = '-56 -56 0 56 56 80'
      mdl = "models/monsters/boss2/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=2000)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Special"
        Hint = "The monster uses an attack other than the default. As of the c"
         "urrent Lazarus version, this affects only rocket-firing monsters - t"
         "hey will use homing rockets instead of standard rockets."$0D"Homing "
         "rockets are somewhat slower than normal rockets, which actually make"
         "s them deadlier since they have more time to correct themselves."$0D
         "This flag is ignored for monsters without a SPECIAL attack option."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_boss3_stand:form =
    {
      Help = "Just stands and cycles in one place until triggered, then telepo"
       "rts away."
      bbox = '-32 -32 0 32 32 90'
      mdl = "models/monsters/boss3/rider/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. Def"
         "ault=0."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. Default=0 0 0."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      targetname: =
      {
        txt = "&"
        hint = "Place the trigger so that just as you see him, he teleports aw"
         "ay."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_brain:form =
    {
      Help = "This is Brains."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/brain/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.10)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -150)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=300)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=400)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_chick:form =
    {
      Help = "This is Iron Maiden."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/bitch/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.40)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -70)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=175)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=200)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Special"
        Hint = "The monster uses an attack other than the default. As of the c"
         "urrent Lazarus version, this affects only rocket-firing monsters - t"
         "hey will use homing rockets instead of standard rockets."$0D"Homing "
         "rockets are somewhat slower than normal rockets, which actually make"
         "s them deadlier since they have more time to correct themselves."$0D
         "This flag is ignored for monsters without a SPECIAL attack option."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_commander_body:form =
    {
      Help = "Use an key_commander_head and set this as its target(Just for lo"
       "oks)."
      bbox = '-32 -32 0 32 32 48'
      mdl = "models/monsters/commandr/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies facing angle on the XY plane. Default=0."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies facing angle in 3 dimensions, defined as pitch, yaw,"
         " and roll. Default=0 0 0."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the commander's body is to mov"
         "ewith."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific commander's body."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Flies"
        Hint = "Commander's body has flies buzzing around him."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_flipper:form =
    {
      Help = "This is the Barracuda Shark."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/flipper/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.90)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -30)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=50)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=100)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_floater:form =
    {
      Help = "This is the Technician."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/float/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=200)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_flyer:form =
    {
      Help = "This is the Flyer. It's armed with a ChainGun."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/flyer/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=50)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_gladiator:form =
    {
      Help = "This is the Gladiator."
      bbox = '-32 -32 -24 32 32 48'
      mdl = "models/monsters/gladiatr/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. Default=0.05."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -175)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=400)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=400)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_gunner:form =
    {
      Help = "This is the Gunner he is armed with a ChainGun and a Grenade Lau"
       "ncher."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/gunner/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. Default=0.30."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -70)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=175)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=200)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_hover:form =
    {
      Help = "This is the Icarus."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/hover/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=240)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_infantry:form =
    {
      Help = "This is the Enforcer armed with a ChainGun."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/infantry/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.40)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -40)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=100)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=200)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_jorg:form =
    {
      Help = "This is The Jorg.When you kill him, you'll meet Makron."
      bbox = '-80 -80 0 90 90 140'
      mdl = "models/monsters/boss3/jorg/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.00)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -900)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r Jorg. (Default=3000)."
      }
      health2: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r Makron. (Default=3000)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster Jorg. (Default=1000)."
      }
      mass2: =
      {
        txt = "&"
        Hint = "Weight of the monster Makron. (Default=500)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_makron:form =
    {
      Help = "This is the Makron."
      bbox = '-30 -30 0 30 30 90'
      mdl = "models/monsters/boss3/rider/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.20)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -900)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=3000)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=500)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_medic:form =
    {
      Help = "This is the Medic."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/medic/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.15)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -130)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=300)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=400)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_mutant:form =
    {
      Help = "This is the Mutant."
      bbox = '-32 -32 -24 32 32 32'
      mdl = "models/monsters/mutant/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.90)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -120)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=300)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=300)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_parasite:form =
    {
      Help = "This is the Parasite."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/parasite/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.35)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -50)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=175)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=250)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_soldier:form =
    {
      Help = "This Guard has a Machine Gun."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldier/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.40)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -30)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=30)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=100)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_soldier_light:form =
    {
      Help = "This is the Guard armed with a simple blaster."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldier/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.40)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -30)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=20)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=100)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_soldier_ss:form =
    {
      Help = "This Guard has a ShotGun."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldier/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.40)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -30)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=40)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=100)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_supertank:form =
    {
      Help = "This is the Super Tank."
      bbox = '-64 -64 0 64 64 72'
      mdl = "models/monsters/boss1/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=1500)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=800)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Special"
        Hint = "The monster uses an attack other than the default. As of the c"
         "urrent Lazarus version, this affects only rocket-firing monsters - t"
         "hey will use homing rockets instead of standard rockets."$0D"Homing "
         "rockets are somewhat slower than normal rockets, which actually make"
         "s them deadlier since they have more time to correct themselves."$0D
         "This flag is ignored for monsters without a SPECIAL attack option."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_tank:form =
    {
      Help = "This is the Tank."
      bbox = '-32 -32 -16 32 32 72'
      mdl = "models/monsters/tank/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.05)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -200)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=750)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=500)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Special"
        Hint = "The monster uses an attack other than the default. As of the c"
         "urrent Lazarus version, this affects only rocket-firing monsters - t"
         "hey will use homing rockets instead of standard rockets."$0D"Homing "
         "rockets are somewhat slower than normal rockets, which actually make"
         "s them deadlier since they have more time to correct themselves."$0D
         "This flag is ignored for monsters without a SPECIAL attack option."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_tank_commander:form =
    {
      Help = "This is the Tank Commander."
      bbox = '-32 -32 -16 32 32 72'
      mdl = "models/monsters/tank/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      blood_type: =
      {
        txt = "&"
        Hint = "Specifies alternate blood particles. Currently only 1 new type"
         " is supported: if blood_type=1, the monster will bleed gekk-yellow b"
         "lood and his gibs will leave a gekk-yellow particle trail. (Default="
         "0)."
        typ = "C"
        Items = "0) Default"$0D"1) Yellow (gekk)"$0D"2) Robot Sparks"
        values = "0"$0D"1"$0D"2"
      }
      combattarget: =
      {
        txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      distance: =
      {
        txt = "&"
        Hint = "Specifies the maximum distance in map units that the monster c"
         "an be from the player and will still see and shoot at him."$0D"Minim"
         "um value is 500 (values<500 are reset to 500 by the code). (Default="
         "1280)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "An monster with a dmgteam value set will treat all attacks upo"
         "n other actor(s) or monster(s) with the same dmgteam value as an att"
         "ack on himself."$0D"Dmgteam may also be used to trigger a trigger_re"
         "lay."
      }
      flies: =
      {
        txt = "&"
        Hint = "Specifies the probability that the monster's corpse will produ"
         "ce flies."$0D"When they appear, they will have a duration of 60 seco"
         "nds before they expire. (Default=0.05)."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to gib the monster"
         "'s corpse."$0D"Ignored when NO_GIB  is set. (Defaut= -225)."
      }
      gib_type: =
      {
        txt = "&"
        Hint = "Specifies alternate gib models should be used. 'models/objects"
         "/gibX' (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the monste"
         "r. (Default=1000)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the monster. (Default=500)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      powerarmor: =
      {
        txt = "&"
        Hint = "Specifies amount of optional power shield armor the monster ha"
         "s. (Default=0)."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the 0-based index of the skin the monster will use."
        typ = "C"
        Items = "0) Standard skin (default)"$0D"1) custom1"$0D"2) custom2"$0D"3"
         ") custom3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."$0D"Also, the monster count will not reflect that monster unti"
         "l he is spawned at that time the monster count is updated."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"This is the same as normal Quake2's AMBUSH flag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Good Guy"
        Hint = "The monster will not attack the player, and will treat all att"
         "acks upon the player as an attack on himself."$0D"If the player shoo"
         "ts a GOOD_GUY monster, the GOOD_GUY flag is removed and the monster "
         "will then turn on the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Gib"
        Hint = "The monster cannot be gibbed. Visual evidence is that the corp"
         "se produces sparks rather than blood when shot."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Special"
        Hint = "The monster uses an attack other than the default. As of the c"
         "urrent Lazarus version, this affects only rocket-firing monsters - t"
         "hey will use homing rockets instead of standard rockets."$0D"Homing "
         "rockets are somewhat slower than normal rockets, which actually make"
         "s them deadlier since they have more time to correct themselves."$0D
         "This flag is ignored for monsters without a SPECIAL attack option."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Ignore Fire"
        Hint = "The monster can shoot other monsters/actors without them getti"
         "ng mad at him."$0D"This is useful flag to set for a monster whose pl"
         "acement frequently causes him to hit other monsters/actors with frie"
         "ndly fire."$0D"Setting this flag does not mean that IGNORE_FIRE mons"
         "ters and GOOD_GUY monsters/actors won't shoot each other."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    path_corner:form =
    {
      Help = "Path_corner is a point something travels to."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the path_corner w"
         "ill be used as a path node before being auto-killtargeted (see this "
         "page for details). (Default=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the p"
         "ath_corner is used."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monster is to movewith."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the path_corner "
         "is used."
      }
      roll: =
      {
        txt = "&"
        Hint = "Specifies the roll angle that a ROTATE func_train should turn "
         "to while moving towards this path_corner. The func_train's roll_spee"
         "d must be non-zero to perform this rotation. (Default=0)."
      }
      speed: =
      {
        txt = "&"
        Hint = "Specifies the change in speed of a func_train which uses the p"
         "ath_corner. (Default=0)."
      }
      pitch_speed: =
      {
        txt = "&"
        Hint = "Specifies the absolute rotational speed on the pitch axis of a"
         " ROTATE func_train which uses the path_corner; and specifies the cha"
         "nge in rotational speed on the pitch axis of a ROTATE_CONSTANT func_"
         "train which uses the path_corner. (Default=0)."
      }
      roll_speed: =
      {
        txt = "&"
        Hint = "Specifies the absolute rotational speed on the roll axis of a "
         "ROTATE func_train which uses the path_corner; and specifies the chan"
         "ge in rotational speed on the roll axis of a ROTATE_CONSTANT func_tr"
         "ain  which uses the path_corner. (Default=0)."
      }
      yaw_speed: =
      {
        txt = "&"
        Hint = "Specifies the absolute rotational speed on the yaw axis of a R"
         "OTATE func_train which uses the path_corner; and specifies the chang"
         "e in rotational speed on the yaw axis of a ROTATE_CONSTANT func_trai"
         "n which uses the path_corner. Default=0."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the next path_corner in the path."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific path_corner."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Specifies the amount of time in seconds that an entity which u"
         "ses the path_corner"$0D"will pause before proceeding to the next pat"
         "h_corner in the sequence."$0D"If wait=(-1), the entity will not proc"
         "eed unless it is triggered to move again. (Default=0)."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Teleport"
        Hint = "An entity set to move to this path_corner will appear there im"
         "mediately rather than moving there in its normal manner."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Rotate"
        Hint = "A ROTATE func_train will not change its orientation to turn to"
         "wards this path_corner."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The path_corner will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The path_corner will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The path_corner will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The path_corner will be inhibited and not appear when deathmat"
         "ch=1."
      }
    }
    path_track:form =
    {
      Help = "Path_track is to func_tracktrain as path_corner is to func_train"
       ": it is used to define a path that the train will follow."
      bbox = '-8 -8 -8 8 8 8'
      deathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to trigger when the func_tracktrain r"
         "eaches this path_track, and this path_track is a dead end. Useful fo"
         "r automatic func_trackchange operation."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to trigger each time a func_tracktrai"
         "n reaches this path_track."
      }
      speed: =
      {
        txt = "&"
        Hint = "When a func_tracktrain passes through this path_track, its max"
         "imum speed is multiplied by this value."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the next path_track on the func_tracktrain's pat"
         "h."
      }
      target2: =
      {
        txt = "&"
        Hint = "Targetname of an alternate path_track for the func_tracktrain'"
         "s path. For normal one-way paths, this value will only be used with "
         "ALTPATH path_tracks. For two-way paths this value will be required f"
         "or at least one path_track that lies on the main line between 2 ALTP"
         "ATH branch points. Again, see train route below."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the path_track. This field is required."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "AltPath"
        Hint = "If set, this path_track is a branch point. Target and target2 "
         "specify alternate path_tracks to travel to from this path_track. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Disabled"
        Hint = "A train may not travel to this path_track. If ALTPATH is not s"
         "et, DISABLED is toggled each time a path_track is triggered."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Fire Once"
        Hint = "If set, the path_track's pathtarget will only be triggered one"
         " time."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "DisableTrain"
        Hint = "When reaching this path_track the train will set its NOCONTROL"
         "  spawnflag. If a player is currently in control of the train, he wi"
         "ll lose that control."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The func_train will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The func_train will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The func_train will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The func_train will be inhibited and not appear when deathmatc"
         "h=1."
      }
    }
    point_combat:form =
    {
      Help = "Makes this the target of a monster and it will head here when fi"
       "rst activated before going after the activator.  If hold is selected, "
       "it will stay here."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "Specifies the number of times the point_combat will be used be"
         "fore it is auto-killtargeted."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the p"
         "oint_combat is used."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the point_combat"
         " is used."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the next point_combat in the path."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific point_combat."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Hold"
        Hint = "The monster or actor which uses the point_combat will stand in"
         " place and not run around."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X2"
        Cap = "Drive Train"
        Hint = "If set, once a monster touches this point_combat the code will"
         " check to see whether he is in a good driving position for a func_tr"
         "acktrain (and if the point_combat is placed properly this should alw"
         "ays be true. If it is, the monster becomes the driver of the train, "
         "and the train accelerates to full speed."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The point_combat will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The point_combat will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The point_combat will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The point_combat will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    target_actor:form =
    {
      Help = "This targets the misc_actor entity."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_actor "
         "will be used as a path node before being auto-killtargeted. Default="
         "0."
      }
      height: =
      {
        txt = "&"
        Hint = "Specifies the vertical velocity in units/second given to the m"
         "isc_actor/monster_* which uses the target_actor. Default=200."
      }
      message: =
      {
        txt = "&"
        Hint = "Message to be printed to the screen when the target_actor is u"
         "sed."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity the misc_actor/monster_* will act upo"
         "n when the target_actor is used."
      }
      speed: =
      {
        txt = "&"
        Hint = "Specifies the horizontal velocity in units/second given to the"
         " misc_actor/monster_* which uses the target_actor. Default=200."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the next target_actor/path_corner in the path."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_actor."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the amount of time in seconds that the misc_actor/mo"
         "nster_* which uses the target_actor"$0D"will pause before proceeding"
         " to the next target_actor/path_corner in the sequence."$0D"If wait=("
         "-1), the misc_actor/monster_* will not proceed unless it is triggere"
         "d to move again. Default=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Jump"
        Hint = "The target_actor will cause the misc_actor/monster_* to jump."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Shoot"
        Hint = "The target_actor will cause the misc_actor/monster_* to shoot "
         "once at its pathtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Attack"
        Hint = "The target_actor will cause the misc_actor/monster_* to shoot "
         "and attempt to kill its pathtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Hold"
        Hint = "The target_actor will cause the misc_actor/monster_* to stand "
         "in place and not run around."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Brutal"
        Hint = "The target_actor will cause the misc_actor/monster_* to shoot,"
         " attempt to kill, and gib its pathtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_actor will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_actor will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_actor will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_actor entity will be inhibited and not appear when "
         "deathmatch=1."
      }
    }
    target_anger:form =
    {
      Help = "This trigger will cause an entity to be angry at another entity "
       "when a player touches it. Target the"$0D"entity you want to anger, and"
       " killtarget the entity you want it to be angry at."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Sets the direction on the XY plane that the targeted misc_acto"
         "r/monster_* will move. This key is only relevant if speed is non-zer"
         "o and the actor/monster is not already moving."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_anger "
         "will be called before being auto-killtargeted. (Default=0)."
      }
      height: =
      {
        txt = "&"
        Hint = "Specifies the vertical velocity in units/second given to the t"
         "argeted misc_actor/monster_*. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity the targeted misc_actor/monster_* wil"
         "l act upon."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity the targeted misc_actor/monster_* wil"
         "l move to. Incompatible with HOLD."
      }
      speed: =
      {
        txt = "&"
        Hint = "Specifies the horizontal velocity in units/second given to the"
         " targeted misc_actor/monster_*. Default=0. Direction of movement is "
         "the same as the current movement direction of the monster/actor. If "
         "the monster/actor is not moving, then direction is determined by ang"
         "le."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the misc_actor/monster_* the target_anger is to "
         "act upon."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_anger."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Hold"
        Hint = "The target_anger will cause the misc_actor/monster_* to stand "
         "in place and not run around. Incompatible with pathtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Brutal"
        Hint = "The target_anger will cause the misc_actor/monster_* to shoot,"
         " attempt to kill, and gib its killtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_anger will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_anger will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_anger will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = ""
      }
    }
    target_animation:form =
    {
      Help = "The Lazarus target_animation point entity is a mechanism which i"
       "s used to trigger an animation sequence in another entity, such as a m"
       "isc_actor. You can easily select a number of the canned sequences used"
       " by player models (such as taunts) or you can select your own series o"
       "f frames to play. If a misc_actor is in the middle of a battle, the an"
       "imation sequences called by his actions will override those specified "
       "by a target_animation which targets him."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_animat"
         "ion will be called before being auto-killtargeted. (Default=0)."
      }
      framenumbers: =
      {
        txt = "&"
        Hint = "Specifies the number of frames to play after startframe. (Defa"
         "ult=0). Ignored unless sounds=0."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the entity class that must activate the particular t"
         "arget_animation before it will fire. If target is undefined, the tar"
         "get_animation will animate the activator itself. Ignored if ACTIVATO"
         "R is not set."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies a canned player model animation sequence. (Default=0"
         ")."
        typ = "C"
        Items = "0) Specify Frames"$0D"1) Jump"$0D"2) Flipoff"$0D"3) Salute"$0D
         "4) Taunt"$0D"5) Wave"$0D"6) Point"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
      startframe: =
      {
        txt = "&"
        Hint = "Specifies the first frame number to be played. See also framen"
         "umbers. (Default=0). Ignored unless sounds=0."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be animated. If "$22"target"$22" i"
         "s not defined, the target_animation will target its ACTIVATOR."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_animation."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X1"
        Cap = "Activator"
        Hint = "The target_animation will only fire if the "$22"activating"$22
         " entity is the same as the one defined by message."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_animation will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_animation will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_animation will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_animation will be inhibited and not appear when dea"
         "thmatch=1."
      }
    }
    target_attractor:form =
    {
      Help = "Target_attractor is an entity magnet gizmo. It pulls the target "
       "entity towards it, and may optionally trigger another entity once the "
       "target reaches the attractor. Target_attractor works by continuosly ad"
       "justing the target entity's velocity vector to point towards the attra"
       "ctor. The target entity is given a minimum speed value to help move it"
       " towards the attractor. This entity is useful for more than the obviou"
       "s player trap; you might also use it as a lifting device or to assist "
       "in the exact placement of gravity-affected brush models like the func_"
       "pushable and the func_object."
      bbox = '-8 -8 -8 8 8 8'
      accel: =
      {
        txt = "&"
        Hint = "Acceleration value. Attraction speed will increase by accel  u"
         "nits/sec every second. More accurately, it will increase by accel/10"
         " units/sec every 0.1 seconds. If not used or 0, attraction speed is "
         "constant."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the attractor wil"
         "l be turned off before it is auto-killtargeted. (Default=0)."
      }
      distance: =
      {
        txt = "&"
        Hint = "Maximum range to the target. Entities beyond this range will n"
         "ot be attracted. If not used or 0, distance is ignored and all targe"
         "ts will be attracted."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Name of the func_train or model_train to movewith."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Entity to trigger once the target reaches the target_attractor"
         ". The pathtarget will only be fired once per on/off cycle of the tar"
         "get_attractor, regardless of how many targets are being attracted si"
         "multaneously."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Effect to use when attracting a target. If sounds is non-zero,"
         " the SIGHT and SINGLE_TARGET spawnflags are automatically set, wheth"
         "er they were set in the map file or not."
        typ = "C"
        Items = "0) None"$0D"1) Medic cable"$0D"2) BFG Laser"
        values = "0"$0D"1"$0D"2"
      }
      speed: =
      {
        txt = "&"
        Hint = "Minimum speed to pull the target with. Note that if the target"
         " is normally affected by gravity and the target_attractor pulls the "
         "target up, speed must be greater than the sv_gravity value * 0.1, 0."
         "1 being the time interval between target_attractor "$22"pulls"$22". "
         "For normal gravity (800 units/sec/sec), this means speed must be >80"
         " to pull up a player or monster or other entity that is affected by "
         "gravity. Alternatively, you can set the NO_GRAVITY spawnflag to temp"
         "orarily turn gravity off for the target entity."
      }
      target: =
      {
        txt = "&"
        Hint = "Specifies the targetname of the entity to attract. This value "
         "is ignored if the PLAYER or MONSTER spawnflags are set."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the target_attractor. If the START_ON  spawnflag is no"
         "t set, or if you want to toggle the target_attractor on/off, it must"
         " have a targetname."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "If set, the target_attractor will be active when the map loads"
         ". If not set, target_attractor must be triggered to function."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Player"
        Hint = "f set, target_attractor attracts players. The target key is ig"
         "nored in this case. If the SIGHT spawnflag is set, the attractor ign"
         "ores players that are not visible. If the SINGLE_TARGET spawnflag is"
         " set, the attractor chooses the closest player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Gravity"
        Hint = "Set this spawnflag to temporarily turn gravity off for the tar"
         "geted entity. NOTE: For best results when PLAYER is set, NO_GRAVITY "
         "should be set as well in cases where an attractor is to lift a playe"
         "r off the floor, or in scenarios where the player is in no way inten"
         "ded to have a chance to successfully fight the pull of the attractor"
         ". This is because without setting NO_GRAVITY, gravity is allowed to "
         "continuously fight against the target_attractor. This results in not"
         "iceably jerky motion near the attractor's origin."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Monster"
        Hint = "Set this spawnflag to attract ALL monsters. The target key is "
         "ignored if MONSTER is set."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Sight"
        Hint = "If set, the target must be visible to the target_attractor to "
         "be attracted. SIGHT is automatically selected if sounds is non-zero."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X32"
        Cap = "Single Target"
        Hint = "If set, the target_attractor will select the closest visible ("
         "if SIGHT is set) valid target and only attract it, rather than all v"
         "alid targets. SINGLE_TARGET is automatically selected if sounds is n"
         "on-zero."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_attractor will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_attractor will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_attractor will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_attractor will be inhibited and not appear when dea"
         "thmatch=1."
      }
    }
    target_blaster:form =
    {
      Help = "Fires a blaster bolt in the set direction when triggered."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/laser/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies an aiming direction on the XY plane. (-1 is up, -2 i"
         "s down) (Default=0)."$0D"Ignored if target is used, and/or SEEK_PLAY"
         "ER is set. "
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies an aiming direction in 3 dimensions, defined by pitc"
         "h and yaw (roll is ignored). (Default=0 0 0)."$0D"Ignored if target "
         "is used, and/or SEEK_PLAYER is set."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the blaster will "
         "be turned off before it is auto-killtargeted. (Default=0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the number of damage hit points the blaster will do "
         "with each hit. (Default=15)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the blaster is to movewith."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies speed in units/second of the blaster bolt. (Default="
         "1000)."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies what the blaster will fire. (Default=0)."
        typ = "C"
        Items = "0) Blaster"$0D"1) Railgun"$0D"2) Rocket"$0D"3) BFG"$0D"4) Hom"
         "ing Rockets"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity the blaster will fire at."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_blaster."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the amount of time in seconds between blaster firing"
         "s. (Default=0)."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "No Trail"
        Hint = "The target_blaster will produce the blaster bolt but not the b"
         "laster trail."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "No Effects"
        Hint = "Same as NO_TRAIL except that dynamic lighting effects will als"
         "o not be produced."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Start On"
        Hint = "Specifies that the target_blaster will be active at map startu"
         "p. Only relevant if wait>0. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "If Visible"
        Hint = "Specifies that the target_blaster must have a clear shot at it"
         "s target before it will fire."$0D"Not relevant if target is not used"
         " and/or SEEK_PLAYER is not set."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Seek Player"
        Hint = "Specifies that the target_blaster will target the first player"
         " it finds,"$0D"and will consider players priority targets over entit"
         "ies specified by target."$0D"Whether the blaster will fire or not, o"
         "r whether it will fire at the player or at its fallback target,"$0D"i"
         "s subject to whether or not IF_VISIBLE is set."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_blaster will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_blaster will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_blaster will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_blaster will be inhibited and not appear when death"
         "match=1."
      }
    }
    target_bmodel_spawner:form =
    {
      Help = "The Lazarus target_bmodel_spawner is a point entity which allows"
       " multiple brush entities to reference a single, common brush model. Te"
       "chnically, it really doesn't spawn brush models; more precisely it spa"
       "wns brush entities."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the spawned brush entity on the "
         "XY plane, relative to its referenced parent model. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the spawned brush entity in 3 di"
         "mensions, relative to its referenced parent model, as defined by pit"
         "ch, yaw, and roll. (Default=0 0 0)."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_bmodel"
         "_spawner will be called before being auto-killtargeted (see this pag"
         "e for details). (Default=0)."
      }
      newtargetname: =
      {
        txt = "&"
        Hint = "Targetname value which will be inherited by the spawned clone."
         " If no value is given to this key, then the clone will not have a ta"
         "rgetname."
      }
      newteam: =
      {
        txt = "&"
        Hint = "Team value which will be inherited by the spawned clone. If no"
         " value is given to this key, then the clone will not be on a team. ("
         "This should be used with START_ON, so that there's no chance one tea"
         "mmate can be in the process of moving while another teammate is bein"
         "g spawned)."
      }
      source: =
      {
        txt = "&"
        Hint = "Targetname of the brush model entity which is to be used as a "
         "model reference."
      }
      target: =
      {
        txt = "&"
        Hint = "Target value which will be inherited by the spawned clone. If "
         "no value is given to this key, then the clone will not have a target"
         "."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_bmodel_spawner."
      }
      team: =
      {
        txt = "&"
        Hint = "Team value which will be inherited by the spawned clone. If no"
         " value is given to this key, then the clone will not be on a team. ("
         "This should be used with START_ON, so that there's no chance one tea"
         "mmate can be in the process of moving while another teammate is bein"
         "g spawned)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start On"
        Hint = "The target_bmodel_spawner will spawn the brush entity clone at"
         " map load."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_bmodel_spawner will be inhibited and not appear whe"
         "n skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_bmodel_spawner will be inhibited and not appear whe"
         "n skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_bmodel_spawner will be inhibited and not appear whe"
         "n skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_bmodel_spawner will be inhibited and not appear whe"
         "n deathmatch=1."
      }
    }
    target_cd:form =
    {
      Help = "The target_cd is a new Lazarus point entity which, when triggere"
       "d, causes a predetermined CD track to begin playing. It will not force"
       " CD playback if the user has CD music disabled (cd_nocd=1)."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_cd wil"
         "l be called before being auto-killtargeted. (Default=0)."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Specifies the number of times to loop the CD track. (Default=1"
         ")."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "1) not used, data"$0D"2) Operation Overlord"$0D"3) Rage"$0D"4"
         ") Kill Ratio"$0D"5) March of the Stroggs"$0D"6) The Underworld"$0D"7"
         ") Quad Machine"$0D"8) Big Gun"$0D"9) Descent Into Cerberon"$0D"10) C"
         "limb"$0D"11) Showdown"
        Values = "1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"10"$0D
         "11"
        Hint = "Specifies CD track number to play. (Default=2)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_cd."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_cd will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_cd will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_cd will be inhibited and not appear when skill=2 or"
         " greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_cd will be inhibited and not appear when deathmatch"
         "=1."
      }
    }
    target_change:form =
    {
      Help = "The Lazarus target_change point entity allows for altering the e"
       "ntity properties of another entity."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        txt = "&"
        Hint = "New angle, assuming the targeted entity can use it."
      }
      angles: =
      {
        txt = "&"
        Hint = "New angles, assuming the targeted entity can use it."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "New deathtarget, assuming the targeted entity can use it."
      }
      delay: =
      {
        txt = "&"
        Hint = "New delay, assuming the targeted entity can use it."
      }
      distance: =
      {
        txt = "&"
        Hint = "New distance, assuming the targeted entity can use it."
      }
      dmg: =
      {
        txt = "&"
        Hint = "New dmg, assuming the targeted entity can use it."
      }
      health: =
      {
        txt = "&"
        Hint = "New health, assuming the targeted entity can use it."
      }
      item: =
      {
        txt = "&"
        Hint = "New item, assuming the targeted entity can use it."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        txt = "&"
        Hint = "New killtarget, assuming the targeted entity can use it."
      }
      mass: =
      {
        txt = "&"
        Hint = "New mass, assuming the targeted entity can use it."
      }
      message: =
      {
        txt = "&"
        Hint = "New message, assuming the targeted entity can use it."
      }
      newtargetname: =
      {
        txt = "&"
        Hint = "The new targetname value you may wish to assign to the targete"
         "d entity."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "New pathtarget, assuming the targeted entity can use it."
      }
      random: =
      {
        txt = "&"
        Hint = "New random, assuming the targeted entity can use it."
      }
      speed: =
      {
        txt = "&"
        Hint = "New speed, assuming the targeted entity can use it."
      }
      style: =
      {
        txt = "&"
        Hint = "New style, assuming the targeted entity can use it."
      }
      target: =
      {
        txt = "&"
        Hint = "Two values are valid here; the first is the targetname of the "
         "entity whose keyvalue(s) you wish to alter,"$0D"and the second (opti"
         "onal) value is the new value for "$22"target"$22" that you may wish "
         "to assign to the"$0D"targeted entity. If two values are used, then t"
         "hey should be separated by a comma."
      }
      targetname: =
      {
        txt = "&"
        Hint = "The name of the specific target_change."
      }
      team: =
      {
        txt = "&"
        Hint = "New team, assuming the targeted entity can use it."
      }
      wait: =
      {
        txt = "&"
        Hint = "New wait, assuming the targeted entity can use it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Spawnflags=1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Spawnflags=2"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Spawnflags=4"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Spawnflags=8"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Spawnflags=16"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Spawnflags=32"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Spawnflags=64"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Spawnflags=128"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
      }
    }
    target_changelevel:form =
    {
      Help = "Changes level to map when fired."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        txt = "&"
        Hint = "Specifies the number of degrees to increment player facing ang"
         "le when spawning in the next map. Position offset and velocity is al"
         "so rotated. Only relevant when LANDMARK is set. (Default=0). Setting"
         " angle allows maps in a series to be oriented differently from each "
         "other to still use LANDMARK."
      }
      map: =
      {
        txt = "&"
        Hint = "Name of the next map, demo, cinematic, or image to load."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_changelevel."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Clear Inventory"
        Hint = "Changelevel will cause all weapons, ammo and items to be strip"
         "ped from the player on level change. Player health is also reset to "
         "100."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Landmark"
        Hint = "Changelevel is used as a landmark to determine spawning positi"
         "on in the next level. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Gun"
        Hint = "The target_changelevel will force the cvars cl_gun and crossha"
         "ir to be set to 0 for the next map or demo loaded. Upon exiting this"
         " map or demo, the values of these cvars will be restored to their pr"
         "evious settings."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X8"
        Cap = "Easy"
        Hint = "Skill level will be set to 0 for the next map."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X16"
        Cap = "Normal"
        Hint = "Skill level will be set to 1 for the next map."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X32"
        Cap = "Hard"
        Hint = "Skill level will be set to 2 for the next map."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X64"
        Cap = "Nightmare"
        Hint = "Skill level will be set to 3 for the next map."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_changelevel will be inhibited and not appear when s"
         "kill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_changelevel will be inhibited and not appear when s"
         "kill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_changelevel will be inhibited and not appear when s"
         "kill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_changelevel will be inhibited and not appear when d"
         "eathmatch=1."
      }
    }
    target_character:form =
    {
      Help = "You must use the num_0 texture from the 'extra' texture folder."
      count: =
      {
        Txt = "&"
        Hint = "This is the position in the string (starts at 1)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the target_character is to mov"
         "ewith."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_character."
      }
      team: =
      {
        Txt = "&"
        Hint = "This must be the same as the team (Arg) for the target_string."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_character will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_character will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_character will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_character will be inhibited and not appear when dea"
         "thmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    target_clone:form =
    {
      Help = "Spawns a new entity, using model and other parameters of source "
       "entity."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle on the XY plane. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the facing angle in 3 dimensions as defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_clone "
         "can be triggered before it is auto-killtargeted. (Default=0)."
      }
      newtargetname: =
      {
        txt = "&"
        Hint = "Targetname to assign to spawned entity."
      }
      source: =
      {
        txt = "&"
        Hint = "Targetname of source entity for model."
      }
      target: =
      {
        txt = "&"
        Hint = "Target to assign to spawned entity."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_clone."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X1"
        Cap = "Start On"
        Hint = "Specifies that the target_clone will be active at map startup."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_clone will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_clone will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_clone will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_clone will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    target_crosslevel_target:form =
    {
      Help = "Triggered by a trigger_crosslevel elsewhere within a unit.  If m"
       "ultiple triggers are checked, all must be true."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the target_crosslevel_ta"
         "rget will fire after being triggered. (Default=1)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "arget_crosslevel_target fires."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to trigger."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_crosslevel_target."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Trigger 1"
        Hint = "Sets the first of 8 possible flags used when Triggered by a ta"
         "rget_crosslevel_trigger elsewhere within a unit."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger 2"
        Hint = "Sets the second of 8 possible flags used when Triggered by a t"
         "arget_crosslevel_trigger elsewhere within a unit."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Trigger 3"
        Hint = "Sets the third of 8 possible flags used when Triggered by a ta"
         "rget_crosslevel_trigger elsewhere within a unit."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Trigger 4"
        Hint = "Sets the fourth of 8 possible flags used when Triggered by a t"
         "arget_crosslevel_trigger elsewhere within a unit."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Trigger 5"
        Hint = "Sets the fifth of 8 possible flags used when Triggered by a ta"
         "rget_crosslevel_trigger elsewhere within a unit."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Trigger 6"
        Hint = "Sets the sixth of 8 possible flags used when Triggered by a ta"
         "rget_crosslevel_trigger elsewhere within a unit."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X64"
        Cap = "Trigger 7"
        Hint = "Sets the seventh of 8 possible flags used when Triggered by a "
         "target_crosslevel_trigger elsewhere within a unit."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X128"
        Cap = "Trigger 8"
        Hint = "Sets the eighth of 8 possible flags used when Triggered by a t"
         "arget_crosslevel_trigger elsewhere within a unit."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_crosslevel_target will be inhibited and not appear "
         "when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_crosslevel_target will be inhibited and not appear "
         "when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_crosslevel_target will be inhibited and not appear "
         "when skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_crosslevel_target will be inhibited and not appear "
         "when deathmatch=1."
      }
    }
    target_crosslevel_trigger:form =
    {
      Help = "Once this trigger is touched/used, any target_crosslevel_target "
       "with the same trigger number is automatically fired."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the target_crosslevel_tr"
         "igger will fire after being triggered. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "arget_crosslevel_trigger fires."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " target_crosslevel_trigger fires."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the target_cross"
         "level_trigger fires."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_crosslevel_trigger."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Trigger 1"
        Hint = "Sets the first of 8 possible flags read on map load for the pu"
         "rpose of triggering a target_crosslevel_target."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger 2"
        Hint = "Sets the second of 8 possible flags read on map load for the p"
         "urpose of triggering a target_crosslevel_target."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Trigger 3"
        Hint = "Sets the third of 8 possible flags read on map load for the pu"
         "rpose of triggering a target_crosslevel_target."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Trigger 4"
        Hint = "Sets the fourth of 8 possible flags read on map load for the p"
         "urpose of triggering a target_crosslevel_target."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Trigger 5"
        Hint = "Sets the fifth of 8 possible flags read on map load for the pu"
         "rpose of triggering a target_crosslevel_target."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Trigger 6"
        Hint = "Sets the sixth of 8 possible flags read on map load for the pu"
         "rpose of triggering a target_crosslevel_target."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X64"
        Cap = "Trigger 7"
        Hint = "Sets the seventh of 8 possible flags read on map load for the "
         "purpose of triggering a target_crosslevel_target."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X128"
        Cap = "Trigger 8"
        Hint = "Sets the eighth of 8 possible flags read on map load for the p"
         "urpose of triggering a target_crosslevel_target."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_crosslevel_trigger will be inhibited and not appear"
         " when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_crosslevel_trigger will be inhibited and not appear"
         " when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_crosslevel_trigger will be inhibited and not appear"
         " when skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_crosslevel_trigger will be inhibited and not appear"
         " when deathmatch=1."
      }
    }
    target_earthquake:form =
    {
      Help = "When triggered, this initiates a level-wide earthquake.  All pla"
       "yers and monsters are affected."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        Txt = "&"
        Hint = "Duration of the quake (Default=5)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Severity of the quake (Default=200)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_earthquake."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_earthquake will be inhibited and not appear when sk"
         "ill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_earthquake will be inhibited and not appear when sk"
         "ill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_earthquake will be inhibited and not appear when sk"
         "ill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_earthquake will be inhibited and not appear when de"
         "athmatch=1."
      }
    }
    target_effect:form =
    {
      Help = "Target_effect is similar to a target_temp_entity, but allows you"
       " to produce any of the standard Quake2 particle effects. The effect to"
       " produce is specified by the style value, and different styles take di"
       "fferent parameters. Several of the explosion effects are identical but"
       " have been included for completeness."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        txt = "&"
        Hint = "Specifies the direction on the XY plane that the target_effect"
         " will throw its pixels. (-1 is up, -2 is down)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Used for most of the target_effect styles other than those tha"
         "t use a target. The pitch and yaw angles specify the movement direct"
         "ion for the effect."
      }
      count: =
      {
        txt = "&"
        Hint = "Number of particles to produce each time target_effect is trig"
         "gered. This value is only used by TE_SPLASH, TE_LASER_SPARKS, TE_WEL"
         "DING_SPARKS, and TE_STEAM."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the entity to move with."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Color used by the target_effect."
      }
      sounds: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Available Color"
        Form = "t_effect_form:form"
        Hint = "Available Color"
      }
      speed: =
      {
        txt = "&"
        Hint = "Used only by TE_STEAM and TE_TUNNEL_SPARKS. Speed of the parti"
         "cles, in units/second. Default value = 75. The width of the base is "
         "proportional to the speed."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the type of effect to produce."
        typ = "C"
        Items = "0) Gunshot"$0D"1) Blood"$0D"2) Blaster"$0D"3) Railtrail"$0D"4"
         ") Shotgun"$0D"5) Explosion1"$0D"6) Explosion2"$0D"7) Rocket explosio"
         "n"$0D"8) Grenade explosion"$0D"9) Sparks"$0D"10) Splash"$0D"11) Bubb"
         "letrail"$0D"12) Screen sparks"$0D"13) Shield sparks"$0D"14) Bullet s"
         "parks"$0D"15) Laser sparks"$0D"16) Parasite attack"$0D"17) Rocket ex"
         "pl (water)"$0D"18) Grenade expl (water)"$0D"19) Medic cable attack"$0D
         "20) BFG explosion"$0D"21) BFG big explosion"$0D"22) BossTport"$0D"23"
         ") BFG laser"$0D"24) Grapple cable"$0D"25) Welding sparks"$0D"26) Gre"
         "enBlood"$0D"28) Plasma explosion"$0D"29) Tunnel sparks"$0D"30) Blast"
         "er2"$0D"33) Lightning"$0D"34) Debugtrail"$0D"35) Plain explosion"$0D
         "36) Flashlight"$0D"38) Heatbeam"$0D"39) Monster heatbeam"$0D"40) Ste"
         "am"$0D"41) Bubbletrail2"$0D"42) MoreBlood"$0D"43) Heatbeam sparks"$0D
         "44) Heatbeam steam"$0D"45) Chainfist smoke"$0D"46) Electric sparks"$0D
         "47) Tracker explosion"$0D"48) Teleport effect"$0D"49) DBall goal"$0D
         "50) WidowBeamOut"$0D"51) NukeBlast"$0D"52) WidowSplash"$0D"53) Explo"
         "sion1 Big"$0D"54) Explosion1 NP"$0D"55) Flechette"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"28"$0D"29"$0D"30"$0D
         "33"$0D"34"$0D"35"$0D"36"$0D"38"$0D"39"$0D"40"$0D"41"$0D"42"$0D"43"$0D
         "44"$0D"45"$0D"46"$0D"47"$0D"48"$0D"49"$0D"50"$0D"51"$0D"52"$0D"53"$0D
         "54"$0D"55"
      }
      target: =
      {
        txt = "&"
        Hint = "Targername of entity to aim the effect at. "
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the target_effect. This entity must be triggered (norm"
         "ally by a func_timer) to work, unless LOOPED_ON is set."
      }
      wait: =
      {
        txt = "&"
        Hint = "If not looped, used only by TE_STEAM. If non-zero, this is the"
         " duration of the steam effect (in seconds), and will override trigge"
         "ring events by a func_timer. For looped target_effects, wait specifi"
         "es the cycle time for the effect."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Looped On"
        Hint = "If set, the target_effect will be on when the map loads, and r"
         "epeat every wait seconds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Looped Off"
        Hint = "If set, the target_effect will be off when the map loads. Once"
         " triggered, the target_effect will repeat every wait seconds."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X4"
        Cap = "If Moving"
        Hint = "If set and the target_effect uses the movewith key, the effect"
         " will only be displayed when the movewith target is in motion."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
      }
    }
    target_explosion:form =
    {
      Help = "Spawns an explosion temporary entity when used."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/explode/tris.md2"
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_explos"
         "ion will be called before being auto-killtargeted. (Default=0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the target_explosion wil"
         "l fire after being triggered. (Default=0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the amount of damage hit points the target_explosion"
         " will generate at its origin. (Default=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "arget_explosion fires."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the target_explosion is to mov"
         "ewith."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to trigger when the target_explosion "
         "fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_explosion."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_explosion will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_explosion will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_explosion will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_explosion will be inhibited and not appear when dea"
         "thmatch=1."
      }
    }
    target_fade:form =
    {
      Help = "The Lazarus target_fade point entity can be used to fade the use"
       "r's screen to a specified color and alpha (obscuration) value."
      bbox = '-8 -8 -8 8 8 8'
      alpha: =
      {
        txt = "&"
        Hint = "Alpha value (obscuration) of the fade, 0-1. 1 gives a solid co"
         "lor, 0 results in no effect at all. (Default=0)."
      }
      color: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "Red, green, and blue values (0-1) specifying the color of the "
         "effect. (Default=0 0 0) = (black)."
      }
      color: =
      {
        txt = "&"
        Hint = "Red, green, and blue values (0-1) specifying the color of the "
         "effect. (Default=0 0 0) = (black)."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_fade w"
         "ill be called before being auto-killtargeted. The code will automati"
         "cally change the value of count to 1 when holdtime<0. (Default=0)."
      }
      fadein: =
      {
        txt = "&"
        Hint = "Time in seconds from activation until the specified alpha valu"
         "e is reached. (Default=0)."
      }
      fadeout: =
      {
        txt = "&"
        Hint = "Time in seconds from the conclusion of holdtime until the disp"
         "lay returns to normal. Ignored when holdtime<0. (Default=0)."
      }
      holdtime: =
      {
        txt = "&"
        Hint = "Time in seconds after the conclusion of fadein to hold the eff"
         "ect at a constant alpha. A negative value makes the effect persisten"
         "t, and the target_fade cannot be triggered again. (Default=0)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_fade."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_fade will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_fade will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_fade will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_fade will be inhibited and not appear when deathmat"
         "ch=1."
      }
    }
    target_failure:form =
    {
      Help = "The target_failure point entity is sort of a special-purpose tar"
       "get_text which is designed to inform the player when he commits any so"
       "rt of mission-critical mistake. When triggered, a message will appear,"
       " the screen will fade to black, and the game will end just as if the p"
       "layer died - but note that he doesn't have to die for this to happen."
      bbox = '-8 -8 -8 8 8 8'
      message: =
      {
        txt = "&"
        Hint = "Specifies the string to be displayed when the target_failure i"
         "s triggered. If the FILE spawnflag is set, then this key specifies t"
         "he filename of the external file to retrieve text from."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_failure."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "File"
        Hint = "The text to be displayed will be retrieved from an external fi"
         "le, rather than use the text string specified by message, which woul"
         "d instead specify the filename of that external file. The file shoul"
         "d be located in the /MAPS/ directory or in a subdirectory of /MAPS/."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No Background"
        Hint = "The text will be displayed without a background or plaque."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_failure will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_failure will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_failure will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_failure will be inhibited and not appear when death"
         "match=1."
      }
    }
    target_fog:form =
    {
      Help = "The Lazarus target_fog point entity provides one method of intro"
       "ducing fog effects in your map. Unlike trigger_fog, target_fog causes "
       "a global (map-wide) fog effect to be rendered when it is triggered."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        txt = "&"
        Hint = "Specifies the player facing direction on the XY plane where he"
         " will see the fog density value as specified by fog_density. (Defaul"
         "t=0). Only relevant for "$22"directional"$22" fog; ignored if densit"
         "y=0."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the player facing direction in 3 dimensions, defined"
         " by pitch and yaw (roll is ignored), where he will see the fog densi"
         "ty value as specified by fog_density. (Default=0 0 0). Only relevant"
         " for "$22"directional"$22" fog; ignored if density=0."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_fog wi"
         "ll be called before being auto-killtargeted. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the time in seconds that the target_fog will ramp fo"
         "g density up/down. Density ramps from the player's currently rendere"
         "d fog level to the fog density specified by the target_fog. (Default"
         "=0)."
      }
      density: =
      {
        txt = "&"
        Hint = "When non-zero, specifies "$22"directional"$22" fog. Non-zero v"
         "alues specify the level of fog density viewed by the player when his"
         " view is directly opposite the direction specified by angle/angles. "
         "For best results, use values of <100. (Default=0). Ignored when fog_"
         "model=0."
      }
      fog_color: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "Specifies relative RGB color components of the fog effect; val"
         "id range for each component is 0.0-1.0. (Default=0.5 0.5 0.5)."
      }
      fog_color: =
      {
        txt = "&"
        Hint = "Specifies relative RGB color components of the fog effect; val"
         "id range for each component is 0.0-1.0. (Default=0.5 0.5 0.5)."
      }
      fog_density: =
      {
        txt = "&"
        Hint = "Specifies the level of fog density as viewed by the player. If"
         " density is non-zero, the fog is "$22"directional"$22", and fog_dens"
         "ity will specify the fog density of the player when his view is alig"
         "ned with the direction specified by angle/angles. For best results, "
         "use values of <100. (Default=20). Ignored when fog_model=0."
      }
      fog_far: =
      {
        txt = "&"
        Hint = "Specifies the distance in map units from the player's viewpoin"
         "t where visibility will be completely obscured by fog. See also fog_"
         "near. (Default=1024). Ignored if fog_model>0."
      }
      fog_model: =
      {
        txt = "&"
        Hint = "Specifies the method used to calculate how fog density increas"
         "es with distance. (Default=1). Note: Linear fog cannot be "$22"direc"
         "tional"$22"."
        typ = "C"
        Items = "0) Linear"$0D"1) Exponential"$0D"2) Fast Exponential"
        values = "0"$0D"1"$0D"2"
      }
      fog_near: =
      {
        txt = "&"
        Hint = "Specifies the distance in map units from the player's viewpoin"
         "t where visibility will first begin to be obscured by fog. See also "
         "fog_far. (Default=20). Ignored if fog_model>0."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_fog."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "The fog parameters for the target_fog will be active when the "
         "map loads. Of course only one target_fog per map should use this spa"
         "wnflag."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Toggle"
        Hint = "The target_fog can be toggled on and off. Fog density levels w"
         "ill ramp up/down as specified by delay."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Turn Off"
        Hint = "The target_fog functions as a fog effect canceller. All keyval"
         "ues except for delay and targetname will be ignored."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_fog will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_fog will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_fog will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_fog will be inhibited and not appear when deathmatc"
         "h=1."
      }
    }
    target_fountain:form =
    {
      Help = "The Lazarus target_fountain allows you to generate a steady stre"
       "am of models, thrown from a point source in a semi-random direction. I"
       "t is functionally very similar to target_precipitation. The key differ"
       "ences from target_precipitation are that there are no predefined style"
       "s (rain, leaves, etc.) and the model placement and direction are deter"
       "mined differently. While target_precipitation spawns models at random "
       "locations and all models move in the same direction, models generated "
       "by target_fountain all start at the same location but then move in ran"
       "dom directions."
      bbox = '-8 -8 -8 8 8 8'
      attenuation: =
      {
        txt = "&"
        Hint = "Controls the rebound of models after striking a solid. This va"
         "lue is ignored if gravity is 0, or if the BOUNCE spawnflag is not se"
         "t. 0=no bounce, 0.9 or so is a SuperBall. 1.0 and higher are physica"
         "lly impossible but still allowed. As a reference point, metallic gib"
         "s and grenades use a value of 0.5. (Default=0)."
      }
      bleft: =
      {
        txt = "&"
        Hint = "Specifies bottom-left (minX/minY/minZ) bounding box coordinate"
         "s of the area within which a point defining the initial movement dir"
         "ection will be located. See also tright. (Default= -32 -32 64)."
      }
      count: =
      {
        txt = "&"
        Hint = "Specifies the base number of models spawned each second. The n"
         "umber of entities spawned in any 0.1 second frame will be in the ran"
         "ge 0.1 * (count + random). (Default=1)."
      }
      effects: =
      {
        txt = "&"
        Hint = "Sets geewhiz rendering effects. Add values together to combine"
         " multiple effects."
        typ = "C"
        items = "0) combine:add values"$0D"1) rotate"$0D"2) gib"$0D"8) blaster"
         $0D"16) rocket"$0D"32) grenade"$0D"64) hyperblaster"$0D"128) bfg"$0D"2"
         "56) color_shell"$0D"512) powerscreen"$0D"16384) flies"$0D"32768) qua"
         "d"$0D"65536) pent"$0D"131072) teleporter"$0D"262144) flag1"$0D"52428"
         "8) flag2"$0D"1048576) ionripper"$0D"2097152) greengib"$0D"4194304) b"
         "lue_hb"$0D"8388608) spinning_lights"$0D"16777216) plasma"$0D"3355443"
         "2) trap"$0D"67108864) tracker"$0D"134217728) double"$0D"268435456) s"
         "pheretrans"$0D"536870912) tagtrail"$0D"1073741824) half_damage"$0D"2"
         "147483648) tracker_trail"
        values = "0"$0D"1"$0D"2"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"256"$0D
         "512"$0D"16384"$0D"32768"$0D"65536"$0D"131072"$0D"262144"$0D"524288"$0D
         "1048576"$0D"2097152"$0D"4194304"$0D"8388608"$0D"16777216"$0D"3355443"
         "2"$0D"67108864"$0D"134217728"$0D"268435456"$0D"536870912"$0D"1073741"
         "824"$0D"2147483648"
      }
      effects: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Effects combine:add values"
        Form = "t_effects_form:form"
        Hint = "Available Effects"
      }
      fadeout: =
      {
        txt = "&"
        Hint = "Fadeout specifies the time, in seconds, that a model will pers"
         "ist once it touches a solid object before fading away. Keep in mind "
         "that the larger fadeout is, the more entities will exist at any give"
         "n time. (Default=0)."
      }
      gravity: =
      {
        txt = "&"
        Hint = "Specifies the ratio of normal gravity that the model will be a"
         "ttracted to the ground with. 1=normal gravity, 0=move at a constant "
         "speed value. If gravity is non-zero and attenuation is non-zero, the"
         " model will bounce when it strikes a solid brush, monster, or player"
         ". (Default=0)."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the user-defined model, used in determining damage t"
         "o monsters or players struck by the model. Damage inflicted is propo"
         "rtional to the mass times the impact velocity. This value is ignored"
         " if gravity is 0. (Default = 0)."
      }
      mass2: =
      {
        txt = "&"
        Hint = "Number of splash particles produced when the model strikes a s"
         "olid object or liquid brush. This value has no effect if SPLASH is n"
         "ot set. (Default=8)."
      }
      random: =
      {
        txt = "&"
        Hint = "Specifies the maximum angular velocity around the Y axis of th"
         "e model, in degrees/second. When spawned, the model will be given a "
         "constant angular velocity in the range +pitch_speed. (Default=0)."
      }
      renderfx: =
      {
        txt = "&"
        Hint = "Sets eyecandy rendering effects. Add values together to combin"
         "e multiple effects."
        typ = "C"
        items = "0) combine:add values"$0D"1) minlight"$0D"2) viewermodel"$0D"4"
         ") weaponmodel"$0D"8) fullbright"$0D"16) depthhack"$0D"32) translucen"
         "t"$0D"64) framelerp"$0D"128) beam"$0D"512) glow"$0D"1024) shell_red"$0D
         "2048) shell_green"$0D"4096) shell_blue"$0D"32768) ir_visible"$0D"655"
         "36) shell_double"$0D"131072) shell_half_damage"$0D"262144) use_disgu"
         "ise"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"5"
         "12"$0D"1024"$0D"2048"$0D"4096"$0D"32768"$0D"65536"$0D"131072"$0D"262"
         "144"
      }
      renderfx: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Renderfx combine:add values"
        Form = "t_renderfx_form:form"
        Hint = "Available Renderfx"
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies the color index in the Q2 palette of splash particle"
         "s. (Default=183 blue)."
      }
      speed: =
      {
        txt = "&"
        Hint = "Initial speed of spawned models. (Default=300)."
      }
      pitch_speed: =
      {
        txt = "&"
        Hint = "Specifies the maximum angular velocity around the Y axis of th"
         "e model, in degrees/second. When spawned, the model will be given a "
         "constant angular velocity in the range +pitch_speed. (Default=0)."
      }
      roll_speed: =
      {
        txt = "&"
        Hint = "Specifies the angular velocity around the X axis of the model,"
         " in degrees/second. When spawned, the model will be given a constant"
         " angular velocity in the range +roll_speed. (Default=0)."
      }
      yaw_speed: =
      {
        txt = "&"
        Hint = "Specifies the angular velocity around the Z axis of the model,"
         " in degrees/second. When spawned, the model will be given a constant"
         " angular velocity in the range +yaw_speed. (Default=0)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_fountain."
      }
      tright: =
      {
        txt = "&"
        Hint = "Specifies top-right (maxX/maxY/maxZ) bounding box coordinates "
         "of the area within which a point defining the initial movement direc"
         "tion will be located. See also bleft. (Default= 32 32 128)."
      }
      usermodel: =
      {
        txt = "&"
        Hint = "Specifies the name of the model to spawn. The filename should "
         "be relative to <gamedir>/models for .md2 files, or <gamedir>/sprites"
         " for .sp2 files."
      }
      usermodel: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Available User Model"
        Form = "t_usermodel_form:form"
        Hint = "Available User Model"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "If set, target_fountain will start when the first player spawn"
         "s into the map. Otherwise it must be triggered to work."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Splash"
        Hint = "If set, a splash effect will be generated when the model touch"
         "es a solid or liquid brush or a solid entity. Color of the splash pa"
         "rticles is controlled by the sounds value. Number of splash particle"
         "s is set with mass2."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X4"
        Cap = "Bounce"
        Hint = "If set, spawned models will bounce when they touch a solid. Bo"
         "unce physics is determined by the gravity setting."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X8"
        Cap = "Fire Once"
        Hint = "If set, target_fountain will produce models only once when tri"
         "ggered, then shut itself off."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X16"
        Cap = "Start Fade"
        Hint = "If set and fadeout is non-zero, models will begin to fade away"
         " when first spawned, rather than waiting until they strike a solid."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_fountain will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_fountain will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_fountain will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_fountain will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    target_goal:form =
    {
      Help = "Counts a goal completed."
      bbox = '-8 -8 -8 8 8 8'
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " target_goal fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_goal."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_goal will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_goal will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_goal will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_goal will be inhibited and not appear when deathmat"
         "ch=1."
      }
    }
    target_help:form =
    {
      Help = "When fired, the message key becomes the current personal compute"
       "r string,"
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_help w"
         "ill be called before being auto-killtargeted. (Default=0)."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the message that will appear in the F1 computer scre"
         "en."$0D"Message appears in the Secondary Objective window unless PRI"
         "MARY_OBJECTIVE is set."$0D"Use \n to jump to next line."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_help."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Primary Objective"
        Hint = "Specifies the message will appear in the Primary Objective win"
         "dow rather than the Secondary Objective window."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_help will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_help will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_help will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_help will be inhibited and not appear when deathmat"
         "ch=1."
      }
    }
    target_laser:form =
    {
      Help = "When triggered, fires a laser. You can either set a target or a "
       "direction."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies an aiming direction on the XY plane. (-1 is up, -2 i"
         "s down). (Default=0)."$0D"Ignored if target is used, and/or SEEK_PLA"
         "YER is set."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies an aiming direction in 3 dimensions, defined by pitc"
         "h and yaw (roll is ignored). (Default=0 0 0)."$0D"Ignored if target "
         "is used, and/or SEEK_PLAYER is set."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the laser will be"
         " turned off before it is auto-killtargeted. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the amount of time, in seconds, that a laser pulse w"
         "ill be on. This value must be less than the value of wait. Default=0"
         ". Ignored if wait=0."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Specifies the number of damage hit points the laser will do ev"
         "ery 0.1 seconds. (Default=100). If set to a negative value, the lase"
         "r will give health, but will not cause pain effects. Ignored when st"
         "yle>0."
      }
      mass: =
      {
        txt = "&"
        Hint = "Sets the width of the laser. When 0, uses the default internal"
         " value of 4 for normal lasers, or 16 for fat lasers. When non-zero, "
         "FAT is ignored. (Default=0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the laser is to movewith."
      }
      style: =
      {
        txt = "&"
        Hint = "Sets the behavior of the laser. When non-zero, dmg is ignored."
        typ = "C"
        Items = "0) normal, default laser"$0D"1) No damage; monsters avoid; cr"
         "eates sparks."$0D"2) No damage; monsters ignore; creates sparks."$0D
         "3) No damage; monsters ignore; no sparks."
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity the laser will fire at. If SEEK_PLAYE"
         "R is set, the player is a higher priority target, and therefore the "
         "entity specified by "$22"target"$22" will be ignored, assuming the l"
         "aser has a clear shot at the player. In the event SEEK_PLAYER is set"
         " and the laser has no clear shot at him, it will fall back to firing"
         " at its "$22"target"$22"."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_laser."
      }
      wait: =
      {
        txt = "&"
        Hint = "If non-zero, specifies that the laser will pulse on and off au"
         "tomatically. The value specified here sets the amount of time (in se"
         "conds) between pulse cycles. Default=0. Also requires the use of del"
         "ay. (Please see the notes below regarding timing issues when using p"
         "ulse lasers)."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start On"
        Hint = "The laser will be active when the map loads."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Red"
        Hint = "Set the Laser color to Red."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Green"
        Hint = "Set the Laser color to Green."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Blue"
        Hint = "Set the Laser color to Blue."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Yellow"
        Hint = "Set the Laser color to Yellow."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Orange"
        Hint = "Set the Laser color to Orange"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X64"
        Cap = "Fat"
        Hint = "The laser will use the large diameter animation frames rather "
         "than the narrow diameter frames. Ignored when mass is non-zero."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        Cap = "Seek Player"
        Hint = "Specifies that the target_laser will target the first player i"
         "t finds, and will consider players priority targets over entities sp"
         "ecified by target. The laser will fall back to firing at its target "
         "(if any), if it has no clear shot at a player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_laser will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_laser will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_laser will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_laser will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    target_lightramp:form =
    {
      Help = "This makes the light fade in/out."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_lightr"
         "amp will be called before being auto-killtargeted (see this page for"
         " details). (Default=0)."
      }
      message: =
      {
        txt = "&"
        Hint = "Sets the light levels of the targeted lights. Light levels are"
         " defined by characters a-z."$0D"Normally, only 2 characters can be u"
         "sed, but if the CUSTOM spawnflag is set,"$0D"many characters can be "
         "used in a string to define a custom lightstyle pattern."
      }
      speed: =
      {
        txt = "&"
        Hint = "Amount of time in seconds from the starting message value to t"
         "he ending value."$0D"If the CUSTOM spawnflag is set, speed is ignore"
         "d."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the light entity (or entities) to target."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_lightramp. Lightramps must be trig"
         "gered in order to function."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Toggle"
        Hint = "Allows the lightramp to be triggered multiple times,"$0D"with "
         "every other firing resulting in the reverse effect"$0D"(as an exampl"
         "e,lights that fade in on the first trigger will fade out on the seco"
         "nd trigger)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Custom"
        Hint = "Enables the ability to create custom lightstyles by allowing m"
         "any characters to be used as the message string."$0D"When set, speed"
         " is ignored."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Loop"
        Hint = "Once triggered, the lightramp will continue its message patter"
         "n as read left to right repeatedly until triggered again."$0D"If the"
         " TOGGLE spawnflag is also set, then the message string is read left "
         "to right, the right to left, also repeatedly."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X128"
        Cap = "Active"
        Hint = "? Not toggled, looping. Start sequence over. already on, turn "
         "it off. not currently on."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_lightramp will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_lightramp will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_lightramp will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_lightramp will be inhibited and not appear when dea"
         "thmatch=1."
      }
    }
    target_lightswitch:form =
    {
      Help = "Use target_lightswitch to toggle all lights in a level on/off. O"
       "nly one target_lightswitch per map is allowed."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_lights"
         "witch will be called before being auto-killtargeted. (Default=0)."
      }
      message: =
      {
        txt = "&"
        Hint = "Minimum light value, on a scale of "$22"a"$22" to "$22"m"$22"."
         " (Default = a)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific ttarget_lightswitch."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_lightswitch will be inhibited and not appear when s"
         "kill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_lightswitch will be inhibited and not appear when s"
         "kill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_lightswitch will be inhibited and not appear when s"
         "kill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_lightswitch will be inhibited and not appear when d"
         "eathmatch=1."
      }
    }
    target_locator:form =
    {
      Help = "The target_locator is a random entity locator. Use it to spawn a"
       "n entity from a random selection from an array of path_corners in the "
       "map. This feature allows you to add quite a bit of replay value to you"
       "r map with a minimum of fuss. The target_locator target key is the tar"
       "getname of the entity you want to move. This can be a point entity (he"
       "alth, items, keys, etc.) OR a brush model (func_pushable, for example)"
       ". Use the pathtarget key to specify the first in a series of path_corn"
       "ers. In the case of brush models, the path_corner locations specify th"
       "e geometric center of the model. Brush models will be lit as though pl"
       "aced in the location used in the .map file. The entity will "$22"dropt"
       "ofloor"$22" when placed at the path_corner location. NOTE: You should "
       "not attempt to re-use path_corners for multiple target_locators. Since"
       " the selection of path_corners is completely random, doing this may ca"
       "use multiple entities to occupy the same spot. This is a bad thing (TM"
       "). Exception: One target_locator can be used to target multiple entiti"
       "es with the same targetname, and the associated path_corners will not "
       "be re-used... every entity with the same targetname will occupy a uniq"
       "ue path_corner. If you foul up and use more entities (N) with the same"
       " targetname than you have path_corners (M), the code will stop re-loca"
       "ting after the Mth entity."
      bbox = '-8 -8 -8 8 8 8'
      pathtarget: =
      {
        txt = "&"
        Hint = "Name of the first path_corner in a path_corner sequence to cho"
         "ose a location from. If the target is a point entity (rather than a "
         "brush model), it will inherit the angles values of the path_corner."
      }
      target: =
      {
        txt = "&"
        Hint = "Name of the entity or entities to move."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_locator."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_locator will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_locator will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_locator will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_locator will be inhibited and not appear when death"
         "match=1."
      }
    }
    target_lock:form =
    {
      bbox = '-8 -8 -8 8 8 8'
      key_message: =
      {
        txt = "&"
        Hint = "Initial combination displayed by target_lock_digits. If blank,"
         " 0's are used."
      }
      message: =
      {
        txt = "&"
        Hint = "Text to display if the target_lock is triggered with the incor"
         "rect combination."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Name of the entity to trigger if the correct combination has n"
         "ot  been entered. If blank, the target_lock plays talk1.wav"
      }
      target: =
      {
        txt = "&"
        Hint = "Name of the entity to trigger if the correct combination has b"
         "een entered"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_lock."
      }
      team: =
      {
        txt = "&"
        Hint = "Unique name shared by associated target_lock_digits."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Crosslevel"
        Hint = "If you set the crosslevel spawnflag for both  target_lock and "
         "target_lock_code, these entities may be placed in different maps wit"
         "hin the same unit. If this spawnflag is set, the target_lock initial"
         "ly generates a random combination and stores a copy of that combinat"
         "ion in global game information that is available to other maps (agai"
         "n, within the same unit only)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Hud"
        Hint = "If the HUD spawnflag is set, the known digits of the target_lo"
         "ck combination will be shown in the HUD. Using the HUD, you could us"
         "e one or more target_lock_clues to reveal the combination without  u"
         "sing the accompanying target_characters."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_lock will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_lock will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_lock will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_lock will be inhibited and not appear when deathmat"
         "ch=1."
      }
    }
    target_lock_clue:form =
    {
      bbox = '-8 -8 -8 8 8 8'
      target: =
      {
        txt = "&"
        hint = "Target>target_lock"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_lock_clue."
      }
      team: =
      {
        txt = "&"
        hint = "Team>target_characters"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Crosslevel"
        Hint = "If you set the crosslevel spawnflag for both  target_lock and "
         "target_lock_code, these entities may be placed in different maps wit"
         "hin the same unit. If this spawnflag is set, the target_lock initial"
         "ly generates a random combination and stores a copy of that combinat"
         "ion in global game information that is available to other maps (agai"
         "n, within the same unit only)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_lock_clue will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_lock_clue will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_lock_clue will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_lock_clue will be inhibited and not appear when dea"
         "thmatch=1."
      }
    }
    target_lock_code:form =
    {
      bbox = '-8 -8 -8 8 8 8'
      target: =
      {
        txt = "&"
        hint = "Target>target_lock"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_lock_code."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Crosslevel"
        Hint = "If you set the crosslevel spawnflag for both  target_lock and "
         "target_lock_code, these entities may be placed in different maps wit"
         "hin the same unit. If this spawnflag is set, the target_lock initial"
         "ly generates a random combination and stores a copy of that combinat"
         "ion in global game information that is available to other maps (agai"
         "n, within the same unit only)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_lock_code will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_lock_code will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_lock_code will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_lock_code will be inhibited and not appear when dea"
         "thmatch=1."
      }
    }
    target_lock_digit:form =
    {
      count: =
      {
        txt = "&"
        Hint = "Position of this target_lock_digit within the combination numb"
         "er. 1 = 1's place, 2 = 10's place, etc."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_lock_digit."
      }
      team: =
      {
        txt = "&"
        Hint = "Unique name shared with target_lock."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_lock_digit will be inhibited and not appear when sk"
         "ill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_lock_digit will be inhibited and not appear when sk"
         "ill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_lock_digit will be inhibited and not appear when sk"
         "ill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_lock_digit will be inhibited and not appear when de"
         "athmatch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Items = "0) Normal"$0D"1) Flicker"$0D"2) Slow Strong Strobe"$0D"3) Can"
         "dle 1"$0D"4) Fast Strobe"$0D"5) Gentle Pulse"$0D"6) Flicker 2"$0D"7)"
         " Candle 2"$0D"8) Candle 3"$0D"9) Slow Strobe"$0D"10) Flourescent Fli"
         "cker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    target_monitor:form =
    {
      Help = "The target_monitor is a new Lazarus point entity which switches "
       "the player's view to that of the target_monitor itself. In appearance,"
       " this is similar to the function of an info_player_intermission, excep"
       "t that the target_monitor may be triggered at any time, and its view i"
       "s used by only the player that triggered it."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0). Ign"
         "ored if a target value exists."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0). Ignored if a target value exists."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_monito"
         "r will be called before being auto-killtargeted. (Default=0)."
      }
      distance: =
      {
        txt = "&"
        Hint = "Sets the distance of the viewpoint from the targeted entity. I"
         "gnored if CHASE_CAM is not set. (Default=128)."
      }
      height: =
      {
        txt = "&"
        Hint = "Sets the vertical distance of the viewpoint above or below the"
         " top of the bounding box of the targeted entity. Ignored if CHASE_CA"
         "M is not set. (Default=16)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the monitor is to movewith."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        Hint = "Specifies the path and filename of the .wav file to play when "
         "the view shifts.."$0D0D"The file selection button ... to the right"$0D
         "lets you pick the sound you want by clicking on it."$0D"Create a sub"
         "-folder named 'sound' in your tmpQuArk folder"$0D"and place your .wa"
         "v files there. You can also create"$0D"sub-folders within the 'sound"
         "' folder to group your files."$0D0D"Right clicking on the sound file"
         " will let you play it."$0D"The path is set so it will work if put in"
         "to a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity the monitor will aim at."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_monitor."
      }
      wait: =
      {
        txt = "&"
        Hint = "Time in seconds for the monitor to wait before it returns the "
         "player view to normal. If wait=-1, the monitor must be retriggered f"
         "or this to happen. (Default=3)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Chase Cam"
        Hint = "The target_monitor will act as a chase cam and will follow its"
         " targeted entity as specified by distance and height. The physical l"
         "ocation of CHASE_CAM target_monitors in the map is irrelevant."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X2"
        Cap = "Eye Ball"
        Hint = "Very similar to the CHASE_CAM spawnflag, except that the viewp"
         "oint will be that of the target entity (distance=0, height=viewheigh"
         "t of the target). "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_monitor will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_monitor will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_monitor will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_monitor will be inhibited and not appear when death"
         "match=1."
      }
    }
    target_monsterbattle:form =
    {
      Help = "This entity is very similar to a Rogue mission pack-style target"
       "_anger, but when used in conjunction with the dmgteam monster key can "
       "be used to initiate a full-scale battle between rival monster gangs wi"
       "th a minimum of fuss. If both the target and killtarget entities are m"
       "onsters, and these monsters use different dmgteam keys, the sequence w"
       "ill go something like this: target monster attacks killtarget monster,"
       " which angers all monsters that have the same dmgteam key as the killt"
       "arget, so they attack the target monster. This action in turn angers a"
       "ll monsters with the same dmgteam key as the target monster, and... we"
       "ll... you get the picture."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_monste"
         "rbattle will be called before being auto-killtargeted. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Name of the entity that the monster(s) will become angry at."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity or entities to make angry."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_monsterbattle."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_monsterbattle will be inhibited and not appear when"
         " skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_monsterbattle will be inhibited and not appear when"
         " skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_monsterbattle will be inhibited and not appear when"
         " skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_monsterbattle will be inhibited and not appear when"
         " deathmatch=1."
      }
    }
    target_movewith:form =
    {
      Help = "The Lazarus target_movewith point entity is a mechanism which al"
       "lows movewith children to be assigned to or detached from a parent whi"
       "le the game is running. As a couple of examples, this can be used for "
       "simulating an automatic crane picking up or dropping something, or fre"
       "eing monsters from a moving brush model that they're riding."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_movewi"
         "th will be called before being auto-killtargeted. (Default=0)."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the movewith parent entity the child is to be at"
         "tached to. Ignored if DETACH is set."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the movewith child entity to be attached to or d"
         "etached from a parent entity."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_movewith."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Detach"
        Hint = "Specifies the target_movewith will detach a child from its par"
         "ent rather than attach it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_movewith will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_movewith will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_movewith will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_movewith will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    target_playback:form =
    {
      Help = "The Lazarus target_playback is a point entity which is similar t"
       "o the regular Quake2 target_speaker, except that it supports the playb"
       "ack of sound files in formats other than .WAV, including .MP3, .MID, ."
       "MOD, .S3M, and .XM. Its use requires the inclusion of FMOD.DLL,"
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_playba"
         "ck will be called before being auto-killtargeted. (Default=0). Ignor"
         "ed if LOOP is set."
      }
      distance: =
      {
        txt = "&"
        Hint = "Distance at which 3D sounds begin to attenuate. This value is "
         "ignored if 3D is not set, and is also ignored for .MP3 files. (Defau"
         "lt= 40)."
      }
      fadein: =
      {
        txt = "&"
        Hint = "Time in seconds to fade a sound from silence to full volume. D"
         "efault = 0 (no fade)."
      }
      fadeout: =
      {
        txt = "&"
        Hint = "Time in seconds to fade a LOOP or TOGGLE target_playback from "
         "full volume to silence when it is triggered off. Default = 0 (no fad"
         "e)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the target_playback is to move"
         "with."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered upon the completion o"
         "f the playback in progress. Useful for making one target_playback tr"
         "igger another, so a series of music tracks may be played in sequence"
         "."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_playback."
      }
      volume: =
      {
        txt = "&"
        Hint = "Specifies the volume level of the sound played. Values are 0.0"
         "-1.0. (Default=1)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Loop"
        Hint = "The target_playback will loop its sound when triggered. Trigge"
         "r it again to turn it off."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Toggle"
        Hint = "If set, if the target_playback is currently playing a sound th"
         "en it will stop playing when triggered. If TOGGLE is not set, then u"
         "nder the same circumstances the sound would stop and restart. This s"
         "pawnflag is ignored if LOOP is set since that is the default behavio"
         "r for LOOP."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Music"
        Hint = "This spawnflag provides the mapper with a means of distinguish"
         "ing between background music and more critical voiceovers or other s"
         "ounds. If MUSIC is set and the fmod_nomusic cvar is set, this target"
         "_playback will not play."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Start On"
        Hint = "If set, playback begins when the level loads."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "3D"
        Hint = "If set, the target_playback's position and velocity and the pl"
         "ayer's position and velocity (SP mode only) are taken into account. "
         "This spawnflag is inapplicable for music (.MOD, .S3M, .XM) files. To"
         " control the rate of attenuation, use the global worldspawn attenuat"
         "ion value. You can control the Doppler pitch variation with the worl"
         "dspawn shift value."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X128"
        Cap = "Simple"
        Hint = "Forces FMOD to load a 3D sound as a sample rather than as a st"
         "ream. This will cause the code to precache the sound at startup and "
         "allows the proper use of the distance value to help control sound at"
         "tenuation. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_playback will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_playback will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_playback will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_playback will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    target_precipitation:form =
    {
      Help = "The Lazarus target_precipitation allows you to add falling rain,"
       " snow, leaves, or a user-defined model to a map for a single player ga"
       "me (it is automatically removed in deathmatch and coop games). Thanks "
       "to Rroff (Martin Painter) for providing the basis to this code."
      bbox = '-8 -8 -8 8 8 8'
      angles: =
      {
        txt = "&"
        Hint = "Specifies the direction that the entities will fall. Values ar"
         "e pitch, yaw, and roll (roll is ignored)."$0D"Positive pitch angles "
         "are downward. If omitted, defaults to (90 0 0) (straight down)."
      }
      attenuation: =
      {
        txt = "&"
        Hint = "Controls the rebound of user-defined models after striking a s"
         "olid."$0D"This value is ignored if style  is not equal to 4, or if g"
         "ravity is 0, or finally if the BOUNCE spawnflag is not set."
      }
      bleft: =
      {
        txt = "&"
        Hint = "Specifies bottom-left (minX/minY/minZ) bounding box coordinate"
         "s of the area within which the models will be spawned."
      }
      count: =
      {
        txt = "&"
        Hint = "Specifies the base number of models spawned each second."$0D"T"
         "he number of entities spawned in any 0.1 second frame will be in the"
         " range 0.1 * (count + random)."$0D"(Default=1)."
      }
      effects: =
      {
        txt = "&"
        Hint = "Sets geewhiz rendering effects. Add values together to combine"
         " multiple effects."
        typ = "C"
        items = "0) combine:add values"$0D"1) rotate"$0D"2) gib"$0D"8) blaster"
         $0D"16) rocket"$0D"32) grenade"$0D"64) hyperblaster"$0D"128) bfg"$0D"2"
         "56) color_shell"$0D"512) powerscreen"$0D"16384) flies"$0D"32768) qua"
         "d"$0D"65536) pent"$0D"131072) teleporter"$0D"262144) flag1"$0D"52428"
         "8) flag2"$0D"1048576) ionripper"$0D"2097152) greengib"$0D"4194304) b"
         "lue_hb"$0D"8388608) spinning_lights"$0D"16777216) plasma"$0D"3355443"
         "2) trap"$0D"67108864) tracker"$0D"134217728) double"$0D"268435456) s"
         "pheretrans"$0D"536870912) tagtrail"$0D"1073741824) half_damage"$0D"2"
         "147483648) tracker_trail"
        values = "0"$0D"1"$0D"2"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"256"$0D
         "512"$0D"16384"$0D"32768"$0D"65536"$0D"131072"$0D"262144"$0D"524288"$0D
         "1048576"$0D"2097152"$0D"4194304"$0D"8388608"$0D"16777216"$0D"3355443"
         "2"$0D"67108864"$0D"134217728"$0D"268435456"$0D"536870912"$0D"1073741"
         "824"$0D"2147483648"
      }
      effects: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Effects combine:add values"
        Form = "t_effects_form:form"
        Hint = "Available Effects"
      }
      fadeout: =
      {
        txt = "&"
        Hint = "This value is only applicable to leaves (style=3), and user-de"
         "fined models (style=4)."$0D"Fadeout specifies the time, in seconds, "
         "that a model will persist once it touches a solid object before fadi"
         "ng away."$0D"Keep in mind that the larger fadeout is, the more entit"
         "ies will exist at any given time."$0D"Default=0."
      }
      gravity: =
      {
        txt = "&"
        Hint = "Specifies the ratio of normal gravity that the model will be a"
         "ttracted to the ground with. Default=0."
      }
      mass: =
      {
        txt = "&"
        Hint = "Weight of the user-defined model, used in determining damage t"
         "o monsters or players struck by the model."$0D"Damage inflicted is p"
         "roportional to the mass times the impact velocity."$0D"This value is"
         " ignored if style is not equal to 4, or if gravity is 0."$0D"Default"
         " = 0."
      }
      mass2: =
      {
        txt = "&"
        Hint = "Number of splash particles produced when the model strikes a s"
         "olid object or liquid brush."$0D"This value has no effect if SPLASH "
         "is not set or if style is not 0, 1, or 4."$0D"Default=8. "
      }
      random: =
      {
        txt = "&"
        Hint = "Modifier to count. The number of entities spawned per second w"
         "ill be count + random. Default=0."
      }
      renderfx: =
      {
        txt = "&"
        Hint = "Sets eyecandy rendering effects. Add values together to combin"
         "e multiple effects."
        typ = "C"
        items = "0) combine:add values"$0D"1) minlight"$0D"2) viewermodel"$0D"4"
         ") weaponmodel"$0D"8) fullbright"$0D"16) depthhack"$0D"32) translucen"
         "t"$0D"64) framelerp"$0D"128) beam"$0D"512) glow"$0D"1024) shell_red"$0D
         "2048) shell_green"$0D"4096) shell_blue"$0D"32768) ir_visible"$0D"655"
         "36) shell_double"$0D"131072) shell_half_damage"$0D"262144) use_disgu"
         "ise"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"5"
         "12"$0D"1024"$0D"2048"$0D"4096"$0D"32768"$0D"65536"$0D"131072"$0D"262"
         "144"
      }
      renderfx: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Renderfx combine:add values"
        Form = "t_renderfx_form:form"
        Hint = "Available Renderfx"
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies the color index in the Q2 palette of splash particle"
         "s. Default=183 (blue)"
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed at which the entities will fall. Default=300"$0D"for rai"
         "n (style=0 or 1)"$0D"and user-defined (style=4),"$0D"and 50 for snow"
         " (style=2) and leaves (style=3)."
      }
      pitch_speed: =
      {
        txt = "&"
        Hint = "Specifies the maximum angular velocity around the Y axis of th"
         "e model, in degrees/second."$0D"When spawned, the model will be give"
         "n a constant angular velocity in the range +pitch_speed."$0D"This va"
         "lue is ignored if style is not equal to 4."$0D"Default=0."
      }
      roll_speed: =
      {
        txt = "&"
        Hint = "Specifies the angular velocity around the X axis of the model,"
         " in degrees/second."$0D"When spawned, the model will be given a cons"
         "tant angular velocity in the range +roll_speed."$0D"This value is ig"
         "nored if style is not equal to 4."$0D"Default=0."
      }
      yaw_speed: =
      {
        txt = "&"
        Hint = "Specifies the angular velocity around the Z axis of the rain o"
         "r snow models."$0D"This can be used to simulate a swirling snow effe"
         "ct. Yaw_speed is ignored for style=3 (leaf)."$0D"Leaves are given a "
         "random rotational velocity around all 3 axes to simulate fluttering."
         $0D"For style=4 (user-defined), this is the maximum angular velocity;"
         " actual velocity will be in the range +yaw_speed."$0D"Default=0."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the type of particles to generate."
        typ = "C"
        Items = "0) Single raindrop"$0D"1) 10 raindrops"$0D"2) 10 snowflakes"$0D
         "3) Leaf (1 of 3)"$0D"4) User-defined"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_precipitation."
      }
      tright: =
      {
        txt = "&"
        Hint = "Specifies top-right (maxX/maxY/maxZ) bounding box coordinates "
         "of the area within which the models will be spawned. "
      }
      usermodel: =
      {
        Txt = "usermodel"
        Typ = "EP"
        BasePath = "$Game\baseq2"
        CutPath = "$Game\?\"
        DefExt = "md2"
        DirSep = "/"
        AugPath = "../"
        hint = "Type in the model path or use the file browser button to the r"
         "ight."$0D"This is a custom model for the actual game play only."$0D"I"
         "t will not show in QuArK's 3D views."$0D"For that use 3Dmodel above."
      }
      usermodel: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Available User Model"
        Form = "t_usermodel_form:form"
        Hint = "Available User Model"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start On"
        Hint = "If set, target_precipitation will start when the first player "
         "spawns into the map."$0D"Otherwise it must be triggered to work."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Splash"
        Hint = "If set and style is 0, 1, or 4, a splash effect will be genera"
         "ted when the rain or user-defined model touches a solid or liquid br"
         "ush or a solid entity."$0D"Color of the splash particles is controll"
         "ed by the sounds value. Number of splash particles is set with mass2"
         ". "
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X4"
        Cap = "Bounce"
        Hint = "If set, spawned models will bounce when they touch a solid. Bo"
         "unce physics is determined by the gravity setting."$0D"This spawnfla"
         "g is ignored for all but user-defined (style=4) models."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X8"
        Cap = "Fire Once"
        Hint = "If set, target_precipitation will produce models only once whe"
         "n triggered, then shut itself off."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X16"
        Cap = "Start Fade"
        Hint = "If set and fadeout is non-zero, models will begin to fade away"
         " when first spawned, rather than waiting until they strike a solid."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_precipitation will be inhibited and not appear when"
         " skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_precipitation will be inhibited and not appear when"
         " skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_precipitation will be inhibited and not appear when"
         " skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_precipitation will be inhibited and not appear when"
         " deathmatch=1."
      }
    }
    target_rocks:form =
    {
      Help = "Target_rocks is used to create a landslide. Two new rock models "
       "are used here, one with mass=25, the other with mass=100. As an altern"
       "ative to the models provided with Lazarus, you may specify custom rock"
       " models with the style value. Players are damaged and translated by fa"
       "lling rocks."
      bbox = '-8 -8 -8 8 8 8'
      angles: =
      {
        txt = "&"
        Hint = "Direction rocks are thrown. Angles are pitch, yaw, and roll. P"
         "itch is the elevation; negative angles are up."$0D"Yaw is the azimut"
         "h around the z axis. 0=east, 90=north, etc. Roll is ignored."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_rocks "
         "will be called before being auto-killtargeted. (Default=0)."
      }
      mass: =
      {
        txt = "&"
        Hint = "Total mass of the rocks generated."$0D"The mass value determin"
         "es how many of what size rock models are spawned, limited to 16 of e"
         "ach."$0D" This works much the same way as func_explosive debris does"
         " - the math isn't correct but it's simple: a mass of 1600 or greater"
         " will give you 16 mass=100 rocks and 16 mass=25 rocks,"$0D" for a to"
         "tal of mass=2000. Try not to think about it too much :-)."$0D" Damag"
         "e to the player is proportional to the mass of the rock that hits hi"
         "m times the impact velocity."
      }
      speed: =
      {
        txt = "&"
        Hint = "Initial velocity of the rocks, in units/sec."
      }
      style: =
      {
        txt = "&"
        Hint = "If non-zero, specifies that alternative rock models will be us"
         "ed. (Default=0)."$0D"Alternative rock models are not provided with L"
         "azarus."
        typ = "C"
        Items = "0) (rock1/2 Default)"$0D"1) (rock3/4)"$0D"2) (rock5/6)"$0D"3)"
         " (rock7/8)"$0D"4) (rock9/10)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of this entity. Target_rocks must be targeted to work."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_rocks will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_rocks will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_rocks will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_rocks will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    target_rotation:form =
    {
      Help = "Target_rotation allows you to change how trigger_multiple, trigg"
       "er_once, and... well... just about any entity that triggers other enti"
       "ties behaves. Rather than using a single target, target_rotation speci"
       "fies a list of targets and picks one from the list. Target_rotation ac"
       "ts as a go-between for the trigger entity and the eventual target... i"
       "n other words you'll target the target_rotation with your trigger_once"
       ", and the target_rotation will pick the actual target(s). How the targ"
       "et selection is made is dependent on the spawnflags. If no entity with"
       " the selected targetname exists, target_rotation does nothing (it does"
       " not select another target)."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_rotati"
         "on will be called before being auto-killtargeted. (Default=0)."
      }
      target: =
      {
        txt = "&"
        Hint = "Comma-separated targets to choose from, e.g. "$22"targ1,targ2,"
         "targ3"$22" (Do not include the quotation marks)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_rotation."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "No Loop"
        Hint = "If set, target_rotation will cycle through the list of targets"
         " only once. If not set, the selection process will continuously loop"
         " through the target list."$0D"NO_LOOP and RANDOM cannot be combined."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Random"
        Hint = "If set, target_rotation will make a random selection from the "
         "list rather than going through the list in order."$0D"NO_LOOP and RA"
         "NDOM cannot be combined."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_rotation will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_rotation will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_rotation will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_rotation will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    target_secret:form =
    {
      Help = "Counts a secret found."
      bbox = '-8 -8 -8 8 8 8'
      message: =
      {
        Txt = "&"
        Hint = "Character string to print to the screen when the target_secret"
         " fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_secret."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_secret will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_secret will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_secret will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_secret will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    target_set_effect:form =
    {
      Help = "The Lazarus target_set_effect point entity allows you to set ren"
       "dering effects for almost any other point entity. In general, target_s"
       "et_effect has no effect on brush models (this isn't strictly true; som"
       "e effects may be used on brush models if a true OpenGL card is in use,"
       " but limiting a map to be playable only on OpenGL systems isn't a real"
       " swell idea.)"
      bbox = '-8 -8 -8 8 8 8'
      effects: =
      {
        txt = "&"
        Hint = "Sets geewhiz rendering effects. Add values together to combine"
         " multiple effects."
        typ = "C"
        items = "0) combine:add values"$0D"1) rotate"$0D"2) gib"$0D"8) blaster"
         $0D"16) rocket"$0D"32) grenade"$0D"64) hyperblaster"$0D"128) bfg"$0D"2"
         "56) color_shell"$0D"512) powerscreen"$0D"16384) flies"$0D"32768) qua"
         "d"$0D"65536) pent"$0D"131072) teleporter"$0D"262144) flag1"$0D"52428"
         "8) flag2"$0D"1048576) ionripper"$0D"2097152) greengib"$0D"4194304) b"
         "lue_hb"$0D"8388608) spinning_lights"$0D"16777216) plasma"$0D"3355443"
         "2) trap"$0D"67108864) tracker"$0D"134217728) double"$0D"268435456) s"
         "pheretrans"$0D"536870912) tagtrail"$0D"1073741824) half_damage"$0D"2"
         "147483648) tracker_trail"
        values = "0"$0D"1"$0D"2"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"256"$0D
         "512"$0D"16384"$0D"32768"$0D"65536"$0D"131072"$0D"262144"$0D"524288"$0D
         "1048576"$0D"2097152"$0D"4194304"$0D"8388608"$0D"16777216"$0D"3355443"
         "2"$0D"67108864"$0D"134217728"$0D"268435456"$0D"536870912"$0D"1073741"
         "824"$0D"2147483648"
      }
      effects: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Effects combine:add values"
        Form = "t_effects_form:form"
        Hint = "Available Effects"
      }
      renderfx: =
      {
        txt = "&"
        Hint = "Sets eyecandy rendering effects. Add values together to combin"
         "e multiple effects."
        typ = "C"
        items = "0) combine:add values"$0D"1) minlight"$0D"2) viewermodel"$0D"4"
         ") weaponmodel"$0D"8) fullbright"$0D"16) depthhack"$0D"32) translucen"
         "t"$0D"64) framelerp"$0D"128) beam"$0D"512) glow"$0D"1024) shell_red"$0D
         "2048) shell_green"$0D"4096) shell_blue"$0D"32768) ir_visible"$0D"655"
         "36) shell_double"$0D"131072) shell_half_damage"$0D"262144) use_disgu"
         "ise"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"5"
         "12"$0D"1024"$0D"2048"$0D"4096"$0D"32768"$0D"65536"$0D"131072"$0D"262"
         "144"
      }
      renderfx: =
      {
        Txt = " "
        Typ = "B"
        Cap = "Renderfx combine:add values"
        Form = "t_renderfx_form:form"
        Hint = "Available Renderfx"
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the triggering behavior of the target_set_effect."$0D
         "Choices are:"$0D"0: COPY - Turn on the specified effects, while turn"
         "ing off all current effects. (Default)."$0D"1: NOT - Turn off the sp"
         "ecified effects, while leaving all current effects alone."$0D"2: XOR"
         " - Switch the state of specified effects, while leaving all current "
         "effects alone."$0D"3: OR - Turn on the specified effects, while leav"
         "ing all current effects alone."
        typ = "C"
        Items = "0) COPY"$0D"1) NOT"$0D"2) XOR"$0D"3) OR"
        Values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Name of the entity to add effects to."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_set_effect."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "he target_set_effect will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "he target_set_effect will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_set_effect will be inhibited and not appear when sk"
         "ill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_set_effect will be inhibited and not appear when de"
         "athmatch=1."
      }
    }
    target_skill:form =
    {
      Help = "The Lazarus target_skill allows you to force the skill level to "
       "Easy, Normal, Hard, or Nightmare. The ideal usage for this entity is i"
       "n a hub map in which you give the player a choice of skill levels to p"
       "lay, as in the opening map in Quake. The skill level will not change u"
       "ntil the next target_changelevel event."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "If non-zero, target_skill will be removed after count usages. "
         "(Default=0)."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Items = "0) Easy"$0D"1) Normal"$0D"2) Hard"$0D"3) Kightmare"
        Values = "0"$0D"1"$0D"2"$0D"3"
        Hint = "Set the Skill level, 0-3, after map change."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_skill."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_skill will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_skill will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_skill will be inhibited and not appear when skill=2"
         " or greater."
      }
    }
    target_sky:form =
    {
      Help = "The Lazarus target_sky point entity changes the environment map "
       "seen by the user. Start outside in the morning, enter the (windowless)"
       " Strogg base, and exit into the night. Of course this entity is best u"
       "sed when the player cannot see the sky abruptly change."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_sky wi"
         "ll be called before being auto-killtargeted. (Default=0)."
      }
      sky: =
      {
        Txt = "&"
        Typ = "C"
        Items = "1) unit1_"$0D"2) unit2_"$0D"3) unit3_"$0D"4) unit4_"$0D"5) un"
         "it5_"$0D"6) unit6_"$0D"7) unit7_"$0D"8) unit8_"$0D"9) unit9_"$0D"10)"
         " space1"
        Values = "unit1_"$0D"unit2_"$0D"unit3_"$0D"unit4_"$0D"unit5_"$0D"unit6"
         "_"$0D"unit7_"$0D"unit8_"$0D"unit9_"$0D"space1"
        Hint = "Environment map name."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_sky."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_sky will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_sky will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_sky will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_sky will be inhibited and not appear when deathmatc"
         "h=1."
      }
    }
    target_spawner:form =
    {
      Help = "Set target to the type of entity you want spawned. Useful for sp"
       "awning monsters and gibs."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        txt = "&"
        Hint = "Specifies the direction on the XY plane that the spawner will "
         "throw its spawned item."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the direction in 3 dimensions that the spawner will "
         "throw its spawned item."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_spawne"
         "r will be called before being auto-killtargeted. (Default=0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the target_spawner is to movew"
         "ith."
      }
      speed: =
      {
        txt = "&"
        Hint = "Specifies the speed in units/second that the spawner will thro"
         "w its spawned item."
      }
      target: =
      {
        txt = "&"
        Hint = "Specifies the classname of the item to spawn."
      }
      target: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_spawner4_form:form"
        Hint = "Available Classname Spawn"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_spawner."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."$0D"Used when spawning a Monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"Used when spawning a Monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_spawner will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_spawner will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_spawner will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_spawner will be inhibited and not appear when death"
         "match=1."
      }
    }
    target_speaker:form =
    {
      Help = "Normal sounds play each time the target is used. The reliable fl"
       "ag can be set for crucial voiceovers."
      bbox = '-8 -8 -8 8 8 8'
      attenuation: =
      {
        txt = "&"
        Hint = "Specifies how the played sound will attenuate with distance fr"
         "om the speaker origin. Attenuation=3 will be used if LOOPED_ON or LO"
         "OPED_OFF are set."
        typ = "C"
        Items = "-2) Activator Only"$0D"-1) None, send to whole level"$0D"1) N"
         "ormal fighting sounds"$0D"2) Idle sound level"$0D"3) Ambient sound l"
         "evel"
        values = "-2"$0D"-1"$0D"1"$0D"2"$0D"3"
        Hint = "Not sure what this does. Update hints."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_speake"
         "r will be called before being auto-killtargeted. Ignored if LOOPED_O"
         "N or LOOPED_OFF are set."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the target_speaker is to movew"
         "ith."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific speaker."
      }
      volume: =
      {
        Txt = "&"
        Hint = "Volume levels can be values of 0.0 to 1.0. 1.0 being the loude"
         "st."$0D"If volume is left blank then the default volume is set to 1."
         " A volume of .1 will barely be audible."$0D"If there are multiple ta"
         "rget_speaker entities with the same sound playing at the same time t"
         "hen"$0D"the volume will increase beyond normal but excessive target_"
         "speakers will do nothing beyond a certain point."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Looped On"
        Hint = "The speaker will loop its sound and is active when the map loa"
         "ds."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Looped Off"
        Hint = "The speaker will loop its sound and is inactive when the map l"
         "oads."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Reliable"
        Hint = "The speaker will override all other sounds that may be playing"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_speaker will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_speaker will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_speaker will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_speaker will be inhibited and not appear when death"
         "match=1."
      }
    }
    target_splash:form =
    {
      Help = "Creates a particle splash effect when triggered."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        txt = "&"
        Hint = "Specifies the direction on the XY plane that the target_splash"
         " will throw its pixels. (-1 is up, -2 is down)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the direction in 3 dimensions that the target_splash"
         " will throw its pixels."
      }
      count: =
      {
        txt = "&"
        Hint = "Specifies the number of pixels in each splash, from 1-255. (De"
         "fault=20)."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Specifies the amount of damage hit points the target_splash wi"
         "ll generate at its origin. (Default=0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the target_splash is to movewi"
         "th."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "1) Sparks"$0D"2) Blue Water"$0D"3) Brown Water"$0D"4) Slime"$0D
         "5) Lava"$0D"6) Blood"
        Values = "1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
        Hint = "Specifies pixel color and effects of the splash. (Default=2 Bl"
         "ue Water)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_splash. Use a func_timer with this"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_splash will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_splash will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_splash will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_splash will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    target_string:form =
    {
      Help = "This is the relay between a func_clock and the target_characters"
       " that act as the display"
      bbox = '-8 -8 -8 8 8 8'
      targetname: =
      {
        txt = "&"
        hint = "Make this the target of a func_clock."
      }
      team: =
      {
        txt = "&"
        Hint = "This must be the same as the team (Arg) for the target_charact"
         "er's."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_string will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_string will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_string will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_string will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    target_temp_entity:form =
    {
      Help = "Fire an origin based temp entity event to the clients."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the target_temp_e"
         "ntity will be called before being auto-killtargeted. (Default=0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the target_temp_entity is to m"
         "ovewith."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Items = "17) Rocket Exp Water"$0D"18) Grenade Exp Water"$0D"20) BFG Ex"
         "plosion"$0D"21) BFG Big Explosion"$0D"22) Boss Teleport"
        Values = "17"$0D"18"$0D"20"$0D"21"$0D"22"
        Hint = "Specifies the effect type used. 17,18,20,21,or 22; anything el"
         "se will crash Quake2."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_temp_entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_temp_entity will be inhibited and not appear when s"
         "kill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_temp_entity will be inhibited and not appear when s"
         "kill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_temp_entity will be inhibited and not appear when s"
         "kill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_temp_entity will be inhibited and not appear when d"
         "eathmatch=1."
      }
    }
    target_text:form =
    {
      Help = "The target_text point entity is similar in function to the famil"
       "iar target_help entity, with a few notable exceptions."
      bbox = '-8 -8 -8 8 8 8'
      message: =
      {
        txt = "&"
        Hint = "Specifies the string to be displayed when the target_text is t"
         "riggered. If the FILE spawnflag is set, then this key specifies the "
         "filename of the external file to retrieve text from."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific target_text."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "File"
        Hint = "The text to be displayed will be retrieved from an external fi"
         "le, rather than use the text string specified by message, which woul"
         "d instead specify the filename of that external file. The file shoul"
         "d be located in the /MAPS/ directory or in a subdirectory of /MAPS/."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "No background"
        Hint = "The text will be displayed without a background or plaque."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The target_text will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The target_text will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The target_text will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The target_text will be inhibited and not appear when deathmat"
         "ch=1."
      }
    }
    tremor_trigger_multiple:form =
    {
      Help = "The tremor_trigger_multiple is a brush model which is identical "
       "to a standard Quake2 trigger_multiple, with the notable difference tha"
       "t it is toggled on/off each time it is targeted. (You lose the ability"
       " to fire the trigger's targets indirectly with this change. IOW, if yo"
       "u target a normal, enabled trigger_multiple, it fires its targets. A t"
       "remor_trigger_multiple cannot work this way)."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle on the XY plane of the trigger. If "
         "non-zero, the trigger will only fire if the activator's facing angle"
         " is within 90 degrees of the trigger's facing angle. (Default=0)."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the trigger will "
         "be turned off before it is auto-killtargeted. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the trigger will fire af"
         "ter being triggered. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger fires."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger fires.  Use \n for line breaks."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the tremor_trigger_multiple is"
         " to movewith."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) F1 prompt"$0D"3) Silent"
        Values = "0"$0D"1"$0D"2"$0D"3"
        Hint = "Set - sounds - to one of the following, only hear when there i"
         "s a message."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific tremor_trigger_multiple. Each time the tr"
         "igger's targetname is called, the trigger is toggled on/off."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the minimum time in seconds between one firing of th"
         "e trigger and the next. A value of -1 will limit the trigger to only"
         " one firing. (Default=0.2)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Monster"
        Hint = "The tremor_trigger_multiple will fire if a monster is present "
         "within its field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Not Player"
        Hint = "The tremor_trigger_multiple will not fire if a player is prese"
         "nt within its field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Triggered"
        Hint = "The tremor_trigger_multiple is inactive when the map loads and"
         " must be targeted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Owned Turret"
        Hint = "The tremor_trigger_multiple will fire if a TRACK turret_breach"
         ", which is under the player's control, is present within its field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The tremor_trigger_multiple will be inhibited and not appear w"
         "hen skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The tremor_trigger_multiple will be inhibited and not appear w"
         "hen skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The tremor_trigger_multiple will be inhibited and not appear w"
         "hen skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The tremor_trigger_multiple will be inhibited and not appear w"
         "hen deathmatch=1."
      }
    }
    trigger_always:form =
    {
      Help = "This trigger will always fire.  It is activated by the world."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the trigger_always will "
         "fire. (Default=0.2)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_always fires."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger_alwa"
         "ys fires."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The trigger_always will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The trigger_always will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The trigger_always will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The trigger_always will be inhibited and not appear when death"
         "match=1."
      }
    }
    trigger_bbox:form =
    {
      Help = "Trigger_bbox functions exactly like a tremor_trigger_multiple, b"
       "ut is a point entity rather than a brush model."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle on the XY plane of the trigger. If "
         "non-zero, the trigger will only fire if the activator's facing angle"
         " is within 90 degrees of the trigger's facing angle."
      }
      bleft: =
      {
        txt = "&"
        Hint = "Specifies bottom-left (minY/minX/minZ) bounding box coordinate"
         "s for the active trigger field, using the trigger's origin as the re"
         "ference. See also tright. (Default= -16 -16 -16).."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the trigger will "
         "be turned off before it is auto-killtargeted. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the trigger will fire af"
         "ter being triggered. Default=0."
      }
      health: =
      {
        txt = "&"
        Hint = "When non-zero, makes the trigger shootable, and specifies hit "
         "points required before activating. A shootable trigger_bbox does not"
         " fire when an entity enters its field, but it does remain non-solid "
         "and non-visible. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger fires."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger fires."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_bbox is to movewit"
         "h."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) F1 prompt"$0D"3) Silent"
        Values = "0"$0D"1"$0D"2"$0D"3"
        Hint = "Set - sounds - to one of the following, only hear when there i"
         "s a message."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_bbox. Each time the trigger's tar"
         "getname is called, the trigger is toggled on/off."
      }
      tright: =
      {
        txt = "&"
        Hint = "Specifies top-right (maxY/maxX/maxZ) bounding box coordinates "
         "for the active trigger field, using the trigger's origin as the refe"
         "rence. See also bleft. (Default= 16 16 16)."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the minimum time in seconds between one firing of th"
         "e trigger and the next. A value of -1 will limit the trigger to only"
         " one firing. (Default=0.2)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Monster"
        Hint = "The trigger_bbox will fire if a monster is present within its "
         "field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Not Player"
        Hint = "The trigger_bbox will not fire if a player is present within i"
         "ts field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Triggered"
        Hint = "The trigger_bbox is inactive when the map loads and must be ta"
         "rgeted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Owned Turret"
        Hint = "The trigger_bbox will fire if a TRACK turret_breach, which is "
         "under the player's control, is present within its field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_bbox will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_bbox will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_bbox will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_bbox will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    trigger_counter:form =
    {
      Help = "Acts as an intermediary for an action that takes multiple inputs"
       "."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "Number of targets before triggering. (Default=2)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the trigger_always will "
         "fire.(Default=0.2)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_counter fires."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger_counter fires."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger_coun"
         "ter fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_counter."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "No Message"
        Hint = "If no message is not set, it will print "$22"1 more.. "$22" et"
         "c when triggered and "$22"sequence complete"$22" when finished."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The trigger_counter will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The trigger_counter will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The trigger_counter will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The trigger_counter will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    trigger_disguise:form =
    {
      Help = "The Lazarus trigger_disguise is a brush model trigger which is t"
       "aken directly from Rogue's mission pack. It effectively makes the play"
       "er which touches it invisible to monsters until the player fires a wea"
       "pon, or until another trigger_disguise with the REMOVE spawnflag is to"
       "uched."
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the trigger_disgu"
         "ise will be turned off before it is auto-killtargeted. (Default=0)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_disguise."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Toggle"
        Hint = "The trigger_disguise can be toggled on/off."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Start On"
        Hint = "The trigger_disguise will be active when the map loads."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Remove"
        Hint = "The trigger_disguise will remove the "$22"notarget"$22" effect"
         " given to the player by another (non-REMOVE) trigger_disguise."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_disguise will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_disguise will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "1024>Not in Hard"
        Hint = "The trigger_disguise will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
      }
    }
    trigger_elevator:form =
    {
      Help = "Use this if you need an elevator that stops at different heights"
      bbox = '-8 -8 -8 8 8 8 0'
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when this trigger_ele"
         "vator fires. This must be a func_train."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_elevator."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The trigger_elevator will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The trigger_elevator will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The trigger_elevator will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The trigger_elevator will be inhibited and not appear when dea"
         "thmatch=1."
      }
    }
    trigger_fog:form =
    {
      Help = "The Lazarus trigger_fog brush model provides one method of intro"
       "ducing fog effects in your map."
      angle: =
      {
        txt = "&"
        Hint = "Specifies the player facing direction on the XY plane where he"
         " will see the fog density value as specified by fog_density. (Defaul"
         "t=0). Only relevant for "$22"directional"$22" fog; ignored if densit"
         "y=0."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the player facing direction in 3 dimensions, defined"
         " by pitch and yaw (roll is ignored), where he will see the fog densi"
         "ty value as specified by fog_density. (Default=0 0 0). Only relevant"
         " for "$22"directional"$22" fog; ignored if density=0."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the trigger_fog w"
         "ill be turned off before it is auto-killtargeted. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the time in seconds that the trigger_fog will ramp f"
         "og density up/down. Density ramps from the player's currently render"
         "ed fog level to the fog density specified by the trigger_fog. (Defau"
         "lt=0)."
      }
      density: =
      {
        txt = "&"
        Hint = "When non-zero, specifies "$22"directional"$22" fog. Non-zero v"
         "alues specify the level of fog density viewed by the player when his"
         " view is directly opposite the direction specified by angle/angles. "
         "For best results, use values of <100. (Default=0). Ignored when fog_"
         "model=0."
      }
      fog_color: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "Specifies relative RGB color components of the fog effect; val"
         "id range for each component is 0.0-1.0.(Default=0.5 0.5 0.5)."
      }
      fog_color: =
      {
        txt = "&"
        Hint = "Specifies relative RGB color components of the fog effect; val"
         "id range for each component is 0.0-1.0. (Default=0.5 0.5 0.5)."
      }
      fog_density: =
      {
        txt = "&"
        Hint = "Specifies the level of fog density as viewed by the player. If"
         " density is non-zero, the fog is "$22"directional"$22", and fog_dens"
         "ity will specify the fog density of the player when his view is alig"
         "ned with the direction specified by angle/angles. For best results, "
         "use values of <100. (Default=20). Ignored when fog_model=0."
      }
      fog_far: =
      {
        txt = "&"
        Hint = "Specifies the distance in map units from the player's viewpoin"
         "t where visibility will be completely obscured by fog. See also fog_"
         "near. (Default=1024). Ignored if fog_model>0."
      }
      fog_model: =
      {
        txt = "&"
        Hint = "Specifies the method used to calculate how fog density increas"
         "es with distance. (Default=1). Note: Linear fog cannot be "$22"direc"
         "tional"$22"."
        typ = "C"
        Items = "0) Linear"$0D"1) Exponential"$0D"2) Fast Exponential"
        values = "0"$0D"1"$0D"2"
      }
      fog_near: =
      {
        txt = "&"
        Hint = "Specifies the distance in map units from the player's viewpoin"
         "t where visibility will first begin to be obscured by fog. See also "
         "fog_far. (Default=20). Ignored if fog_model>0.."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_fog."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Toggle"
        Hint = "The trigger_fog can be toggled on and off. Fog density levels "
         "will ramp up/down as specified by delay."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Start Off"
        Hint = "The trigger_fog will not be active when the map loads."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_fog will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_fog will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_fog will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_fog will be inhibited and not appear when deathmat"
         "ch=1."
      }
    }
    trigger_gravity:form =
    {
      Help = "Changes the touching entites gravity to the value of "$22"gravit"
       "y"$22". "
      gravity: =
      {
        Txt = "&"
        Hint = "1.0 is standard gravity for the level."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_gravity. Use this to make it disa"
         "ppear by making it triggered by killtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The trigger_gravity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The trigger_gravity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The trigger_gravity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The trigger_gravity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    trigger_hurt:form =
    {
      Help = "Any entity that touches this will be hurt.  It does dmg points o"
       "f damage each server frame."
      dmg: =
      {
        txt = "&"
        Hint = "Specifies the number of damage hit points the trigger_hurt wil"
         "l do every 0.1 seconds. (Default=5). If set to a negative value, the"
         " trigger_hurt will give health, but will not cause pain effects. (wh"
         "ole numbers only)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_hurt is to movewit"
         "h."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_hurt."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Start Off"
        Hint = "The trigger_hurt is inactive when the map loads and must be ta"
         "rgeted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Toggle"
        Hint = "The trigger_hurt can be toggled on and off."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Silent"
        Hint = "No sounds will be played when the trigger_hurt is acting upon "
         "the player."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No Protection"
        Hint = "The trigger_hurt will affect players with GOD mode on."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Slow Hurt"
        Hint = "The trigger_hurt will deal its damage more slowly."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "No Gib"
        Hint = "The trigger_hurt will stop dealing damage when its victim dies"
         ", and will not gib him."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        Cap = "Environment"
        Hint = "The trigger_hurt will not damage a player with an active envir"
         "onment suit."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_hurt will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_hurt will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_hurt will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_hurt will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    trigger_inside:form =
    {
      Help = "The Lazarus trigger_inside is similar to the standard Quake2 tri"
       "gger_multiple brush model, except that it only fires when the bounding"
       " box of the pathtargeted entity is completely inside the trigger's bou"
       "nding box. If you want a trigger to fire only when a certain monster e"
       "nters it - or you want a trigger to fire when a certain brush model (l"
       "ike a func_train or func_pushable) enters it - then this trigger is fo"
       "r you."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle on the XY plane of the trigger. If "
         "non-zero, the trigger will only fire if the activator's facing angle"
         " is within 90 degrees of the trigger's facing angle. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the trigger will fire af"
         "ter being triggered. Default=0."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger fires."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger fires."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_inside is to movew"
         "ith."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity which must be inside the trigger's bo"
         "unding box before the trigger will fire. Every trigger_inside must h"
         "ave a pathtarget set."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) F1 prompt"$0D"3) Silent"
        Values = "0"$0D"1"$0D"2"$0D"3"
        Hint = "Set - sounds - to one of the following, only hear when there i"
         "s a message."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_inside."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the minimum time in seconds between one firing of th"
         "e trigger and the next. A value of -1 will limit the trigger to only"
         " one firing. (Default=0.2)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Triggered"
        Hint = "The trigger_inside is inactive when the map loads and must be "
         "targeted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_inside will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_inside will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_inside will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_inside will be inhibited and not appear when death"
         "match=1."
      }
    }
    trigger_key:form =
    {
      Help = "A relay trigger that only fires it's targets if player has the p"
       "roper key.  Use - item - to specify the required key."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the trigger_key will fir"
         "e after being triggered. Default=0."
      }
      item: =
      {
        Txt = "&"
        Typ = "C"
        Items = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"$0D
         "key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
        values = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"
         $0D"key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
        Hint = "Classname of the entity required to trigger the trigger_key. f"
         "or example - key_blue_key."
      }
      key_message: =
      {
        txt = "&"
        Hint = "Character string to be printed to the screen when the trigger_"
         "key is tried by a player who lacks the required item. If key_message"
         " has no value, the default "$22"You need the [key name]"$22" message"
         " will be printed to the screen instead. Ignored when the SILENT spaw"
         "nflag is set."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_key fires."
      }
      message: =
      {
        Txt = "&"
        Hint = "Character string to be printed to the screen when the trigger_"
         "key fires."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger_key "
         "fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_key. Usually a trigger_multiple i"
         "s used."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Multi-Use"
        Hint = "The trigger_key will be persistant, in that the required item "
         "is needed every time the trigger_key is used. This is useful for thi"
         "ngs like vending machines."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Keep Key"
        Hint = "The trigger_key will not remove the required item from the pla"
         "yer's inventory when the trigger_key is used."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Silent"
        Hint = "The trigger_key will not play any sounds nor display messages "
         "when used. Useful for removing items and weapons from the player on "
         "level changes."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The trigger_key will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The trigger_key will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The trigger_key will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The trigger_key will be inhibited and not appear when deathmat"
         "ch=1."
      }
    }
    trigger_look:form =
    {
      Help = "The Lazarus trigger_look brush model functions like a tremor_tri"
       "gger_multiple, with the addition that the player must be looking at a "
       "separate bounding box that the trigger_look points to before it will f"
       "ire its targets. The trick now is to define that bounding box, and tha"
       "t can be done in one of two ways."
      bleft: =
      {
        txt = "&"
        Hint = "Specifies bottom-left (minY/minX/minZ) coordinates for the bou"
         "nding box the player must be looking at before the trigger will fire"
         ", using the center of the associated origin brush as the reference. "
         "See also tright. Default=(-16 -16 -16). Ignored when LOOK_TARGET is "
         "set."
      }
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the trigger will "
         "be turned off before it is auto-killtargeted. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the trigger will fire af"
         "ter being triggered. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger fires."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger fires."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_look is to movewit"
         "h."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) F1 prompt"$0D"3) Silent"
        Values = "0"$0D"1"$0D"2"$0D"3"
        Hint = "Set - sounds - to one of the following, only hear when there i"
         "s a message."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s. If LOOK_TARGET is set, the trigger will only act upon the entity "
         "being looked at, rather than all entities with that targetname."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_look. Each time the trigger's tar"
         "getname is called, the trigger is toggled on/off."
      }
      tright: =
      {
        txt = "&"
        Hint = "Specifies top-right (maxY/maxX/maxZ) coordinates for the bound"
         "ing box the player must be looking at before the trigger will fire, "
         "using the center of the associated origin brush as the reference. Se"
         "e also bleft. Default=(16 16 16). Ignored when LOOK_TARGET is set."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the minimum time in seconds between one firing of th"
         "e trigger and the next. A value of -1 will limit the trigger to only"
         " one firing. (Default=0.2)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Triggered"
        Hint = "The trigger_look is inactive when the map loads and must be ta"
         "rgeted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Use"
        Hint = "The trigger_look will require the player to have the +use comm"
         "and active as a condition of the trigger's firing. As a practical ma"
         "tter, this spawnflag is incompatible with OWNED_TURRET."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Owned Turret"
        Hint = "The trigger_look will fire if a TRACK turret_breach, which is "
         "under the player's control, is present within its field, and the pla"
         "yer is looking in the defined location. As a practical matter, this "
         "spawnflag is incompatible with USE. Please see these notes for prope"
         "r construction."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Look Target"
        Hint = "The trigger_look will use the entity specified by its target t"
         "o define the bounding box the player needs to be looking at before t"
         "he trigger will fire; and then it will only trigger the specific ent"
         "ity being looked at, rather than triggering all entities with that t"
         "argetname. If set, no origin brush is required, and bleft and tright"
         " are ignored."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_look will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_look will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_look will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_look will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    trigger_mass:form =
    {
      Help = "The Lazarus trigger_mass is similar to the standard Quake2 trigg"
       "er_multiple brush model, except that it only fires when touched by suf"
       "ficient entity mass. Any entity (not just players or monsters/actors) "
       "can trigger it - this includes entities like func_pushables."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle on the XY plane of the trigger. If "
         "non-zero, the trigger will only fire if the activator's facing angle"
         " is within 90 degrees of the trigger's facing angle. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the trigger will fire af"
         "ter being triggered. Default=0."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger fires."
      }
      mass: =
      {
        txt = "&"
        Hint = "Minimum mass required of the activating entity in order for th"
         "e trigger to fire. (Default=100)."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger fires."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_mass is to movewit"
         "h."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) F1 prompt"$0D"3) Silent"
        Values = "0"$0D"1"$0D"2"$0D"3"
        Hint = "Set - sounds - to one of the following, only hear when there i"
         "s a message."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_mass."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the minimum time in seconds between one firing of th"
         "e trigger and the next. A value of -1 will limit the trigger to only"
         " one firing. (Default=0.2)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Triggered"
        Hint = "The trigger_mass is inactive when the map loads and must be ta"
         "rgeted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_mass will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_mass will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_mass will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_mass will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    trigger_monsterjump:form =
    {
      Help = "Walking monsters that touch this will jump in the direction of t"
       "he trigger's angle."
      angle: =
      {
        txt = "&"
        Hint = "Specifies the direction angle on the XY plane that the trigger"
         "_monsterjump will cause monsters/actors to jump. (Default=0)."
      }
      height: =
      {
        txt = "&"
        Hint = "Vertical velocity in units/sec that monsters/actors will be th"
         "rown upwards. (Default=200)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_monsterjump is to "
         "movewith."
      }
      speed: =
      {
        txt = "&"
        Hint = "Horizontal velocity in units/sec that monsters/actors will be "
         "thrown, in the direction specified by angle. (Default=200)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_monsterjump."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_monsterjump will be inhibited and not appear when "
         "skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_monsterjump will be inhibited and not appear when "
         "skill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_monsterjump will be inhibited and not appear when "
         "deathmatch=1."
      }
    }
    trigger_multiple:form =
    {
      Help = "Variable sized repeatable trigger.  Must be targeted at one or m"
       "ore entities."
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle on the XY plane of the trigger. If "
         "non-zero, the trigger will only fire if the activator's facing angle"
         " is within 90 degrees of the trigger's facing angle. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the trigger will fire af"
         "ter being triggered. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger fires."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger fires."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_multiple is to mov"
         "ewith."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) F1 prompt"$0D"3) Silent"
        Values = "0"$0D"1"$0D"2"$0D"3"
        Hint = "Set - sounds - to one of the following, only hear when there i"
         "s a message."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_multiple. Each time the trigger's"
         " targetname is called and the trigger is already active, the trigger"
         " will fire."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the minimum time in seconds between one firing of th"
         "e trigger and the next. A value of -1 will limit the trigger to only"
         " one firing. Default=0.2."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Monster"
        Hint = "The trigger_multiple will fire if a monster is present within "
         "its field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Not Player"
        Hint = "The trigger_multiple will not fire if a player is present with"
         "in its field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Triggered"
        Hint = "The trigger_multiple is inactive when the map loads and must b"
         "e targeted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Owned Turret"
        Hint = "The trigger_multiple will fire if a TRACK turret_breach, which"
         " is under the player's control, is present within its field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_multiple will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_multiple will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_multiple will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not In Deathmatch"
        Hint = "The trigger_multiple will be inhibited and not appear when dea"
         "thmatch=1."
      }
    }
    trigger_once:form =
    {
      Help = "Triggers once, then removes itself.  You must set the key - targ"
       "et - to the name of another object in the level that has a matching - "
       "targetname - ."
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle on the XY plane of the trigger. If "
         "non-zero, the trigger will only fire if the activator's facing angle"
         " is within 90 degrees of the trigger's facing angle. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the trigger will fire af"
         "ter being triggered. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger fires."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger fires."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_once is to movewit"
         "h."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) F1 prompt"$0D"3) Silent"
        Values = "0"$0D"1"$0D"2"$0D"3"
        Hint = "Set - sounds - to one of the following, only hear when there i"
         "s a message."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_once. If the trigger's targetname"
         " is called and the trigger is already active, the trigger will fire."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Not Player"
        Hint = "The trigger_once will not fire if a player is present within i"
         "ts field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Triggered"
        Hint = "The trigger_once is inactive when the map loads and must be ta"
         "rgeted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Owned Turret"
        Hint = "The trigger_once will fire if a TRACK turret_breach, which is "
         "under the player's control, is present within its field. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_once will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_once will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_once will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not In Deathmatch"
        Hint = "The trigger_once will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    trigger_push:form =
    {
      Help = "Pushes the player."
      angle: =
      {
        txt = "&"
        Hint = "Specifies the direction angle on the XY plane that the trigger"
         "_push will throw other entities. (Default=0)."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies the direction angle in 3 dimensions that the trigger"
         "_push will throw other entities, defined by pitch, yaw, and roll. (D"
         "efault=0 0 0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_push is to movewit"
         "h."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      speed: =
      {
        Txt = "&"
        Hint = "Velocity in [units/sec]*10 that the affected entity will be th"
         "rown."$0D"Maximum speed allowed by the executable is 4096 units/sec,"
         $0D"so the standard game default value of 1000 is obviously quite goo"
         "fed up."$0D"Set to something more logical. (Default=1000)."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_push."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Push Once"
        Hint = "The trigger_push will remove itself after its first use."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Custom Sound"
        Hint = "The trigger_push will call a custom .wav file when acting on a"
         "n entity. This file is specified with the noise key."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_push will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_push will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_push will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_push will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    trigger_relay:form =
    {
      Help = "This fixed size trigger cannot be touched, it can only be fired "
       "by other events."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the trigger_relay"
         " will be called before being auto-killtargeted. (Default=0)."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the relay will fire afte"
         "r being triggered. (Default=0)."
      }
      dmgteam: =
      {
        txt = "&"
        Hint = "Specifies the dmgteam value. If a monster_* or actor with an i"
         "dentical dmgteam value is injured, the relay will fire."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_relay fires."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " relay fires."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies the sound to be played when the relay fires. Ignored"
         " if there is no message value. (Default=0)."
        typ = "C"
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) F1 Prompt"$0D"3) Silent"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the relay fires."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_relay."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The trigger_relay will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The trigger_relay will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The trigger_relay will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The trigger_relay will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    trigger_scales:form =
    {
      Help = "The Lazarus trigger_scales is a brush model trigger which doesn'"
       "t actually trigger anything. What it does is cause changes in a numeri"
       "cal character display as entity mass within its bounds changes. In pla"
       "in English, it's a weight scale."
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_scales."
      }
      team: =
      {
        txt = "&"
        Hint = "Identical to the team value of the target_characters used to c"
         "reate the weight display. Target_character "$22"count"$22" values ar"
         "e from right-to-left, in other words, count=1 is the 1's place, coun"
         "t=2 is the 10's place, etc."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Triggered"
        Hint = "The trigger_scales is inactive when the map loads and must be "
         "targeted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_scales will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_scales will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_scales will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_scales will be inhibited and not appear when death"
         "match=1."
      }
    }
    trigger_switch:form =
    {
      Help = "Identical to trigger_multiple in just about every way, except th"
       "at it only turns entities ON if they're currently OFF (default operati"
       "on) or OFF if they're currently ON and TRIGGER_TARGET_OFF spawnflag is"
       " set."
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle on the XY plane of the trigger. If "
         "non-zero, the trigger will only fire if the activator's facing angle"
         " is within 90 degrees of the trigger's facing angle. Default=0."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before the trigger will fire af"
         "ter being triggered. (Default=0)."
      }
      killtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger fires."
      }
      message: =
      {
        txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger fires."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_multiple is to mov"
         "ewith."
      }
      pathtarget: =
      {
        txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies the sound to be played when the trigger fires. Ignor"
         "ed if there is no message value."
        typ = "C"
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) F1 prompt"$0D"3) Silent"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_multiple. Each time the trigger's"
         " targetname is called and the trigger is already active, the trigger"
         " will fire."
      }
      wait: =
      {
        txt = "&"
        Hint = "Specifies the minimum time in seconds between one firing of th"
         "e trigger and the next. A value of -1 will limit the trigger to only"
         " one firing. (Default=0.2)."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Monster"
        Hint = "The trigger_switch will fire if a monster is present within it"
         "s field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Not Player"
        Hint = "The trigger_switch will not fire if a player is present within"
         " its field."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Start Off"
        Hint = "The trigger_switch is inactive when the map loads and must be "
         "targeted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Cam Owner"
        Hint = ""
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X32"
        Cap = "x"
        Hint = ""
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X64"
        Cap = "Target Off"
        Hint = ""
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_switch will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_switch will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_switch will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not In Deathmatch"
        Hint = "The trigger_switch will be inhibited and not appear when death"
         "match=1."
      }
    }
    trigger_teleporter:form =
    {
      Help = "The Lazarus trigger_teleporter is a brush model entity which may"
       " be used as an alternative to the misc_teleporter. It is a nodraw trig"
       "ger with its bounding box extents defined by the size of the brush use"
       "d, like with any other trigger. Note that all Quake2 triggers use cubi"
       "cal bounding boxes to define trigger fields; don't expect a cylindrica"
       "l brush to produce a cylindrical trigger field."
      count: =
      {
        txt = "&"
        Hint = "When non-zero, specifies the number of times the trigger_telep"
         "orter will be called before being auto-killtargeted. (Default=0)."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise4_form:form"
        hint = "Available .WAV files"
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the trigger_teleporter is to m"
         "ovewith."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the entity the teleporter will use as a destinat"
         "ion."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_teleporter."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Triggered"
        Hint = "The teleporter is inactive when the map loads and must be targ"
         "eted to activate it."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Monster"
        Hint = "The teleporter can transmit monsters and actors."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "No Effects"
        Hint = "Normal teleporter particle effect and sound are disabled."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Custom Sound"
        Hint = "The teleporter will call a custom .wav file when transmitting "
         "to the destination. This file is specified with the noise Arg."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        Cap = "Landmark"
        Hint = "The teleporter will cause the player's view angles and velocit"
         "y to be preserved when he spawns at his destination. View angles are"
         " rotated by the angles value of the destination entity minus the inh"
         "erited angles. If this flag is set, a trigger_transition may be used"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_teleporter will be inhibited and not appear when s"
         "kill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_teleporter will be inhibited and not appear when s"
         "kill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_teleporter will be inhibited and not appear when s"
         "kill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_teleporter will be inhibited and not appear when d"
         "eathmatch=1."
      }
    }
    trigger_transition:form =
    {
      Help = "The trigger_transition is a new Lazarus brush model for Quake2 w"
       "hich is inspired by the Half-Life entity. It acts to create more seaml"
       "ess level changes by allowing many entities within its field to change"
       " levels along with the player. "
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific trigger_transition. The targetname should"
         " be identical to the targetname of the target_changelevel, misc_tele"
         "porter, or trigger_teleporter that it's designed to work with."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The trigger_transition will be inhibited and not appear when s"
         "kill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The trigger_transition will be inhibited and not appear when s"
         "kill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The trigger_transition will be inhibited and not appear when s"
         "kill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The trigger_transition will be inhibited and not appear when d"
         "eathmatch=1."
      }
    }
    turret_base:form =
    {
      Help = "This portion of the turret changes yaw only. MUST be teamed with"
       " a turret_breach."
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the turret_base on the XY plane."
         " (Default=0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the entity to move with."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific turret_base."
      }
      team: =
      {
        txt = "&"
        Hint = "Value shared by the corresponding turret_breach."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "When set the turret_base will not spawn in the game until trig"
         "gered, by calling its targetname."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The turret_base will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The turret_base will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The turret_base will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The turret_base will be inhibited and not appear when deathmat"
         "ch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    turret_breach:form =
    {
      Help = "This portion of the turret can change both pitch and yaw.  The m"
       "odel should be made with a flat pitch."
      angle: =
      {
        txt = "&"
        Hint = "Specifies the facing angle of the turret_breach on the XY plan"
         "e. (Default=0)."
      }
      count: =
      {
        txt = "&"
        Hint = "Specifies the position number in a series of turrets targeted "
         "by the same func_monitor."
      }
      deathtarget: =
      {
        txt = "&"
        Hint = "Trigger which fires when the turret's health is depleted."
      }
      destroytarget: =
      {
        txt = "&"
        Hint = "Trigger which fires when the turret's gib_health is depleted."
      }
      distance: =
      {
        txt = "&"
        Hint = "Sets the initial velocity of fired grenades in units/sec."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Damage done to the entity blocking the turret's rotation, in h"
         "ealth points/0.1 second. (Default=10)."
      }
      followtarget: =
      {
        txt = "&"
        Hint = "Targetname of the entity a TRACK turret will aim at and follow"
         ", if there are no better targets found."
      }
      gib_health: =
      {
        txt = "&"
        Hint = "Hit points of an already-disabled turret. (Default=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Hit points until disabled, at which point the deathtarget trig"
         "ger will fire. (Default=0)."
      }
      maxpitch: =
      {
        txt = "&"
        Hint = "Maximum allowable pitch angle. (Default = 30)."
      }
      minpitch: =
      {
        txt = "&"
        Hint = "Minimum allowable pitch angle. (Default = -30)."
      }
      maxyaw: =
      {
        txt = "&"
        Hint = "Maximum allowable yaw angle. (Default = 360)."
      }
      minyaw: =
      {
        txt = "&"
        Hint = "Minimum allowable yaw angle. (Default = 0)."
      }
      movewith: =
      {
        txt = "&"
        Hint = "Targetname of the parent entity the turret assembly (turret_br"
         "each and turret_base) is to movewith."
      }
      sounds: =
      {
        txt = "&"
        Hint = "Specifies what the turret will fire. Firing behavior is determ"
         "ined by wait, and in the case of grenade turrets, distance as well. "
         "(Default=2)."
        typ = "C"
        Items = "-1) No fire"$0D"1) Railgun"$0D"2) Rocket"$0D"3) BFG"$0D"4) Ho"
         "ming Rockets"$0D"5) Machinegun"$0D"6) Hyperblaster"$0D"7) Grenade"
        values = "-1"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"
      }
      speed: =
      {
        txt = "&"
        Hint = "Speed of pitch and yaw rotations in degrees/second. (Default=5"
         "0)."
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of an info_notnull, so placed as to determine the w"
         "eapon firing origin distance from the breach's origin. Every turret "
         "must target an info_notnull in order to function."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific turret_breach. TRACK turrets may be toggl"
         "ed on/off by triggering them."
      }
      team: =
      {
        txt = "&"
        Hint = "Value shared by the corresponding turret_base."
      }
      viewmessage: =
      {
        txt = "&"
        Hint = "Message which appears on the screen when a turret is accessed "
         "using a func_monitor."
      }
      wait: =
      {
        txt = "&"
        Hint = "The meaning of "$22"wait"$22" is dependent on the weapon type "
         "(sounds) used."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Player"
        Hint = "The turret may function as a "$22"ride-on"$22" turret."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The turret_breach will not spawn in the game until triggered, "
         "by calling its targetname."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Track"
        Hint = "The turret will act without being controlled by either a turre"
         "t_driver or a player."
      }
      spawnflags: =
      {
        txt = "&"
        Typ = "X8"
        Cap = "Good Guy"
        Hint = "Turret will attack monsters rather than players. If set, TRACK"
         " is automatically turned on also."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The turret_breach will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The turret_breach will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The turret_breach will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The turret_breach will be inhibited and not appear when deathm"
         "atch=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    turret_driver:form =
    {
      Help = "Must NOT be on the team with the rest of the turret parts.  Inst"
       "ead it must target the turret_breach."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/infantry/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the Turret Driver on the XY plan"
         "e. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the Turret Driver in 3 dimension"
         "s as defined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      item: =
      {
        txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item4_form:form"
        Hint = "Available Classname Spawn"
      }
      target: =
      {
        txt = "&"
        Hint = "Targetname of the turret_breach controlled."
      }
      targetname: =
      {
        txt = "&"
        Hint = "Name of the specific turret_driver."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Remote"
        Hint = "When set the turret_driver can control a turret remotely, and "
         "under certain circumstances may transform into a monster_infantry."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The turret_driver will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The turret_driver will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The turret_driver will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The turret_driver will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    viewthing:form =
    {
      Help = "Just for debugging level (DON'T USE)."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      target: =
      {
        Txt = "&"
        Hint = "."
      }
      targetname: =
      {
        Txt = "&"
        Hint = ""
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
      }
    }
    weapon_blaster:form =
    {
      Help = "This is the hand Gun (1st weapon) unlimited ammo."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_blast/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the weapon will explode if the SHO"
         "OTABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific weapon entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific weapon entity."$0D"This is only rele"
         "vant when deathmatch=1."$0D"When multiple pickups have identical tea"
         "m names, the first to appear in the .map file will be the one that a"
         "ppears on map load."$0D"This pickup entity serves as the master, and"
         " its teammates are the slaves."$0D"When the master pickup entity is "
         "picked up by a player, any of the teammates will spawn on a randomly"
         " rotating basis."$0D" Weapon entities may be teamed with other weapo"
         "ns, ammo, and/or items."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The weapon_* entity will not spin. This allows proper use of t"
         "he angle and angles keys."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The weapon_* entity will remain wherever it was placed in the "
         "map editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The weapon_* entity will be destroyable by weapon fire, as det"
         "ermined by health. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    weapon_shotgun:form =
    {
      Help = "This is the small ShotGun (2nd weapon) uses ammo_shells."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_shotg/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the weapon will explode if the SHO"
         "OTABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific weapon entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific weapon entity."$0D"This is only rele"
         "vant when deathmatch=1."$0D"When multiple pickups have identical tea"
         "m names, the first to appear in the .map file will be the one that a"
         "ppears on map load."$0D"This pickup entity serves as the master, and"
         " its teammates are the slaves."$0D"When the master pickup entity is "
         "picked up by a player, any of the teammates will spawn on a randomly"
         " rotating basis."$0D" Weapon entities may be teamed with other weapo"
         "ns, ammo, and/or items."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The weapon_* entity will not spin. This allows proper use of t"
         "he angle and angles keys."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The weapon_* entity will remain wherever it was placed in the "
         "map editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The weapon_* entity will be destroyable by weapon fire, as det"
         "ermined by health. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    weapon_supershotgun:form =
    {
      Help = "This is the big ShotGun (3rd weapon) uses ammo_shells."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_shotg2/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the weapon will explode if the SHO"
         "OTABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific weapon entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific weapon entity."$0D"This is only rele"
         "vant when deathmatch=1."$0D"When multiple pickups have identical tea"
         "m names, the first to appear in the .map file will be the one that a"
         "ppears on map load."$0D"This pickup entity serves as the master, and"
         " its teammates are the slaves."$0D"When the master pickup entity is "
         "picked up by a player, any of the teammates will spawn on a randomly"
         " rotating basis."$0D" Weapon entities may be teamed with other weapo"
         "ns, ammo, and/or items."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The weapon_* entity will not spin. This allows proper use of t"
         "he angle and angles keys."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The weapon_* entity will remain wherever it was placed in the "
         "map editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The weapon_* entity will be destroyable by weapon fire, as det"
         "ermined by health. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    weapon_machinegun:form =
    {
      Help = "This is the small MachineGun (4th weapon) uses ammo_bullets."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_machn/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the weapon will explode if the SHO"
         "OTABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific weapon entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific weapon entity."$0D"This is only rele"
         "vant when deathmatch=1."$0D"When multiple pickups have identical tea"
         "m names, the first to appear in the .map file will be the one that a"
         "ppears on map load."$0D"This pickup entity serves as the master, and"
         " its teammates are the slaves."$0D"When the master pickup entity is "
         "picked up by a player, any of the teammates will spawn on a randomly"
         " rotating basis."$0D" Weapon entities may be teamed with other weapo"
         "ns, ammo, and/or items."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The weapon_* entity will not spin. This allows proper use of t"
         "he angle and angles keys."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The weapon_* entity will remain wherever it was placed in the "
         "map editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The weapon_* entity will be destroyable by weapon fire, as det"
         "ermined by health. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    weapon_chaingun:form =
    {
      Help = "This is the big MachineGun (5th weapon) uses ammo_bullets."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_chain/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the weapon will explode if the SHO"
         "OTABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific weapon entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific weapon entity."$0D"This is only rele"
         "vant when deathmatch=1."$0D"When multiple pickups have identical tea"
         "m names, the first to appear in the .map file will be the one that a"
         "ppears on map load."$0D"This pickup entity serves as the master, and"
         " its teammates are the slaves."$0D"When the master pickup entity is "
         "picked up by a player, any of the teammates will spawn on a randomly"
         " rotating basis."$0D" Weapon entities may be teamed with other weapo"
         "ns, ammo, and/or items."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The weapon_* entity will not spin. This allows proper use of t"
         "he angle and angles keys."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The weapon_* entity will remain wherever it was placed in the "
         "map editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The weapon_* entity will be destroyable by weapon fire, as det"
         "ermined by health. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    weapon_grenadelauncher:form =
    {
      Help = "This is the Grenade Launcher (6th weapon) uses ammo_grenades."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_launch/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the weapon will explode if the SHO"
         "OTABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific weapon entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific weapon entity."$0D"This is only rele"
         "vant when deathmatch=1."$0D"When multiple pickups have identical tea"
         "m names, the first to appear in the .map file will be the one that a"
         "ppears on map load."$0D"This pickup entity serves as the master, and"
         " its teammates are the slaves."$0D"When the master pickup entity is "
         "picked up by a player, any of the teammates will spawn on a randomly"
         " rotating basis."$0D" Weapon entities may be teamed with other weapo"
         "ns, ammo, and/or items."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The weapon_* entity will not spin. This allows proper use of t"
         "he angle and angles keys."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The weapon_* entity will remain wherever it was placed in the "
         "map editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The weapon_* entity will be destroyable by weapon fire, as det"
         "ermined by health. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    weapon_rocketlauncher:form =
    {
      Help = "This is the Rocket Launcher (7th weapon) uses ammo_rockets."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_rocket/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the weapon will explode if the SHO"
         "OTABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific weapon entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific weapon entity."$0D"This is only rele"
         "vant when deathmatch=1."$0D"When multiple pickups have identical tea"
         "m names, the first to appear in the .map file will be the one that a"
         "ppears on map load."$0D"This pickup entity serves as the master, and"
         " its teammates are the slaves."$0D"When the master pickup entity is "
         "picked up by a player, any of the teammates will spawn on a randomly"
         " rotating basis."$0D" Weapon entities may be teamed with other weapo"
         "ns, ammo, and/or items."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The weapon_* entity will not spin. This allows proper use of t"
         "he angle and angles keys."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The weapon_* entity will remain wherever it was placed in the "
         "map editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The weapon_* entity will be destroyable by weapon fire, as det"
         "ermined by health. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    weapon_hyperblaster:form =
    {
      Help = "This is the Hyper Blaster (8th weapon) uses ammo_cells."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_hyperb/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the weapon will explode if the SHO"
         "OTABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific weapon entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific weapon entity."$0D"This is only rele"
         "vant when deathmatch=1."$0D"When multiple pickups have identical tea"
         "m names, the first to appear in the .map file will be the one that a"
         "ppears on map load."$0D"This pickup entity serves as the master, and"
         " its teammates are the slaves."$0D"When the master pickup entity is "
         "picked up by a player, any of the teammates will spawn on a randomly"
         " rotating basis."$0D" Weapon entities may be teamed with other weapo"
         "ns, ammo, and/or items."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The weapon_* entity will not spin. This allows proper use of t"
         "he angle and angles keys."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The weapon_* entity will remain wherever it was placed in the "
         "map editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The weapon_* entity will be destroyable by weapon fire, as det"
         "ermined by health. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    weapon_railgun:form =
    {
      Help = "This is the RailGun (9th weapon) uses ammo_slugs."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_rail/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the weapon will explode if the SHO"
         "OTABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific weapon entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific weapon entity."$0D"This is only rele"
         "vant when deathmatch=1."$0D"When multiple pickups have identical tea"
         "m names, the first to appear in the .map file will be the one that a"
         "ppears on map load."$0D"This pickup entity serves as the master, and"
         " its teammates are the slaves."$0D"When the master pickup entity is "
         "picked up by a player, any of the teammates will spawn on a randomly"
         " rotating basis."$0D" Weapon entities may be teamed with other weapo"
         "ns, ammo, and/or items."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The weapon_* entity will not spin. This allows proper use of t"
         "he angle and angles keys."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The weapon_* entity will remain wherever it was placed in the "
         "map editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The weapon_* entity will be destroyable by weapon fire, as det"
         "ermined by health. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    weapon_bfg:form =
    {
      Help = "This is the BFG -Big Freaking Gun- (10th weapon) uses ammo_cells"
       "."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_bfg/tris.md2"
      angle: =
      {
        txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Ignored for spinning keys unless NO_STUPID_SPINNING is set."
      }
      angles: =
      {
        txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Ignored for spinning keys unle"
         "ss NO_STUPID_SPINNING is set."
      }
      delay: =
      {
        txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies hit points before the weapon will explode if the SHO"
         "OTABLE spawnflag is set. (Default=20)."
      }
      killtarget: =
      {
        txt = "&"
        hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        txt = "&"
        hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      movewith: =
      {
        txt = "&"
        hint = "Targetname of the parent entity the weapon is to movewith."
      }
      target: =
      {
        txt = "&"
        hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        txt = "&"
        hint = "Name of the specific weapon entity."
      }
      team: =
      {
        txt = "&"
        hint = "Team name of the specific weapon entity."$0D"This is only rele"
         "vant when deathmatch=1."$0D"When multiple pickups have identical tea"
         "m names, the first to appear in the .map file will be the one that a"
         "ppears on map load."$0D"This pickup entity serves as the master, and"
         " its teammates are the slaves."$0D"When the master pickup entity is "
         "picked up by a player, any of the teammates will spawn on a randomly"
         " rotating basis."$0D" Weapon entities may be teamed with other weapo"
         "ns, ammo, and/or items."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        Cap = "No Stupid Spinning"
        Hint = "The weapon_* entity will not spin. This allows proper use of t"
         "he angle and angles keys."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        Cap = "No DropToFloor"
        Hint = "The weapon_* entity will remain wherever it was placed in the "
         "map editor."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Shootable"
        Hint = "The weapon_* entity will be destroyable by weapon fire, as det"
         "ermined by health. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    worldspawn:form =
    {
      Help = "Only used for the world."
      gravity: =
      {
        Txt = "&"
        Hint = "Specifies the gravity of map. (Default=800)."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the title of the map."
      }
      nextmap: =
      {
        Txt = "&"
        Hint = "Specifies the name of the next map to be loaded when timelimit"
         " or fraglimit is reached; ignored when deathmatch=0."
      }
      sky: =
      {
        Typ = "EP"
        Txt = "&"
        Hint = "Specifies the name of the environment map to be used. (Default"
         "= unit1_ )."
        BasePath = "$Game\baseq2\env"
        CutPath = "$Game\?\?\"
        DefExt = "pcx"
        DirSep = "/"
      }
      sky: =
      {
        Typ = "C"
        Txt = " "
        Hint = "Pick one of the Quake 2 unit*, space1 Skies."
        Items = "1) unit1_"$0D"2) unit2_"$0D"3) unit3_"$0D"4) unit4_"$0D"5) un"
         "it5_"$0D"6) unit6_"$0D"7) unit7_"$0D"8) unit8_"$0D"9) unit9_"$0D"10)"
         " space1"
        Values = "unit1_"$0D"unit2_"$0D"unit3_"$0D"unit4_"$0D"unit5_"$0D"unit6"
         "_"$0D"unit7_"$0D"unit8_"$0D"unit9_"$0D"space1"
      }
      skyaxis: =
      {
        Txt = "&"
        Hint = "Specifies the axis the sky will rotate around. Ignored if skyr"
         "otate is not set. ex: 0 0 1."
      }
      skyrotate: =
      {
        Txt = "&"
        Hint = "Sets the speed of a rotating sky in degrees/second."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "1) not used, data"$0D"2) Operation Overlord"$0D"3) Rage"$0D"4"
         ") Kill Ratio"$0D"5) March of the Stroggs"$0D"6) The Underworld"$0D"7"
         ") Quad Machine"$0D"8) Big Gun"$0D"9) Descent Into Cerberon"$0D"10) C"
         "limb"$0D"11) Showdown"
        Values = "1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"10"$0D
         "11"
        Hint = "Specifies the CD track to be played."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      attenuation: =
      {
        txt = "&"
        Hint = "Sets the global attenuation rolloff factor for target_playback"
         " 3D sounds."$0D"Setting this value makes the sound drop off faster o"
         "r slower."$0D"The higher the value, the faster volume will fall off."
         $0D"The lower the value, the slower it will fall off. Default value ="
         " 1.0."
      }
      bleft: =
      {
        txt = "&"
        Hint = "This value is ignored if the CUSTOMHELP effects flag is not se"
         "t."$0D"The first two numbers specify the upper left corner of the pi"
         "cture displayed when the "$22"cmd help"$22" button (normally F1) is "
         "pressed."$0D"The third number is ignored. The actual placement of th"
         "e picture is resolution-dependent."$0D"(0,0) is not the upper-left c"
         "orner of the screen, unless you happen to be playing with a 320x240 "
         "display."$0D"Standard help computer is placed at (32,8)."$0D"You can"
         " use negative values, but then you risk having the pic being clipped"
         " on low-resolution displays."$0D"On a 640x480 display, (-160,-120) i"
         "s the upper-left corner of the screen."$0D"If you make a decision th"
         "at "$22"nobody in their right mind plays Q2 at less than 640x480"$22
         ", which is probably a valid statement,"$0D"then placing the picture "
         "so that it fits in the upper-left corner of a 640x480 screen is like"
         "ly OK."
      }
      effects: =
      {
        txt = "&"
        Typ = "E"
        Cap = ""
        Hint = "Effects flags are used to change the behavior of the game. The"
         "se values may be combined."
      }
      effects: =
      {
        txt = "&"
        typ = "X1"
        Cap = "Custom Help"
        Hint = "If set, the normal help computer statistics are not displayed,"
         $0D" but pics/help.pcx is (presumably you'd want to use a custom pcx "
         "for this purpose)."
      }
      effects: =
      {
        txt = "&"
        typ = "X2"
        Cap = "Steps Sounds"
        Hint = "If set, the game will play sloshing sounds when the player mov"
         "es through shallow water,"$0D"wading sounds when the player moves th"
         "rough slightly deeper water,"$0D"and another set of custom sounds wh"
         "en the player climbs a ladder."
      }
      effects: =
      {
        txt = "&"
        typ = "X4"
        Cap = "Whats It"
        Hint = "If set, then the common names of monsters and pickup items tha"
         "t the player is looking at"$0D"are displayed immediately above the n"
         "ormal statusbar."
      }
      effects: =
      {
        txt = "&"
        typ = "X8"
        Cap = "Alert Sounds"
        Hint = "If set, monsters are alerted by player footstep and falling so"
         "unds."$0D"Use this flag if you want to reward stealth and/or penaliz"
         "e carelessness."
      }
      effects: =
      {
        txt = "&"
        typ = "X16"
        Cap = "Corpse Fade"
        Hint = "If set, monster, actor, and misc_insane corpses begin to fade "
         "away and"$0D"sink into the floor corpse_fadetime seconds after death"
         "."
      }
      effects: =
      {
        txt = "&"
        typ = "X32"
        Cap = "Jump Kick"
        Hint = "If set, player can damage monsters, actors, func_explosives, a"
         "nd other"$0D"damageable entities by jumping into them as in Action Q"
         "uake2."
      }
      fogclip: =
      {
        txt = "&"
        Hint = "Specifies whether to force the user's "$22"gl_clear"$22" setti"
         "ng to an"$0D"appropriate value for the proper rendering of fog clipp"
         "ing effects."
        typ = "C"
        Items = "0) Leave the user's gl_clear setting alone (Default)."$0D"1) "
         "Force gl_clear to a setting appropriate for his GL renderer."
        values = "0"$0D"1"
      }
      shift: =
      {
        txt = "&"
        Hint = "Sets the doppler shift scale factor for target_playback 3D sou"
         "nds."$0D"This is a general scaling factor for how much the pitch var"
         "ies due to doppler shifting."$0D"Increasing the value above 1.0 exag"
         "gerates the effect, whereas lowering it reduces the effect."$0D"Use "
         "a value less than 0 to remove the effect altogether (recommended for"
         " 3D music)."$0D"FMOD's speed of sound at a shift value of 1.0 is rou"
         "ghly 13600 units/second. Default value = 1.0."
      }
      style: =
      {
        txt = "&"
        Hint = "Specifies the player's starting weapon, unless overridden by a"
         " style setting used by a spawn point (info_player_start, etc)."$0D"I"
         "gnored when the map is loaded as a result of triggering a target_cha"
         "ngelevel."
        typ = "C"
        Items = "0) Don't specify"$0D"1) Blaster"$0D"2) SG w/Blaster"$0D"3) SS"
         "G w/Blaster"$0D"4) MG w/Blaster"$0D"5) CG w/Blaster"$0D"6) GL w/Blas"
         "ter"$0D"7) RL w/Blaster"$0D"8) HB w/Blaster"$0D"9) RG w/Blaster"$0D"1"
         "0) BFG w/Blaster"$0D"-1) None"$0D"-2) SG (no Blaster)"$0D"-3) SSG (n"
         "o Blaster)"$0D"-4) MG (no Blaster)"$0D"-5) CG (no Blaster)"$0D"-6) G"
         "L (no Blaster)"$0D"-7) RL (no Blaster)"$0D"-8) HB (no Blaster)"$0D"-"
         "9) RG (no Blaster)"$0D"-10) BFG (no Blaster)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"-1"$0D"-2"$0D"-3"$0D"-4"$0D"-5"$0D"-6"$0D"-7"$0D"-8"$0D"-9"$0D
         "-10"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a direction on the XY plane."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies alternate form, separate RGB brightness."
        Typ = "LN"
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies ambient brightness to #."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "The ambient light color RGB."
        Typ = "LN"
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "The amount of ambient light."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sky_ambient: =
      {
        Txt = "&"
        Hint = "The amount of sky_ambient light (brightness 0-255)."
      }
      _sky_surface: =
      {
        Txt = "&"
        Hint = "The amount of sky surface light (brightness)."
      }
      _sun_ambient: =
      {
        Txt = "&"
        Hint = "This controls the amount of diffuse light in shadows,"$0D"if s"
         "et to 0, shadows will be completely unlit (good Values are 50-200)."$0D
         "Alternatively, you can also set three seperate Values: red, green an"
         "d blue."$0D"(Only works with certain compilers, like ArghRad)"
        Typ = "LN"
      }
      _sun_ambient: =
      {
        Txt = "&"
        Hint = "This controls the amount of diffuse light in shadows,"$0D"if s"
         "et to 0, shadows will be completely unlit (good Values are 50-200)."$0D
         "Alternatively, you can also set three seperate Values: red, green an"
         "d blue."$0D"(Only works with certain compilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun_angle: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle by yaw/pitch."$0D"(Only works with certain c"
         "ompilers, like ArghRad)"
      }
      _sun_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun1's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun_color: =
      {
        Txt = "&"
        Hint = "Controls sun1's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun_diffade: =
      {
        Txt = "&"
        Hint = "Sets sun1's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun_diffuse: =
      {
        Txt = "&"
        Hint = "Sets sun1's diffuse light brightness."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun1's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun_light: =
      {
        Txt = "&"
        Hint = "The amount of light sun1 should produce (800 is a nice value)."
         $0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun_style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "The style for the light."$0D"(Only works with certain compiler"
         "s, like ArghRad)"
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      _sun_surface: =
      {
        Txt = "&"
        Hint = "These set the brightness of the normal sky surface light. This"
         " allows both normal surface light and sunlight to shine from the sam"
         "e surfaces (this tends to look better than _sky_ambient)."$0D"bright"
         "ness - A single brightness level."$0D"red green blue - Three separat"
         "e brightness Values for red, green, and blue lighting (normally not "
         "a standard RGB color)."$0D"(Only works with certain compilers, like "
         "ArghRad)"
      }
      _sun_target: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun_vector: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle by a vector."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun2_angle: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle by yaw/pitch."$0D"(Only works with certain c"
         "ompilers, like ArghRad)"
      }
      _sun2_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun2's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun2_color: =
      {
        Txt = "&"
        Hint = "Controls sun2's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun2_diffade: =
      {
        Txt = "&"
        Hint = "Sets sun2's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun2_diffuse: =
      {
        Txt = "&"
        Hint = "Sets sun2's diffuse light brightness."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun2_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun2's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun2_light: =
      {
        Txt = "&"
        Hint = "The amount of light sun2 should produce (800 is a nice value)."
         $0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun2_target: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun2: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun2_vector: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle by a vector."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun3_angle: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle by yaw/pitch."$0D"(Only works with certain c"
         "ompilers, like ArghRad)"
      }
      _sun3_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun3's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun3_color: =
      {
        Txt = "&"
        Hint = "Controls sun3's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun3_diffade: =
      {
        Txt = "&"
        Hint = "Sets sun3's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun3_diffuse: =
      {
        Txt = "&"
        Hint = "Sets sun3's diffuse light brightness."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun3_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun3's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun3_light: =
      {
        Txt = "&"
        Hint = "The amount of light sun3 should produce (800 is a nice value)."
         $0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun3_target: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun3: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun3_vector: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle by a vector."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun4_angle: =
      {
        Txt = "&"
        Hint = "Set sun4's angle by yaw/pitch."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      _sun4_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun4's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun4_color: =
      {
        Txt = "&"
        Hint = "Controls sun4's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun4_diffade: =
      {
        Txt = "&"
        Hint = "Set sun4's diffuse light attenuation."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun4_diffuse: =
      {
        Txt = "&"
        Hint = "Set sun4's diffuse light brightness."$0D"(Only works with cert"
         "ain compilers, like ArghRad)"
      }
      _sun4_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun4's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun4_light: =
      {
        Txt = "&"
        Hint = "The amount of light the sun4 should produce (800 is a nice val"
         "ue)."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun4_target: =
      {
        Txt = "&"
        Hint = "Set sun4's angle letting it point to a target, like a spotligh"
         "t."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun4: =
      {
        Txt = "&"
        Hint = "Set sun4's angle letting it point to a target, like a spotligh"
         "t."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun4_vector: =
      {
        Txt = "&"
        Hint = "Set sun4's angle by a vector."$0D"(Only works with certain com"
         "pilers, like ArghRad)"
      }
    }
  }
}
