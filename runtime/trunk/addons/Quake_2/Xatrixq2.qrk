QQRKSRC1
// This file has been written by QuArK Version 5.0.b5
// It's the text version of file: Q2xatrix.qrk
// The Reckoning Mission pack Addon. By: Akuma
// Akuma@Telefragged.com | Akuma@BTinternet.com

//fixed By X7 06-03-08

{
  QuArKProtected = "1"
  Description = "Quake 2 MP1 : Xatrix"
  Xatrix directory infos.qctx =
  {
    Game = "Quake 2"
    SourceDir = "xatrix"
    GameDir = "xatrix"
  }
  Textures.qtx =
  {
    ToolBox = "Texture Browser..."
    Root = "Xatrix Textures.qtxfolder"
    HTML = "intro.texturebrowser.html"

    left = '170'
    Xatrix Textures.qtxfolder =
    {
      Dark_1.txlist =
      {
        dark_1/+0endsign12a.wl =
        {
          w = "xatrix"
        }
        dark_1/+0endsign13.wl =
        {
          w = "xatrix"
        }
        dark_1/+0endsign14.wl =
        {
          w = "xatrix"
        }
        dark_1/+0endsign15.wl =
        {
          w = "xatrix"
        }
        dark_1/+0endsign16.wl =
        {
          w = "xatrix"
        }
        dark_1/+0endsign18.wl =
        {
          w = "xatrix"
        }
        dark_1/+0endsign19.wl =
        {
          w = "xatrix"
        }
        dark_1/+1endsign12a.wl =
        {
          w = "xatrix"
        }
        dark_1/+1endsign13.wl =
        {
          w = "xatrix"
        }
        dark_1/+1endsign14.wl =
        {
          w = "xatrix"
        }
        dark_1/+1endsign15.wl =
        {
          w = "xatrix"
        }
        dark_1/+1endsign16.wl =
        {
          w = "xatrix"
        }
        dark_1/+1endsign18.wl =
        {
          w = "xatrix"
        }
        dark_1/+1endsign19.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_100.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_101.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_102.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_104.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_15.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_16.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_18.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_19.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_20.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_23.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_24.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_25.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_26.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_27.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_35.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_36.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_38.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_39.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_40.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_41.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_42.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_43.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_44.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_45.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_47.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_48.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_50.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_51.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_52.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_59.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_60.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_61.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_65.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_66.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_68.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_70.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_81.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_83.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_84.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_85.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_86.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_91.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_93.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_94.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_97.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_98.wl =
        {
          w = "xatrix"
        }
        dark_1/0text_99.wl =
        {
          w = "xatrix"
        }
        dark_1/0xruin_70.wl =
        {
          w = "xatrix"
        }
        dark_1/0xruin_73.wl =
        {
          w = "xatrix"
        }
        dark_1/endsign13.wl =
        {
          w = "xatrix"
        }
        dark_1/metla_1.wl =
        {
          w = "xatrix"
        }
        dark_1/metlb_1.wl =
        {
          w = "xatrix"
        }
        dark_1/rust_d1.wl =
        {
          w = "xatrix"
        }
        dark_1/rust_d2.wl =
        {
          w = "xatrix"
        }
        dark_1/rust_p.wl =
        {
          w = "xatrix"
        }
        dark_1/sew_dr1.wl =
        {
          w = "xatrix"
        }
        dark_1/train_dor6.wl =
        {
          w = "xatrix"
        }
        dark_1/train_sd.wl =
        {
          w = "xatrix"
        }
        dark_1/train_sd2.wl =
        {
          w = "xatrix"
        }
        dark_1/train_sd4.wl =
        {
          w = "xatrix"
        }
        dark_1/wall70.wl =
        {
          w = "xatrix"
        }
        dark_1/wall71.wl =
        {
          w = "xatrix"
        }
        dark_1/wall72.wl =
        {
          w = "xatrix"
        }
        dark_1/wall73.wl =
        {
          w = "xatrix"
        }
        dark_1/wall74.wl =
        {
          w = "xatrix"
        }
        dark_1/water1.wl =
        {
          w = "xatrix"
        }
        dark_1/x_baslt1.wl =
        {
          w = "xatrix"
        }
        dark_1/x_com1_1.wl =
        {
          w = "xatrix"
        }
        dark_1/x_com2_1.wl =
        {
          w = "xatrix"
        }
        dark_1/x_com3_1.wl =
        {
          w = "xatrix"
        }
        dark_1/x_door1.wl =
        {
          w = "xatrix"
        }
        dark_1/x_grate2.wl =
        {
          w = "xatrix"
        }
        dark_1/xbigbox.wl =
        {
          w = "xatrix"
        }
        dark_1/xpipes1_1.wl =
        {
          w = "xatrix"
        }
        dark_1/xpod1.wl =
        {
          w = "xatrix"
        }
        dark_1/xpod2.wl =
        {
          w = "xatrix"
        }
      }
      Moon_1.txlist =
      {
        moon_1/bl_lt2.wl =
        {
          w = "xatrix"
        }
        moon_1/ice1_6.wl =
        {
          w = "xatrix"
        }
        moon_1/icecyc1_4.wl =
        {
          w = "xatrix"
        }
        moon_1/iceflr1_3.wl =
        {
          w = "xatrix"
        }
        moon_1/icerf1_1.wl =
        {
          w = "xatrix"
        }
        moon_1/icerf1_2.wl =
        {
          w = "xatrix"
        }
        moon_1/icewall1_5.wl =
        {
          w = "xatrix"
        }
        moon_1/mb_f1.wl =
        {
          w = "xatrix"
        }
        moon_1/mb_f3.wl =
        {
          w = "xatrix"
        }
        moon_1/mb_f4.wl =
        {
          w = "xatrix"
        }
        moon_1/moon_10.wl =
        {
          w = "xatrix"
        }
        moon_1/moon_12.wl =
        {
          w = "xatrix"
        }
        moon_1/moon_7.wl =
        {
          w = "xatrix"
        }
        moon_1/m_flr3.wl =
        {
          w = "xatrix"
        }
        moon_1/redfuse.wl =
        {
          w = "xatrix"
        }
        moon_1/shp_mtl7.wl =
        {
          w = "xatrix"
        }
        moon_1/shp_mtl8.wl =
        {
          w = "xatrix"
        }
        moon_1/sign01.wl =
        {
          w = "xatrix"
        }
        moon_1/sign02.wl =
        {
          w = "xatrix"
        }
        moon_1/sky02.wl =
        {
          w = "xatrix"
        }
        moon_1/wall02.wl =
        {
          w = "xatrix"
        }
        moon_1/wall04.wl =
        {
          w = "xatrix"
        }
        moon_1/wall08a.wl =
        {
          w = "xatrix"
        }
        moon_1/wall11.wl =
        {
          w = "xatrix"
        }
        moon_1/wall17a.wl =
        {
          w = "xatrix"
        }
        moon_1/wall41.wl =
        {
          w = "xatrix"
        }
        moon_1/wall44.wl =
        {
          w = "xatrix"
        }
        moon_1/wall53.wl =
        {
          w = "xatrix"
        }
        moon_1/wall56.wl =
        {
          w = "xatrix"
        }
        moon_1/wall57.wl =
        {
          w = "xatrix"
        }
        moon_1/wall58.wl =
        {
          w = "xatrix"
        }
        moon_1/wall60.wl =
        {
          w = "xatrix"
        }
        moon_1/wall64.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_d1.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_m3.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_m9.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms12.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms13.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms14.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms15.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms16.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms17.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms18.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms20.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms22.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms23.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms24.wl =
        {
          w = "xatrix"
        }
        moon_1/wall_ms3.wl =
        {
          w = "xatrix"
        }
        moon_1/xmine01.wl =
        {
          w = "xatrix"
        }
        moon_1/xmine03.wl =
        {
          w = "xatrix"
        }
        moon_1/xmine10.wl =
        {
          w = "xatrix"
        }
        moon_1/xmine11.wl =
        {
          w = "xatrix"
        }
        moon_1/xmine14.wl =
        {
          w = "xatrix"
        }
        moon_1/xmoon_1.wl =
        {
          w = "xatrix"
        }
        moon_1/xsign_1.wl =
        {
          w = "xatrix"
        }
        moon_1/xsign_2.wl =
        {
          w = "xatrix"
        }
      }
      Ship_1.txlist =
      {
        ship_1/+0compx_1.wl =
        {
          w = "xatrix"
        }
        ship_1/+0xsign1.wl =
        {
          w = "xatrix"
        }
        ship_1/+1compx_1.wl =
        {
          w = "xatrix"
        }
        ship_1/+1xsign1.wl =
        {
          w = "xatrix"
        }
        ship_1/+2compx_1.wl =
        {
          w = "xatrix"
        }
        ship_1/+2xsign1.wl =
        {
          w = "xatrix"
        }
        ship_1/+3compx_1.wl =
        {
          w = "xatrix"
        }
        ship_1/+3xsign1.wl =
        {
          w = "xatrix"
        }
        ship_1/+4compx_1.wl =
        {
          w = "xatrix"
        }
        ship_1/1xcgrate1.wl =
        {
          w = "xatrix"
        }
        ship_1/4xcomp1.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_12.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_25.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_27.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_53.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_61.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_64.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_66.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_67.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_68.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_70.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_71.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_82.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_84.wl =
        {
          w = "xatrix"
        }
        ship_1/ship_85.wl =
        {
          w = "xatrix"
        }
        ship_1/sym6_4.wl =
        {
          w = "xatrix"
        }
        ship_1/x1hvy_dr4_2.wl =
        {
          w = "xatrix"
        }
        ship_1/x1metal3_4.wl =
        {
          w = "xatrix"
        }
        ship_1/x1metal5_6.wl =
        {
          w = "xatrix"
        }
        ship_1/x1metal8_4.wl =
        {
          w = "xatrix"
        }
        ship_1/x1metal8_5.wl =
        {
          w = "xatrix"
        }
        ship_1/x2hvy_dr4_2.wl =
        {
          w = "xatrix"
        }
        ship_1/x3hvy_dr4_2.wl =
        {
          w = "xatrix"
        }
        ship_1/x3metal5_6.wl =
        {
          w = "xatrix"
        }
        ship_1/x3metal9_1.wl =
        {
          w = "xatrix"
        }
        ship_1/x4metal9_1.wl =
        {
          w = "xatrix"
        }
        ship_1/x5metal9_1.wl =
        {
          w = "xatrix"
        }
        ship_1/xcomp10_1.wl =
        {
          w = "xatrix"
        }
        ship_1/xcomp2_1.wl =
        {
          w = "xatrix"
        }
        ship_1/xcomp2_2.wl =
        {
          w = "xatrix"
        }
        ship_1/xcomp2_4.wl =
        {
          w = "xatrix"
        }
        ship_1/xcomp5_1.wl =
        {
          w = "xatrix"
        }
        ship_1/xcomp7_1.wl =
        {
          w = "xatrix"
        }
        ship_1/xcomp8_1.wl =
        {
          w = "xatrix"
        }
        ship_1/xcomp9_1.wl =
        {
          w = "xatrix"
        }
        ship_1/xhvy_dr4_2.wl =
        {
          w = "xatrix"
        }
        ship_1/xlite_1.wl =
        {
          w = "xatrix"
        }
        ship_1/xlite_3.wl =
        {
          w = "xatrix"
        }
        ship_1/xlite_b1.wl =
        {
          w = "xatrix"
        }
        ship_1/xmetal11_4.wl =
        {
          w = "xatrix"
        }
        ship_1/xmetal2_3.wl =
        {
          w = "xatrix"
        }
        ship_1/xmetal5_6.wl =
        {
          w = "xatrix"
        }
        ship_1/xmetal8_4.wl =
        {
          w = "xatrix"
        }
        ship_1/xmetal8_5.wl =
        {
          w = "xatrix"
        }
        ship_1/xmetal9_1.wl =
        {
          w = "xatrix"
        }
        ship_1/xmetals_1a.wl =
        {
          w = "xatrix"
        }
        ship_1/xmetals_4.wl =
        {
          w = "xatrix"
        }
        ship_1/xsign01.wl =
        {
          w = "xatrix"
        }
        ship_1/xsign02.wl =
        {
          w = "xatrix"
        }
        ship_1/xsign03.wl =
        {
          w = "xatrix"
        }
      }
      e1u1.txlist =
      {
        e1u1/baselt_1.wl =
        {
          w = "xatrix"
        }
        e1u1/baslt3_2.wl =
        {
          w = "xatrix"
        }
        e1u1/baslt3_3.wl =
        {
          w = "xatrix"
        }
        e1u1/baslt3_4.wl =
        {
          w = "xatrix"
        }
        e1u1/baslt3_5.wl =
        {
          w = "xatrix"
        }
        e1u1/c_met10_1.wl =
        {
          w = "xatrix"
        }
        e1u1/caution1_1.wl =
        {
          w = "xatrix"
        }
        e1u1/caution1_3.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_13.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_14.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_16.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_17.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_18.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_21.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_22.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_24.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_25.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_26.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_27.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_5.wl =
        {
          w = "xatrix"
        }
        e1u1/ceil1_6.wl =
        {
          w = "xatrix"
        }
        e1u1/color2_1.wl =
        {
          w = "xatrix"
        }
        e1u1/color2_3.wl =
        {
          w = "xatrix"
        }
        e1u1/color2_5.wl =
        {
          w = "xatrix"
        }
        e1u1/colorb1_4.wl =
        {
          w = "xatrix"
        }
        e1u1/comp1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/comp1_3.wl =
        {
          w = "xatrix"
        }
        e1u1/comp2_4.wl =
        {
          w = "xatrix"
        }
        e1u1/comp3_5.wl =
        {
          w = "xatrix"
        }
        e1u1/comp4_3.wl =
        {
          w = "xatrix"
        }
        e1u1/comp7_2.wl =
        {
          w = "xatrix"
        }
        e1u1/comp7_3.wl =
        {
          w = "xatrix"
        }
        e1u1/compu1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/dr03_1.wl =
        {
          w = "xatrix"
        }
        e1u1/dr03_2.wl =
        {
          w = "xatrix"
        }
        e1u1/drsew1_1.wl =
        {
          w = "xatrix"
        }
        e1u1/drsew2_1.wl =
        {
          w = "xatrix"
        }
        e1u1/drsew2_2.wl =
        {
          w = "xatrix"
        }
        e1u1/floor1_1.wl =
        {
          w = "xatrix"
        }
        e1u1/floor1_4.wl =
        {
          w = "xatrix"
        }
        e1u1/florr1_1.wl =
        {
          w = "xatrix"
        }
        e1u1/florr1_3.wl =
        {
          w = "xatrix"
        }
        e1u1/florr1_4.wl =
        {
          w = "xatrix"
        }
        e1u1/ggrat12_1.wl =
        {
          w = "xatrix"
        }
        e1u1/ggrat2_4.wl =
        {
          w = "xatrix"
        }
        e1u1/ggrat2_6.wl =
        {
          w = "xatrix"
        }
        e1u1/ggrate10_1.wl =
        {
          w = "xatrix"
        }
        e1u1/ggrate7_2.wl =
        {
          w = "xatrix"
        }
        e1u1/ggrate8_2.wl =
        {
          w = "xatrix"
        }
        e1u1/ggrate9_1.wl =
        {
          w = "xatrix"
        }
        e1u1/grate1_8.wl =
        {
          w = "xatrix"
        }
        e1u1/grey1_1.wl =
        {
          w = "xatrix"
        }
        e1u1/grey1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/grnx2_4.wl =
        {
          w = "xatrix"
        }
        e1u1/hbut1_1.wl =
        {
          w = "xatrix"
        }
        e1u1/hbut1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/kcsign2.wl =
        {
          w = "xatrix"
        }
        e1u1/keysign1.wl =
        {
          w = "xatrix"
        }
        e1u1/metal13_1.wl =
        {
          w = "xatrix"
        }
        e1u1/metal1_6.wl =
        {
          w = "xatrix"
        }
        e1u1/metal4_2.wl =
        {
          w = "xatrix"
        }
        e1u1/p_flr_03.wl =
        {
          w = "xatrix"
        }
        e1u1/p_flr_05.wl =
        {
          w = "xatrix"
        }
        e1u1/p_flr_12.wl =
        {
          w = "xatrix"
        }
        e1u1/plite1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/reds1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/reds1_4.wl =
        {
          w = "xatrix"
        }
        e1u1/sewer2.wl =
        {
          w = "xatrix"
        }
        e1u1/sign1_4.wl =
        {
          w = "xatrix"
        }
        e1u1/sky2.wl =
        {
          w = "xatrix"
        }
        e1u1/stairs1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/stairs1_3.wl =
        {
          w = "xatrix"
        }
        e1u1/support1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/tlava1_4.wl =
        {
          w = "xatrix"
        }
        e1u1/twall2_1.wl =
        {
          w = "xatrix"
        }
        e1u1/water1_3.wl =
        {
          w = "xatrix"
        }
        e1u1/water5.wl =
        {
          w = "xatrix"
        }
        e1u1/water6.wl =
        {
          w = "xatrix"
        }
        e1u1/wbasic1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/wbasic1_8.wl =
        {
          w = "xatrix"
        }
        e1u1/wincomp3_1.wl =
        {
          w = "xatrix"
        }
        e1u1/wmtal2_1.wl =
        {
          w = "xatrix"
        }
        e1u1/wmtal4_4.wl =
        {
          w = "xatrix"
        }
        e1u1/wmtal5_1.wl =
        {
          w = "xatrix"
        }
        e1u1/wmtal6_2.wl =
        {
          w = "xatrix"
        }
        e1u1/wmtal9_2.wl =
        {
          w = "xatrix"
        }
        e1u1/wplat1_1.wl =
        {
          w = "xatrix"
        }
        e1u1/wplat1_3.wl =
        {
          w = "xatrix"
        }
        e1u1/wpllar1_1.wl =
        {
          w = "xatrix"
        }
        e1u1/wpllar1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/wsupprt1_2.wl =
        {
          w = "xatrix"
        }
        e1u1/wsupprt1_4.wl =
        {
          w = "xatrix"
        }
        e1u1/wsupprt1_8.wl =
        {
          w = "xatrix"
        }
        e1u1/wtroof4_7.wl =
        {
          w = "xatrix"
        }
        e1u1/yellow1_3.wl =
        {
          w = "xatrix"
        }
      }
      e1u2.txlist =
      {
        e1u2/bluekeypad.wl =
        {
          w = "xatrix"
        }
        e1u2/box4_5.wl =
        {
          w = "xatrix"
        }
        e1u2/box4_6.wl =
        {
          w = "xatrix"
        }
        e1u2/btactmach.wl =
        {
          w = "xatrix"
        }
        e1u2/ceil1_13.wl =
        {
          w = "xatrix"
        }
        e1u2/ceil1_2.wl =
        {
          w = "xatrix"
        }
        e1u2/ceil1_21.wl =
        {
          w = "xatrix"
        }
        e1u2/ceil1_26.wl =
        {
          w = "xatrix"
        }
        e1u2/ceil1_28.wl =
        {
          w = "xatrix"
        }
        e1u2/ceil1_5.wl =
        {
          w = "xatrix"
        }
        e1u2/ceil1_7.wl =
        {
          w = "xatrix"
        }
        e1u2/clip_mon.wl =
        {
          w = "xatrix"
        }
        e1u2/comp1_5.wl =
        {
          w = "xatrix"
        }
        e1u2/comp1_6.wl =
        {
          w = "xatrix"
        }
        e1u2/comp2_2.wl =
        {
          w = "xatrix"
        }
        e1u2/crate1_2.wl =
        {
          w = "xatrix"
        }
        e1u2/hbut1_1.wl =
        {
          w = "xatrix"
        }
        e1u2/hbut1_2.wl =
        {
          w = "xatrix"
        }
        e1u2/hvydoor1_1.wl =
        {
          w = "xatrix"
        }
        e1u2/keysign2.wl =
        {
          w = "xatrix"
        }
        e1u2/light2_6.wl =
        {
          w = "xatrix"
        }
        e1u2/metal10_2.wl =
        {
          w = "xatrix"
        }
        e1u2/metal11_1.wl =
        {
          w = "xatrix"
        }
        e1u2/metal11_5.wl =
        {
          w = "xatrix"
        }
        e1u2/metal2_3.wl =
        {
          w = "xatrix"
        }
        e1u2/metal4_1.wl =
        {
          w = "xatrix"
        }
        e1u2/metal4_3.wl =
        {
          w = "xatrix"
        }
        e1u2/metal9_5.wl =
        {
          w = "xatrix"
        }
        e1u2/metals_2.wl =
        {
          w = "xatrix"
        }
        e1u2/metals_4.wl =
        {
          w = "xatrix"
        }
        e1u2/redfield.wl =
        {
          w = "xatrix"
        }
        e1u2/skip.wl =
        {
          w = "xatrix"
        }
        e1u2/stripe2_8.wl =
        {
          w = "xatrix"
        }
        e1u2/support1_11.wl =
        {
          w = "xatrix"
        }
        e1u2/support1_4.wl =
        {
          w = "xatrix"
        }
        e1u2/support1_6.wl =
        {
          w = "xatrix"
        }
        e1u2/sym6_1.wl =
        {
          w = "xatrix"
        }
        e1u2/sym6_4.wl =
        {
          w = "xatrix"
        }
        e1u2/symbol1_1.wl =
        {
          w = "xatrix"
        }
        e1u2/symbol1_3.wl =
        {
          w = "xatrix"
        }
        e1u2/troof4_8.wl =
        {
          w = "xatrix"
        }
        e1u2/water1.wl =
        {
          w = "xatrix"
        }
        e1u2/water7.wl =
        {
          w = "xatrix"
        }
        e1u2/window5_1.wl =
        {
          w = "xatrix"
        }
        e1u2/wsupport1_5.wl =
        {
          w = "xatrix"
        }
        e1u2/wsupport1_6.wl =
        {
          w = "xatrix"
        }
        e1u2/yellow1_2.wl =
        {
          w = "xatrix"
        }
      }
      e1u3.txlist =
      {
        e1u3/caution1_1.wl =
        {
          w = "xatrix"
        }
        e1u3/fmet2_1.wl =
        {
          w = "xatrix"
        }
        e1u3/fmet3_3.wl =
        {
          w = "xatrix"
        }
        e1u3/grnmt1_1.wl =
        {
          w = "xatrix"
        }
        e1u3/grnx1_1.wl =
        {
          w = "xatrix"
        }
        e1u3/metal2_1.wl =
        {
          w = "xatrix"
        }
        e1u3/metal3_4.wl =
        {
          w = "xatrix"
        }
        e1u3/refdr3_4.wl =
        {
          w = "xatrix"
        }
        e1u3/reflt3_10.wl =
        {
          w = "xatrix"
        }
        e1u3/reflt3_2.wl =
        {
          w = "xatrix"
        }
        e1u3/shiny1_4.wl =
        {
          w = "xatrix"
        }
        e1u3/wbox3_3.wl =
        {
          w = "xatrix"
        }
        e1u3/wbox3_6.wl =
        {
          w = "xatrix"
        }
        e1u3/wplat1_3.wl =
        {
          w = "xatrix"
        }
        e1u3/wstfl2_7.wl =
        {
          w = "xatrix"
        }
      }
      e1u4.txlist =
      {
        e1u4/airduc1_3.wl =
        {
          w = "xatrix"
        }
        e1u4/caution1_1.wl =
        {
          w = "xatrix"
        }
      }
      e2u1.txlist =
      {
        e2u1/baselt_1.wl =
        {
          w = "xatrix"
        }
        e2u1/baselt_c.wl =
        {
          w = "xatrix"
        }
        e2u1/belt2_5.wl =
        {
          w = "xatrix"
        }
        e2u1/blbk1_1.wl =
        {
          w = "xatrix"
        }
        e2u1/box3_5.wl =
        {
          w = "xatrix"
        }
        e2u1/box3_6.wl =
        {
          w = "xatrix"
        }
        e2u1/ceil1_18.wl =
        {
          w = "xatrix"
        }
        e2u1/ceil1_21.wl =
        {
          w = "xatrix"
        }
        e2u1/ceil1_27.wl =
        {
          w = "xatrix"
        }
        e2u1/ceil1_4.wl =
        {
          w = "xatrix"
        }
        e2u1/ceil1_7.wl =
        {
          w = "xatrix"
        }
        e2u1/dump1_2.wl =
        {
          w = "xatrix"
        }
        e2u1/dump3_1.wl =
        {
          w = "xatrix"
        }
        e2u1/dump3_2.wl =
        {
          w = "xatrix"
        }
        e2u1/grate1_4.wl =
        {
          w = "xatrix"
        }
        e2u1/grate1_5.wl =
        {
          w = "xatrix"
        }
        e2u1/grnx2_4.wl =
        {
          w = "xatrix"
        }
        e2u1/grnx2_8.wl =
        {
          w = "xatrix"
        }
        e2u1/metal8_2.wl =
        {
          w = "xatrix"
        }
        e2u1/mine14_2.wl =
        {
          w = "xatrix"
        }
        e2u1/mont1_3.wl =
        {
          w = "xatrix"
        }
        e2u1/mont1_4.wl =
        {
          w = "xatrix"
        }
        e2u1/pilr02_1.wl =
        {
          w = "xatrix"
        }
        e2u1/pow3_2.wl =
        {
          w = "xatrix"
        }
        e2u1/reflt1_13.wl =
        {
          w = "xatrix"
        }
        e2u1/reflt1_3.wl =
        {
          w = "xatrix"
        }
        e2u1/tunl1_4.wl =
        {
          w = "xatrix"
        }
        e2u1/yellow1_2.wl =
        {
          w = "xatrix"
        }
        e2u1/yellow1_4.wl =
        {
          w = "xatrix"
        }
      }
      e2u2.txlist =
      {
        e2u2/+0btshoot1.wl =
        {
          w = "xatrix"
        }
        e2u2/+0btshoot2.wl =
        {
          w = "xatrix"
        }
        e2u2/+abtshoot2.wl =
        {
          w = "xatrix"
        }
        e2u2/+abtshoot3.wl =
        {
          w = "xatrix"
        }
        e2u2/brwater.wl =
        {
          w = "xatrix"
        }
        e2u2/clip_mon.wl =
        {
          w = "xatrix"
        }
        e2u2/comp8_1.wl =
        {
          w = "xatrix"
        }
        e2u2/crush1_2.wl =
        {
          w = "xatrix"
        }
        e2u2/florr2_6.wl =
        {
          w = "xatrix"
        }
        e2u2/mach1_4.wl =
        {
          w = "xatrix"
        }
        e2u2/metal30_2.wl =
        {
          w = "xatrix"
        }
        e2u2/metal31_1.wl =
        {
          w = "xatrix"
        }
        e2u2/metal33_2.wl =
        {
          w = "xatrix"
        }
        e2u2/minedr1.wl =
        {
          w = "xatrix"
        }
        e2u2/notch2_1.wl =
        {
          w = "xatrix"
        }
        e2u2/pipe7_3.wl =
        {
          w = "xatrix"
        }
        e2u2/rlight1_1.wl =
        {
          w = "xatrix"
        }
      }
      e2u3.txlist =
      {
        e2u3/+0btshoot1.wl =
        {
          w = "xatrix"
        }
        e2u3/+0btshoot2.wl =
        {
          w = "xatrix"
        }
        e2u3/+abtshoot2.wl =
        {
          w = "xatrix"
        }
        e2u3/+abtshoot3.wl =
        {
          w = "xatrix"
        }
        e2u3/baselt_1.wl =
        {
          w = "xatrix"
        }
        e2u3/baselt_2.wl =
        {
          w = "xatrix"
        }
        e2u3/baselt_4.wl =
        {
          w = "xatrix"
        }
        e2u3/belt1_2.wl =
        {
          w = "xatrix"
        }
        e2u3/blum10_2.wl =
        {
          w = "xatrix"
        }
        e2u3/blum13_2.wl =
        {
          w = "xatrix"
        }
        e2u3/blum14_1.wl =
        {
          w = "xatrix"
        }
        e2u3/blum14_2.wl =
        {
          w = "xatrix"
        }
        e2u3/blum15_2.wl =
        {
          w = "xatrix"
        }
        e2u3/blume7_1.wl =
        {
          w = "xatrix"
        }
        e2u3/bmetal13_1.wl =
        {
          w = "xatrix"
        }
        e2u3/brlava.wl =
        {
          w = "xatrix"
        }
        e2u3/brwater.wl =
        {
          w = "xatrix"
        }
        e2u3/btactmach.wl =
        {
          w = "xatrix"
        }
        e2u3/ceil1_14.wl =
        {
          w = "xatrix"
        }
        e2u3/ceil1_18.wl =
        {
          w = "xatrix"
        }
        e2u3/ceil1_21.wl =
        {
          w = "xatrix"
        }
        e2u3/ceil1_25.wl =
        {
          w = "xatrix"
        }
        e2u3/ceil1_27.wl =
        {
          w = "xatrix"
        }
        e2u3/ceil1_4.wl =
        {
          w = "xatrix"
        }
        e2u3/clip_mon.wl =
        {
          w = "xatrix"
        }
        e2u3/core2_1.wl =
        {
          w = "xatrix"
        }
        e2u3/doorbot.wl =
        {
          w = "xatrix"
        }
        e2u3/floor2_4.wl =
        {
          w = "xatrix"
        }
        e2u3/floor3_2.wl =
        {
          w = "xatrix"
        }
        e2u3/florr1_3.wl =
        {
          w = "xatrix"
        }
        e2u3/florr2_4.wl =
        {
          w = "xatrix"
        }
        e2u3/florr2_6.wl =
        {
          w = "xatrix"
        }
        e2u3/gpip2_1.wl =
        {
          w = "xatrix"
        }
        e2u3/grass1_2.wl =
        {
          w = "xatrix"
        }
        e2u3/grass1_7.wl =
        {
          w = "xatrix"
        }
        e2u3/grate1_1.wl =
        {
          w = "xatrix"
        }
        e2u3/grate1_3.wl =
        {
          w = "xatrix"
        }
        e2u3/grate1_4.wl =
        {
          w = "xatrix"
        }
        e2u3/grate1_5.wl =
        {
          w = "xatrix"
        }
        e2u3/grate1_7.wl =
        {
          w = "xatrix"
        }
        e2u3/grate2_1.wl =
        {
          w = "xatrix"
        }
        e2u3/grate2_2.wl =
        {
          w = "xatrix"
        }
        e2u3/grate2_3.wl =
        {
          w = "xatrix"
        }
        e2u3/grate2_4.wl =
        {
          w = "xatrix"
        }
        e2u3/grate2_5.wl =
        {
          w = "xatrix"
        }
        e2u3/grate2_6.wl =
        {
          w = "xatrix"
        }
        e2u3/grate2_7.wl =
        {
          w = "xatrix"
        }
        e2u3/green0_3.wl =
        {
          w = "xatrix"
        }
        e2u3/green2_4.wl =
        {
          w = "xatrix"
        }
        e2u3/grnx2_1.wl =
        {
          w = "xatrix"
        }
        e2u3/grnx2_4.wl =
        {
          w = "xatrix"
        }
        e2u3/grnx2_6.wl =
        {
          w = "xatrix"
        }
        e2u3/grnx2_7.wl =
        {
          w = "xatrix"
        }
        e2u3/lead2_2.wl =
        {
          w = "xatrix"
        }
        e2u3/metal14_2.wl =
        {
          w = "xatrix"
        }
        e2u3/metal15_1.wl =
        {
          w = "xatrix"
        }
        e2u3/metal17_1.wl =
        {
          w = "xatrix"
        }
        e2u3/metal17_2.wl =
        {
          w = "xatrix"
        }
        e2u3/metal24_1.wl =
        {
          w = "xatrix"
        }
        e2u3/metal24_3.wl =
        {
          w = "xatrix"
        }
        e2u3/metal3_2.wl =
        {
          w = "xatrix"
        }
        e2u3/metal9_2.wl =
        {
          w = "xatrix"
        }
        e2u3/metl10_1.wl =
        {
          w = "xatrix"
        }
        e2u3/metl12_1.wl =
        {
          w = "xatrix"
        }
        e2u3/pow12_1.wl =
        {
          w = "xatrix"
        }
        e2u3/prwlt1_3.wl =
        {
          w = "xatrix"
        }
        e2u3/redp1_1.wl =
        {
          w = "xatrix"
        }
        e2u3/rmetal6_2.wl =
        {
          w = "xatrix"
        }
        e2u3/rmetal6_4.wl =
        {
          w = "xatrix"
        }
        e2u3/rmtl37_3.wl =
        {
          w = "xatrix"
        }
        e2u3/rock1_2.wl =
        {
          w = "xatrix"
        }
        e2u3/sew2_3.wl =
        {
          w = "xatrix"
        }
        e2u3/skip.wl =
        {
          w = "xatrix"
        }
        e2u3/sky2.wl =
        {
          w = "xatrix"
        }
        e2u3/slip.wl =
        {
          w = "xatrix"
        }
        e2u3/star1_2.wl =
        {
          w = "xatrix"
        }
        e2u3/star1_3.wl =
        {
          w = "xatrix"
        }
        e2u3/support1_2.wl =
        {
          w = "xatrix"
        }
        e2u3/water6.wl =
        {
          w = "xatrix"
        }
        e2u3/wires2_2.wl =
        {
          w = "xatrix"
        }
        e2u3/wplat1_1.wl =
        {
          w = "xatrix"
        }
        e2u3/wstlt1_6.wl =
        {
          w = "xatrix"
        }
        e2u3/wstlt1_7.wl =
        {
          w = "xatrix"
        }
        e2u3/yellow1_2.wl =
        {
          w = "xatrix"
        }
      }
      e3u1.txlist =
      {
        e3u1/caution1_1.wl =
        {
          w = "xatrix"
        }
        e3u1/drag1_4.wl =
        {
          w = "xatrix"
        }
        e3u1/drleft2.wl =
        {
          w = "xatrix"
        }
        e3u1/floor2_5.wl =
        {
          w = "xatrix"
        }
        e3u1/florr1_2.wl =
        {
          w = "xatrix"
        }
        e3u1/palmet13_2.wl =
        {
          w = "xatrix"
        }
        e3u1/palmet13_3.wl =
        {
          w = "xatrix"
        }
        e3u1/palmet2_1.wl =
        {
          w = "xatrix"
        }
        e3u1/palmet4_1.wl =
        {
          w = "xatrix"
        }
        e3u1/palmet5_1.wl =
        {
          w = "xatrix"
        }
        e3u1/palsup2_2.wl =
        {
          w = "xatrix"
        }
        e3u1/prwlt1_1.wl =
        {
          w = "xatrix"
        }
        e3u1/prwlt1_3.wl =
        {
          w = "xatrix"
        }
        e3u1/pthnm1_3.wl =
        {
          w = "xatrix"
        }
      }
      e3u2.txlist =
      {
        e3u2/airduc1_1.wl =
        {
          w = "xatrix"
        }
        e3u2/bed01_1.wl =
        {
          w = "xatrix"
        }
        e3u2/bed02_1.wl =
        {
          w = "xatrix"
        }
        e3u2/bed02_2.wl =
        {
          w = "xatrix"
        }
        e3u2/bed02_3.wl =
        {
          w = "xatrix"
        }
        e3u2/bed3_1.wl =
        {
          w = "xatrix"
        }
        e3u2/comp9_1.wl =
        {
          w = "xatrix"
        }
        e3u2/comp9_3.wl =
        {
          w = "xatrix"
        }
        e3u2/fmet2_1.wl =
        {
          w = "xatrix"
        }
      }
      e3u3.txlist =
      {
        e3u3/+0btshoot1.wl =
        {
          w = "xatrix"
        }
        e3u3/+0btshoot2.wl =
        {
          w = "xatrix"
        }
        e3u3/+abtshoot2.wl =
        {
          w = "xatrix"
        }
        e3u3/+abtshoot3.wl =
        {
          w = "xatrix"
        }
        e3u3/alarm0.wl =
        {
          w = "xatrix"
        }
        e3u3/alarm1.wl =
        {
          w = "xatrix"
        }
        e3u3/alarm2.wl =
        {
          w = "xatrix"
        }
        e3u3/alarm3.wl =
        {
          w = "xatrix"
        }
        e3u3/bluekeypad.wl =
        {
          w = "xatrix"
        }
        e3u3/clip_mon.wl =
        {
          w = "xatrix"
        }
        e3u3/color1_1.wl =
        {
          w = "xatrix"
        }
        e3u3/metal16_1.wl =
        {
          w = "xatrix"
        }
        e3u3/support1_11.wl =
        {
          w = "xatrix"
        }
        e3u3/windowc1_1.wl =
        {
          w = "xatrix"
        }
      }
      pak0.pak.qtxfolder =
      {
        dark_1.txlist =
        {
          dark_1/+0endsign12a.wl =
          {
            w = "xatrix"
          }
          dark_1/+0endsign13.wl =
          {
            w = "xatrix"
          }
          dark_1/+0endsign14.wl =
          {
            w = "xatrix"
          }
          dark_1/+0endsign15.wl =
          {
            w = "xatrix"
          }
          dark_1/+0endsign16.wl =
          {
            w = "xatrix"
          }
          dark_1/+0endsign18.wl =
          {
            w = "xatrix"
          }
          dark_1/+0endsign19.wl =
          {
            w = "xatrix"
          }
          dark_1/+1endsign12a.wl =
          {
            w = "xatrix"
          }
          dark_1/+1endsign13.wl =
          {
            w = "xatrix"
          }
          dark_1/+1endsign14.wl =
          {
            w = "xatrix"
          }
          dark_1/+1endsign15.wl =
          {
            w = "xatrix"
          }
          dark_1/+1endsign16.wl =
          {
            w = "xatrix"
          }
          dark_1/+1endsign18.wl =
          {
            w = "xatrix"
          }
          dark_1/+1endsign19.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_100.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_101.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_102.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_104.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_15.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_16.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_18.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_19.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_20.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_23.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_24.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_25.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_26.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_27.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_35.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_36.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_38.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_39.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_40.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_41.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_42.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_43.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_44.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_45.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_47.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_48.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_50.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_51.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_52.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_59.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_60.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_61.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_65.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_66.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_68.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_70.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_81.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_83.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_84.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_85.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_86.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_91.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_93.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_94.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_97.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_98.wl =
          {
            w = "xatrix"
          }
          dark_1/0text_99.wl =
          {
            w = "xatrix"
          }
          dark_1/0xruin_70.wl =
          {
            w = "xatrix"
          }
          dark_1/0xruin_73.wl =
          {
            w = "xatrix"
          }
          dark_1/endsign13.wl =
          {
            w = "xatrix"
          }
          dark_1/metla_1.wl =
          {
            w = "xatrix"
          }
          dark_1/metlb_1.wl =
          {
            w = "xatrix"
          }
          dark_1/rust_d1.wl =
          {
            w = "xatrix"
          }
          dark_1/rust_d2.wl =
          {
            w = "xatrix"
          }
          dark_1/rust_p.wl =
          {
            w = "xatrix"
          }
          dark_1/sew_dr1.wl =
          {
            w = "xatrix"
          }
          dark_1/train_dor6.wl =
          {
            w = "xatrix"
          }
          dark_1/train_sd.wl =
          {
            w = "xatrix"
          }
          dark_1/train_sd2.wl =
          {
            w = "xatrix"
          }
          dark_1/train_sd4.wl =
          {
            w = "xatrix"
          }
          dark_1/wall70.wl =
          {
            w = "xatrix"
          }
          dark_1/wall71.wl =
          {
            w = "xatrix"
          }
          dark_1/wall72.wl =
          {
            w = "xatrix"
          }
          dark_1/wall73.wl =
          {
            w = "xatrix"
          }
          dark_1/wall74.wl =
          {
            w = "xatrix"
          }
          dark_1/water1.wl =
          {
            w = "xatrix"
          }
          dark_1/xbigbox.wl =
          {
            w = "xatrix"
          }
          dark_1/xpipes1_1.wl =
          {
            w = "xatrix"
          }
          dark_1/xpod1.wl =
          {
            w = "xatrix"
          }
          dark_1/xpod2.wl =
          {
            w = "xatrix"
          }
          dark_1/x_baslt1.wl =
          {
            w = "xatrix"
          }
          dark_1/x_com1_1.wl =
          {
            w = "xatrix"
          }
          dark_1/x_com2_1.wl =
          {
            w = "xatrix"
          }
          dark_1/x_com3_1.wl =
          {
            w = "xatrix"
          }
          dark_1/x_door1.wl =
          {
            w = "xatrix"
          }
          dark_1/x_grate2.wl =
          {
            w = "xatrix"
          }
        }
        e1u1.txlist =
        {
          e1u1/baselt_1.wl =
          {
            w = "xatrix"
          }
          e1u1/baslt3_2.wl =
          {
            w = "xatrix"
          }
          e1u1/baslt3_3.wl =
          {
            w = "xatrix"
          }
          e1u1/baslt3_4.wl =
          {
            w = "xatrix"
          }
          e1u1/baslt3_5.wl =
          {
            w = "xatrix"
          }
          e1u1/caution1_1.wl =
          {
            w = "xatrix"
          }
          e1u1/caution1_3.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_13.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_14.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_16.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_17.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_18.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_21.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_22.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_24.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_25.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_26.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_27.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_5.wl =
          {
            w = "xatrix"
          }
          e1u1/ceil1_6.wl =
          {
            w = "xatrix"
          }
          e1u1/color2_1.wl =
          {
            w = "xatrix"
          }
          e1u1/color2_3.wl =
          {
            w = "xatrix"
          }
          e1u1/color2_5.wl =
          {
            w = "xatrix"
          }
          e1u1/colorb1_4.wl =
          {
            w = "xatrix"
          }
          e1u1/comp1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/comp1_3.wl =
          {
            w = "xatrix"
          }
          e1u1/comp2_4.wl =
          {
            w = "xatrix"
          }
          e1u1/comp3_5.wl =
          {
            w = "xatrix"
          }
          e1u1/comp4_3.wl =
          {
            w = "xatrix"
          }
          e1u1/comp7_2.wl =
          {
            w = "xatrix"
          }
          e1u1/comp7_3.wl =
          {
            w = "xatrix"
          }
          e1u1/compu1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/c_met10_1.wl =
          {
            w = "xatrix"
          }
          e1u1/dr03_1.wl =
          {
            w = "xatrix"
          }
          e1u1/dr03_2.wl =
          {
            w = "xatrix"
          }
          e1u1/drsew1_1.wl =
          {
            w = "xatrix"
          }
          e1u1/drsew2_1.wl =
          {
            w = "xatrix"
          }
          e1u1/drsew2_2.wl =
          {
            w = "xatrix"
          }
          e1u1/floor1_1.wl =
          {
            w = "xatrix"
          }
          e1u1/floor1_4.wl =
          {
            w = "xatrix"
          }
          e1u1/florr1_1.wl =
          {
            w = "xatrix"
          }
          e1u1/florr1_3.wl =
          {
            w = "xatrix"
          }
          e1u1/florr1_4.wl =
          {
            w = "xatrix"
          }
          e1u1/ggrat12_1.wl =
          {
            w = "xatrix"
          }
          e1u1/ggrat2_4.wl =
          {
            w = "xatrix"
          }
          e1u1/ggrat2_6.wl =
          {
            w = "xatrix"
          }
          e1u1/ggrate10_1.wl =
          {
            w = "xatrix"
          }
          e1u1/ggrate7_2.wl =
          {
            w = "xatrix"
          }
          e1u1/ggrate8_2.wl =
          {
            w = "xatrix"
          }
          e1u1/ggrate9_1.wl =
          {
            w = "xatrix"
          }
          e1u1/grate1_8.wl =
          {
            w = "xatrix"
          }
          e1u1/grey1_1.wl =
          {
            w = "xatrix"
          }
          e1u1/grey1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/grnx2_4.wl =
          {
            w = "xatrix"
          }
          e1u1/hbut1_1.wl =
          {
            w = "xatrix"
          }
          e1u1/hbut1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/kcsign2.wl =
          {
            w = "xatrix"
          }
          e1u1/keysign1.wl =
          {
            w = "xatrix"
          }
          e1u1/metal13_1.wl =
          {
            w = "xatrix"
          }
          e1u1/metal1_6.wl =
          {
            w = "xatrix"
          }
          e1u1/metal4_2.wl =
          {
            w = "xatrix"
          }
          e1u1/plite1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/p_flr_03.wl =
          {
            w = "xatrix"
          }
          e1u1/p_flr_05.wl =
          {
            w = "xatrix"
          }
          e1u1/p_flr_12.wl =
          {
            w = "xatrix"
          }
          e1u1/reds1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/reds1_4.wl =
          {
            w = "xatrix"
          }
          e1u1/sewer2.wl =
          {
            w = "xatrix"
          }
          e1u1/sign1_4.wl =
          {
            w = "xatrix"
          }
          e1u1/sky2.wl =
          {
            w = "xatrix"
          }
          e1u1/stairs1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/stairs1_3.wl =
          {
            w = "xatrix"
          }
          e1u1/support1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/tlava1_4.wl =
          {
            w = "xatrix"
          }
          e1u1/twall2_1.wl =
          {
            w = "xatrix"
          }
          e1u1/water1_3.wl =
          {
            w = "xatrix"
          }
          e1u1/water5.wl =
          {
            w = "xatrix"
          }
          e1u1/water6.wl =
          {
            w = "xatrix"
          }
          e1u1/wbasic1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/wbasic1_8.wl =
          {
            w = "xatrix"
          }
          e1u1/wincomp3_1.wl =
          {
            w = "xatrix"
          }
          e1u1/wmtal2_1.wl =
          {
            w = "xatrix"
          }
          e1u1/wmtal4_4.wl =
          {
            w = "xatrix"
          }
          e1u1/wmtal5_1.wl =
          {
            w = "xatrix"
          }
          e1u1/wmtal6_2.wl =
          {
            w = "xatrix"
          }
          e1u1/wmtal9_2.wl =
          {
            w = "xatrix"
          }
          e1u1/wplat1_1.wl =
          {
            w = "xatrix"
          }
          e1u1/wplat1_3.wl =
          {
            w = "xatrix"
          }
          e1u1/wpllar1_1.wl =
          {
            w = "xatrix"
          }
          e1u1/wpllar1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/wsupprt1_2.wl =
          {
            w = "xatrix"
          }
          e1u1/wsupprt1_4.wl =
          {
            w = "xatrix"
          }
          e1u1/wsupprt1_8.wl =
          {
            w = "xatrix"
          }
          e1u1/wtroof4_7.wl =
          {
            w = "xatrix"
          }
          e1u1/yellow1_3.wl =
          {
            w = "xatrix"
          }
        }
        e1u2.txlist =
        {
          e1u2/bluekeypad.wl =
          {
            w = "xatrix"
          }
          e1u2/box4_5.wl =
          {
            w = "xatrix"
          }
          e1u2/box4_6.wl =
          {
            w = "xatrix"
          }
          e1u2/btactmach.wl =
          {
            w = "xatrix"
          }
          e1u2/ceil1_13.wl =
          {
            w = "xatrix"
          }
          e1u2/ceil1_2.wl =
          {
            w = "xatrix"
          }
          e1u2/ceil1_21.wl =
          {
            w = "xatrix"
          }
          e1u2/ceil1_26.wl =
          {
            w = "xatrix"
          }
          e1u2/ceil1_28.wl =
          {
            w = "xatrix"
          }
          e1u2/ceil1_5.wl =
          {
            w = "xatrix"
          }
          e1u2/ceil1_7.wl =
          {
            w = "xatrix"
          }
          e1u2/clip_mon.wl =
          {
            w = "xatrix"
          }
          e1u2/comp1_5.wl =
          {
            w = "xatrix"
          }
          e1u2/comp1_6.wl =
          {
            w = "xatrix"
          }
          e1u2/comp2_2.wl =
          {
            w = "xatrix"
          }
          e1u2/crate1_2.wl =
          {
            w = "xatrix"
          }
          e1u2/hbut1_1.wl =
          {
            w = "xatrix"
          }
          e1u2/hbut1_2.wl =
          {
            w = "xatrix"
          }
          e1u2/hvydoor1_1.wl =
          {
            w = "xatrix"
          }
          e1u2/keysign2.wl =
          {
            w = "xatrix"
          }
          e1u2/light2_6.wl =
          {
            w = "xatrix"
          }
          e1u2/metal10_2.wl =
          {
            w = "xatrix"
          }
          e1u2/metal11_1.wl =
          {
            w = "xatrix"
          }
          e1u2/metal11_5.wl =
          {
            w = "xatrix"
          }
          e1u2/metal2_3.wl =
          {
            w = "xatrix"
          }
          e1u2/metal4_1.wl =
          {
            w = "xatrix"
          }
          e1u2/metal4_3.wl =
          {
            w = "xatrix"
          }
          e1u2/metal9_5.wl =
          {
            w = "xatrix"
          }
          e1u2/metals_2.wl =
          {
            w = "xatrix"
          }
          e1u2/metals_4.wl =
          {
            w = "xatrix"
          }
          e1u2/redfield.wl =
          {
            w = "xatrix"
          }
          e1u2/skip.wl =
          {
            w = "xatrix"
          }
          e1u2/stripe2_8.wl =
          {
            w = "xatrix"
          }
          e1u2/support1_11.wl =
          {
            w = "xatrix"
          }
          e1u2/support1_4.wl =
          {
            w = "xatrix"
          }
          e1u2/support1_6.wl =
          {
            w = "xatrix"
          }
          e1u2/sym6_1.wl =
          {
            w = "xatrix"
          }
          e1u2/sym6_4.wl =
          {
            w = "xatrix"
          }
          e1u2/symbol1_1.wl =
          {
            w = "xatrix"
          }
          e1u2/symbol1_3.wl =
          {
            w = "xatrix"
          }
          e1u2/troof4_8.wl =
          {
            w = "xatrix"
          }
          e1u2/water1.wl =
          {
            w = "xatrix"
          }
          e1u2/water7.wl =
          {
            w = "xatrix"
          }
          e1u2/window5_1.wl =
          {
            w = "xatrix"
          }
          e1u2/wsupport1_5.wl =
          {
            w = "xatrix"
          }
          e1u2/wsupport1_6.wl =
          {
            w = "xatrix"
          }
          e1u2/yellow1_2.wl =
          {
            w = "xatrix"
          }
        }
        e1u3.txlist =
        {
          e1u3/caution1_1.wl =
          {
            w = "xatrix"
          }
          e1u3/fmet2_1.wl =
          {
            w = "xatrix"
          }
          e1u3/fmet3_3.wl =
          {
            w = "xatrix"
          }
          e1u3/grnmt1_1.wl =
          {
            w = "xatrix"
          }
          e1u3/grnx1_1.wl =
          {
            w = "xatrix"
          }
          e1u3/metal2_1.wl =
          {
            w = "xatrix"
          }
          e1u3/metal3_4.wl =
          {
            w = "xatrix"
          }
          e1u3/refdr3_4.wl =
          {
            w = "xatrix"
          }
          e1u3/reflt3_10.wl =
          {
            w = "xatrix"
          }
          e1u3/reflt3_2.wl =
          {
            w = "xatrix"
          }
          e1u3/shiny1_4.wl =
          {
            w = "xatrix"
          }
          e1u3/wbox3_3.wl =
          {
            w = "xatrix"
          }
          e1u3/wbox3_6.wl =
          {
            w = "xatrix"
          }
          e1u3/wplat1_3.wl =
          {
            w = "xatrix"
          }
          e1u3/wstfl2_7.wl =
          {
            w = "xatrix"
          }
        }
        e1u4.txlist =
        {
          e1u4/airduc1_3.wl =
          {
            w = "xatrix"
          }
          e1u4/caution1_1.wl =
          {
            w = "xatrix"
          }
        }
        e2u1.txlist =
        {
          e2u1/baselt_1.wl =
          {
            w = "xatrix"
          }
          e2u1/baselt_c.wl =
          {
            w = "xatrix"
          }
          e2u1/belt2_5.wl =
          {
            w = "xatrix"
          }
          e2u1/blbk1_1.wl =
          {
            w = "xatrix"
          }
          e2u1/box3_5.wl =
          {
            w = "xatrix"
          }
          e2u1/box3_6.wl =
          {
            w = "xatrix"
          }
          e2u1/ceil1_18.wl =
          {
            w = "xatrix"
          }
          e2u1/ceil1_21.wl =
          {
            w = "xatrix"
          }
          e2u1/ceil1_27.wl =
          {
            w = "xatrix"
          }
          e2u1/ceil1_4.wl =
          {
            w = "xatrix"
          }
          e2u1/ceil1_7.wl =
          {
            w = "xatrix"
          }
          e2u1/dump1_2.wl =
          {
            w = "xatrix"
          }
          e2u1/dump3_1.wl =
          {
            w = "xatrix"
          }
          e2u1/dump3_2.wl =
          {
            w = "xatrix"
          }
          e2u1/grate1_4.wl =
          {
            w = "xatrix"
          }
          e2u1/grate1_5.wl =
          {
            w = "xatrix"
          }
          e2u1/grnx2_4.wl =
          {
            w = "xatrix"
          }
          e2u1/grnx2_8.wl =
          {
            w = "xatrix"
          }
          e2u1/metal8_2.wl =
          {
            w = "xatrix"
          }
          e2u1/mine14_2.wl =
          {
            w = "xatrix"
          }
          e2u1/mont1_3.wl =
          {
            w = "xatrix"
          }
          e2u1/mont1_4.wl =
          {
            w = "xatrix"
          }
          e2u1/pilr02_1.wl =
          {
            w = "xatrix"
          }
          e2u1/pow3_2.wl =
          {
            w = "xatrix"
          }
          e2u1/reflt1_13.wl =
          {
            w = "xatrix"
          }
          e2u1/reflt1_3.wl =
          {
            w = "xatrix"
          }
          e2u1/tunl1_4.wl =
          {
            w = "xatrix"
          }
          e2u1/yellow1_2.wl =
          {
            w = "xatrix"
          }
          e2u1/yellow1_4.wl =
          {
            w = "xatrix"
          }
        }
        e2u2.txlist =
        {
          e2u2/+0btshoot1.wl =
          {
            w = "xatrix"
          }
          e2u2/+0btshoot2.wl =
          {
            w = "xatrix"
          }
          e2u2/+abtshoot2.wl =
          {
            w = "xatrix"
          }
          e2u2/+abtshoot3.wl =
          {
            w = "xatrix"
          }
          e2u2/brwater.wl =
          {
            w = "xatrix"
          }
          e2u2/clip_mon.wl =
          {
            w = "xatrix"
          }
          e2u2/comp8_1.wl =
          {
            w = "xatrix"
          }
          e2u2/crush1_2.wl =
          {
            w = "xatrix"
          }
          e2u2/florr2_6.wl =
          {
            w = "xatrix"
          }
          e2u2/mach1_4.wl =
          {
            w = "xatrix"
          }
          e2u2/metal30_2.wl =
          {
            w = "xatrix"
          }
          e2u2/metal31_1.wl =
          {
            w = "xatrix"
          }
          e2u2/metal33_2.wl =
          {
            w = "xatrix"
          }
          e2u2/minedr1.wl =
          {
            w = "xatrix"
          }
          e2u2/notch2_1.wl =
          {
            w = "xatrix"
          }
          e2u2/pipe7_3.wl =
          {
            w = "xatrix"
          }
          e2u2/rlight1_1.wl =
          {
            w = "xatrix"
          }
        }
        e2u3.txlist =
        {
          e2u3/+0btshoot1.wl =
          {
            w = "xatrix"
          }
          e2u3/+0btshoot2.wl =
          {
            w = "xatrix"
          }
          e2u3/+abtshoot2.wl =
          {
            w = "xatrix"
          }
          e2u3/+abtshoot3.wl =
          {
            w = "xatrix"
          }
          e2u3/baselt_1.wl =
          {
            w = "xatrix"
          }
          e2u3/baselt_2.wl =
          {
            w = "xatrix"
          }
          e2u3/baselt_4.wl =
          {
            w = "xatrix"
          }
          e2u3/belt1_2.wl =
          {
            w = "xatrix"
          }
          e2u3/blum10_2.wl =
          {
            w = "xatrix"
          }
          e2u3/blum13_2.wl =
          {
            w = "xatrix"
          }
          e2u3/blum14_1.wl =
          {
            w = "xatrix"
          }
          e2u3/blum14_2.wl =
          {
            w = "xatrix"
          }
          e2u3/blum15_2.wl =
          {
            w = "xatrix"
          }
          e2u3/blume7_1.wl =
          {
            w = "xatrix"
          }
          e2u3/bmetal13_1.wl =
          {
            w = "xatrix"
          }
          e2u3/brlava.wl =
          {
            w = "xatrix"
          }
          e2u3/brwater.wl =
          {
            w = "xatrix"
          }
          e2u3/btactmach.wl =
          {
            w = "xatrix"
          }
          e2u3/ceil1_14.wl =
          {
            w = "xatrix"
          }
          e2u3/ceil1_18.wl =
          {
            w = "xatrix"
          }
          e2u3/ceil1_21.wl =
          {
            w = "xatrix"
          }
          e2u3/ceil1_25.wl =
          {
            w = "xatrix"
          }
          e2u3/ceil1_27.wl =
          {
            w = "xatrix"
          }
          e2u3/ceil1_4.wl =
          {
            w = "xatrix"
          }
          e2u3/clip_mon.wl =
          {
            w = "xatrix"
          }
          e2u3/core2_1.wl =
          {
            w = "xatrix"
          }
          e2u3/doorbot.wl =
          {
            w = "xatrix"
          }
          e2u3/floor2_4.wl =
          {
            w = "xatrix"
          }
          e2u3/floor3_2.wl =
          {
            w = "xatrix"
          }
          e2u3/florr1_3.wl =
          {
            w = "xatrix"
          }
          e2u3/florr2_4.wl =
          {
            w = "xatrix"
          }
          e2u3/florr2_6.wl =
          {
            w = "xatrix"
          }
          e2u3/gpip2_1.wl =
          {
            w = "xatrix"
          }
          e2u3/grass1_2.wl =
          {
            w = "xatrix"
          }
          e2u3/grass1_7.wl =
          {
            w = "xatrix"
          }
          e2u3/grate1_1.wl =
          {
            w = "xatrix"
          }
          e2u3/grate1_3.wl =
          {
            w = "xatrix"
          }
          e2u3/grate1_4.wl =
          {
            w = "xatrix"
          }
          e2u3/grate1_5.wl =
          {
            w = "xatrix"
          }
          e2u3/grate1_7.wl =
          {
            w = "xatrix"
          }
          e2u3/grate2_1.wl =
          {
            w = "xatrix"
          }
          e2u3/grate2_2.wl =
          {
            w = "xatrix"
          }
          e2u3/grate2_3.wl =
          {
            w = "xatrix"
          }
          e2u3/grate2_4.wl =
          {
            w = "xatrix"
          }
          e2u3/grate2_5.wl =
          {
            w = "xatrix"
          }
          e2u3/grate2_6.wl =
          {
            w = "xatrix"
          }
          e2u3/grate2_7.wl =
          {
            w = "xatrix"
          }
          e2u3/green0_3.wl =
          {
            w = "xatrix"
          }
          e2u3/green2_4.wl =
          {
            w = "xatrix"
          }
          e2u3/grnx2_1.wl =
          {
            w = "xatrix"
          }
          e2u3/grnx2_4.wl =
          {
            w = "xatrix"
          }
          e2u3/grnx2_6.wl =
          {
            w = "xatrix"
          }
          e2u3/grnx2_7.wl =
          {
            w = "xatrix"
          }
          e2u3/lead2_2.wl =
          {
            w = "xatrix"
          }
          e2u3/metal14_2.wl =
          {
            w = "xatrix"
          }
          e2u3/metal15_1.wl =
          {
            w = "xatrix"
          }
          e2u3/metal17_1.wl =
          {
            w = "xatrix"
          }
          e2u3/metal17_2.wl =
          {
            w = "xatrix"
          }
          e2u3/metal24_1.wl =
          {
            w = "xatrix"
          }
          e2u3/metal24_3.wl =
          {
            w = "xatrix"
          }
          e2u3/metal3_2.wl =
          {
            w = "xatrix"
          }
          e2u3/metal9_2.wl =
          {
            w = "xatrix"
          }
          e2u3/metl10_1.wl =
          {
            w = "xatrix"
          }
          e2u3/metl12_1.wl =
          {
            w = "xatrix"
          }
          e2u3/pow12_1.wl =
          {
            w = "xatrix"
          }
          e2u3/prwlt1_3.wl =
          {
            w = "xatrix"
          }
          e2u3/redp1_1.wl =
          {
            w = "xatrix"
          }
          e2u3/rmetal6_2.wl =
          {
            w = "xatrix"
          }
          e2u3/rmetal6_4.wl =
          {
            w = "xatrix"
          }
          e2u3/rmtl37_3.wl =
          {
            w = "xatrix"
          }
          e2u3/rock1_2.wl =
          {
            w = "xatrix"
          }
          e2u3/sew2_3.wl =
          {
            w = "xatrix"
          }
          e2u3/skip.wl =
          {
            w = "xatrix"
          }
          e2u3/sky2.wl =
          {
            w = "xatrix"
          }
          e2u3/slip.wl =
          {
            w = "xatrix"
          }
          e2u3/star1_2.wl =
          {
            w = "xatrix"
          }
          e2u3/star1_3.wl =
          {
            w = "xatrix"
          }
          e2u3/support1_2.wl =
          {
            w = "xatrix"
          }
          e2u3/water6.wl =
          {
            w = "xatrix"
          }
          e2u3/wires2_2.wl =
          {
            w = "xatrix"
          }
          e2u3/wplat1_1.wl =
          {
            w = "xatrix"
          }
          e2u3/wstlt1_6.wl =
          {
            w = "xatrix"
          }
          e2u3/wstlt1_7.wl =
          {
            w = "xatrix"
          }
          e2u3/yellow1_2.wl =
          {
            w = "xatrix"
          }
        }
        e3u1.txlist =
        {
          e3u1/caution1_1.wl =
          {
            w = "xatrix"
          }
          e3u1/drag1_4.wl =
          {
            w = "xatrix"
          }
          e3u1/drleft2.wl =
          {
            w = "xatrix"
          }
          e3u1/floor2_5.wl =
          {
            w = "xatrix"
          }
          e3u1/florr1_2.wl =
          {
            w = "xatrix"
          }
          e3u1/palmet13_2.wl =
          {
            w = "xatrix"
          }
          e3u1/palmet13_3.wl =
          {
            w = "xatrix"
          }
          e3u1/palmet2_1.wl =
          {
            w = "xatrix"
          }
          e3u1/palmet4_1.wl =
          {
            w = "xatrix"
          }
          e3u1/palmet5_1.wl =
          {
            w = "xatrix"
          }
          e3u1/palsup2_2.wl =
          {
            w = "xatrix"
          }
          e3u1/prwlt1_1.wl =
          {
            w = "xatrix"
          }
          e3u1/prwlt1_3.wl =
          {
            w = "xatrix"
          }
          e3u1/pthnm1_3.wl =
          {
            w = "xatrix"
          }
        }
        e3u2.txlist =
        {
          e3u2/airduc1_1.wl =
          {
            w = "xatrix"
          }
          e3u2/bed01_1.wl =
          {
            w = "xatrix"
          }
          e3u2/bed02_1.wl =
          {
            w = "xatrix"
          }
          e3u2/bed02_2.wl =
          {
            w = "xatrix"
          }
          e3u2/bed02_3.wl =
          {
            w = "xatrix"
          }
          e3u2/bed3_1.wl =
          {
            w = "xatrix"
          }
          e3u2/comp9_1.wl =
          {
            w = "xatrix"
          }
          e3u2/comp9_3.wl =
          {
            w = "xatrix"
          }
          e3u2/fmet2_1.wl =
          {
            w = "xatrix"
          }
        }
        e3u3.txlist =
        {
          e3u3/+0btshoot1.wl =
          {
            w = "xatrix"
          }
          e3u3/+0btshoot2.wl =
          {
            w = "xatrix"
          }
          e3u3/+abtshoot2.wl =
          {
            w = "xatrix"
          }
          e3u3/+abtshoot3.wl =
          {
            w = "xatrix"
          }
          e3u3/alarm0.wl =
          {
            w = "xatrix"
          }
          e3u3/alarm1.wl =
          {
            w = "xatrix"
          }
          e3u3/alarm2.wl =
          {
            w = "xatrix"
          }
          e3u3/alarm3.wl =
          {
            w = "xatrix"
          }
          e3u3/bluekeypad.wl =
          {
            w = "xatrix"
          }
          e3u3/clip_mon.wl =
          {
            w = "xatrix"
          }
          e3u3/color1_1.wl =
          {
            w = "xatrix"
          }
          e3u3/metal16_1.wl =
          {
            w = "xatrix"
          }
          e3u3/support1_11.wl =
          {
            w = "xatrix"
          }
          e3u3/windowc1_1.wl =
          {
            w = "xatrix"
          }
        }
        moon_1.txlist =
        {
          moon_1/bl_lt2.wl =
          {
            w = "xatrix"
          }
          moon_1/ice1_6.wl =
          {
            w = "xatrix"
          }
          moon_1/icecyc1_4.wl =
          {
            w = "xatrix"
          }
          moon_1/iceflr1_3.wl =
          {
            w = "xatrix"
          }
          moon_1/icerf1_1.wl =
          {
            w = "xatrix"
          }
          moon_1/icerf1_2.wl =
          {
            w = "xatrix"
          }
          moon_1/icewall1_5.wl =
          {
            w = "xatrix"
          }
          moon_1/mb_f1.wl =
          {
            w = "xatrix"
          }
          moon_1/mb_f3.wl =
          {
            w = "xatrix"
          }
          moon_1/mb_f4.wl =
          {
            w = "xatrix"
          }
          moon_1/moon_10.wl =
          {
            w = "xatrix"
          }
          moon_1/moon_12.wl =
          {
            w = "xatrix"
          }
          moon_1/moon_7.wl =
          {
            w = "xatrix"
          }
          moon_1/m_flr3.wl =
          {
            w = "xatrix"
          }
          moon_1/redfuse.wl =
          {
            w = "xatrix"
          }
          moon_1/shp_mtl7.wl =
          {
            w = "xatrix"
          }
          moon_1/shp_mtl8.wl =
          {
            w = "xatrix"
          }
          moon_1/sign01.wl =
          {
            w = "xatrix"
          }
          moon_1/sign02.wl =
          {
            w = "xatrix"
          }
          moon_1/sky02.wl =
          {
            w = "xatrix"
          }
          moon_1/wall02.wl =
          {
            w = "xatrix"
          }
          moon_1/wall04.wl =
          {
            w = "xatrix"
          }
          moon_1/wall08a.wl =
          {
            w = "xatrix"
          }
          moon_1/wall11.wl =
          {
            w = "xatrix"
          }
          moon_1/wall17a.wl =
          {
            w = "xatrix"
          }
          moon_1/wall41.wl =
          {
            w = "xatrix"
          }
          moon_1/wall44.wl =
          {
            w = "xatrix"
          }
          moon_1/wall53.wl =
          {
            w = "xatrix"
          }
          moon_1/wall56.wl =
          {
            w = "xatrix"
          }
          moon_1/wall57.wl =
          {
            w = "xatrix"
          }
          moon_1/wall58.wl =
          {
            w = "xatrix"
          }
          moon_1/wall60.wl =
          {
            w = "xatrix"
          }
          moon_1/wall64.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_d1.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_m3.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_m9.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms12.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms13.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms14.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms15.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms16.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms17.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms18.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms20.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms22.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms23.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms24.wl =
          {
            w = "xatrix"
          }
          moon_1/wall_ms3.wl =
          {
            w = "xatrix"
          }
          moon_1/xmine01.wl =
          {
            w = "xatrix"
          }
          moon_1/xmine03.wl =
          {
            w = "xatrix"
          }
          moon_1/xmine10.wl =
          {
            w = "xatrix"
          }
          moon_1/xmine11.wl =
          {
            w = "xatrix"
          }
          moon_1/xmine14.wl =
          {
            w = "xatrix"
          }
          moon_1/xmoon_1.wl =
          {
            w = "xatrix"
          }
          moon_1/xsign_1.wl =
          {
            w = "xatrix"
          }
          moon_1/xsign_2.wl =
          {
            w = "xatrix"
          }
        }
        ship_1.txlist =
        {
          ship_1/+0compx_1.wl =
          {
            w = "xatrix"
          }
          ship_1/+0xsign1.wl =
          {
            w = "xatrix"
          }
          ship_1/+1compx_1.wl =
          {
            w = "xatrix"
          }
          ship_1/+1xsign1.wl =
          {
            w = "xatrix"
          }
          ship_1/+2compx_1.wl =
          {
            w = "xatrix"
          }
          ship_1/+2xsign1.wl =
          {
            w = "xatrix"
          }
          ship_1/+3compx_1.wl =
          {
            w = "xatrix"
          }
          ship_1/+3xsign1.wl =
          {
            w = "xatrix"
          }
          ship_1/+4compx_1.wl =
          {
            w = "xatrix"
          }
          ship_1/1xcgrate1.wl =
          {
            w = "xatrix"
          }
          ship_1/4xcomp1.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_12.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_25.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_27.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_53.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_61.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_64.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_66.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_67.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_68.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_70.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_71.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_82.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_84.wl =
          {
            w = "xatrix"
          }
          ship_1/ship_85.wl =
          {
            w = "xatrix"
          }
          ship_1/sym6_4.wl =
          {
            w = "xatrix"
          }
          ship_1/x1hvy_dr4_2.wl =
          {
            w = "xatrix"
          }
          ship_1/x1metal3_4.wl =
          {
            w = "xatrix"
          }
          ship_1/x1metal5_6.wl =
          {
            w = "xatrix"
          }
          ship_1/x1metal8_4.wl =
          {
            w = "xatrix"
          }
          ship_1/x1metal8_5.wl =
          {
            w = "xatrix"
          }
          ship_1/x2hvy_dr4_2.wl =
          {
            w = "xatrix"
          }
          ship_1/x3hvy_dr4_2.wl =
          {
            w = "xatrix"
          }
          ship_1/x3metal5_6.wl =
          {
            w = "xatrix"
          }
          ship_1/x3metal9_1.wl =
          {
            w = "xatrix"
          }
          ship_1/x4metal9_1.wl =
          {
            w = "xatrix"
          }
          ship_1/x5metal9_1.wl =
          {
            w = "xatrix"
          }
          ship_1/xcomp10_1.wl =
          {
            w = "xatrix"
          }
          ship_1/xcomp2_1.wl =
          {
            w = "xatrix"
          }
          ship_1/xcomp2_2.wl =
          {
            w = "xatrix"
          }
          ship_1/xcomp2_4.wl =
          {
            w = "xatrix"
          }
          ship_1/xcomp5_1.wl =
          {
            w = "xatrix"
          }
          ship_1/xcomp7_1.wl =
          {
            w = "xatrix"
          }
          ship_1/xcomp8_1.wl =
          {
            w = "xatrix"
          }
          ship_1/xcomp9_1.wl =
          {
            w = "xatrix"
          }
          ship_1/xhvy_dr4_2.wl =
          {
            w = "xatrix"
          }
          ship_1/xlite_1.wl =
          {
            w = "xatrix"
          }
          ship_1/xlite_3.wl =
          {
            w = "xatrix"
          }
          ship_1/xlite_b1.wl =
          {
            w = "xatrix"
          }
          ship_1/xmetal11_4.wl =
          {
            w = "xatrix"
          }
          ship_1/xmetal2_3.wl =
          {
            w = "xatrix"
          }
          ship_1/xmetal5_6.wl =
          {
            w = "xatrix"
          }
          ship_1/xmetal8_4.wl =
          {
            w = "xatrix"
          }
          ship_1/xmetal8_5.wl =
          {
            w = "xatrix"
          }
          ship_1/xmetal9_1.wl =
          {
            w = "xatrix"
          }
          ship_1/xmetals_1a.wl =
          {
            w = "xatrix"
          }
          ship_1/xmetals_4.wl =
          {
            w = "xatrix"
          }
          ship_1/xsign01.wl =
          {
            w = "xatrix"
          }
          ship_1/xsign02.wl =
          {
            w = "xatrix"
          }
          ship_1/xsign03.wl =
          {
            w = "xatrix"
          }
        }
      }
    }
  }
  NewMapItems.qtx =
  {
    ToolBox = "New Map Items..."
    Root = "Xatrix Entities.qtxfolder"
    Xatrix Entities.qtxfolder =
    {
      Light Rotate entitie.qtxfolder =
      {
        rotating_light:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Rotating red strobe light."
        }
      }
      Weapon_* entities.qtxfolder =
      {
        weapon_boomer:e =
        {
          origin = "0 0 0"
          ;desc = "Fires a bouncing projectile."
        }
        weapon_phalanx:e =
        {
          origin = "0 0 0"
          ;desc = "Fires 2 blasts at once."
        }
      }
      Ammo_* entities.qtxfolder =
      {
        ammo_magslug:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Ammo for Phalanx weapon."
        }
        ammo_trap:e =
        {
          origin = "0 0 0"
          ;desc = "Drags Monsters and Players inside if they get close."
        }
      }
      Monster_* entities.qtxfolder =
      {
        Soldiers.qtxfolder =
        {
          monster_soldier_hypergun:e =
          {
            origin = "0 0 0"
            angle = "360"
            ;desc = "Hyper Blaster Guard."
          }
          monster_soldier_lasergun:e =
          {
            origin = "0 0 0"
            angle = "360"
            ;desc = "Laser Guard."
          }
          monster_soldier_ripper:e =
          {
            origin = "0 0 0"
            angle = "360"
            ;desc = "Ripper Guard."
          }
        }
        monster_gekk:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Fires a small blaster type weapon. Also jumps (High)"
        }
        monster_brain:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Enhanced Brains Lasers from his eyes."
        }
        monster_gladb:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Enhanced Gladiator with power shield. Uses a Phalanx weapon"
           "."
        }
        monster_chick_heat:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Iron Maiden with HeatSeeking Rockets."
        }
        monster_boss5:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Enhanced SuperTank with shield."
        }
        monster_fixbot:e =
        {
          origin = "0 0 0"
          ;desc = "Repair's func_object_repairs, and re-animates dead monsters"
           "."
          angle = "360"
        }
      }
      Misc_* entities.qtxfolder =
      {
        misc_crashviper:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Large viper. Follows path_corner's"
        }
        misc_viper_missile:e =
        {
          origin = "0 0 0"
          angle = "360"
          dmg = "250"
          ;desc = "Viper missile"
        }
        misc_transport:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Transport ship used at end of game. Will follow path corner"
           "s"
        }
        misc_nuke:e =
        {
          origin = "0 0 0"
          ;desc = "Kills eveything when trigered. Including youMonsters dont g"
           "ib, they get removed(?)"
        }
        misc_amb4:e =
        {
          origin = "0 0 0"
          ;desc = "Mal's amb4 loop entity"
        }
      }
      Key_* entitie.qtxfolder =
      {
        key_green_key:e =
        {
          origin = "0 0 0"
          ;desc = "Green Maintence Key"
        }
      }
      Item_* entitie.qtxfolder =
      {
        item_quadfire:e =
        {
          origin = "0 0 0"
          ;desc = "Shortens your weapon reload time by half"
        }
      }
      Func_* entitie.qtxfolder =
      {
        func_object_repair:e =
        {
          origin = "0 0 0"
          delay = "1.0"
          ;desc = "Object to be repaired"
        }
      }
      Target_* entitie.qtxfolder =
      {
        target_mal_laser:e =
        {
          origin = "0 0 0"
          angle = "360"
          delay = "0.1"
          dmg = "5"
          wait = "0.1"
          ;desc = "Randomly fires a laser"
        }
      }
    }
  }
  Default forms.fctx =
  {
    t_item1_form:form =
    {
      Caption = "Monster item Spawns"
      item: =
      {
        typ = "C"
        txt = "Weapons Classes"
        items = "weapon_shotgun"$0D"weapon_supershotgun"$0D"weapon_machinegun"$0D
         "weapon_chaingun"$0D"weapon_grenadelauncher"$0D"weapon_rocketlauncher"
         $0D"weapon_hyperblaster"$0D"weapon_railgun"$0D"weapon_bfg"$0D"weapon_"
         "boomer"$0D"weapon_phalanx"
        values = "weapon_shotgun"$0D"weapon_supershotgun"$0D"weapon_machinegun"
         $0D"weapon_chaingun"$0D"weapon_grenadelauncher"$0D"weapon_rocketlaunc"
         "her"$0D"weapon_hyperblaster"$0D"weapon_railgun"$0D"weapon_bfg"$0D"we"
         "apon_boomer"$0D"weapon_phalanx"
      }
      item: =
      {
        typ = "C"
        txt = "Ammo Classes"
        items = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rocke"
         "ts"$0D"ammo_cells"$0D"ammo_slugs"$0D"ammo_magslug"$0D"ammo_trap"
        values = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rock"
         "ets"$0D"ammo_cells"$0D"ammo_slugs"$0D"ammo_magslug"$0D"ammo_trap"
      }
      item: =
      {
        typ = "C"
        txt = "Key Classes"
        items = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"$0D
         "key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"$0D"key_green_key"
        values = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"
         $0D"key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"$0D"key_green_key"
      }
      item: =
      {
        typ = "C"
        txt = "Item Classes"
        items = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_invulnerabilit"
         "y"$0D"item_pack"$0D"item_power_screen"$0D"item_power_shield"$0D"item"
         "_quad"$0D"item_silencer"$0D"item_quadfire"
        values = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_invulnerabilit"
         "y"$0D"item_pack"$0D"item_power_screen"$0D"item_power_shield"$0D"item"
         "_quad"$0D"item_silencer"$0D"item_quadfire"
      }
    }
    t_noise1_form:form =
    {
      Caption = "Quake II Sounds"
      noise: =
      {
        Typ = "C"
        Txt = "Item Sounds"
        Hint = "Nunber of sounds = 14"
        Items = "items/airout.wav"$0D"items/damage.wav"$0D"items/damage2.wav"$0D
         "items/damage3.wav"$0D"items/l_health.wav"$0D"items/m_health.wav"$0D"i"
         "tems/n_health.wav"$0D"items/pkup.wav"$0D"items/protect.wav"$0D"items"
         "/protect2.wav"$0D"items/protect3.wav"$0D"items/protect4.wav"$0D"item"
         "s/respawn1.wav"$0D"items/s_health.wav"
        Values = "items/airout.wav"$0D"items/damage.wav"$0D"items/damage2.wav"$0D
         "items/damage3.wav"$0D"items/l_health.wav"$0D"items/m_health.wav"$0D"i"
         "tems/n_health.wav"$0D"items/pkup.wav"$0D"items/protect.wav"$0D"items"
         "/protect2.wav"$0D"items/protect3.wav"$0D"items/protect4.wav"$0D"item"
         "s/respawn1.wav"$0D"items/s_health.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Miscellaneous Sounds"
        Hint = "Nunber of sounds = 26"
        Items = "misc/am_pkup.wav"$0D"misc/ar1_pkup.wav"$0D"misc/ar2_pkup.wav"$0D
         "misc/ar3_pkup.wav"$0D"misc/bigtele.wav"$0D"misc/comp_up.wav"$0D"misc"
         "/fhit3.wav"$0D"misc/h2ohit1.wav"$0D"misc/keytry.wav"$0D"misc/keyuse."
         "wav"$0D"misc/lasfly.wav"$0D"misc/menu1.wav"$0D"misc/menu2.wav"$0D"mi"
         "sc/menu3.wav"$0D"misc/pc_up.wav"$0D"misc/power1.wav"$0D"misc/power2."
         "wav"$0D"misc/secret.wav"$0D"misc/spawn1.wav"$0D"misc/talk.wav"$0D"mi"
         "sc/talk1.wav"$0D"misc/tele_up.wav"$0D"misc/tele1.wav"$0D"misc/udeath"
         ".wav"$0D"misc/w_pkup.wav"$0D"misc/windfly.wav"
        Values = "misc/am_pkup.wav"$0D"misc/ar1_pkup.wav"$0D"misc/ar2_pkup.wav"
         $0D"misc/ar3_pkup.wav"$0D"misc/bigtele.wav"$0D"misc/comp_up.wav"$0D"m"
         "isc/fhit3.wav"$0D"misc/h2ohit1.wav"$0D"misc/keytry.wav"$0D"misc/keyu"
         "se.wav"$0D"misc/lasfly.wav"$0D"misc/menu1.wav"$0D"misc/menu2.wav"$0D
         "misc/menu3.wav"$0D"misc/pc_up.wav"$0D"misc/power1.wav"$0D"misc/power"
         "2.wav"$0D"misc/secret.wav"$0D"misc/spawn1.wav"$0D"misc/talk.wav"$0D"m"
         "isc/talk1.wav"$0D"misc/tele_up.wav"$0D"misc/tele1.wav"$0D"misc/udeat"
         "h.wav"$0D"misc/w_pkup.wav"$0D"misc/windfly.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Weapon Sounds"
        Hint = "Nunber of sounds = 41"
        Items = "weapons/bfg__f1y.wav"$0D"weapons/bfg__1a.wav"$0D"weapons/bfg_"
         "_x1b.wav"$0D"weapons/bfg_hum.wav"$0D"weapons/blastf1a.wav"$0D"weapon"
         "s/chngnd1a.wav"$0D"weapons/chngnl1a.wav"$0D"weapons/chngnu1a.wav"$0D
         "weapons/grenlb1b.wav"$0D"weapons/grenlf1a.wav"$0D"weapons/grenlr1b.w"
         "av"$0D"weapons/grenlx1a.wav"$0D"weapons/hgrena1b.wav"$0D"weapons/hgr"
         "enb1a.wav"$0D"weapons/hgrenb2a.wav"$0D"weapons/hgrenc1b.wav"$0D"weap"
         "ons/hgrent1a.wav"$0D"weapons/hyprbd1a.wav"$0D"weapons/hyprbf1a.wav"$0D
         "weapons/hyprbl1a.wav"$0D"weapons/hyprbu1a.wav"$0D"weapons/laser2.wav"
         $0D"weapons/lashit.wav"$0D"weapons/machgf1b.wav"$0D"weapons/machgf2b."
         "wav"$0D"weapons/machgf3b.wav"$0D"weapons/machgf4b.wav"$0D"weapons/ma"
         "chgf5b.wav"$0D"weapons/noammo.wav"$0D"weapons/railgf1a.wav"$0D"weapo"
         "ns/railgr1a.wav"$0D"weapons/rg_hum.wav"$0D"weapons/rockfly.wav"$0D"w"
         "eapons/rocklf1a.wav"$0D"weapons/rocklr1b.wav"$0D"weapons/rocklx1a.wa"
         "v"$0D"weapons/shotgf1b.wav"$0D"weapons/shotgr1b.wav"$0D"weapons/ssho"
         "tf1b.wav"$0D"weapons/sshotr1b.wav"$0D"weapons/xpld_wat.wav"
        Values = "weapons/bfg__f1y.wav"$0D"weapons/bfg__1a.wav"$0D"weapons/bfg"
         "__x1b.wav"$0D"weapons/bfg_hum.wav"$0D"weapons/blastf1a.wav"$0D"weapo"
         "ns/chngnd1a.wav"$0D"weapons/chngnl1a.wav"$0D"weapons/chngnu1a.wav"$0D
         "weapons/grenlb1b.wav"$0D"weapons/grenlf1a.wav"$0D"weapons/grenlr1b.w"
         "av"$0D"weapons/grenlx1a.wav"$0D"weapons/hgrena1b.wav"$0D"weapons/hgr"
         "enb1a.wav"$0D"weapons/hgrenb2a.wav"$0D"weapons/hgrenc1b.wav"$0D"weap"
         "ons/hgrent1a.wav"$0D"weapons/hyprbd1a.wav"$0D"weapons/hyprbf1a.wav"$0D
         "weapons/hyprbl1a.wav"$0D"weapons/hyprbu1a.wav"$0D"weapons/laser2.wav"
         $0D"weapons/lashit.wav"$0D"weapons/machgf1b.wav"$0D"weapons/machgf2b."
         "wav"$0D"weapons/machgf3b.wav"$0D"weapons/machgf4b.wav"$0D"weapons/ma"
         "chgf5b.wav"$0D"weapons/noammo.wav"$0D"weapons/railgf1a.wav"$0D"weapo"
         "ns/railgr1a.wav"$0D"weapons/rg_hum.wav"$0D"weapons/rockfly.wav"$0D"w"
         "eapons/rocklf1a.wav"$0D"weapons/rocklr1b.wav"$0D"weapons/rocklx1a.wa"
         "v"$0D"weapons/shotgf1b.wav"$0D"weapons/shotgr1b.wav"$0D"weapons/ssho"
         "tf1b.wav"$0D"weapons/sshotr1b.wav"$0D"weapons/xpld_wat.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "World Sounds"
        Hint = "Nunber of sounds = 157"
        Items = "world/10_0.wav"$0D"world/airhiss1.wav"$0D"world/airhiss2.wav"$0D
         "world/amb1.wav"$0D"world/amb2.wav"$0D"world/amb3.wav"$0D"world/amb4."
         "wav"$0D"world/amb5.wav"$0D"world/amb6.wav"$0D"world/amb7.wav"$0D"wor"
         "ld/amb8.wav"$0D"world/amb9.wav"$0D"world/amb10.wav"$0D"world/amb11.w"
         "av"$0D"world/amb12.wav"$0D"world/amb13.wav"$0D"world/amb14.wav"$0D"w"
         "orld/amb15.wav"$0D"world/amb16.wav"$0D"world/amb17.wav"$0D"world/amb"
         "18.wav"$0D"world/amb19.wav"$0D"world/amb20.wav"$0D"world/amb21.wav"$0D
         "world/amb22.wav"$0D"world/amb23.wav"$0D"world/amb24.wav"$0D"world/ba"
         "ttle1.wav"$0D"world/battle2.wav"$0D"world/battle3.wav"$0D"world/batt"
         "le4.wav"$0D"world/battle5.wav"$0D"world/bigpump.wav"$0D"world/bigpum"
         "p2.wav"$0D"world/blackhole.wav"$0D"world/brkglas.wav"$0D"world/bubbl"
         "4.wav"$0D"world/bubl1.wav"$0D"world/bubl2.wav"$0D"world/bubl3.wav"$0D
         "world/comlas1.wav"$0D"world/comp_hum1.wav"$0D"world/comp_hum2.wav"$0D
         "world/comp_hum3.wav"$0D"world/curnt1.wav"$0D"world/curnt2.wav"$0D"wo"
         "rld/curnt3.wav"$0D"world/dataspin.wav"$0D"world/deactivated.wav"$0D"w"
         "orld/dish1.wav"$0D"world/dr_long.wav"$0D"world/dr_short.wav"$0D"worl"
         "d/drill1.wav"$0D"world/drill2a.wav"$0D"world/driller1.wav"$0D"world/"
         "drip_amb.wav"$0D"world/drip1.wav"$0D"world/drip2.wav"$0D"world/drip3"
         ".wav"$0D"world/electro.wav"$0D"world/explod1.wav"$0D"world/explod2.w"
         "av"$0D"world/fan1.wav"$0D"world/flesh1.wav"$0D"world/flesh2.wav"$0D"w"
         "orld/flyby.wav"$0D"world/flyby1.wav"$0D"world/flyby2.wav"$0D"world/f"
         "lyby3.wav"$0D"world/force1.wav"$0D"world/force2.wav"$0D"world/force3"
         ".wav"$0D"world/fusein.wav"$0D"world/fuseout.wav"$0D"world/incoming.w"
         "av"$0D"world/klaxon1.wav"$0D"world/klaxon2.wav"$0D"world/l_hum1.wav"$0D
         "world/l_hum2.wav"$0D"world/land.wav"$0D"world/laser.wav"$0D"world/la"
         "shum1.wav"$0D"world/lasoff1.wav"$0D"world/lava1.wav"$0D"world/lite_o"
         "n1.wav"$0D"world/lite_on2.wav"$0D"world/lite_on3.wav"$0D"world/lite_"
         "out.wav"$0D"world/mach1.wav"$0D"world/mach2.wav"$0D"world/mach3.wav"$0D
         "world/mov_watr.wav"$0D"world/pilot1.wav"$0D"world/pilot2.wav"$0D"wor"
         "ld/pilot3.wav"$0D"world/pump1.wav"$0D"world/pump2.wav"$0D"world/pump"
         "3.wav"$0D"world/pumping.wav"$0D"world/pyramid.wav"$0D"world/quake.wa"
         "v"$0D"world/radio2.wav"$0D"world/radio3.wav"$0D"world/reactor.wav"$0D
         "world/redforce.wav"$0D"world/ric1.wav"$0D"world/ric2.wav"$0D"world/r"
         "ic3.wav"$0D"world/rocks1.wav"$0D"world/scan1.wav"$0D"world/short1.wa"
         "v"$0D"world/spark1.wav"$0D"world/spark2.wav"$0D"world/spark3.wav"$0D
         "world/spark5.wav"$0D"world/spark6.wav"$0D"world/spark7.wav"$0D"world"
         "/steam1.wav"$0D"world/steam2.wav"$0D"world/steam3.wav"$0D"world/stp_"
         "watr.wav"$0D"world/tele1.wav"$0D"world/train1.wav"$0D"world/train2.w"
         "av"$0D"world/turbine1.wav"$0D"world/uplink2.wav"$0D"world/v_bas1.wav"
         $0D"world/v_bas2.wav"$0D"world/v_bas3.wav"$0D"world/v_bas4.wav"$0D"wo"
         "rld/v_bas5.wav"$0D"world/v_bas6.wav"$0D"world/v_cit1.wav"$0D"world/v"
         "_cit2.wav"$0D"world/v_cmd1.wav"$0D"world/v_cmd2.wav"$0D"world/v_fac2"
         ".wav"$0D"world/v_fac3.wav"$0D"world/v_gun1.wav"$0D"world/v_gun2.wav"$0D
         "world/v_war1.wav"$0D"world/ventsys.wav"$0D"world/voice1.wav"$0D"worl"
         "d/voice3.wav"$0D"world/voice4.wav"$0D"world/voice5.wav"$0D"world/voi"
         "ce6.wav"$0D"world/voice7.wav"$0D"world/voice10.wav"$0D"world/voice11"
         ".wav"$0D"world/water1.wav"$0D"world/wind2.wav"$0D"world/x_alarm.wav"$0D
         "world/x_light.wav"$0D"world/xian1.wav"$0D"world/xianbeats.wav"$0D"wo"
         "rld/yelforce.wav"
        Values = "world/10_0.wav"$0D"world/airhiss1.wav"$0D"world/airhiss2.wav"
         $0D"world/amb1.wav"$0D"world/amb2.wav"$0D"world/amb3.wav"$0D"world/am"
         "b4.wav"$0D"world/amb5.wav"$0D"world/amb6.wav"$0D"world/amb7.wav"$0D"w"
         "orld/amb8.wav"$0D"world/amb9.wav"$0D"world/amb10.wav"$0D"world/amb11"
         ".wav"$0D"world/amb12.wav"$0D"world/amb13.wav"$0D"world/amb14.wav"$0D
         "world/amb15.wav"$0D"world/amb16.wav"$0D"world/amb17.wav"$0D"world/am"
         "b18.wav"$0D"world/amb19.wav"$0D"world/amb20.wav"$0D"world/amb21.wav"$0D
         "world/amb22.wav"$0D"world/amb23.wav"$0D"world/amb24.wav"$0D"world/ba"
         "ttle1.wav"$0D"world/battle2.wav"$0D"world/battle3.wav"$0D"world/batt"
         "le4.wav"$0D"world/battle5.wav"$0D"world/bigpump.wav"$0D"world/bigpum"
         "p2.wav"$0D"world/blackhole.wav"$0D"world/brkglas.wav"$0D"world/bubbl"
         "4.wav"$0D"world/bubl1.wav"$0D"world/bubl2.wav"$0D"world/bubl3.wav"$0D
         "world/comlas1.wav"$0D"world/comp_hum1.wav"$0D"world/comp_hum2.wav"$0D
         "world/comp_hum3.wav"$0D"world/curnt1.wav"$0D"world/curnt2.wav"$0D"wo"
         "rld/curnt3.wav"$0D"world/dataspin.wav"$0D"world/deactivated.wav"$0D"w"
         "orld/dish1.wav"$0D"world/dr_long.wav"$0D"world/dr_short.wav"$0D"worl"
         "d/drill1.wav"$0D"world/drill2a.wav"$0D"world/driller1.wav"$0D"world/"
         "drip_amb.wav"$0D"world/drip1.wav"$0D"world/drip2.wav"$0D"world/drip3"
         ".wav"$0D"world/electro.wav"$0D"world/explod1.wav"$0D"world/explod2.w"
         "av"$0D"world/fan1.wav"$0D"world/flesh1.wav"$0D"world/flesh2.wav"$0D"w"
         "orld/flyby.wav"$0D"world/flyby1.wav"$0D"world/flyby2.wav"$0D"world/f"
         "lyby3.wav"$0D"world/force1.wav"$0D"world/force2.wav"$0D"world/force3"
         ".wav"$0D"world/fusein.wav"$0D"world/fuseout.wav"$0D"world/incoming.w"
         "av"$0D"world/klaxon1.wav"$0D"world/klaxon2.wav"$0D"world/l_hum1.wav"$0D
         "world/l_hum2.wav"$0D"world/land.wav"$0D"world/laser.wav"$0D"world/la"
         "shum1.wav"$0D"world/lasoff1.wav"$0D"world/lava1.wav"$0D"world/lite_o"
         "n1.wav"$0D"world/lite_on2.wav"$0D"world/lite_on3.wav"$0D"world/lite_"
         "out.wav"$0D"world/mach1.wav"$0D"world/mach2.wav"$0D"world/mach3.wav"$0D
         "world/mov_watr.wav"$0D"world/pilot1.wav"$0D"world/pilot2.wav"$0D"wor"
         "ld/pilot3.wav"$0D"world/pump1.wav"$0D"world/pump2.wav"$0D"world/pump"
         "3.wav"$0D"world/pumping.wav"$0D"world/pyramid.wav"$0D"world/quake.wa"
         "v"$0D"world/radio2.wav"$0D"world/radio3.wav"$0D"world/reactor.wav"$0D
         "world/redforce.wav"$0D"world/ric1.wav"$0D"world/ric2.wav"$0D"world/r"
         "ic3.wav"$0D"world/rocks1.wav"$0D"world/scan1.wav"$0D"world/short1.wa"
         "v"$0D"world/spark1.wav"$0D"world/spark2.wav"$0D"world/spark3.wav"$0D
         "world/spark5.wav"$0D"world/spark6.wav"$0D"world/spark7.wav"$0D"world"
         "/steam1.wav"$0D"world/steam2.wav"$0D"world/steam3.wav"$0D"world/stp_"
         "watr.wav"$0D"world/tele1.wav"$0D"world/train1.wav"$0D"world/train2.w"
         "av"$0D"world/turbine1.wav"$0D"world/uplink2.wav"$0D"world/v_bas1.wav"
         $0D"world/v_bas2.wav"$0D"world/v_bas3.wav"$0D"world/v_bas4.wav"$0D"wo"
         "rld/v_bas5.wav"$0D"world/v_bas6.wav"$0D"world/v_cit1.wav"$0D"world/v"
         "_cit2.wav"$0D"world/v_cmd1.wav"$0D"world/v_cmd2.wav"$0D"world/v_fac2"
         ".wav"$0D"world/v_fac3.wav"$0D"world/v_gun1.wav"$0D"world/v_gun2.wav"$0D
         "world/v_war1.wav"$0D"world/ventsys.wav"$0D"world/voice1.wav"$0D"worl"
         "d/voice3.wav"$0D"world/voice4.wav"$0D"world/voice5.wav"$0D"world/voi"
         "ce6.wav"$0D"world/voice7.wav"$0D"world/voice10.wav"$0D"world/voice11"
         ".wav"$0D"world/water1.wav"$0D"world/wind2.wav"$0D"world/x_alarm.wav"$0D
         "world/x_light.wav"$0D"world/xian1.wav"$0D"world/xianbeats.wav"$0D"wo"
         "rld/yelforce.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Func_ Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "doors/dr1_end.wav"$0D"doors/dr1_mid.wav"$0D"doors/dr1.strt.wa"
         "v"$0D"plats/pt1_end.wav"$0D"plats/pt1_mid.wav"$0D"plats/pt1_strt.wav"
         $0D"rotate/h_rot1.wav"$0D"rotate/h_rot2.wav"$0D"switches/butn2.wav"
        Values = "doors/dr1_end.wav"$0D"doors/dr1_mid.wav"$0D"doors/dr1.strt.w"
         "av"$0D"plats/pt1_end.wav"$0D"plats/pt1_mid.wav"$0D"plats/pt1_strt.wa"
         "v"$0D"rotate/h_rot1.wav"$0D"rotate/h_rot2.wav"$0D"switches/butn2.wav"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      noise: =
      {
        Typ = "C"
        Txt = "Player Sounds"
        Hint = "Nunber of sounds = 26"
        Items = "player/burn1.wav"$0D"player/burn2.wav"$0D"player/death4.wav"$0D
         "player/drown1.wav"$0D"player/fall1.wav"$0D"player/fall2.wav"$0D"play"
         "er/fry.wav"$0D"player/gasp1.wav"$0D"player/gasp2.wav"$0D"player/jump"
         "1.wav"$0D"player/land1.wav"$0D"player/lava_in.wav"$0D"player/lava1.w"
         "av"$0D"player/lava2.wav"$0D"player/step1.wav"$0D"player/step2.wav"$0D
         "player/step3.wav"$0D"player/step4.wav"$0D"player/u_breath1.wav"$0D"p"
         "layer/u_breath2.wav"$0D"player/wade1.wav"$0D"player/wade2.wav"$0D"pl"
         "ayer/wade3.wav"$0D"player/watr_in.wav"$0D"player/watr_out.wav"$0D"pl"
         "ayer/watr_un.wav"
        Values = "player/burn1.wav"$0D"player/burn2.wav"$0D"player/death4.wav"$0D
         "player/drown1.wav"$0D"player/fall1.wav"$0D"player/fall2.wav"$0D"play"
         "er/fry.wav"$0D"player/gasp1.wav"$0D"player/gasp2.wav"$0D"player/jump"
         "1.wav"$0D"player/land1.wav"$0D"player/lava_in.wav"$0D"player/lava1.w"
         "av"$0D"player/lava2.wav"$0D"player/step1.wav"$0D"player/step2.wav"$0D
         "player/step3.wav"$0D"player/step4.wav"$0D"player/u_breath1.wav"$0D"p"
         "layer/u_breath2.wav"$0D"player/wade1.wav"$0D"player/wade2.wav"$0D"pl"
         "ayer/wade3.wav"$0D"player/watr_in.wav"$0D"player/watr_out.wav"$0D"pl"
         "ayer/watr_un.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Female Player Sounds"
        Hint = "Nunber of sounds = 18"
        Items = "player/female/death1.wav"$0D"player/female/death2.wav"$0D"pla"
         "yer/female/death3.wav"$0D"player/female/death4.wav"$0D"player/female"
         "/drown.wav"$0D"player/female/fall1.wav"$0D"player/female/fall2.wav"$0D
         "player/female/gurp1.wav"$0D"player/female/gurp2.wav"$0D"player/femal"
         "e/jump1.wav"$0D"player/female/pain25_1.wav"$0D"player/female/pain25_"
         "2.wav"$0D"player/female/pain50_1.wav"$0D"player/female/pain50_2.wav"$0D
         "player/female/pain75_1.wav"$0D"player/female/pain75_2.wav"$0D"player"
         "/female/pain100_1.wav"$0D"player/female/pain100_2.wav"
        Values = "player/female/death1.wav"$0D"player/female/death2.wav"$0D"pl"
         "ayer/female/death3.wav"$0D"player/female/death4.wav"$0D"player/femal"
         "e/drown.wav"$0D"player/female/fall1.wav"$0D"player/female/fall2.wav"$0D
         "player/female/gurp1.wav"$0D"player/female/gurp2.wav"$0D"player/femal"
         "e/jump1.wav"$0D"player/female/pain25_1.wav"$0D"player/female/pain25_"
         "2.wav"$0D"player/female/pain50_1.wav"$0D"player/female/pain50_2.wav"$0D
         "player/female/pain75_1.wav"$0D"player/female/pain75_2.wav"$0D"player"
         "/female/pain100_1.wav"$0D"player/female/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Male Player Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "player/male/bump1.wav"$0D"player/male/death1.wav"$0D"player/m"
         "ale/death2.wav"$0D"player/male/death3.wav"$0D"player/male/death4.wav"
         $0D"player/male/drown1.wav"$0D"player/male/fall1.wav"$0D"player/male/"
         "fall2.wav"$0D"player/male/gurp1.wav"$0D"player/male/gurp2.wav"$0D"pl"
         "ayer/male/jump1.wav"$0D"player/male/pain25_1.wav"$0D"player/male/pai"
         "n25_2.wav"$0D"player/male/pain50_1.wav"$0D"player/male/pain50_2.wav"$0D
         "player/male/pain75_1.wav"$0D"player/male/pain75_2.wav"$0D"player/mal"
         "e/pain100_1.wav"$0D"player/male/pain100_2.wav"
        Values = "player/male/bump1.wav"$0D"player/male/death1.wav"$0D"player/"
         "male/death2.wav"$0D"player/male/death3.wav"$0D"player/male/death4.wa"
         "v"$0D"player/male/drown1.wav"$0D"player/male/fall1.wav"$0D"player/ma"
         "le/fall2.wav"$0D"player/male/gurp1.wav"$0D"player/male/gurp2.wav"$0D
         "player/male/jump1.wav"$0D"player/male/pain25_1.wav"$0D"player/male/p"
         "ain25_2.wav"$0D"player/male/pain50_1.wav"$0D"player/male/pain50_2.wa"
         "v"$0D"player/male/pain75_1.wav"$0D"player/male/pain75_2.wav"$0D"play"
         "er/male/pain100_1.wav"$0D"player/male/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Misc_insane Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "insane/insane1.wav"$0D"insane/insane2.wav"$0D"insane/insane3."
         "wav"$0D"insane/insane4.wav"$0D"insane/insane5.wav"$0D"insane/insane6"
         ".wav"$0D"insane/insane7.wav"$0D"insane/insane8.wav"$0D"insane/insane"
         "9.wav"$0D"insane/insane10.wav"$0D"insane/insane11.wav"
        Values = "insane/insane1.wav"$0D"insane/insane2.wav"$0D"insane/insane3"
         ".wav"$0D"insane/insane4.wav"$0D"insane/insane5.wav"$0D"insane/insane"
         "6.wav"$0D"insane/insane7.wav"$0D"insane/insane8.wav"$0D"insane/insan"
         "e9.wav"$0D"insane/insane10.wav"$0D"insane/insane11.wav"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_berserk Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "berserk/attack.wav"$0D"berserk/berdeth2.wav"$0D"berserk/berid"
         "le1.wav"$0D"berserk/berpain2.wav"$0D"berserk/bersrch1.wav"$0D"berser"
         "k/death.wav"$0D"berserk/idle.wav"$0D"berserk/sight.wav"$0D"berserk/x"
         "fire.wav"
        Values = "berserk/attack.wav"$0D"berserk/berdeth2.wav"$0D"berserk/beri"
         "dle1.wav"$0D"berserk/berpain2.wav"$0D"berserk/bersrch1.wav"$0D"berse"
         "rk/death.wav"$0D"berserk/idle.wav"$0D"berserk/sight.wav"$0D"berserk/"
         "xfire.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_boss1 Sounds"
        Hint = "Nunber of sounds = 7"
        Items = "bosstank/btkdeth1.wav"$0D"bosstank/btkengn1.wav"$0D"bosstank/"
         "btkpain1.wav"$0D"bosstank/btkpain2.wav"$0D"bosstank/btkpain3.wav"$0D
         "bosstank/btkunqv1.wav"$0D"bosstank/btkunqv2.wav"
        Values = "bosstank/btkdeth1.wav"$0D"bosstank/btkengn1.wav"$0D"bosstank"
         "/btkpain1.wav"$0D"bosstank/btkpain2.wav"$0D"bosstank/btkpain3.wav"$0D
         "bosstank/btkunqv1.wav"$0D"bosstank/btkunqv2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_boss2 Sounds"
        Hint = "Nunber of sounds = 6"
        Items = "bosshovr/bhvdeth1.wav"$0D"bosshovr/bhvengn1.wav"$0D"bosshovr/"
         "bhvpain1.wav"$0D"bosshovr/bhvpain2.wav"$0D"bosshovr/bhvpain3.wav"$0D
         "bosshovr/bhvunqv1.wav"
        Values = "bosshovr/bhvdeth1.wav"$0D"bosshovr/bhvengn1.wav"$0D"bosshovr"
         "/bhvpain1.wav"$0D"bosshovr/bhvpain2.wav"$0D"bosshovr/bhvpain3.wav"$0D
         "bosshovr/bhvunqv1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_boss3 Sounds"
        Hint = "Nunber of sounds = 15"
        Items = "boss3/bs3atck1.wav"$0D"boss3/bs3atck2.wav"$0D"boss3/bs3deth1."
         "wav"$0D"boss3/bs3idle1.wav"$0D"boss3/bs3pain1.wav"$0D"boss3/bs3pain2"
         ".wav"$0D"boss3/bs3pain3.wav"$0D"boss3/bsp3srch1.wav"$0D"boss3/bsp3sr"
         "ch2.wav"$0D"boss3/bsp3srch3.wav"$0D"boss3/d_hit.wav"$0D"boss3/step1."
         "wav"$0D"boss3/step2.wav"$0D"boss3/w_loop.wav"$0D"boss3/xfire.wav"
        Values = "boss3/bs3atck1.wav"$0D"boss3/bs3atck2.wav"$0D"boss3/bs3deth1"
         ".wav"$0D"boss3/bs3idle1.wav"$0D"boss3/bs3pain1.wav"$0D"boss3/bs3pain"
         "2.wav"$0D"boss3/bs3pain3.wav"$0D"boss3/bsp3srch1.wav"$0D"boss3/bsp3s"
         "rch2.wav"$0D"boss3/bsp3srch3.wav"$0D"boss3/d_hit.wav"$0D"boss3/step1"
         ".wav"$0D"boss3/step2.wav"$0D"boss3/w_loop.wav"$0D"boss3/xfire.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_brain Sounds"
        Hint = "Nunber of sounds = 14"
        Items = "brain/brnatck1.wav"$0D"brain/brnatck2.wav"$0D"brain/brnatck3."
         "wav"$0D"brain/brndeth1.wav"$0D"brain/brnidle1.wav"$0D"brain/brnidle2"
         ".wav"$0D"brain/brnlens1.wav"$0D"brain/brnpain1.wav"$0D"brain/brnpain"
         "2.wav"$0D"brain/brnsght1.wav"$0D"brain/brnsrch1.wav"$0D"brain/melee1"
         ".wav"$0D"brain/melee2.wav"$0D"brain/melee3.wav"
        Values = "brain/brnatck1.wav"$0D"brain/brnatck2.wav"$0D"brain/brnatck3"
         ".wav"$0D"brain/brndeth1.wav"$0D"brain/brnidle1.wav"$0D"brain/brnidle"
         "2.wav"$0D"brain/brnlens1.wav"$0D"brain/brnpain1.wav"$0D"brain/brnpai"
         "n2.wav"$0D"brain/brnsght1.wav"$0D"brain/brnsrch1.wav"$0D"brain/melee"
         "1.wav"$0D"brain/melee2.wav"$0D"brain/melee3.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_chick Sounds"
        Hint = "Nunber of sounds = 15"
        Items = "chick/chkatck1.wav"$0D"chick/chkatck2.wav"$0D"chick/chkatck3."
         "wav"$0D"chick/chkatck4.wav"$0D"chick/chkatck5.wav"$0D"chick/chkdeth1"
         ".wav"$0D"chick/chkdeth2.wav"$0D"chick/chkfall1.wav"$0D"chick/chkidle"
         "1.wav"$0D"chick/chkidle2.wav"$0D"chick/chkpain1.wav"$0D"chick/chkpai"
         "n2.wav"$0D"chick/chkpain3.wav"$0D"chick/chksght1.wav"$0D"chick/chksr"
         "ch1.wav"
        Values = "chick/chkatck1.wav"$0D"chick/chkatck2.wav"$0D"chick/chkatck3"
         ".wav"$0D"chick/chkatck4.wav"$0D"chick/chkatck5.wav"$0D"chick/chkdeth"
         "1.wav"$0D"chick/chkdeth2.wav"$0D"chick/chkfall1.wav"$0D"chick/chkidl"
         "e1.wav"$0D"chick/chkidle2.wav"$0D"chick/chkpain1.wav"$0D"chick/chkpa"
         "in2.wav"$0D"chick/chkpain3.wav"$0D"chick/chksght1.wav"$0D"chick/chks"
         "rch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_flipper Sounds"
        Hint = "Nunber of sounds = 8"
        Items = "flipper/flpatck1.wav"$0D"flipper/flpatck2.wav"$0D"flipper/flp"
         "deth1.wav"$0D"flipper/flpidle1.wav"$0D"flipper/flppain1.wav"$0D"flip"
         "per/flppain2.wav"$0D"flipper/flpsght1.wav"$0D"flipper/flpsrch1.wav"
        Values = "flipper/flpatck1.wav"$0D"flipper/flpatck2.wav"$0D"flipper/fl"
         "pdeth1.wav"$0D"flipper/flpidle1.wav"$0D"flipper/flppain1.wav"$0D"fli"
         "pper/flppain2.wav"$0D"flipper/flpsght1.wav"$0D"flipper/flpsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_floater Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "floater/fltatck1.wav"$0D"floater/fltatck2.wav"$0D"floater/flt"
         "atck3.wav"$0D"floater/fltdeth1.wav"$0D"floater/fltidle1.wav"$0D"floa"
         "ter/fltpain1.wav"$0D"floater/fltpain2.wav"$0D"floater/fltsght1.wav"$0D
         "floater/fltsrch1.wav"
        Values = "floater/fltatck1.wav"$0D"floater/fltatck2.wav"$0D"floater/fl"
         "tatck3.wav"$0D"floater/fltdeth1.wav"$0D"floater/fltidle1.wav"$0D"flo"
         "ater/fltpain1.wav"$0D"floater/fltpain2.wav"$0D"floater/fltsght1.wav"$0D
         "floater/fltsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_flyer Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "flyer/flyatck1.wav"$0D"flyer/flyatck2.wav"$0D"flyer/flyatck3."
         "wav"$0D"flyer/flydeth1.wav"$0D"flyer/flyidle1.wav"$0D"flyer/flypain1"
         ".wav"$0D"flyer/flypain2.wav"$0D"flyer/flysght1.wav"$0D"flyer/flysrch"
         "1.wav"
        Values = "flyer/flyatck1.wav"$0D"flyer/flyatck2.wav"$0D"flyer/flyatck3"
         ".wav"$0D"flyer/flydeth1.wav"$0D"flyer/flyidle1.wav"$0D"flyer/flypain"
         "1.wav"$0D"flyer/flypain2.wav"$0D"flyer/flysght1.wav"$0D"flyer/flysrc"
         "h1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_gladiator Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "gladiator/death.wav"$0D"gladiator/glddeth2.wav"$0D"gladiator/"
         "gldidle1.wav"$0D"gladiator/gldpain2.wav"$0D"gladiator/gldsrch1.wav"$0D
         "gladiator/melee1.wav"$0D"gladiator/melee2.wav"$0D"gladiator/melee3.w"
         "av"$0D"gladiator/pain.wav"$0D"gladiator/railgun.wav"$0D"gladiator/si"
         "ght.wav"
        Values = "gladiator/death.wav"$0D"gladiator/glddeth2.wav"$0D"gladiator"
         "/gldidle1.wav"$0D"gladiator/gldpain2.wav"$0D"gladiator/gldsrch1.wav"$0D
         "gladiator/melee1.wav"$0D"gladiator/melee2.wav"$0D"gladiator/melee3.w"
         "av"$0D"gladiator/pain.wav"$0D"gladiator/railgun.wav"$0D"gladiator/si"
         "ght.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_gunner Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "gunner/death1.wav"$0D"gunner/gunatck1.wav"$0D"gunner/gunatck2"
         ".wav"$0D"gunner/gunatck3.wav"$0D"gunner/gunidle1.wav"$0D"gunner/gunp"
         "ain1.wav"$0D"gunner/gunpain2.wav"$0D"gunner/gunsrch1.wav"$0D"gunner/"
         "sight1.wav"
        Values = "gunner/death1.wav"$0D"gunner/gunatck1.wav"$0D"gunner/gunatck"
         "2.wav"$0D"gunner/gunatck3.wav"$0D"gunner/gunidle1.wav"$0D"gunner/gun"
         "pain1.wav"$0D"gunner/gunpain2.wav"$0D"gunner/gunsrch1.wav"$0D"gunner"
         "/sight1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_hover Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "hover/hovatck1.wav"$0D"hover/hovdeth1.wav"$0D"hover/hovdeth2."
         "wav"$0D"hover/hovidle1.wav"$0D"hover/hovpain1.wav"$0D"hover/hovpain2"
         ".wav"$0D"hover/hovsght1.wav"$0D"hover/hovsrch1.wav"$0D"hover/hovsrch"
         "2.wav"
        Values = "hover/hovatck1.wav"$0D"hover/hovdeth1.wav"$0D"hover/hovdeth2"
         ".wav"$0D"hover/hovidle1.wav"$0D"hover/hovpain1.wav"$0D"hover/hovpain"
         "2.wav"$0D"hover/hovsght1.wav"$0D"hover/hovsrch1.wav"$0D"hover/hovsrc"
         "h2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_infantry Sounds"
        Hint = "Nunber of sounds = 12"
        Items = "infantry/infatck1.wav"$0D"infantry/infatck2.wav"$0D"infantry/"
         "infatck3.wav"$0D"infantry/infdeth1.wav"$0D"infantry/infdeth2.wav"$0D
         "infantry/infidle1.wav"$0D"infantry/inflies1.wav"$0D"infantry/infpain"
         "1.wav"$0D"infantry/infpain2.wav"$0D"infantry/infsght1.wav"$0D"infant"
         "ry/infsrch1.wav"$0D"infantry/melee2.wav"
        Values = "infantry/infatck1.wav"$0D"infantry/infatck2.wav"$0D"infantry"
         "/infatck3.wav"$0D"infantry/infdeth1.wav"$0D"infantry/infdeth2.wav"$0D
         "infantry/infidle1.wav"$0D"infantry/inflies1.wav"$0D"infantry/infpain"
         "1.wav"$0D"infantry/infpain2.wav"$0D"infantry/infsght1.wav"$0D"infant"
         "ry/infsrch1.wav"$0D"infantry/melee2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_makron Sounds"
        Hint = "Nunber of sounds = 27"
        Items = "makron/bfg_fire.wav"$0D"makron/bfg_hum.wav"$0D"makron/bhit.wa"
         "v"$0D"makron/blaster.wav"$0D"makron/brain1.wav"$0D"makron/death.wav"$0D
         "makron/head1.wav"$0D"makron/head2.wav"$0D"makron/laf1.wav"$0D"makron"
         "/laf2.wav"$0D"makron/laf3.wav"$0D"makron/laf4.wav"$0D"makron/pain1.w"
         "av"$0D"makron/pain2.wav"$0D"makron/pain3.wav"$0D"makron/popup.wav"$0D
         "makron/rail_up.wav"$0D"makron/roar1.wav"$0D"makron/roar2.wav"$0D"mak"
         "ron/spine.wav"$0D"makron/step1.wav"$0D"makron/step2.wav"$0D"makron/v"
         "oice.wav"$0D"makron/voice1.wav"$0D"makron/voice2.wav"$0D"makron/voic"
         "e3.wav"$0D"makron/voice4.wav"
        Values = "makron/bfg_fire.wav"$0D"makron/bfg_hum.wav"$0D"makron/bhit.w"
         "av"$0D"makron/blaster.wav"$0D"makron/brain1.wav"$0D"makron/death.wav"
         $0D"makron/head1.wav"$0D"makron/head2.wav"$0D"makron/laf1.wav"$0D"mak"
         "ron/laf2.wav"$0D"makron/laf3.wav"$0D"makron/laf4.wav"$0D"makron/pain"
         "1.wav"$0D"makron/pain2.wav"$0D"makron/pain3.wav"$0D"makron/popup.wav"
         $0D"makron/rail_up.wav"$0D"makron/roar1.wav"$0D"makron/roar2.wav"$0D"m"
         "akron/spine.wav"$0D"makron/step1.wav"$0D"makron/step2.wav"$0D"makron"
         "/voice.wav"$0D"makron/voice1.wav"$0D"makron/voice2.wav"$0D"makron/vo"
         "ice3.wav"$0D"makron/voice4.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_medic Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "medic/idle.wav"$0D"medic/medatck1.wav"$0D"medic/medatck2.wav"$0D
         "medic/medatck3.wav"$0D"medic/medatck4.wav"$0D"medic/medatck5.wav"$0D
         "medic/meddeth1.wav"$0D"medic/medpain1.wav"$0D"medic/medpain2.wav"$0D
         "medic/medsght1.wav"$0D"medic/medsrch1.wav"
        Values = "medic/idle.wav"$0D"medic/medatck1.wav"$0D"medic/medatck2.wav"
         $0D"medic/medatck3.wav"$0D"medic/medatck4.wav"$0D"medic/medatck5.wav"$0D
         "medic/meddeth1.wav"$0D"medic/medpain1.wav"$0D"medic/medpain2.wav"$0D
         "medic/medsght1.wav"$0D"medic/medsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_mutant Sounds"
        Hint = "Nunber of sounds = 13"
        Items = "mutant/mutatck1.wav"$0D"mutant/mutatck2.wav"$0D"mutant/mutatc"
         "k3.wav"$0D"mutant/mutdeth1.wav"$0D"mutant/mutidle1.wav"$0D"mutant/mu"
         "tpain1.wav"$0D"mutant/mutpain2.wav"$0D"mutant/mutsght1.wav"$0D"mutan"
         "t/mutsrch1.wav"$0D"mutant/step1.wav"$0D"mutant/step2.wav"$0D"mutant/"
         "step3.wav"$0D"mutant/thud1.wav"
        Values = "mutant/mutatck1.wav"$0D"mutant/mutatck2.wav"$0D"mutant/mutat"
         "ck3.wav"$0D"mutant/mutdeth1.wav"$0D"mutant/mutidle1.wav"$0D"mutant/m"
         "utpain1.wav"$0D"mutant/mutpain2.wav"$0D"mutant/mutsght1.wav"$0D"muta"
         "nt/mutsrch1.wav"$0D"mutant/step1.wav"$0D"mutant/step2.wav"$0D"mutant"
         "/step3.wav"$0D"mutant/thud1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_parasite Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "parasite/paratck1.wav"$0D"parasite/paratck2.wav"$0D"parasite/"
         "paratck3.wav"$0D"parasite/paratck4.wav"$0D"parasite/pardeth1.wav"$0D
         "parasite/paridle1.wav"$0D"parasite/paridle2.wav"$0D"parasite/parpain"
         "1.wav"$0D"parasite/parpain2.wav"$0D"parasite/parsght1.wav"$0D"parasi"
         "te/parsrch1.wav"
        Values = "parasite/paratck1.wav"$0D"parasite/paratck2.wav"$0D"parasite"
         "/paratck3.wav"$0D"parasite/paratck4.wav"$0D"parasite/pardeth1.wav"$0D
         "parasite/paridle1.wav"$0D"parasite/paridle2.wav"$0D"parasite/parpain"
         "1.wav"$0D"parasite/parpain2.wav"$0D"parasite/parsght1.wav"$0D"parasi"
         "te/parsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_soldier Sounds"
        Hint = "Nunber of sounds = 12"
        Items = "soldier/solatck1.wav"$0D"soldier/solatck2.wav"$0D"soldier/sol"
         "atck3.wav"$0D"soldier/soldeth1.wav"$0D"soldier/soldeth2.wav"$0D"sold"
         "ier/soldeth3.wav"$0D"soldier/solidle1.wav"$0D"soldier/solpain1.wav"$0D
         "soldier/solpain2.wav"$0D"soldier/solpain3.wav"$0D"soldier/solsght1.w"
         "av"$0D"soldier/solsrch1.wav"
        Values = "soldier/solatck1.wav"$0D"soldier/solatck2.wav"$0D"soldier/so"
         "latck3.wav"$0D"soldier/soldeth1.wav"$0D"soldier/soldeth2.wav"$0D"sol"
         "dier/soldeth3.wav"$0D"soldier/solidle1.wav"$0D"soldier/solpain1.wav"$0D
         "soldier/solpain2.wav"$0D"soldier/solpain3.wav"$0D"soldier/solsght1.w"
         "av"$0D"soldier/solsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_tank Sounds"
        Hint = "Nunber of sounds = 18"
        Items = "tank/death.wav"$0D"tank/pain.wav"$0D"tank/rocket.wav"$0D"tank"
         "/sight1.wav"$0D"tank/step.wav"$0D"tank/thud.wav"$0D"tank/tnkatck1.wa"
         "v"$0D"tank/tnkatck3.wav"$0D"tank/tnkatck4.wav"$0D"tank/tnkatck5.wav"$0D
         "tank/tnkatk2a.wav"$0D"tank/tnkatk2b.wav"$0D"tank/tnkatk2c.wav"$0D"ta"
         "nk/tnkatk2d.wav"$0D"tank/tnkatk2e.wav"$0D"tank/tnkdeth2.wav"$0D"tank"
         "/tnkidle1.wav"$0D"tank/tnkpain2.wav"
        Values = "tank/death.wav"$0D"tank/pain.wav"$0D"tank/rocket.wav"$0D"tan"
         "k/sight1.wav"$0D"tank/step.wav"$0D"tank/thud.wav"$0D"tank/tnkatck1.w"
         "av"$0D"tank/tnkatck3.wav"$0D"tank/tnkatck4.wav"$0D"tank/tnkatck5.wav"
         $0D"tank/tnkatk2a.wav"$0D"tank/tnkatk2b.wav"$0D"tank/tnkatk2c.wav"$0D
         "tank/tnkatk2d.wav"$0D"tank/tnkatk2e.wav"$0D"tank/tnkdeth2.wav"$0D"ta"
         "nk/tnkidle1.wav"$0D"tank/tnkpain2.wav"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "The Reckoning - Xatrix"
        Typ = "S"
      }
      noise: =
      {
        typ = "C"
        txt = "Item Sounds"
        Hint = "Nunber of sounds = 3"
        items = "items/quadfire1.wav"$0D"items/quadfire2.wav"$0D"items/quadfir"
         "e3."
        Values = "items/quadfire1.wav"$0D"items/quadfire2.wav"$0D"items/quadfi"
         "re3.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Miscellaneous Sounds"
        Hint = "Nunber of sounds = 4"
        Items = "misc/alarm.wav"$0D"misc/welder1.wav"$0D"misc/welder2.wav"$0D"m"
         "isc/welder3.wav"
        Values = "misc/alarm.wav"$0D"misc/welder1.wav"$0D"misc/welder2.wav"$0D
         "misc/welder3.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Weapon Sounds"
        Hint = "Nunber of sounds = 8"
        Items = "weapons/phaloop.wav"$0D"weapons/plasexpl.wav"$0D"weapons/plas"
         "shot.wav"$0D"weapons/rippfire.wav"$0D"weapons/trapcock.wav"$0D"weapo"
         "ns/trapdown.wav"$0D"weapons/traploop.wav"$0D"weapons/trapsuck.wav"
        Values = "weapons/phaloop.wav"$0D"weapons/plasexpl.wav"$0D"weapons/pla"
         "sshot.wav"$0D"weapons/rippfire.wav"$0D"weapons/trapcock.wav"$0D"weap"
         "ons/trapdown.wav"$0D"weapons/traploop.wav"$0D"weapons/trapsuck.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "World Sounds"
        Hint = "Nunber of sounds = 36"
        Items = "world/1.wav"$0D"world/2.wav"$0D"world/3.wav"$0D"world/4.wav"$0D
         "world/5.wav"$0D"world/6.wav"$0D"world/7.wav"$0D"world/8.wav"$0D"worl"
         "d/9.wav"$0D"world/10.wav"$0D"world/20sec.wav"$0D"world/30sec.wav"$0D
         "world/40sec.wav"$0D"world/autoeng.wav"$0D"world/chatter1.wav"$0D"wor"
         "ld/chatter2.wav"$0D"world/chatter3.wav"$0D"world/chatter4.wav"$0D"wo"
         "rld/chatter5.wav"$0D"world/chatter6.wav"$0D"world/commander.wav"$0D"w"
         "orld/conveyor.wav"$0D"world/coredis.wav"$0D"world/critical.wav"$0D"w"
         "orld/datafiles.wav"$0D"world/destin.wav"$0D"world/flycrash.wav"$0D"w"
         "orld/initauto.wav"$0D"world/lid.wav"$0D"world/lidmachine.wav"$0D"wor"
         "ld/moonflyby.wav"$0D"world/primary.wav"$0D"world/secondary.wav"$0D"w"
         "orld/terminate.wav"$0D"world/wcavelow.wav"$0D"world/windcave.wav"
        Values = "world/1.wav"$0D"world/2.wav"$0D"world/3.wav"$0D"world/4.wav"$0D
         "world/5.wav"$0D"world/6.wav"$0D"world/7.wav"$0D"world/8.wav"$0D"worl"
         "d/9.wav"$0D"world/10.wav"$0D"world/20sec.wav"$0D"world/30sec.wav"$0D
         "world/40sec.wav"$0D"world/autoeng.wav"$0D"world/chatter1.wav"$0D"wor"
         "ld/chatter2.wav"$0D"world/chatter3.wav"$0D"world/chatter4.wav"$0D"wo"
         "rld/chatter5.wav"$0D"world/chatter6.wav"$0D"world/commander.wav"$0D"w"
         "orld/conveyor.wav"$0D"world/coredis.wav"$0D"world/critical.wav"$0D"w"
         "orld/datafiles.wav"$0D"world/destin.wav"$0D"world/flycrash.wav"$0D"w"
         "orld/initauto.wav"$0D"world/lid.wav"$0D"world/lidmachine.wav"$0D"wor"
         "ld/moonflyby.wav"$0D"world/primary.wav"$0D"world/secondary.wav"$0D"w"
         "orld/terminate.wav"$0D"world/wcavelow.wav"$0D"world/windcave.wav"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_gek Sounds"
        Hint = "Nunber of sounds = 16"
        Items = "gek/gek_high.wav"$0D"gek/gek_low.wav"$0D"gek/gek_mid.wav"$0D"g"
         "ek/gk_amb.wav"$0D"gek/gk_atck1.wav"$0D"gek/gk_atck2.wav"$0D"gek/gk_a"
         "tck3.wav"$0D"gek/gk_deth1.wav"$0D"gek/gk_idle1.wav"$0D"gek/gk_pain1."
         "wav"$0D"gek/gk_pain2.wav"$0D"gek/gk_sght1.wav"$0D"gek/gk_step1.wav"$0D
         "gek/gk_step2.wav"$0D"gek/gk_step3.wav"$0D"gek/wolfboy3.wav"
        Values = "gek/gek_high.wav"$0D"gek/gek_low.wav"$0D"gek/gek_mid.wav"$0D
         "gek/gk_amb.wav"$0D"gek/gk_atck1.wav"$0D"gek/gk_atck2.wav"$0D"gek/gk_"
         "atck3.wav"$0D"gek/gk_deth1.wav"$0D"gek/gk_idle1.wav"$0D"gek/gk_pain1"
         ".wav"$0D"gek/gk_pain2.wav"$0D"gek/gk_sght1.wav"$0D"gek/gk_step1.wav"$0D
         "gek/gk_step2.wav"$0D"gek/gk_step3.wav"$0D"gek/wolfboy3.wav"
      }
    }
    t_spawner1_form:form =
    {
      Caption = "Items Spawner"
      target: =
      {
        typ = "C"
        txt = "Weapons Classes"
        items = "weapon_shotgun"$0D"weapon_supershotgun"$0D"weapon_machinegun"$0D
         "weapon_chaingun"$0D"weapon_grenadelauncher"$0D"weapon_rocketlauncher"
         $0D"weapon_hyperblaster"$0D"weapon_railgun"$0D"weapon_bfg"$0D"weapon_"
         "boomer"$0D"weapon_phalanx"
        values = "weapon_shotgun"$0D"weapon_supershotgun"$0D"weapon_machinegun"
         $0D"weapon_chaingun"$0D"weapon_grenadelauncher"$0D"weapon_rocketlaunc"
         "her"$0D"weapon_hyperblaster"$0D"weapon_railgun"$0D"weapon_bfg"$0D"we"
         "apon_boomer"$0D"weapon_phalanx"
      }
      target: =
      {
        typ = "C"
        txt = "Ammo Classes"
        items = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rocke"
         "ts"$0D"ammo_cells"$0D"ammo_slugs"$0D"ammo_magslug"$0D"ammo_trap"
        values = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rock"
         "ets"$0D"ammo_cells"$0D"ammo_slugs"$0D"ammo_magslug"$0D"ammo_trap"
      }
      target: =
      {
        typ = "C"
        txt = "Monster Classes"
        items = "monster_berserk"$0D"monster_boss2"$0D"monster_brain"$0D"monst"
         "er_chick"$0D"monster_flipper"$0D"monster_floater"$0D"monster_flyer"$0D
         "monster_gladiator"$0D"monster_gunner"$0D"monster_hover"$0D"monster_i"
         "nfantry"$0D"monster_jorg"$0D"monster_mutant"$0D"monster_medic"$0D"mo"
         "nster_parasite"$0D"monster_soldier"$0D"monster_soldier_light"$0D"mon"
         "ster_soldier_ss"$0D"monster_tank"$0D"monster_tank_commander"$0D"mons"
         "ter_supertank"$0D"monster_boss3_stand"$0D"monster_commander_body"$0D
         "monster_soldier_hypergun"$0D"monster_soldier_lasergun"$0D"monster_so"
         "ldier_ripper"$0D"monster_chick_heat"$0D"monster_gladb"$0D"monster_bo"
         "ss5"$0D"monster_fixbot"
        values = "monster_berserk"$0D"monster_boss2"$0D"monster_brain"$0D"mons"
         "ter_chick"$0D"monster_flipper"$0D"monster_floater"$0D"monster_flyer"$0D
         "monster_gladiator"$0D"monster_gunner"$0D"monster_hover"$0D"monster_i"
         "nfantry"$0D"monster_jorg"$0D"monster_mutant"$0D"monster_medic"$0D"mo"
         "nster_parasite"$0D"monster_soldier"$0D"monster_soldier_light"$0D"mon"
         "ster_soldier_ss"$0D"monster_tank"$0D"monster_tank_commander"$0D"mons"
         "ter_supertank"$0D"monster_boss3_stand"$0D"monster_commander_body"$0D
         "monster_soldier_hypergun"$0D"monster_soldier_lasergun"$0D"monster_so"
         "ldier_ripper"$0D"monster_chick_heat"$0D"monster_gladb"$0D"monster_bo"
         "ss5"$0D"monster_fixbot"
      }
      target: =
      {
        typ = "C"
        txt = "Misc Classes"
        items = "misc_banner"$0D"misc_blackhole"$0D"misc_deadsoldier"$0D"misc_"
         "easterchick"$0D"misc_easterchick2"$0D"misc_eastertank"$0D"misc_explo"
         "box"$0D"misc_gib_arm"$0D"misc_gib_head"$0D"misc_gib_leg"$0D"misc_ins"
         "ane"$0D"misc_satellite_dish"$0D"misc_teleporter_dest"$0D"misc_bigvip"
         "er"
        values = "misc_banner"$0D"misc_blackhole"$0D"misc_deadsoldier"$0D"misc"
         "_easterchick"$0D"misc_easterchick2"$0D"misc_eastertank"$0D"misc_expl"
         "obox"$0D"misc_gib_arm"$0D"misc_gib_head"$0D"misc_gib_leg"$0D"misc_in"
         "sane"$0D"misc_satellite_dish"$0D"misc_teleporter_dest"$0D"misc_bigvi"
         "per"
      }
      target: =
      {
        typ = "C"
        txt = "Key Classes"
        items = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"$0D
         "key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"$0D"key_green_key"
        values = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"
         $0D"key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"$0D"key_green_key"
      }
      target: =
      {
        typ = "C"
        txt = "Item Classes"
        items = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_invulnerabilit"
         "y"$0D"item_pack"$0D"item_power_screen"$0D"item_power_shield"$0D"item"
         "_quad"$0D"item_silencer"$0D"item_quadfire"
        values = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_invulnerabilit"
         "y"$0D"item_pack"$0D"item_power_screen"$0D"item_power_shield"$0D"item"
         "_quad"$0D"item_silencer"$0D"item_quadfire"
      }
    }
  }
  Entity forms.fctx =
  {
    t_soundbrowser:incl =
    {
      txt = "&"
      Typ = "EP"
      BasePath = "$Game\tmpQuArK\sound"
      CutPath = "$Game\?\?\"
      DefExt = "wav"
      DirSep = "/"
    }
    t_noise1:incl =
    {
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        form = "t_noise1_form:form"
        hint = "Available .WAV files"
      }
    }
    ammo_magslug:form =
    {
      Help = "Ammo for the Phalanx."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/objects/ammo/tris.md2"
      mdlskin = ""
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    ammo_trap:form =
    {
      Help = "Trap."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_trap/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
      }
    }
    item_quadfire:form =
    {
      Help = "Shortens reload time by half"
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/quadfire/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
      }
    }
    key_green_key:form =
    {
      Help = "Green Key card"
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/green_key/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    func_object_repair:form =
    {
      Help = "Object to be repaired"
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "The delay in seconds for spark to occur. (Default=1.0)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_object_repair will be inhibited and not appear when s"
         "kill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_object_repair will be inhibited and not appear when s"
         "kill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_object_repair will be inhibited and not appear when s"
         "kill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_object_repair will be inhibited and not appear when d"
         "eathmatch=1."
      }
    }
    func_train:form =
    {
      Help = "Trains are moving platforms that players can ride."
      dmg: =
      {
        Txt = "&"
        Hint = "The damage inflicted by the func_train on entities that block "
         "its progress."$0D"Ignored if BLOCK_STOPS is set. (Default=2)."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise1_form:form"
        hint = "Available .WAV files"
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in units/second that the func_train moves. (Default=100)"
         "."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the first path_corner on the func_train 's route"
         "."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the func_train."$0D"Unnamed func_train will always sta"
         "rt on, regardless of the START_ON setting."
      }
      team: =
      {
        Txt = "&"
        Hint = "Team name of the func_train."$0D"Trains with an identical team"
         " name will move together, and will all stop if one is blocked."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start On"
        Hint = "By default a func_train with a targetname will only start movi"
         "ng when triggered by another entity."$0D"If you set the START_ON spa"
         "wnflag then the func_train will start moving when the level starts."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Toggle"
        Hint = "If set, allows the func_train to be toggled on/off multiple ti"
         "mes."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Block Stops"
        Hint = "The The func_train will stop completely when an entity is bloc"
         "king its way."$0D"The blocking entity will not take damage, even if "
         "a positive dmg value is used."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The func_train will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The func_train will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The func_train will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The func_train will be inhibited and not appear when deathmatc"
         "h=1."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Surface Lighting"
        Typ = "S"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
        Typ = ""
        Hint = ""
      }
      _distance: =
      {
        txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
      Title: =
      {
        Txt = "BModel Appearance"
        Typ = "S"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        txt = "&"
        Typ = ""
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Txt = ""
        Typ = "S"
      }
    }
    misc_actor:form =
    {
      Help = "This isn't functional yet."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "players/cyborg/tris.md2"
      mdlskin = "players/cyborg/ps9000.pcx"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the actor on the XY plane. (Defa"
         "ult=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the actor in 3 dimensions as def"
         "ined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the actor will move to when ang"
         "ered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the actor's deat"
         "h."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the actor upon his de"
         "ath."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the a"
         "ctor's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the actor will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific actor."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "Target and entity to be triggered."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_actor will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_actor will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_actor will be inhibited and not appear when skill=2 o"
         "r greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = ""
      }
    }
    misc_amb4:form =
    {
      Help = "Mal's amb4.wav looping sound that fills the whole level."
      bbox = '-8 -8 -8 8 8 8'
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_amb4. Use this to make it disappear "
         "by making it triggered by killtarget."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_amb4 will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_amb4 will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_amb4 will be inhibited and not appear when skill=2 or"
         " greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_amb4 will be inhibited and not appear when deathmatch"
         "=1."
      }
    }
    misc_crashviper:form =
    {
      Help = "Large viper, about to crash"
      bbox = '-176 -120 -24 176 120 72'
      mdl = "models/ships/bigviper/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies the speed of the misc_crashviper, in units/sec. (Def"
         "ault=300)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the first path_corner in a path_corner sequence "
         "that the misc_crashviper will follow."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_crashviper. Must be triggered in ord"
         "er to work."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_crashviper will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_crashviper will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_crashviper will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_crashviper will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    misc_insane:form =
    {
      Help = "This is the Soldier gone mad."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/insane/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the insane guy on the XY plane. "
         "(Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the insane guy in 3 dimensions, "
         "defined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the insane guy will move to whe"
         "n triggered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the insane guy's"
         " death."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the insane guy upon h"
         "is death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the i"
         "nsane guy's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the insane guy will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific insane guy."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "The misc_insane won't move to his point_combat until he sees t"
         "he player, or until the player injures him."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The misc_insane won't appear in the map until his targetname i"
         "s called."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Crawl"
        Hint = "Insane guy crawls instead of walks."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Crucified"
        Hint = "The misc_insane is in an immobile crucified position."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Stand Ground"
        Hint = "The misc_insane will stand in place and never walk around."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Always Stand"
        Hint = "The misc_insane will never drop to his knees."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_insane will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_insane will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_insane will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = ""
      }
    }
    misc_nuke:form =
    {
      Help = "Nuke Kills all monsters & players when fired. Only used one time"
       "."
      bbox = '-8 -8 -8 8 8 8'
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_nuke. Must be triggered in order to "
         "work."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_nuke will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_nuke will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_nuke will be inhibited and not appear when skill=2 or"
         " greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_nuke will be inhibited and not appear when deathmatch"
         "=1."
      }
    }
    misc_transport:form =
    {
      Help = "Maxx's transport at end of game."
      bbox = '-256 -256 -64 256 256 64'
      mdl = "models/objects/ship/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies the speed of the misc_transport, in units/sec. (Defa"
         "ult=300)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the first path_corner in a path_corner sequence "
         "that the misc_transport will follow."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_transport. (Must be triggered in ord"
         "er to work.)"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Trigger Spawn"
        Hint = "Used to spawn the transport in. Setting on by default."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_transport will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_transport will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_transport will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_transport will be inhibited and not appear when death"
         "match=1."
      }
    }
    misc_viper_missile:form =
    {
      Help = "Viper missile"
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/objects/bomb/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the amount of damage hit points the misc_viper_missi"
         "le will generate at its origin. (Default=1000)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the v"
         "iper missile explodes."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the first path_corner on the misc_viper_missile "
         "'s route."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_viper_missile. Must be triggered in "
         "order to work."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The misc_viper_missile will be inhibited and not appear when s"
         "kill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The misc_viper_missile will be inhibited and not appear when s"
         "kill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The misc_viper_missile will be inhibited and not appear when s"
         "kill=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The misc_viper_missile will be inhibited and not appear when d"
         "eathmatch=1."
      }
    }
    monster_berserk:form =
    {
      Help = "This is the Berserker."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/berserk/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_brain:form =
    {
      Help = "Enhanced Brains Lasers from his eyes."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/brain/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_boss2:form =
    {
      Help = "This is the flying Boss (Hornet)."
      bbox = '-56 -56 0 56 56 80'
      mdl = "models/monsters/boss2/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_boss5:form =
    {
      Help = "This is Enhanced SuperTank with shield."
      bbox = '-64 -64 0 64 64 112'
      mdl = "models/monsters/boss5/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_chick:form =
    {
      Help = "This is the Iron Maiden (Chick)."
      bbox = '-16 -16 0 16 16 56'
      mdl = "models/monsters/bitch/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon her "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_chick_heat:form =
    {
      Help = "This is Iron Maiden with heatseeking rockets."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/bitch/tris.md2"
      mdlskin = "models/monsters/bitch/bit_01.pcx"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_fixbot:form =
    {
      Help = "This is Repair Bot. If no Spawnflags are set fixbot will wait fo"
       "r player to pass by then attack."
      bbox = '-32 -32 -24 32 32 24'
      mdl = "models/monsters/fixbot/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Repair"
        Hint = "Repair Bot will search out func_object_repair's and ignore pla"
         "yers unless attacked."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Fixit"
        Hint = "If checked Repair Bot will be passive towards the player unles"
         "s fired upon."$0D"He'll re-animate dead monsters. And he'll look for"
         " func_object_repair entities to fix."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Take Off"
        Hint = "Repair Bot raises and searches for func_object_repair's."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Landing"
        Hint = "Repair Bot drops almost to floor height and searches for func_"
         "object_repair's."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_flipper:form =
    {
      Help = "This is the Barracuda Shark."
      bbox = '-16 -16 -12 16 16 32'
      mdl = "models/monsters/flipper/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_floater:form =
    {
      Help = "This is the Technician."
      bbox = '-24 -24 -24 24 24 32'
      mdl = "models/monsters/float/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_flyer:form =
    {
      Help = "This is the Flyer, armed with Laser Blasters."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/flyer/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_gekk:form =
    {
      Help = "This is Gekk, Fires a small blaster type weapon. Also jumps (Hig"
       "h)."
      bbox = '-24 -24 -24 24 24 24'
      mdl = "models/monsters/gekk/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Chant"
        Hint = "If checked the Gekk will chant"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_gladb:form =
    {
      Help = "This is Enhanced Gladiator with power shield. Uses a Phalanx wea"
       "pon."
      bbox = '-32 -32 -24 32 32 64'
      mdl = "models/monsters/gladb/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_gladiator:form =
    {
      Help = "This is the Gladiator."
      bbox = '-32 -32 -24 32 32 64'
      mdl = "models/monsters/gladiatr/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_gunner:form =
    {
      Help = "This is the Gunner, armed with a Chain Gun and a Grenade Launche"
       "r."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/gunner/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_hover:form =
    {
      Help = "This is the Icarus."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/hover/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_infantry:form =
    {
      Help = "This is the Enforcer, armed with a Chain Gun."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/infantry/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_jorg:form =
    {
      Help = "This is the Jorg. When you kill him, you'll meet Makron."
      bbox = '-80 -80 0 80 80 140'
      mdl = "models/monsters/boss3/jorg/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_makron:form =
    {
      Help = "This is the Makron (no Spawn function)"
      bbox = '-30 -30 0 30 30 90'
      mdl = "models/monsters/boss3/rider/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_medic:form =
    {
      Help = "This is the Medic."
      bbox = '-24 -24 -24 24 24 32'
      mdl = "models/monsters/medic/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_mutant:form =
    {
      Help = "This is the Mutant."
      bbox = '-32 -32 -24 32 32 48'
      mdl = "models/monsters/mutant/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_parasite:form =
    {
      Help = "This is the Parasite."
      bbox = '-16 -16 -24 16 16 24'
      mdl = "models/monsters/parasite/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_soldier:form =
    {
      Help = "This is the Guard, armed with a Machine Gun."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldier/tris.md2"
      mdlskin = '2'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_soldier_hypergun:form =
    {
      Help = "This is Hyper Blaster Guard."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldierh/tris.md2"
      mdlskin = "models/monsters/soldierh/sold01.pcx"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_soldier_lasergun:form =
    {
      Help = "This is Laser Guard."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldierh/tris.md2"
      mdlskin = "models/monsters/soldierh/sold02.pcx"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_soldier_light:form =
    {
      Help = "This is the Guard, armed with a Blaster."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldier/tris.md2"
      mdlskin = '0'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_soldier_ripper:form =
    {
      Help = "This is Ripper Guard."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldierh/tris.md2"
      mdlskin = "models/monsters/soldierh/sold03.pcx"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_soldier_ss:form =
    {
      Help = "This is the Guard, armed with a Shot Gun."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldier/tris.md2"
      mdlskin = '4'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_supertank:form =
    {
      Help = "This is the Super Tank."
      bbox = '-64 -64 0 64 64 112'
      mdl = "models/monsters/boss1/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_tank:form =
    {
      Help = "This is the Tank."
      bbox = '-32 -32 -16 32 32 72'
      mdl = "models/monsters/tank/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    monster_tank_commander:form =
    {
      Help = "This is the Tank Commander."
      bbox = '-32 -32 -16 32 32 72'
      mdl = "models/monsters/tank/tris.md2"
      mdlskin = '2'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_item1_form:form"
        Hint = "Available Classname Spawn"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Trigger Spawn"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy. "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        Cap = "Not in Easy"
        Hint = "The monster will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        Cap = "Not in Normal"
        Hint = "The monster will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        Cap = "Not in Hard"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        Cap = "Not in Deathmatch"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
      }
    }
    rotating_light:form =
    {
      Help = "Rotating red strobe light."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/light/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the rotating_light on the XY pla"
         "ne. (Default=0)."
      }
      health: =
      {
        Txt = "&"
        Hint = "Specifies hit points before the rotating_light will be killed."
         " (Default=10)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific rotating_light. Set a targetname to switc"
         "h the light on and off."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start Off"
        Hint = "Sets the light to be inactive when the map loads."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Alarm"
        Hint = "If Alarm is set, a siren will sound upon triggering."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The rotating_light will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The rotating_light will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The rotating_light will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The rotating_light will be inhibited and not appear when death"
         "match=1."
      }
    }
    target_mal_laser:form =
    {
      Help = "Mal's laser"
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/laser/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies an aiming direction on the XY plane. (-1 is up, -2 i"
         "s down). (Default=0)."$0D"Ignored if target is used."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies an aiming direction in 3 dimensions, defined by pitc"
         "h and yaw (roll is ignored). (Default=0 0 0)."$0D"Ignored if target "
         "is used."
      }
      dmg: =
      {
        txt = "&"
        Hint = "Specifies the number of damage hit points the laser will do ev"
         "ery 0.1 seconds. (Default=5)."$0D"If set to a negative value, the la"
         "ser will give health."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Laser pulse will be on. (Default=0.1)"
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity the laser will fire at."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_mal_laser."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Firing rate per second (Default=0.1)"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Start On"
        Hint = "The laser will be active when the map loads."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Red"
        Hint = "Set the Laser color to Red"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Green"
        Hint = "Set the Laser color to Green"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X8"
        Cap = "Blue"
        Hint = "Set the Laser color to Blue"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X16"
        Cap = "Yellow"
        Hint = "Set the Laser color to Yellow"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X32"
        Cap = "Orange"
        Hint = "Set the Laser color to Orange"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X64"
        Cap = "Fat"
        Hint = "Doubles the diameter of the beam."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_mal_laser will be inhibited and not appear when ski"
         "ll=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_mal_laser will be inhibited and not appear when ski"
         "ll=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_mal_laser will be inhibited and not appear when ski"
         "ll=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_mal_laser will be inhibited and not appear when dea"
         "thmatch=1."
      }
    }
    target_spawner:form =
    {
      Help = "Set target to the type of entity you want spawned. Useful for sp"
       "awning monsters and gibs."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the direction on the XY plane that the spawner will "
         "throw its spawned item. (-1 is up, -2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the direction in 3 dimensions, defined by pitch and "
         "yaw (roll is ignored) that the spawner will throw its spawned item. "
         "(Default=0 0 0)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies the speed in units/second that the spawner will thro"
         "w its spawned item."
      }
      target: =
      {
        Txt = "&"
        Hint = "Specifies the classname of the item to spawn."
      }
      target: =
      {
        Txt = " "
        Typ = "B"
        Cap = "classname spawn...."
        Form = "t_spawner1_form:form"
        Hint = "Available Classname Spawn"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_spawner."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Ambush"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."$0D"Used when spawning a Monster."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Sight"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"Used when spawning a Monster."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_spawner will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_spawner will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_spawner will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_spawner will be inhibited and not appear when death"
         "match=1."
      }
    }
    target_speaker:form =
    {
      Help = "Normal sounds play each time the target is used.  The reliable f"
       "lag can be set for crucial voiceovers."
      bbox = '-8 -8 -8 8 8 8'
      attenuation: =
      {
        Txt = "&"
        Typ = "C"
        Items = "-1) Send to whole level"$0D"1) Normal fighting sounds"$0D"2) "
         "Idle sound level"$0D"3) Ambient sound level"
        Values = "-1"$0D"1"$0D"2"$0D"3"
        Hint = "Specifies how the played sound will attenuate with distance fr"
         "om the speaker origin."$0D"Attenuation=3 will be used if LOOPED_ON o"
         "r LOOPED_OFF are set."
      }
      noise: =
      {
        txt = "&"
        Typ = "EP"
        BasePath = "$Game\tmpQuArK\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
      }
      noise: =
      {
        Txt = " "
        Typ = "B"
        Cap = "sounds..."
        Form = "t_noise1_form:form"
        hint = "Available .WAV files"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific speaker."
      }
      volume: =
      {
        Txt = "&"
        Hint = "Volume levels can be values of 0.0 to 1.0. 1.0 being the loude"
         "st."$0D"If volume is left blank then the default volume is set to 1."
         " A volume of .1 will barely be audible."$0D"If there are multiple ta"
         "rget_speaker entities with the same sound playing at the same time t"
         "hen"$0D"the volume will increase beyond normal but excessive target_"
         "speakers will do nothing beyond a certain point."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Looped On"
        Hint = "When looped-on is set then the sound will start on when the le"
         "vel is started and stay on until triggered."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Looped Off"
        Hint = "The sound will start off and then when trigger will start and "
         "stay on."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Reliable"
        Hint = "It makes the sound that is marked as reliable to override all "
         "the other sounds that are play ing at the same time."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The target_speaker will be inhibited and not appear when skill"
         "=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The target_speaker will be inhibited and not appear when skill"
         "=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The target_speaker will be inhibited and not appear when skill"
         "=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The target_speaker will be inhibited and not appear when death"
         "match=1."
      }
    }
    trigger_key:form =
    {
      Help = "A relay trigger that only fires it's targets if player has the p"
       "roper key.  Use - item - to specify the required key."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the trigger_key will fir"
         "e after being triggered. Default=0."
      }
      item: =
      {
        Txt = "&"
        Typ = "C"
        Items = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"$0D
         "key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"$0D"key_green_key"
        values = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"
         $0D"key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"$0D"key_green_key"
        Hint = "Classname of the entity required to trigger the trigger_key. f"
         "or example - key_blue_key."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_key fires."
      }
      message: =
      {
        Txt = "&"
        Hint = "Character string to be printed to the screen when the trigger_"
         "key fires."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger_key "
         "fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_key. Usually a trigger_multiple i"
         "s used."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The trigger_key will be inhibited and not appear when skill=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The trigger_key will be inhibited and not appear when skill=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The trigger_key will be inhibited and not appear when skill=2 "
         "or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The trigger_key will be inhibited and not appear when deathmat"
         "ch=1."
      }
    }
    trigger_push:form =
    {
      Help = "Pushes the player."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the direction angle on the XY plane that the trigger"
         "_push will throw other entities. (Default=0). (-1 is up, -2 is down)"
         "."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the direction angle in 3 dimensions that the trigger"
         "_push will throw other entities, defined by pitch, yaw, and roll. (D"
         "efault=0 0 0)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Velocity in [units/sec]*10 that the affected entity will be th"
         "rown."$0D"Maximum speed allowed by the executable is 4096 units/sec,"
         $0D"so the standard game default value of 1000 is obviously quite goo"
         "fed up."$0D"Set to something more logical. (Default=1000)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_push."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Defaults to 10, must use PUSH_PLUS  used for on."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1"
        Cap = "Push Once"
        Hint = "Will only push in the given direction the first time the playe"
         "r walks through it."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2"
        Cap = "Push Plus"
        Hint = "If set will toggled trigger_push on and off using the wait at "
         "time in sec."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X4"
        Cap = "Push Ramp"
        Hint = "unknown?."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The trigger_push will be inhibited and not appear when skill=0"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The trigger_push will be inhibited and not appear when skill=1"
         "."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The trigger_push will be inhibited and not appear when skill=2"
         " or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The trigger_push will be inhibited and not appear when deathma"
         "tch=1."
      }
    }
    weapon_boomer:form =
    {
      Help = "Fires a bouncing projectile."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/v_boomer/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    weapon_phalanx:form =
    {
      Help = "Fires two shots at once."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_shotx/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Not in Easy"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Not in Normal"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Not in Hard"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
      }
    }
    worldspawn:form =
    {
      Help = "Only used for the world."
      gravity: =
      {
        Txt = "&"
        Hint = "Specifies the gravity of map. (Default=800)."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the title of the map."
      }
      nextmap: =
      {
        Txt = "&"
        Hint = "Specifies the name of the next map to be loaded when timelimit"
         " or fraglimit is reached; ignored when deathmatch=0."
      }
      sky: =
      {
        Txt = "&"
        Typ = "C"
        Items = "1) unit1_"$0D"2) unit2_"$0D"3) unit3_"$0D"4) unit4_"$0D"5) un"
         "it5_"$0D"6) unit6_"$0D"7) unit7_"$0D"8) unit8_"$0D"9) unit9_"$0D"10)"
         " space1"$0D"11) x1u1"$0D"12) x1u2"$0D"13) x1u3"$0D"14) x1u4"$0D"15) "
         "x1u5"$0D"16) moon"$0D"17) space"
        Values = "unit1_"$0D"unit2_"$0D"unit3_"$0D"unit4_"$0D"unit5_"$0D"unit6"
         "_"$0D"unit7_"$0D"unit8_"$0D"unit9_"$0D"space1"$0D"x1u1"$0D"x1u2"$0D"x"
         "1u3"$0D"x1u4"$0D"x1u5"$0D"moon"$0D"space"
        Hint = "Specifies the name of the environment map to be used. (Default"
         "=unit1_)."
      }
      skyaxis: =
      {
        Txt = "&"
        Hint = "Specifies the axis the sky will rotate around. Ignored if skyr"
         "otate is not set. ex: 0 0 1."
      }
      skyrotate: =
      {
        Txt = "&"
        Hint = "Sets the speed of a rotating sky in degrees/second."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Items = "1) not used, data"$0D"2) Descent Into Cerberon"$0D"3) Gravity"
         " Well"$0D"4) Counter Attack"$0D"5) Quad Machine"$0D"6) Stealth Frag"$0D
         "7) Operation Overlord"$0D"8) Crashed Up Again"$0D"9) Kill Ratio"$0D"1"
         "0) Rage"$0D"11) Adrenaline Junkie"
        Values = "1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"10"$0D
         "11"
        Hint = "Specifies the CD track to be played."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies alternate form, separate RGB brightness."
        Typ = "LN"
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies ambient brightness to #."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "The ambient light color RGB."
        Typ = "LN"
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "The amount of ambient light."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sky_ambient: =
      {
        Txt = "&"
        Hint = "The amount of sky_ambient light (brightness 0-255)."
      }
      _sky_surface: =
      {
        Txt = "&"
        Hint = "The amount of sky surface light (brightness)."
      }
      _sun_ambient: =
      {
        Txt = "&"
        Hint = "This controls the amount of diffuse light in shadows,"$0D"if s"
         "et to 0, shadows will be completely unlit (good Values are 50-200)."$0D
         "Alternatively, you can also set three seperate Values: red, green an"
         "d blue."$0D"(Only works with certain compilers, like ArghRad)"
        Typ = "LN"
      }
      _sun_ambient: =
      {
        Txt = "&"
        Hint = "This controls the amount of diffuse light in shadows,"$0D"if s"
         "et to 0, shadows will be completely unlit (good Values are 50-200)."$0D
         "Alternatively, you can also set three seperate Values: red, green an"
         "d blue."$0D"(Only works with certain compilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun_angle: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle by yaw/pitch."$0D"(Only works with certain c"
         "ompilers, like ArghRad)"
      }
      _sun_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun1's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun_color: =
      {
        Txt = "&"
        Hint = "Controls sun1's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun_diffade: =
      {
        Txt = "&"
        Hint = "Sets sun1's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun_diffuse: =
      {
        Txt = "&"
        Hint = "Sets sun1's diffuse light brightness."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun1's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun_light: =
      {
        Txt = "&"
        Hint = "The amount of light sun1 should produce (800 is a nice value)."
         $0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun_style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "The style for the light."$0D"(Only works with certain compiler"
         "s, like ArghRad)"
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      _sun_surface: =
      {
        Txt = "&"
        Hint = "These set the brightness of the normal sky surface light. This"
         " allows both normal surface light and sunlight to shine from the sam"
         "e surfaces (this tends to look better than _sky_ambient)."$0D"bright"
         "ness - A single brightness level."$0D"red green blue - Three separat"
         "e brightness Values for red, green, and blue lighting (normally not "
         "a standard RGB color)."$0D"(Only works with certain compilers, like "
         "ArghRad)"
      }
      _sun_target: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun_vector: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle by a vector."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun2_angle: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle by yaw/pitch."$0D"(Only works with certain c"
         "ompilers, like ArghRad)"
      }
      _sun2_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun2's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun2_color: =
      {
        Txt = "&"
        Hint = "Controls sun2's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun2_diffade: =
      {
        Txt = "&"
        Hint = "Sets sun2's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun2_diffuse: =
      {
        Txt = "&"
        Hint = "Sets sun2's diffuse light brightness."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun2_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun2's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun2_light: =
      {
        Txt = "&"
        Hint = "The amount of light sun2 should produce (800 is a nice value)."
         $0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun2_target: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun2: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun2_vector: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle by a vector."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun3_angle: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle by yaw/pitch."$0D"(Only works with certain c"
         "ompilers, like ArghRad)"
      }
      _sun3_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun3's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun3_color: =
      {
        Txt = "&"
        Hint = "Controls sun3's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun3_diffade: =
      {
        Txt = "&"
        Hint = "Sets sun3's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun3_diffuse: =
      {
        Txt = "&"
        Hint = "Sets sun3's diffuse light brightness."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun3_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun3's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun3_light: =
      {
        Txt = "&"
        Hint = "The amount of light sun3 should produce (800 is a nice value)."
         $0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun3_target: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun3: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun3_vector: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle by a vector."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun4_angle: =
      {
        Txt = "&"
        Hint = "Set sun4's angle by yaw/pitch."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      _sun4_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun4's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun4_color: =
      {
        Txt = "&"
        Hint = "Controls sun4's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun4_diffade: =
      {
        Txt = "&"
        Hint = "Set sun4's diffuse light attenuation."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun4_diffuse: =
      {
        Txt = "&"
        Hint = "Set sun4's diffuse light brightness."$0D"(Only works with cert"
         "ain compilers, like ArghRad)"
      }
      _sun4_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun4's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun4_light: =
      {
        Txt = "&"
        Hint = "The amount of light the sun4 should produce (800 is a nice val"
         "ue)."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun4_target: =
      {
        Txt = "&"
        Hint = "Set sun4's angle letting it point to a target, like a spotligh"
         "t."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun4: =
      {
        Txt = "&"
        Hint = "Set sun4's angle letting it point to a target, like a spotligh"
         "t."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun4_vector: =
      {
        Txt = "&"
        Hint = "Set sun4's angle by a vector."$0D"(Only works with certain com"
         "pilers, like ArghRad)"
      }
    }
  }
}
