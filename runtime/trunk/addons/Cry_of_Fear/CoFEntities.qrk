QQRKSRC1
// Cry of Fear Entities file for Quark

{
  QuArKProtected = "1"
  Description = "Cry of Fear Entities"

  Toolbox Folders.qtx =
  {
    Toolbox = "New map items..."
    Root = "Cry of Fear Entities.qtxfolder"
    Cry of Fear Entities.qtxfolder =
    {
      ;desc = "Created from cry_of_fear.fgd"
      aiscripted_* entities.qtxfolder =
      {
        aiscripted_sequence:e =
        {
          origin = "0 0 0"
          ;desc = "AI Scripted Sequence"
        }
        aiscripted_sequence:e =
        {
          origin = "0 0 0"
          ;desc = "AI Scripted Sequence"
        }
      }
      ambient_* entities.qtxfolder =
      {
        ambient_fmodstream:e =
        {
          origin = "0 0 0"
          ;desc = "FMOD Audio player (MP3/OGG/WMA)"
          frags = "0"
        }
        ambient_fmodstream:e =
        {
          origin = "0 0 0"
          ;desc = "FMOD Audio player (MP3/OGG/WMA)"
          frags = "0"
        }
        ambient_generic:e =
        {
          origin = "0 0 0"
          ;desc = "Universal Ambient"
          health = "10"
          channel = "6"
          preset = "0"
          volstart = "0"
          fadein = "0"
          fadeout = "0"
          pitch = "100"
          pitchstart = "100"
          spinup = "0"
          spindown = "0"
          lfotype = "0"
          lforate = "0"
          lfomodpitch = "0"
          lfomodvol = "0"
          cspinup = "0"
        }
        ambient_generic:e =
        {
          origin = "0 0 0"
          ;desc = "Universal Ambient"
          health = "10"
          channel = "6"
          preset = "0"
          volstart = "0"
          fadein = "0"
          fadeout = "0"
          pitch = "100"
          pitchstart = "100"
          spinup = "0"
          spindown = "0"
          lfotype = "0"
          lforate = "0"
          lfomodpitch = "0"
          lfomodvol = "0"
          cspinup = "0"
        }
      }
      ammo_* entities.qtxfolder =
      {
        ammo_glock:e =
        {
          origin = "0 0 0"
          ;desc = "Glock Clip"
        }
        ammo_m16:e =
        {
          origin = "0 0 0"
          ;desc = "M16 Clip"
        }
        ammo_p345:e =
        {
          origin = "0 0 0"
          ;desc = "P345 Clip"
        }
        ammo_revolver:e =
        {
          origin = "0 0 0"
          ;desc = "Revolver ammo"
        }
        ammo_rifle:e =
        {
          origin = "0 0 0"
          ;desc = "Rifle Clip"
        }
        ammo_shells:e =
        {
          origin = "0 0 0"
          ;desc = "Shotgun Shells"
        }
        ammo_tmp:e =
        {
          origin = "0 0 0"
          ;desc = "TMP Clip"
        }
        ammo_vp70:e =
        {
          origin = "0 0 0"
          ;desc = "VP70 Clip"
        }
      }
      aom_* entities.qtxfolder =
      {
        aom_pills:e =
        {
          origin = "0 0 0"
          ;desc = "AoM pills"
        }
      }
      boat_* entities.qtxfolder =
      {
        boat_exit:e =
        {
          origin = "0 0 0"
          ;desc = "Boat Exit"
        }
        boat_hide_spot:e =
        {
          origin = "0 0 0"
          ;desc = "Hide player here while using boat"
        }
      }
      button_* entities.qtxfolder =
      {
        button_target:b =
        {
          ;incl = "defpoly"
          ;desc = "Target Button"
        }
        button_target:b =
        {
          ;incl = "defpoly"
          ;desc = "Target Button"
        }
      }
      calc_* entities.qtxfolder =
      {
        calc_position:e =
        {
          origin = "0 0 0"
          ;desc = "Calculate position"
          netname = "*locus"
          impulse = "1"
          message = "0 0 0"
        }
        calc_position:e =
        {
          origin = "0 0 0"
          ;desc = "Calculate position"
          netname = "*locus"
          impulse = "1"
          message = "0 0 0"
        }
        calc_ratio:e =
        {
          origin = "0 0 0"
          ;desc = "Ratio adjustment"
          target = "*locus"
          skin = "0"
          impulse = "0"
          netname = "0"
          body = "0"
          message = "1"
        }
        calc_ratio:e =
        {
          origin = "0 0 0"
          ;desc = "Ratio adjustment"
          target = "*locus"
          skin = "0"
          impulse = "0"
          netname = "0"
          body = "0"
          message = "1"
          button = "0"
          frags = "0"
        }
        calc_subvelocity:e =
        {
          origin = "0 0 0"
          ;desc = "Calculate velocity based on entity properties"
          netname = "*locus"
          impulse = "0"
          noise = "1.0"
          message = "0 0 0"
        }
        calc_velocity_path:e =
        {
          origin = "0 0 0"
          ;desc = "Calculate velocity for travelling"
          target = "*locus"
          armorvalue = "0"
          health = "0"
          noise = "1.0"
          frags = "0"
        }
        calc_velocity_polar:e =
        {
          origin = "0 0 0"
          ;desc = "Calculate velocity"
          angles = "0 0 0"
          noise = "1.0"
          message = "0 0 0"
        }
      }
      camera_* entities.qtxfolder =
      {
        camera_model:e =
        {
          origin = "0 0 0"
          ;desc = "3D camera's model"
        }
        camera_spot_trigger:b =
        {
          ;incl = "defpoly"
          ;desc = "Camera trigger"
        }
      }
      cof_* entities.qtxfolder =
      {
        cof_addcodenote:e =
        {
          origin = "0 0 0"
          ;desc = "Add a code to the notes"
          iuser1 = "2"
        }
        cof_barshoot:b =
        {
          ;incl = "defpoly"
          ;desc = "Shoot bars in the asylum"
        }
        cof_begingame:e =
        {
          origin = "0 0 0"
          ;desc = "Tell the stats we've started the game"
        }
        cof_billboard:e =
        {
          origin = "0 0 0"
          ;desc = "Show a billboard"
        }
        cof_blackandwhite:e =
        {
          origin = "0 0 0"
          ;desc = "Greyscale amounts"
        }
        cof_blur:e =
        {
          origin = "0 0 0"
          ;desc = "Turn on the blur effect"
          rate = "70"
          fade = "0.25"
          strength = "1"
        }
        cof_bosshealthbar:e =
        {
          origin = "0 0 0"
          ;desc = "Show a boss healthbar"
        }
        cof_burningbarrel:e =
        {
          origin = "0 0 0"
          ;desc = "Burning Barrel"
        }
        cof_camerazoom:e =
        {
          origin = "0 0 0"
          ;desc = "Camera Zoom Gay"
          zoomfov = "30"
          zoomtime = "100"
        }
        cof_changelevel:e =
        {
          origin = "0 0 0"
          ;desc = "Change level"
        }
        cof_chapter:e =
        {
          origin = "0 0 0"
          ;desc = "New chapter message"
          noise = "ambience/new_chapter.wav"
        }
        cof_clearitems:e =
        {
          origin = "0 0 0"
          ;desc = "Remove an item from the inventory, or all"
        }
        cof_closeallvgui:e =
        {
          origin = "0 0 0"
          ;desc = "Close all open VGUI menus"
        }
        cof_clothesmenu:e =
        {
          origin = "0 0 0"
          ;desc = "Unlockable clothes menu"
        }
        cof_computer:e =
        {
          origin = "0 0 0"
          ;desc = "Bring up the computer GUI for Start"
        }
        cof_coop_spawn1:e =
        {
          origin = "0 0 0"
          ;desc = "Spawn area for coop character 1"
          iuser1 = "0"
        }
        cof_coop_spawn2:e =
        {
          origin = "0 0 0"
          ;desc = "Spawn area for coop character 2"
          iuser1 = "0"
        }
        cof_coop_spawn3:e =
        {
          origin = "0 0 0"
          ;desc = "Spawn area for coop character 3"
          iuser1 = "0"
        }
        cof_coop_spawn4:e =
        {
          origin = "0 0 0"
          ;desc = "Spawn area for coop character 4"
          iuser1 = "0"
        }
        cof_coop_stats:e =
        {
          origin = "0 0 0"
          ;desc = "Coop stats "
        }
        cof_coopgameover:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger game over in coop"
        }
        cof_cracker:e =
        {
          origin = "0 0 0"
          ;desc = "Be pro"
        }
        cof_credits:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger the text credits"
          iuser1 = "30"
        }
        cof_customiseplayer:e =
        {
          origin = "0 0 0"
          ;desc = "Change coop player models"
          player1 = "police1"
          player2 = "police2"
          player3 = "police3"
          player4 = "police4"
        }
        cof_deadcat:e =
        {
          origin = "0 0 0"
          ;desc = "Dead cat"
        }
        cof_developer_commentary:e =
        {
          origin = "0 0 0"
          ;desc = "Developer commentary"
          fuser2 = "5"
          iuser1 = "0"
        }
        cof_difficultysettings:e =
        {
          origin = "0 0 0"
          ;desc = "Show the difficulty settings"
        }
        cof_doctorshoot:b =
        {
          ;incl = "defpoly"
          ;desc = "Check if we're shooting the doctor"
        }
        cof_doctorweaponset:e =
        {
          origin = "0 0 0"
          ;desc = "Set the doctor's weapon"
          iuser1 = "1"
        }
        cof_doctorweapontrigger:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger something based on what gun the doctor has"
        }
        cof_document:e =
        {
          origin = "0 0 0"
          ;desc = "Readable Document"
        }
        cof_ending:e =
        {
          origin = "0 0 0"
          ;desc = "Ending choices"
          iuser1 = "0"
        }
        cof_entityrestore:e =
        {
          origin = "0 0 0"
          ;desc = "Save/Restore dropped entities"
          impulse = "0"
        }
        cof_entteleport:e =
        {
          origin = "0 0 0"
          ;desc = "Teleport an ent"
        }
        cof_fatfuckingcunt:b =
        {
          ;incl = "defpoly"
          ;desc = "GAY."
        }
        cof_giveitems:e =
        {
          origin = "0 0 0"
          ;desc = "Give the player a weapon or key, lol"
        }
        cof_goodpoints:e =
        {
          origin = "0 0 0"
          ;desc = "Give or take a good point"
          impulse = "0"
        }
        cof_goodpointstrigger:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger something based on the amount of good points"
        }
        cof_greyfade:e =
        {
          origin = "0 0 0"
          ;desc = "Fade the grey in/out"
          iuser1 = "0"
          iuser2 = "0"
        }
        cof_hint:e =
        {
          origin = "0 0 0"
          ;desc = "Show a hint"
        }
        cof_hoodie:e =
        {
          origin = "0 0 0"
          ;desc = "Hoodie"
          iuser1 = "0"
        }
        cof_inter_door_exitchange:e =
        {
          origin = "0 0 0"
          ;desc = "Change exit position of an inter_door"
        }
        cof_interdooronoff:e =
        {
          origin = "0 0 0"
          ;desc = "Lock/Unlock inter_door"
        }
        cof_introduction:e =
        {
          origin = "0 0 0"
          ;desc = "Hoodie"
          iuser1 = "0"
          iuser2 = "1"
          iuser3 = "1"
        }
        cof_keypad:e =
        {
          origin = "0 0 0"
          ;desc = "Numeric Keypad VGUI"
        }
        cof_keypad2:e =
        {
          origin = "0 0 0"
          ;desc = "Switch to 2nd keypad"
        }
        cof_keypad3:e =
        {
          origin = "0 0 0"
          ;desc = "Switch to 3rd keypad"
        }
        cof_keypad4:e =
        {
          origin = "0 0 0"
          ;desc = "Switch to 4th keypad"
        }
        cof_keypadnew:e =
        {
          origin = "0 0 0"
          ;desc = "3D keypad"
        }
        cof_killmp3:e =
        {
          origin = "0 0 0"
          ;desc = "Turn off all MP3s"
          frags = "0"
        }
        cof_killplayer:e =
        {
          origin = "0 0 0"
          ;desc = "Kill the player"
        }
        cof_ladder_manager:e =
        {
          origin = "0 0 0"
          ;desc = "Ladder manager"
          descendoffset = "0"
        }
        cof_ladder_manager_use:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger the ladder manager"
          iuser1 = "0"
        }
        cof_ladderclimb:e =
        {
          origin = "0 0 0"
          ;desc = "Climb up/down a ladder"
          iuser1 = "0"
        }
        cof_lensflare:e =
        {
          origin = "0 0 0"
          ;desc = "Gay"
        }
        cof_leveltrigger:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger an entity when the next level starts"
          message = "0"
          map = "0"
        }
        cof_lobby_start:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger when lobby ends"
        }
        cof_logo:e =
        {
          origin = "0 0 0"
          ;desc = "Display the CoF Logo"
          frags = "0"
        }
        cof_lookat:e =
        {
          origin = "0 0 0"
          ;desc = "Look at this entity's origin for X seconds"
          fuser1 = "5"
        }
        cof_maxhealthchange:e =
        {
          origin = "0 0 0"
          ;desc = "Change the player's max health"
          impulse = "0"
        }
        cof_mdlcutscene:e =
        {
          origin = "0 0 0"
          ;desc = "MDL-based cutscene"
        }
        cof_monster_random_spawn:e =
        {
          origin = "0 0 0"
          ;desc = "Spawn random monsters"
          health = "0"
        }
        cof_numeralplate_left:e =
        {
          origin = "0 0 0"
          ;desc = "Numeral Plate Left"
        }
        cof_numeralplate_right:e =
        {
          origin = "0 0 0"
          ;desc = "Numeral Plate Right"
        }
        cof_objective:e =
        {
          origin = "0 0 0"
          ;desc = "Update the objectives"
          target = "txtfiles/hints.txt"
        }
        cof_passwordnote:e =
        {
          origin = "0 0 0"
          ;desc = "User/Password note"
          usertype = "0"
        }
        cof_phonecall:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger a phone call"
          subtitlenumber1 = "0"
          subtitlenumber2 = "0"
          subtitlenumber3 = "0"
          subtitlenumber4 = "0"
          subtitlenumber5 = "0"
          subtitlenumber6 = "0"
          subtitlenumber7 = "0"
          subtitlenumber8 = "0"
          subtitlenumber9 = "0"
          subtitlenumber10 = "0"
          subtitlenumber11 = "0"
          subtitlenumber12 = "0"
          subtitlenumber13 = "0"
          subtitlenumber14 = "0"
          subtitlenumber15 = "0"
          subtitlenumber16 = "0"
          subtitlenumber17 = "0"
          subtitlenumber18 = "0"
          subtitlenumber19 = "0"
          subtitlenumber20 = "0"
          subtitlenumber21 = "0"
          subtitlenumber22 = "0"
          subtitlenumber23 = "0"
          subtitlenumber24 = "0"
          subtitlenumber25 = "0"
          subtitlenumber26 = "0"
          subtitlenumber27 = "0"
          subtitlenumber28 = "0"
          subtitlenumber29 = "0"
          subtitlenumber30 = "0"
          subtitlenumber31 = "0"
          subtitlenumber32 = "0"
          subtitletime1 = "0"
          subtitletime2 = "0"
          subtitletime3 = "0"
          subtitletime4 = "0"
          subtitletime5 = "0"
          subtitletime6 = "0"
          subtitletime7 = "0"
          subtitletime8 = "0"
          subtitletime9 = "0"
          subtitletime10 = "0"
          subtitletime11 = "0"
          subtitletime12 = "0"
          subtitletime13 = "0"
          subtitletime14 = "0"
          subtitletime15 = "0"
          subtitletime16 = "0"
          subtitletime17 = "0"
          subtitletime18 = "0"
          subtitletime19 = "0"
          subtitletime20 = "0"
          subtitletime21 = "0"
          subtitletime22 = "0"
          subtitletime23 = "0"
          subtitletime24 = "0"
          subtitletime25 = "0"
          subtitletime26 = "0"
          subtitletime27 = "0"
          subtitletime28 = "0"
          subtitletime29 = "0"
          subtitletime30 = "0"
          subtitletime31 = "0"
          subtitletime32 = "0"
          iuser1 = "0"
        }
        cof_phonecheck:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger something with the phone"
          frags = "0"
        }
        cof_phonedisable:e =
        {
          origin = "0 0 0"
          ;desc = "Disable the phone"
        }
        cof_phonetrigger:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger an ent by phone"
        }
        cof_playerbreathetoggle:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger player breathing on/off"
          frags = "0"
        }
        cof_pushablevan:e =
        {
          origin = "0 0 0"
          ;desc = "Pushable van"
        }
        cof_puzzlebar:e =
        {
          origin = "0 0 0"
          ;desc = "Puzzle Bar"
          iuser3 = "0"
        }
        cof_puzzlebar2:e =
        {
          origin = "0 0 0"
          ;desc = "Puzzle Bar 2"
          iuser3 = "0"
        }
        cof_puzzlebar3:e =
        {
          origin = "0 0 0"
          ;desc = "Puzzle Bar 3"
          iuser3 = "0"
        }
        cof_puzzlebar4:e =
        {
          origin = "0 0 0"
          ;desc = "Puzzle Bar 4"
          iuser3 = "0"
        }
        cof_puzzlebar5:e =
        {
          origin = "0 0 0"
          ;desc = "Puzzle Bar 5"
          iuser3 = "0"
        }
        cof_puzzlebarbutton:b =
        {
          ;incl = "defpoly"
          ;desc = "Brings up the Puzzle Bar VGUI"
        }
        cof_randomtimedspawner:e =
        {
          origin = "0 0 0"
          ;desc = "Randomly spawn a monster somewhere "
          iuser1 = "0"
          iuser2 = "0"
          iuser4 = "0"
        }
        cof_serversettings:e =
        {
          origin = "0 0 0"
          ;desc = "Show the server settings"
        }
        cof_simonspeak:e =
        {
          origin = "0 0 0"
          ;desc = "Make Simon say something"
          iuser1 = "0"
          fuser1 = "1"
        }
        cof_simpletext:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger a text message"
          iuser1 = "0"
        }
        cof_skipmanager:e =
        {
          origin = "0 0 0"
          ;desc = "Skip manager"
        }
        cof_slowmotion:e =
        {
          origin = "0 0 0"
          ;desc = "Slow motion trigger"
          health = "0.005"
        }
        cof_spawnpointonoff:e =
        {
          origin = "0 0 0"
          ;desc = "Turn a spawn point on/off"
          iuser1 = "0"
        }
        cof_speedchange:e =
        {
          origin = "0 0 0"
          ;desc = "Change the gay speed"
        }
        cof_startdoctormode:e =
        {
          origin = "0 0 0"
          ;desc = "Start doctor mode"
        }
        cof_stats:e =
        {
          origin = "0 0 0"
          ;desc = "Stats"
        }
        cof_stopwheelchair:e =
        {
          origin = "0 0 0"
          ;desc = "Stop wheelchair mode"
        }
        cof_strangle:e =
        {
          origin = "0 0 0"
          ;desc = "Strangle Sick Simon"
        }
        cof_stresstest:e =
        {
          origin = "0 0 0"
          ;desc = "Starts the video stress test"
        }
        cof_survivalmode:e =
        {
          origin = "0 0 0"
          ;desc = "Starts survival mode"
          message = "0"
          target = "0"
          iuser1 = "900"
        }
        cof_telephone:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger the telephone"
          target = "0"
        }
        cof_teleport:e =
        {
          origin = "0 0 0"
          ;desc = "Point Entity Teleport"
        }
        cof_telescope:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger the telescope"
        }
        cof_telescope_camera:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger the telescope"
        }
        cof_telescope_cancel:e =
        {
          origin = "0 0 0"
          ;desc = "Disable the telescope"
        }
        cof_trainprop:e =
        {
          origin = "0 0 0"
          ;desc = "Moving train prop"
          iuser1 = "0"
        }
        cof_triggeron:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger on"
        }
        cof_updatekeypad:e =
        {
          origin = "0 0 0"
          ;desc = "Get Keypad Number"
          message = "0"
        }
        cof_weaponswitch:e =
        {
          origin = "0 0 0"
          ;desc = "Select a player's weapon"
        }
        cof_weapontrigger:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger something if we do/don't have a weapon"
        }
        cof_wheelchairmode:e =
        {
          origin = "0 0 0"
          ;desc = "Activate wheelchair mode"
        }
        cof_yesno:e =
        {
          origin = "0 0 0"
          ;desc = "Brings up a yes/no dialogue"
        }
      }
      cutscene_* entities.qtxfolder =
      {
        cutscene_model:e =
        {
          origin = "0 0 0"
          ;desc = "Gay shit for making cutscene models"
        }
      }
      cycler_* entities.qtxfolder =
      {
        cycler_sprite:e =
        {
          origin = "0 0 0"
          ;desc = "Sprite Cycler"
          framerate = "10"
        }
        cycler_weapon:e =
        {
          origin = "0 0 0"
          ;desc = "Weapon Cycler"
        }
      }
      door_* entities.qtxfolder =
      {
        door_prop:e =
        {
          origin = "0 0 0"
          ;desc = "Door prop"
          skin = "0"
          body = "0"
          m_iAction_On = "0"
          m_iAction_Off = "0"
        }
        door_prop_view:e =
        {
          origin = "0 0 0"
          ;desc = "Door Scene View Pos"
        }
      }
      env_* entities.qtxfolder =
      {
        env_beam:e =
        {
          origin = "0 0 0"
          ;desc = "Energy Beam Effect"
          renderamt = "100"
          rendercolor = "0 0 0"
          Radius = "256"
          life = "0"
          BoltWidth = "20"
          NoiseAmplitude = "0"
          texture = "sprites/laserbeam.spr"
          TextureScroll = "35"
          framerate = "0"
          framestart = "0"
          StrikeTime = "0"
          damage = "0"
          frags = "0"
        }
        env_beamtrail:e =
        {
          origin = "0 0 0"
          ;desc = "Beam trail effect"
          netname = "sprites/smoke.spr"
          renderamt = "255"
          rendercolor = "255 255 255"
          armorvalue = "5"
          health = "4.0"
        }
        env_beverage:e =
        {
          origin = "0 0 0"
          ;desc = "Beverage Dispenser"
          health = "10"
          skin = "0"
        }
        env_blood:e =
        {
          origin = "0 0 0"
          ;desc = "Blood Effects"
          color = "0"
          amount = "100"
        }
        env_bubbles:b =
        {
          ;incl = "defpoly"
          ;desc = "Bubble Volume"
          density = "2"
          frequency = "2"
          current = "0"
        }
        env_customize:e =
        {
          origin = "0 0 0"
          ;desc = "Change entity properties"
          m_flRadius = "512"
          body = "-1"
          skin = "-1"
          frame = "-1"
          m_bloodColor = "0"
          m_voicePitch = "-1"
          m_fFramerate = "-1"
          m_fController0 = "0"
          m_fController1 = "0"
          m_fController2 = "0"
          m_fController3 = "0"
          m_iClass = "0"
          m_iPlayerReact = "-1"
          m_iVisible = "0"
          m_iSolid = "0"
          m_iPrisoner = "0"
          m_iMonsterClip = "0"
          m_iProvoked = "0"
        }
        env_decal:e =
        {
          origin = "0 0 0"
          ;desc = "Decal sprayer"
          impulse = "0"
        }
        env_dlight:e =
        {
          origin = "0 0 0"
          ;desc = "Dynamic light effect"
          rendercolor = "255 255 255"
          radius = "12"
          health = "0.0"
          frags = "0"
        }
        env_dynlight:e =
        {
          origin = "0 0 0"
          ;desc = "Paranoia dynamic light"
          rendercolor = "255 255 255"
          renderamt = "256"
          scale = "0"
          rendermode = "0"
        }
        env_elight:e =
        {
          origin = "0 0 0"
          ;desc = "Entity light effect"
          impulse = "0"
          renderamt = "12"
          rendercolor = "255 255 255"
          health = "0.0"
          frags = "0"
        }
        env_explosion:e =
        {
          origin = "0 0 0"
          ;desc = "Explosion"
          iMagnitude = "100"
        }
        env_fade:e =
        {
          origin = "0 0 0"
          ;desc = "Screen Fade"
          duration = "2"
          holdtime = "0"
          renderamt = "255"
          rendercolor = "0 0 0"
        }
        env_fog:e =
        {
          origin = "0 0 0"
          ;desc = "Fog effect, DMC stylee"
          fadein = "0"
          holdtime = "0"
          fadeout = "0"
          startdist = "0"
          enddist = "1000"
          rendercolor = "255 255 255"
        }
        env_footsteps:e =
        {
          origin = "0 0 0"
          ;desc = "Change Movement Sounds"
          frags = "0"
        }
        env_funnel:e =
        {
          origin = "0 0 0"
          ;desc = "Large Portal Funnel"
        }
        env_global:e =
        {
          origin = "0 0 0"
          ;desc = "Global State"
          triggermode = "3"
          initialstate = "0"
        }
        env_glow:e =
        {
          origin = "0 0 0"
          ;desc = "Light Glow/Haze"
          model = "sprites/glow01.spr"
          scale = "1"
        }
        env_laser:e =
        {
          origin = "0 0 0"
          ;desc = "Laser Beam Effect"
          m_iTowardsMode = "0"
          renderamt = "255"
          rendercolor = "255 255 255"
          width = "20"
          NoiseAmplitude = "0"
          texture = "sprites/laserbeam.spr"
          TextureScroll = "35"
          framestart = "0"
          damage = "100"
          frags = "0"
          m_iProjection = "0"
          m_iStoppedBy = "0"
        }
        env_message:e =
        {
          origin = "0 0 0"
          ;desc = "HUD Text Message"
          messagevolume = "10"
          messageattenuation = "0"
        }
        env_mirror:b =
        {
          ;incl = "defpoly"
          ;desc = "Mirror"
          radius = "330"
        }
        env_model:e =
        {
          origin = "0 0 0"
          ;desc = "New alternative to cyclers"
          skin = "0"
          body = "0"
          m_iAction_On = "0"
          m_iAction_Off = "0"
          chestnums = "0"
          iuser1 = "0"
        }
        env_particle:e =
        {
          origin = "0 0 0"
          ;desc = "Particle Effect"
          message = "aurora/smoke.aur"
        }
        env_quakefx:e =
        {
          origin = "0 0 0"
          ;desc = "Quake 1 particle effects"
          impulse = "4"
          frags = "70"
          armortype = "300"
          health = "1.0"
        }
        env_rain:b =
        {
          ;incl = "defpoly"
          ;desc = "Rain Effect"
          angles = "0 0 0"
          m_dripSpeed = "40"
          m_dripSize = "5"
          m_brightness = "128"
          rendercolor = "64 128 255"
          m_iNoise = "0"
          m_burstSize = "2"
          m_flUpdateTime = "0.5"
          texture = "sprites/rain.spr"
          m_axis = "0"
          m_iExtent = "1"
        }
        env_render:e =
        {
          origin = "0 0 0"
          ;desc = "Render Controls"
          frags = "0"
        }
        env_shake:e =
        {
          origin = "0 0 0"
          ;desc = "Screen Shake"
          amplitude = "4"
          radius = "500"
          duration = "1"
          frequency = "2.5"
        }
        env_shockwave:e =
        {
          origin = "0 0 0"
          ;desc = "Shockwave Effect"
          netname = "sprites/shockwave.spr"
          rendercolor = "188 220 255"
          renderamt = "255"
          m_iTime = "2"
          m_iRadius = "1000"
          m_iHeight = "32"
          m_iScrollRate = "0"
          m_iNoise = "0"
          m_iFrameRate = "0"
          m_iStartFrame = "0"
        }
        env_shooter:e =
        {
          origin = "0 0 0"
          ;desc = "Model Shooter"
          shootmodel = "sprites/ballsmoke.spr"
          skin = "0"
          frame = "0"
          framerate = "10.0"
          m_iPhysics = "0"
          m_iBloodColor = "0"
          shootsounds = "-1"
          m_fFriction = "0.55"
          m_vecSize = "0 0 0"
        }
        env_sky:e =
        {
          origin = "0 0 0"
          ;desc = "Unreal-Tournament style sky view"
        }
        env_sound:e =
        {
          origin = "0 0 0"
          ;desc = "DSP Sound"
          radius = "128"
          roomtype = "0"
        }
        env_spark:e =
        {
          origin = "0 0 0"
          ;desc = "Spark"
          MaxDelay = "0"
        }
        env_sprite:e =
        {
          origin = "0 0 0"
          ;desc = "Sprite Effect"
          framerate = "10.0"
          model = "sprites/glow01.spr"
          frags = "0"
        }
        env_state:e =
        {
          origin = "0 0 0"
          ;desc = "Local State"
          turnontime = "0"
          turnofftime = "0"
        }
        env_static_decal:e =
        {
          origin = "0 0 0"
          ;desc = "new decal"
          netname = "0"
          skin = "0"
        }
        env_warpball:e =
        {
          origin = "0 0 0"
          ;desc = "Teleport-in effect"
          health = "90"
          frags = "12"
        }
      }
      envpos_* entities.qtxfolder =
      {
        envpos_sky:e =
        {
          origin = "0 0 0"
          ;desc = "3d sky origin"
          skin = "128"
          body = "128"
        }
        envpos_world:e =
        {
          origin = "0 0 0"
          ;desc = "world origin"
          health = "16"
        }
      }
      func_* entities.qtxfolder =
      {
        func_asylumlookat:b =
        {
          ;incl = "defpoly"
          ;desc = "For triggering the telescope cancel when you look at Simon "
           "in the asylum1"
        }
        func_breakable:b =
        {
          ;incl = "defpoly"
          ;desc = "Breakable Object"
        }
        func_button:b =
        {
          ;incl = "defpoly"
          ;desc = "Button"
          speed = "25"
          lip = "0"
          sounds = "0"
          wait = "0"
          delay = "0"
        }
        func_conveyor:b =
        {
          ;incl = "defpoly"
          ;desc = "Conveyor Belt"
          speed = "100"
        }
        func_coopallplayersbutton:b =
        {
          ;incl = "defpoly"
          ;desc = "A button that all players have to be near to use"
        }
        func_door:b =
        {
          ;incl = "defpoly"
          ;desc = "Basic door"
          directuse = "0"
          acceleration = "0"
          deceleration = "0"
        }
        func_door_rotating:b =
        {
          ;incl = "defpoly"
          ;desc = "Rotating door"
          directuse = "0"
          distance = "90"
          axes = "0 0 0"
        }
        func_escalatorstep:b =
        {
          ;incl = "defpoly"
          ;desc = "Escalator Step"
          forwardaxis = "0"
        }
        func_fogfield:b =
        {
          ;incl = "defpoly"
          ;desc = "Field of fog"
          axis = "-1"
        }
        func_friction:b =
        {
          ;incl = "defpoly"
          ;desc = "Surface with a change in friction"
          modifier = "15"
        }
        func_guntarget:b =
        {
          ;incl = "defpoly"
          ;desc = "Moving platform"
          speed = "100"
          health = "0"
        }
        func_healthcharger:b =
        {
          ;incl = "defpoly"
          ;desc = "Wall health recharger"
        }
        func_illusionary:b =
        {
          ;incl = "defpoly"
          ;desc = "Fake Wall/Light"
          skin = "-1"
        }
        func_ladder:b =
        {
          ;incl = "defpoly"
          ;desc = "Ladder"
        }
        func_laddercontrol:b =
        {
          ;incl = "defpoly"
          ;desc = "Ladder Controller"
        }
        func_monsterclip:b =
        {
          ;incl = "defpoly"
          ;desc = "Monster clip brush"
        }
        func_mortar_field:b =
        {
          ;incl = "defpoly"
          ;desc = "Mortar Field"
          m_flSpread = "64"
          m_iCount = "1"
          m_fControl = "0"
        }
        func_pendulum:b =
        {
          ;incl = "defpoly"
          ;desc = "Swings back and forth"
          speed = "100"
          axes = "0 0 0"
          distance = "90"
          damp = "0"
          dmg = "0"
        }
        func_plat:b =
        {
          ;incl = "defpoly"
          ;desc = "Elevator"
          height = "0"
          speed = "50"
        }
        func_platrot:b =
        {
          ;incl = "defpoly"
          ;desc = "Moving Rotating platform"
          speed = "50"
          axes = "0 0 0"
          height = "0"
          rotation = "0"
        }
        func_pushable:b =
        {
          ;incl = "defpoly"
          ;desc = "Pushable object"
          friction = "50"
          buoyancy = "20"
        }
        func_recharge:b =
        {
          ;incl = "defpoly"
          ;desc = "Battery recharger"
        }
        func_rot_button:b =
        {
          ;incl = "defpoly"
          ;desc = "RotatingButton"
          speed = "50"
          axes = "0 0 0"
          sounds = "-1"
          wait = "3"
          delay = "0"
          distance = "90"
        }
        func_rotating:b =
        {
          ;incl = "defpoly"
          ;desc = "Rotating Object"
          angles = "0 0 0"
          speed = "30"
          axes = "0 0 0"
          volume = "10"
          fanfriction = "20"
          sounds = "0"
          spawnorigin = "0 0 0"
          dmg = "0"
        }
        func_shine:b =
        {
          ;incl = "defpoly"
          ;desc = "Shiny Surface"
          message = "sprites/bgspr.spr"
          scale = "10"
          renderamt = "50"
        }
        func_stairs:b =
        {
          ;incl = "defpoly"
          ;desc = "Stair segment to control speed"
        }
        func_tank:b =
        {
          ;incl = "defpoly"
          ;desc = "Brush Gun Turret"
          bullet = "0"
        }
        func_tankcontrols:b =
        {
          ;incl = "defpoly"
          ;desc = "Tank controls"
          frags = "30"
          crosshair = "0"
        }
        func_tanklaser:b =
        {
          ;incl = "defpoly"
          ;desc = "Brush Laser Turret"
        }
        func_tankmortar:b =
        {
          ;incl = "defpoly"
          ;desc = "Brush Mortar Turret"
          iMagnitude = "100"
        }
        func_tankrocket:b =
        {
          ;incl = "defpoly"
          ;desc = "Brush Rocket Turret"
        }
        func_timer:b =
        {
          ;incl = "defpoly"
          ;desc = "Gay Timer"
          iuser1 = "0"
        }
        func_trackautochange:b =
        {
          ;incl = "defpoly"
          ;desc = "Automatic track changing platform"
        }
        func_trackchange:b =
        {
          ;incl = "defpoly"
          ;desc = "Train track changing platform"
        }
        func_tracktrain:b =
        {
          ;incl = "defpoly"
          ;desc = "Track Train"
          sounds = "0"
          wheels = "50"
          height = "4"
          startspeed = "0"
          speed = "64"
          dmg = "0"
          volume = "10"
          bank = "0"
        }
        func_train:b =
        {
          ;incl = "defpoly"
          ;desc = "Moving platform"
          speed = "100"
          dmg = "2"
          skin = "0"
          volume = "0.85"
        }
        func_trainbutts:b =
        {
          ;incl = "defpoly"
          ;desc = "Brush cof_trainprop"
          iuser1 = "0"
        }
        func_traincontrols:b =
        {
          ;incl = "defpoly"
          ;desc = "Train Controls"
        }
        func_valve:b =
        {
          ;incl = "defpoly"
          ;desc = "Stupid crap"
          iuser1 = "0"
          iuser2 = "2"
          iuser4 = "0"
          impulse = "0"
        }
        func_wall:b =
        {
          ;incl = "defpoly"
          ;desc = "Wall"
        }
        func_wall_toggle:b =
        {
          ;incl = "defpoly"
          ;desc = "Toggleable geometry"
        }
        func_water:b =
        {
          ;incl = "defpoly"
          ;desc = "Liquid"
          skin = "-3"
          WaveHeight = "0"
        }
      }
      game_* entities.qtxfolder =
      {
        game_counter:e =
        {
          origin = "0 0 0"
          ;desc = "Fires when it hits limit"
          frags = "0"
          health = "10"
        }
        game_counter_set:e =
        {
          origin = "0 0 0"
          ;desc = "Sets a game_counter"
          frags = "10"
        }
        game_end:e =
        {
          origin = "0 0 0"
          ;desc = "End this multiplayer game"
        }
        game_player_equip:e =
        {
          origin = "0 0 0"
          ;desc = "Initial player equipment"
        }
        game_player_hurt:e =
        {
          origin = "0 0 0"
          ;desc = "Hurts player who fires"
          dmg = "999"
        }
        game_player_team:e =
        {
          origin = "0 0 0"
          ;desc = "Allows player to change teams"
        }
        game_score:e =
        {
          origin = "0 0 0"
          ;desc = "Award/Deduct Points"
          points = "1"
        }
        game_team_master:e =
        {
          origin = "0 0 0"
          ;desc = "Team based master/relay"
          triggerstate = "2"
          teamindex = "-1"
        }
        game_team_set:e =
        {
          origin = "0 0 0"
          ;desc = "Sets team of team_master"
        }
        game_text:e =
        {
          origin = "0 0 0"
          ;desc = "HUD Text Message"
          x = "-1"
          y = "-1"
          effect = "0"
          color = "100 100 100"
          color2 = "240 110 0"
          fadein = "1.5"
          fadeout = "0.5"
          holdtime = "1.2"
          fxtime = "0.25"
          channel = "1"
        }
        game_zone_player:b =
        {
          ;incl = "defpoly"
          ;desc = "Player Zone brush"
        }
      }
      hud_* entities.qtxfolder =
      {
        hud_sprite:e =
        {
          origin = "0 0 0"
          ;desc = "Hud Sprite Display"
          model = "dmg_poison"
          rendercolor = "255 255 255"
        }
      }
      info_* entities.qtxfolder =
      {
        info_alias:e =
        {
          origin = "0 0 0"
          ;desc = "Alias"
          mode = "0"
        }
        info_bigmomma:e =
        {
          origin = "0 0 0"
          ;desc = "Big Mamma Node"
          radius = "0"
          reachdelay = "0"
        }
        info_compile_parameters:e =
        {
          origin = "0 0 0"
          ;desc = "Compile Options"
          texdata = "4096"
          estimate = "0"
          bounce = "1"
          ambient = "0 0 0"
          smooth = "0"
          dscale = "2"
          chop = "64"
          texchop = "32"
          priority = "0"
          wadautodetect = "0"
          verbose = "0"
          noclipeconomy = "1"
          spawnflags = "2337"
        }
        info_group:e =
        {
          origin = "0 0 0"
          ;desc = "Entity Group"
        }
        info_intermission:e =
        {
          origin = "0 0 0"
          ;desc = "Intermission Spot"
        }
        info_landmark:e =
        {
          origin = "0 0 0"
          ;desc = "Transition Landmark"
        }
        info_movewith:e =
        {
          origin = "0 0 0"
          ;desc = "Movewith relay"
        }
        info_node:e =
        {
          origin = "0 0 0"
          ;desc = "ai node"
        }
        info_node_air:e =
        {
          origin = "0 0 0"
          ;desc = "ai air node"
        }
        info_null:e =
        {
          origin = "0 0 0"
          ;desc = "info_null (spotlight target)"
        }
        info_player_coop:e =
        {
          origin = "0 0 0"
          ;desc = "Player cooperative start"
        }
        info_player_deathmatch:e =
        {
          origin = "0 0 0"
          ;desc = "Player deathmatch start"
        }
        info_player_start:e =
        {
          origin = "0 0 0"
          ;desc = "Player 1 start"
        }
        info_roofboss_target:e =
        {
          origin = "0 0 0"
          ;desc = "Roof boss target to fly to sometimes"
        }
        info_simon_spawnpoint:e =
        {
          origin = "0 0 0"
          ;desc = "Boom Simon spawn point"
        }
        info_target:e =
        {
          origin = "0 0 0"
          ;desc = "Beam Target"
        }
        info_teleport_destination:e =
        {
          origin = "0 0 0"
          ;desc = "Teleport destination"
        }
        info_texlights:e =
        {
          origin = "0 0 0"
          ;desc = "Texture Light Config"
        }
      }
      inter_* entities.qtxfolder =
      {
        inter_door:b =
        {
          ;incl = "defpoly"
          ;desc = "Silent Hill style door"
          musicfadein = "2"
          musicfadeout = "2"
          silentroom = "0"
        }
        inter_door_coop:e =
        {
          origin = "0 0 0"
          ;desc = "Silent Hill style door"
          musicfadein = "2"
          musicfadeout = "2"
          silentroom = "0"
        }
        inter_door_coop_changelevel:b =
        {
          ;incl = "defpoly"
          ;desc = "Coop inter_door"
          iuser1 = "0"
          fuser1 = "0"
        }
        inter_door_disable:e =
        {
          origin = "0 0 0"
          ;desc = "Disable/Enable an inter_door"
          frags = "0"
        }
        inter_door_exit:e =
        {
          origin = "0 0 0"
          ;desc = "Door Exit Position"
        }
      }
      item_* entities.qtxfolder =
      {
        item_airtank:e =
        {
          origin = "0 0 0"
          ;desc = "Oxygen tank"
        }
        item_antidote:e =
        {
          origin = "0 0 0"
          ;desc = "Poison antidote"
        }
        item_battery:e =
        {
          origin = "0 0 0"
          ;desc = "HEV battery"
        }
        item_flashlight:e =
        {
          origin = "0 0 0"
          ;desc = "FlashLight"
        }
        item_glocktaclight:e =
        {
          origin = "0 0 0"
          ;desc = "Glock taclight"
        }
        item_healthkit:e =
        {
          origin = "0 0 0"
          ;desc = "Small Health Kit"
        }
        item_key:e =
        {
          origin = "0 0 0"
          ;desc = "Key Item"
        }
        item_longjump:e =
        {
          origin = "0 0 0"
          ;desc = "Longjump Module"
        }
        item_nightvision:e =
        {
          origin = "0 0 0"
          ;desc = "Nightvision"
        }
        item_padlock:e =
        {
          origin = "0 0 0"
          ;desc = "Padlock gay"
        }
        item_phonebattery:e =
        {
          origin = "0 0 0"
          ;desc = "Phone battery"
        }
        item_security:e =
        {
          origin = "0 0 0"
          ;desc = "Security card"
        }
        item_suit:e =
        {
          origin = "0 0 0"
          ;desc = "HEV Suit"
        }
      }
      light_* entities.qtxfolder =
      {
        light_environment:e =
        {
          origin = "0 0 0"
          ;desc = "Environment"
          pitch = "0"
          _light = "255 255 128 200"
          _diffuse_light = "255 255 128 200"
        }
        light_glow:e =
        {
          origin = "0 0 0"
          ;desc = "Dynamic Glow"
          frags = "1"
        }
        light_spot:e =
        {
          origin = "0 0 0"
          ;desc = "Spotlight"
          _cone = "30"
          _cone2 = "45"
          pitch = "-90"
          _sky = "0"
        }
      }
      locus_* entities.qtxfolder =
      {
        locus_alias:e =
        {
          origin = "0 0 0"
          ;desc = "Locus System - Entity variable"
        }
        locus_beam:e =
        {
          origin = "0 0 0"
          ;desc = "Locus System - Beam effect"
          m_iszEnd = "*locus"
          impulse = "0"
          m_iszSprite = "sprites/laserbeam.spr"
          renderamt = "255"
          rendercolor = "255 255 255"
          m_iWidth = "10"
          m_iDistortion = "0"
          m_fFrame = "0"
          m_iScrollRate = "0"
          m_fDuration = "0"
          m_fDamage = "0"
          m_iDamageType = "0"
        }
        locus_variable:e =
        {
          origin = "0 0 0"
          ;desc = "Locus System - Variable for storing data"
          m_iszPosition = "*locus"
          m_iszVelocity = "*locus"
          m_iszRatio = "*locus"
        }
      }
      momentary_* entities.qtxfolder =
      {
        momentary_door:b =
        {
          ;incl = "defpoly"
          ;desc = "Momentary/Continuous door"
          speed = "100"
          movesnd = "0"
          stopsnd = "0"
        }
        momentary_rot_button:b =
        {
          ;incl = "defpoly"
          ;desc = "Direct wheel control"
          speed = "50"
          axes = "0 0 0"
          sounds = "0"
          distance = "90"
          returnspeed = "0"
          angles = "0 0 0"
        }
      }
      monster_* entities.qtxfolder =
      {
        monster_baby:e =
        {
          origin = "0 0 0"
          ;desc = "Baby Monster"
        }
        monster_booksimon:e =
        {
          origin = "0 0 0"
          ;desc = "Book Simon"
          frags = "1"
          iuser2 = "50"
          iuser4 = "0"
        }
        monster_booksimonsledgehammer:e =
        {
          origin = "0 0 0"
          ;desc = "Book Simon Sledgehammer"
        }
        monster_bosschainsaw:e =
        {
          origin = "0 0 0"
          ;desc = "Chainsaw Boss"
        }
        monster_child:e =
        {
          origin = "0 0 0"
          ;desc = "Child fag"
        }
        monster_crab:e =
        {
          origin = "0 0 0"
          ;desc = "Gay crab"
        }
        monster_crazybitch:e =
        {
          origin = "0 0 0"
          ;desc = "Crazy Bitch"
        }
        monster_custom:e =
        {
          origin = "0 0 0"
          ;desc = "Custom monster"
          attacksound1 = "common/null.wav"
          attacksound2 = "common/null.wav"
          alertsound1 = "common/null.wav"
          alertsound2 = "common/null.wav"
          painsound1 = "common/null.wav"
          painsound2 = "common/null.wav"
          deathsound1 = "common/null.wav"
          deathsound2 = "common/null.wav"
          attackhitsound1 = "common/null.wav"
          attackhitsound2 = "common/null.wav"
          attackhitwallsound1 = "common/null.wav"
          attackhitwallsound2 = "common/null.wav"
          attackmisssound1 = "common/null.wav"
          attackmisssound2 = "common/null.wav"
          iuser1 = "10"
          iuser2 = "10"
          iuser3 = "10"
          fuser1 = "0"
        }
        monster_doctorboss:e =
        {
          origin = "0 0 0"
          ;desc = "Doctor boss"
          sequence = "10"
        }
        monster_faceless:e =
        {
          origin = "0 0 0"
          ;desc = "Faceless fsdgfsdg"
        }
        monster_facelessv:e =
        {
          origin = "0 0 0"
          ;desc = "Faceless Valve Head"
        }
        monster_faster:e =
        {
          origin = "0 0 0"
          ;desc = "Faster Monster"
        }
        monster_flygare:e =
        {
          origin = "0 0 0"
          ;desc = "Flygare"
        }
        monster_furniture:e =
        {
          origin = "0 0 0"
          ;desc = "Monster Furniture"
        }
        monster_generic:e =
        {
          origin = "0 0 0"
          ;desc = "Generic Script Monster"
          body = "0"
          health = "0"
          m_bloodColor = "0"
          chestnums = "0"
        }
        monster_generic_dead:e =
        {
          origin = "0 0 0"
          ;desc = "Generic Dead Body"
          frags = "36"
          body = "0"
          m_bloodColor = "0"
        }
        monster_krypande:e =
        {
          origin = "0 0 0"
          ;desc = "Krypande Monster"
          body = "-1"
        }
        monster_nerd:e =
        {
          origin = "0 0 0"
          ;desc = "Flying nerd"
        }
        monster_rcrazy:e =
        {
          origin = "0 0 0"
          ;desc = "Running Crazy"
        }
        monster_roofboss:e =
        {
          origin = "0 0 0"
          ;desc = "Roof Boss"
        }
        monster_ruben:e =
        {
          origin = "0 0 0"
          ;desc = "Rubn"
        }
        monster_sawcrazy:e =
        {
          origin = "0 0 0"
          ;desc = "Saw crazy"
        }
        monster_sawrunner:e =
        {
          origin = "0 0 0"
          ;desc = "Chainsaw fag"
          body = "-1"
          sequence = "10"
        }
        monster_sewerboss:e =
        {
          origin = "0 0 0"
          ;desc = "Sewer Boss"
        }
        monster_sewmo:e =
        {
          origin = "0 0 0"
          ;desc = "Sewer Monster"
        }
        monster_slower:e =
        {
          origin = "0 0 0"
          ;desc = "Zombie thing"
          body = "-1"
          sequence = "10"
        }
        monster_slower3:e =
        {
          origin = "0 0 0"
          ;desc = "Zombie thing"
          body = "-1"
          sequence = "10"
        }
        monster_slowerstuck:e =
        {
          origin = "0 0 0"
          ;desc = "Unpro stuck faggot"
        }
        monster_spitter:e =
        {
          origin = "0 0 0"
          ;desc = "Spitter"
        }
        monster_stranger:e =
        {
          origin = "0 0 0"
          ;desc = "Stranger"
        }
        monster_suicider:e =
        {
          origin = "0 0 0"
          ;desc = "Suicider nerd"
          iuser1 = "0"
        }
        monster_taller:e =
        {
          origin = "0 0 0"
          ;desc = "Taller"
        }
        monster_target:e =
        {
          origin = "0 0 0"
          ;desc = "Target for monsters to attack"
          frags = "11"
        }
        monster_twitcher:e =
        {
          origin = "0 0 0"
          ;desc = "Twitcher"
          body = "-1"
        }
        monster_twitcher2:e =
        {
          origin = "0 0 0"
          ;desc = "Twitcher2"
          body = "-1"
        }
        monster_twitcher3:e =
        {
          origin = "0 0 0"
          ;desc = "Twitcher3"
          body = "-1"
        }
        monster_twitcher4:e =
        {
          origin = "0 0 0"
          ;desc = "Twitcher4"
          body = "-1"
        }
        monster_watro:e =
        {
          origin = "0 0 0"
          ;desc = "Watro"
        }
      }
      motion_* entities.qtxfolder =
      {
        motion_manager:e =
        {
          origin = "0 0 0"
          ;desc = "Control the movement and direction of an entity"
          target = "*locus"
        }
      }
      multi_* entities.qtxfolder =
      {
        multi_alias:e =
        {
          origin = "0 0 0"
          ;desc = "Multi-target alias"
          m_iMode = "0"
        }
        multi_manager:e =
        {
          origin = "0 0 0"
          ;desc = "MultiTarget Manager"
        }
        multi_watcher:e =
        {
          origin = "0 0 0"
          ;desc = "State Watcher"
          m_fLogic = "0"
        }
      }
      other entities.qtxfolder =
      {
        boat:e =
        {
          origin = "0 0 0"
          ;desc = "Boat"
        }
        camera:e =
        {
          origin = "0 0 0"
          ;desc = "3D camera"
        }
        cycler:e =
        {
          origin = "0 0 0"
          ;desc = "Monster Cycler"
        }
        dripper:e =
        {
          origin = "0 0 0"
          ;desc = "Create drips"
          fuser1 = "-250"
        }
        gibshooter:e =
        {
          origin = "0 0 0"
          ;desc = "Gib Shooter"
          m_iBloodColor = "0"
        }
        infodecal:e =
        {
          origin = "0 0 0"
          ;desc = "Decal"
        }
        light:e =
        {
          origin = "0 0 0"
          ;desc = "Invisible lightsource"
        }
        monstermaker:e =
        {
          origin = "0 0 0"
          ;desc = "Monster Maker"
          monstercount = "-1"
          delay = "5"
          spawndelay = "0"
          m_imaxlivechildren = "5"
          m_iClass = "0"
          m_iPlayerReact = "0"
        }
        multisource:e =
        {
          origin = "0 0 0"
          ;desc = "Multisource"
        }
        prop:e =
        {
          origin = "0 0 0"
          ;desc = "Map prop"
          skin = "0"
          body = "0"
          m_iAction_On = "0"
          m_iAction_Off = "0"
        }
        speaker:e =
        {
          origin = "0 0 0"
          ;desc = "Announcement Speaker"
          preset = "0"
          health = "5"
        }
        watcher:e =
        {
          origin = "0 0 0"
          ;desc = "State Watcher"
          m_fLogic = "0"
        }
        weaponbox:e =
        {
          origin = "0 0 0"
          ;desc = "Weapon/Ammo Container"
        }
        worldspawn:b =
        {
          ;desc = "World entity"
          sounds = "1"
          WaveHeight = "0.0"
          MaxRange = "4096"
          startdark = "0"
          gametitle = "0"
          newunit = "0"
          defaultteam = "0"
          nomusicstop = "1"
          noitemdropping = "0"
          nosimon = "0"
          iuser1 = "0"
          iuser2 = "0"
          materialstxt = "sound/materials.txt"
          player1 = "police1"
          player2 = "police2"
          player3 = "police3"
          player4 = "police4"
          iuser3 = "0"
        }
        worldspawn:b =
        {
          ;desc = "World entity"
          message = "1"
          sounds = "1"
          WaveHeight = "0.0"
          MaxRange = "4096"
          startdark = "0"
          gametitle = "0"
          newunit = "0"
          defaultteam = "0"
          nomusicstop = "1"
          noitemdropping = "0"
          nosimon = "0"
          iuser1 = "0"
          iuser2 = "0"
          materialstxt = "sound/materials.txt"
          player1 = "police1"
          player2 = "police2"
          player3 = "police3"
          player4 = "police4"
          iuser3 = "0"
        }
      }
      path_* entities.qtxfolder =
      {
        path_corner:e =
        {
          origin = "0 0 0"
          ;desc = "Path Corner"
          wait = "0"
          speed = "0"
          armortype = "0"
          armorvalue = "0"
        }
        path_track:e =
        {
          origin = "0 0 0"
          ;desc = "Train Track Path"
          speed = "0"
          armortype = "0"
          frags = "0"
          armorvalue = "0"
        }
      }
      player_* entities.qtxfolder =
      {
        player_freeze:e =
        {
          origin = "0 0 0"
          ;desc = "Stop player from moving"
          delay = "5"
        }
        player_loadsaved:e =
        {
          origin = "0 0 0"
          ;desc = "Load Auto-Saved game"
          duration = "2"
          holdtime = "0"
          renderamt = "255"
          rendercolor = "0 0 0"
          messagetime = "0"
          loadtime = "0"
        }
        player_weaponstrip:e =
        {
          origin = "0 0 0"
          ;desc = "Strip player's weapons"
          bullets = "0"
          magnum = "0"
          shotgun = "0"
          crossbow = "0"
          argrenades = "0"
          rockets = "0"
          uranium = "0"
          satchels = "0"
          snarks = "0"
          tripmines = "0"
          handgrenades = "0"
          hornetgun = "0"
        }
      }
      rain_* entities.qtxfolder =
      {
        rain_modify:e =
        {
          origin = "0 0 0"
          ;desc = "Modify rain settings"
          m_flTime = "0"
          m_iDripsPerSecond = "800"
          m_flWindX = "0"
          m_flWindY = "0"
          m_flRandX = "0"
          m_flRandY = "0"
        }
        rain_settings:e =
        {
          origin = "0 0 0"
          ;desc = "Constant map settings"
          m_flDistance = "1000"
          m_iMode = "0"
        }
      }
      real_* entities.qtxfolder =
      {
        real_camera:e =
        {
          origin = "0 0 0"
          ;desc = "Actually pro"
        }
      }
      scripted_* entities.qtxfolder =
      {
        scripted_action:e =
        {
          origin = "0 0 0"
          ;desc = "Scripted Action"
          m_fMoveTo = "5"
          m_fTurnType = "1"
          m_fAction = "0"
        }
        scripted_sentence:e =
        {
          origin = "0 0 0"
          ;desc = "Scripted Sentence"
          duration = "3"
          radius = "512"
          refire = "3"
          listener = "player"
          volume = "10"
          attenuation = "0"
        }
        scripted_sequence:e =
        {
          origin = "0 0 0"
          ;desc = "Scripted Sequence"
        }
        scripted_tanksequence:e =
        {
          origin = "0 0 0"
          ;desc = "Scripted Tank Sequence"
          m_iTurn = "2"
          m_iShoot = "1"
          m_iUntil = "1"
          m_fDuration = "0"
          m_iActive = "0"
          m_iControllable = "0"
          m_iLaserSpot = "0"
        }
        scripted_trainsequence:e =
        {
          origin = "0 0 0"
          ;desc = "Scripted Train Sequence"
          m_iDirection = "4"
          m_fDuration = "0"
          m_iPostDirection = "3"
        }
      }
      statue_* entities.qtxfolder =
      {
        statue_eagle:e =
        {
          origin = "0 0 0"
          ;desc = "Eagle statue for statue puzzle"
          startpos = "0"
        }
        statue_horse:e =
        {
          origin = "0 0 0"
          ;desc = "Horse statue for statue puzzle"
          startpos = "0"
        }
        statue_lion:e =
        {
          origin = "0 0 0"
          ;desc = "Lion statue for statue puzzle"
          startpos = "0"
        }
        statue_owl:e =
        {
          origin = "0 0 0"
          ;desc = "Owl statue for statue puzzle"
          startpos = "0"
        }
        statue_puzzle_complete:e =
        {
          origin = "0 0 0"
          ;desc = "Fire this when statue puzzle is done"
        }
      }
      subtitle_* entities.qtxfolder =
      {
        subtitle_linechange:e =
        {
          origin = "0 0 0"
          ;desc = "Change and display subtitle_main line"
          linechange = "1"
        }
        subtitle_main:e =
        {
          origin = "0 0 0"
          ;desc = "Subtitle Manager"
          linenumber = "1"
        }
        subtitle_multiple:e =
        {
          origin = "0 0 0"
          ;desc = "Subtitle Line Changer (Multiple)"
          subtitlenumber1 = "0"
          subtitlenumber2 = "0"
          subtitlenumber3 = "0"
          subtitlenumber4 = "0"
          subtitlenumber5 = "0"
          subtitlenumber6 = "0"
          subtitlenumber7 = "0"
          subtitlenumber8 = "0"
          subtitlenumber9 = "0"
          subtitlenumber10 = "0"
          subtitlenumber11 = "0"
          subtitlenumber12 = "0"
          subtitlenumber13 = "0"
          subtitlenumber14 = "0"
          subtitlenumber15 = "0"
          subtitlenumber16 = "0"
          subtitlenumber17 = "0"
          subtitlenumber18 = "0"
          subtitlenumber19 = "0"
          subtitlenumber20 = "0"
          subtitlenumber21 = "0"
          subtitlenumber22 = "0"
          subtitlenumber23 = "0"
          subtitlenumber24 = "0"
          subtitlenumber25 = "0"
          subtitlenumber26 = "0"
          subtitlenumber27 = "0"
          subtitlenumber28 = "0"
          subtitlenumber29 = "0"
          subtitlenumber30 = "0"
          subtitlenumber31 = "0"
          subtitlenumber32 = "0"
          subtitletime1 = "0"
          subtitletime2 = "0"
          subtitletime3 = "0"
          subtitletime4 = "0"
          subtitletime5 = "0"
          subtitletime6 = "0"
          subtitletime7 = "0"
          subtitletime8 = "0"
          subtitletime9 = "0"
          subtitletime10 = "0"
          subtitletime11 = "0"
          subtitletime12 = "0"
          subtitletime13 = "0"
          subtitletime14 = "0"
          subtitletime15 = "0"
          subtitletime16 = "0"
          subtitletime17 = "0"
          subtitletime18 = "0"
          subtitletime19 = "0"
          subtitletime20 = "0"
          subtitletime21 = "0"
          subtitletime22 = "0"
          subtitletime23 = "0"
          subtitletime24 = "0"
          subtitletime25 = "0"
          subtitletime26 = "0"
          subtitletime27 = "0"
          subtitletime28 = "0"
          subtitletime29 = "0"
          subtitletime30 = "0"
          subtitletime31 = "0"
          subtitletime32 = "0"
        }
      }
      tape_* entities.qtxfolder =
      {
        tape_recorder:e =
        {
          origin = "0 0 0"
          ;desc = "Tape Recorder for saving"
          skin = "0"
          body = "0"
        }
      }
      target_* entities.qtxfolder =
      {
        target_cdaudio:e =
        {
          origin = "0 0 0"
          ;desc = "CD Audio Target"
          health = "-1"
        }
      }
      trigger_* entities.qtxfolder =
      {
        trigger_auto:e =
        {
          origin = "0 0 0"
          ;desc = "AutoTrigger"
          triggerstate = "2"
        }
        trigger_autosave:b =
        {
          ;incl = "defpoly"
          ;desc = "AutoSave Trigger"
        }
        trigger_booksimon:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger book simon to appear"
          iuser1 = "0"
        }
        trigger_booksimon:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger Book Simon"
        }
        trigger_bounce:b =
        {
          ;incl = "defpoly"
          ;desc = "Bouncey area"
          frags = "0.9"
          armorvalue = "100"
        }
        trigger_camera:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger Camera"
          wait = "10"
          speed = "0"
          acceleration = "500"
          deceleration = "500"
          m_iAttachment = "0"
          keepblackbars = "0"
          keepnohud = "0"
          iuser2 = "0"
        }
        trigger_cdaudio:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger CD Audio"
          health = "-1"
        }
        trigger_changealias:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger Change Alias"
        }
        trigger_changecvar:e =
        {
          origin = "0 0 0"
          ;desc = "Change Console Variable"
        }
        trigger_changelevel:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger: Change level"
          changedelay = "0"
        }
        trigger_changetarget:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger Change Target"
        }
        trigger_changevalue:e =
        {
          origin = "0 0 0"
          ;desc = "Change any entity's values"
        }
        trigger_checkbrush:b =
        {
          ;incl = "defpoly"
          ;desc = "Brush equivalent of recb_message"
          checkdelay = "2"
        }
        trigger_cofmobile:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger Cof Mobile SMS"
          bodynumber = "0"
        }
        trigger_cofteleport:b =
        {
          ;incl = "defpoly"
          ;desc = "CoF Teleport"
        }
        trigger_command:e =
        {
          origin = "0 0 0"
          ;desc = "Console Command"
        }
        trigger_coop_changelevel:b =
        {
          ;incl = "defpoly"
          ;desc = "Coop changelevel field"
        }
        trigger_counter:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger counter"
          count = "2"
        }
        trigger_endsection:b =
        {
          ;incl = "defpoly"
          ;desc = "EndSection Trigger"
        }
        trigger_gravity:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger Gravity"
          gravity = "1"
        }
        trigger_hevcharge:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger charge hev"
          frags = "10"
          delay = "0"
        }
        trigger_hurt:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger player hurt"
          dmg = "10"
          delay = "0"
          damagetype = "0"
          cangib = "0"
        }
        trigger_lightstyle:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger Change Lightstyle"
          style = "0"
          m_iFade = "0"
          m_iWait = "-1"
        }
        trigger_monsterjump:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger monster jump"
          speed = "40"
          height = "128"
        }
        trigger_motion:e =
        {
          origin = "0 0 0"
          ;desc = "Set the position and movement of an entity"
          m_iPosMode = "0"
          m_iAngMode = "0"
          m_iVelMode = "0"
          m_iAVelMode = "0"
        }
        trigger_multiple:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger: Activate multiple"
          wait = "10"
          iuser1 = "0"
        }
        trigger_once:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger: Activate once"
          iuser1 = "0"
        }
        trigger_onsight:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger when A sees B"
          frags = "512"
          max_health = "90"
        }
        trigger_push:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger player push"
          speed = "40"
        }
        trigger_relay:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger Relay"
          triggerstate = "2"
        }
        trigger_rottest:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger RotTest"
          health = "5"
          armortype = "30"
        }
        trigger_sound:b =
        {
          ;incl = "defpoly"
          ;desc = "Brush-based DSP Sound"
          delay = "0"
          roomtype = "0"
        }
        trigger_startpatrol:e =
        {
          origin = "0 0 0"
          ;desc = "Trigger Start Patrol"
        }
        trigger_statueuse:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger Statue Puzzle"
          statuetype = "0"
        }
        trigger_subwaywall:b =
        {
          ;incl = "defpoly"
          ;desc = "The thing for smashing down the subway"
          noise1 = "ambience/subway_wall_hit.wav"
          noise2 = "ambience/subway_wall_break.wav"
          frags = "3"
        }
        trigger_suicide:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger player suicide"
          iuser1 = "1"
        }
        trigger_teleport:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger teleport"
        }
        trigger_transition:b =
        {
          ;incl = "defpoly"
          ;desc = "Trigger: Select Transition Area"
        }
      }
      watcher_* entities.qtxfolder =
      {
        watcher_count:e =
        {
          origin = "0 0 0"
          ;desc = "Watcher, entity count"
          m_iMode = "0"
        }
      }
      weapon_* entities.qtxfolder =
      {
        weapon_axe:e =
        {
          origin = "0 0 0"
          ;desc = "Axe"
        }
        weapon_booklaser:e =
        {
          origin = "0 0 0"
          ;desc = "Booklaser"
        }
        weapon_branch:e =
        {
          origin = "0 0 0"
          ;desc = "Branch"
        }
        weapon_camera:e =
        {
          origin = "0 0 0"
          ;desc = "Camera"
        }
        weapon_debug:e =
        {
          origin = "0 0 0"
          ;desc = "Debugger"
        }
        weapon_famas:e =
        {
          origin = "0 0 0"
          ;desc = "FAMAS"
        }
        weapon_flare:e =
        {
          origin = "0 0 0"
          ;desc = "Flare"
        }
        weapon_flashlight:e =
        {
          origin = "0 0 0"
          ;desc = "Flashlight"
        }
        weapon_glock:e =
        {
          origin = "0 0 0"
          ;desc = "Glock 9mm"
        }
        weapon_lantern:e =
        {
          origin = "0 0 0"
          ;desc = "Lantern"
        }
        weapon_m16:e =
        {
          origin = "0 0 0"
          ;desc = "M16A2 Rifle"
        }
        weapon_mobile:e =
        {
          origin = "0 0 0"
          ;desc = "Mobile Phone"
        }
        weapon_nightstick:e =
        {
          origin = "0 0 0"
          ;desc = "Night Stick"
        }
        weapon_p345:e =
        {
          origin = "0 0 0"
          ;desc = "P345 Pistol"
        }
        weapon_revolver:e =
        {
          origin = "0 0 0"
          ;desc = "Revolver"
        }
        weapon_rifle:e =
        {
          origin = "0 0 0"
          ;desc = "Hunting Rifle"
        }
        weapon_shotgun:e =
        {
          origin = "0 0 0"
          ;desc = "Pump Shotgun"
        }
        weapon_sledgehammer:e =
        {
          origin = "0 0 0"
          ;desc = "Sledgehammer"
        }
        weapon_switchblade:e =
        {
          origin = "0 0 0"
          ;desc = "Switch Blade"
        }
        weapon_syringe:e =
        {
          origin = "0 0 0"
          ;desc = "Syringe"
        }
        weapon_tmp:e =
        {
          origin = "0 0 0"
          ;desc = "TMP"
        }
        weapon_vp70:e =
        {
          origin = "0 0 0"
          ;desc = "VP70"
        }
      }
      world_* entities.qtxfolder =
      {
        world_items:e =
        {
          origin = "0 0 0"
          ;desc = "World Items"
          type = "42"
        }
      }
    }
  }
  Entity Forms.fctx =
  {
    t_worldspawn:incl =
    {
      message: =
      {
        txt = "&"
        hint = "Map Description / Title"
      }
      skyname: =
      {
        txt = "&"
        hint = "environment map (cl_skyname)"
      }
      sounds: =
      {
        txt = "&"
        hint = "CD track to play"
      }
      light: =
      {
        txt = "&"
        hint = "Default light level"
      }
      WaveHeight: =
      {
        txt = "&"
        hint = "Default Wave Height"
      }
      MaxRange: =
      {
        txt = "&"
        hint = "Max viewable distance"
      }
      chaptertitle: =
      {
        txt = "&"
        hint = "Chapter Title Message"
      }
      startdark: =
      {
        txt = "&"
        hint = "Level Fade In"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      gametitle: =
      {
        txt = "&"
        hint = "Display 'Half-Life' title?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      newunit: =
      {
        txt = "&"
        hint = "Flush global entities?"
        typ = "C"
        items = "No, keep global ents"$0D"Yes, flush global ents"
        values = "0"$0D"1"
      }
      mapteams: =
      {
        txt = "&"
        hint = "Map Team List"
      }
      defaultteam: =
      {
        txt = "&"
        hint = "Default Team"
        typ = "C"
        items = "Fewest Players"$0D"First Team"
        values = "0"$0D"1"
      }
      startsuit: =
      {
        txt = "&"
        hint = "HEV from start"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      allowmonsters: =
      {
        txt = "&"
        hint = "Allow Monsters (MP only)"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      allow_sp_gjump: =
      {
        txt = "&"
        hint = "Allow SP Gauss Jump"
        typ = "C"
        items = "No (Default)"$0D"Yes"
        values = "0"$0D"1"
      }
      nomusicstop: =
      {
        txt = "&"
        hint = "No Music Stop"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      noitemdropping: =
      {
        txt = "&"
        hint = "No item dropping?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      noise3: =
      {
        txt = "&"
        hint = "Custom no item dropping message"
      }
      nosimon: =
      {
        txt = "&"
        hint = "No Sick Simon coop"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Lobby map"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      doctormap: =
      {
        txt = "&"
        hint = "Custom doctor restart map"
      }
      iuser2: =
      {
        txt = "&"
        hint = "Can drop phone?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      materialstxt: =
      {
        txt = "&"
        hint = "Custom materials.txt (eg sound/materials.txt)"
      }
      player1: =
      {
        txt = "&"
        hint = "Custom plr mdl (1)"
      }
      player2: =
      {
        txt = "&"
        hint = "Custom plr mdl (2)"
      }
      player3: =
      {
        txt = "&"
        hint = "Custom plr mdl (3)"
      }
      player4: =
      {
        txt = "&"
        hint = "Custom plr mdl (4)"
      }
      customsleeve: =
      {
        txt = "&"
        hint = "Custom sleeve tga"
      }
      customfingers: =
      {
        txt = "&"
        hint = "Custom fingers tga"
      }
      customgloves: =
      {
        txt = "&"
        hint = "Custom gloves tga"
      }
      iuser3: =
      {
        txt = "&"
        hint = "Allow revolver dualwield"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
    }
    worldspawn:form =
    {
      t_worldspawn = !
    }
    t_Sequence:incl =
    {
      sequence: =
      {
        txt = "&"
        hint = "Animation Sequence (editor)"
      }
    }
    t_ZHLTLightKeys:incl =
    {
      zhlt_lightflags: =
      {
        txt = "&"
        hint = "HLRAD Opacity (ZHLT 2.5.1+)"
        typ = "C"
        items = "Normal (0)"$0D"Embedded Fix (1)"$0D"Opaque (Blocks light) (2)"
         $0D"Opaque + Embedded Fix (3)"$0D"ConcaveFix (6)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"6"
      }
      light_origin: =
      {
        txt = "&"
        hint = "Light Origin (ZHLT 2.5.1+)"
      }
    }
    t_ZhltLights:incl =
    {
      _fade: =
      {
        txt = "&"
        hint = "Fade (ZHLT 2.5.1+)"
      }
      _falloff: =
      {
        txt = "&"
        hint = "Falloff (ZHLT 2.5.1+)"
        typ = "C"
        items = "Inverse Square (1)"$0D"Inverse Linear (2)"
        values = "1"$0D"2"
      }
    }
    t_TexLight:incl =
    {
      style: =
      {
        txt = "&"
        hint = "Texlight style"
        typ = "C"
        items = "Normal (on)"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D
         "Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D
         "Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"$0D
         "Underwater"
        values = "0"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D"8"$0D
         "4"$0D"9"$0D"12"
      }
    }
    t_SwitchTexLight:incl =
    {
      style: =
      {
        txt = "&"
        hint = "Texlight style"
        typ = "C"
        items = "Normal (on)"$0D"Switchable (starts on)"$0D"Switchable (starts"
         " off)"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D"Slow pulse,"
         " noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D"Candle A"$0D
         "Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"$0D"Underwater"
        values = "0"$0D"-1"$0D"-2"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D
         "7"$0D"8"$0D"4"$0D"9"$0D"12"
      }
    }
    t_Appearflags:incl =
    {
      skill: =
      {
        txt = "&"
        hint = "Skill setting"
        typ = "C"
        items = "All skills"$0D"Not in easy"$0D"Not in medium"$0D"Not in hard"$0D
         "Only in easy"$0D"Only in medium"$0D"Only in hard"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"6"$0D"5"$0D"3"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
      }
    }
    t_Angles:incl =
    {
      angles: =
      {
        txt = "&"
        hint = "Pitch Yaw Roll (Y Z X)"
      }
    }
    t_Targetname:incl =
    {
      targetname: =
      {
        txt = "&"
        hint = "Name"
      }
    }
    t_Target:incl =
    {
      target: =
      {
        txt = "&"
        hint = "Target"
      }
    }
    t_MoveWith:incl =
    {
      movewith: =
      {
        txt = "&"
        hint = "Moves with"
      }
    }
    t_Master:incl =
    {
      master: =
      {
        txt = "&"
        hint = "Master"
      }
    }
    t_Weapon:incl =
    {
      bbox = '-16 -16 0 16 16 32'
      t_Targetname = !
      t_Angles = !
      t_Appearflags = !
      frags: =
      {
        txt = "&"
        hint = "Default bullets in clip"
        typ = "C"
        items = "Normal"$0D"Empty"
        values = "-1"$0D"-2"
      }
      master: =
      {
        txt = "&"
        hint = "Item Lock Master"
      }
      customv: =
      {
        txt = "&"
        hint = "Custom v model"
      }
      customw: =
      {
        txt = "&"
        hint = "Custom w model"
      }
      customscript: =
      {
        txt = "&"
        hint = "Custom weapon script"
      }
    }
    t_Ammo:incl =
    {
      t_Weapon = !
    }
    t_Global:incl =
    {
      globalname: =
      {
        txt = "&"
        hint = "Global Entity Name"
      }
    }
    t_Targetx:incl =
    {
      t_Target = !
      delay: =
      {
        txt = "&"
        hint = "Delay before trigger"
      }
      killtarget: =
      {
        txt = "&"
        hint = "KillTarget"
      }
    }
    t_RenderFxChoices:incl =
    {
      renderfx: =
      {
        txt = "&"
        hint = "Render FX"
        typ = "C"
        items = "Normal"$0D"Slow Pulse"$0D"Fast Pulse"$0D"Slow Wide Pulse"$0D"F"
         "ast Wide Pulse"$0D"Slow Strobe"$0D"Fast Strobe"$0D"Faster Strobe"$0D
         "Slow Flicker"$0D"Fast Flicker"$0D"Constant Glow (Sprites)"$0D"Distor"
         "t (Models)"$0D"Hologram (Distort + fade)"$0D"Bulge Sideways (Models)"
         $0D"Glowing Aura (Models)"$0D"Reflection (Models)"$0D"Entity in PVS"$0D
         "Skybox Entity"$0D"Fullbright Pro"$0D"Skybox Entity Fullbright Pro"$0D
         "Camera attached light"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"9"$0D"10"$0D"11"$0D"12"$0D"13"$0D
         "14"$0D"15"$0D"16"$0D"18"$0D"19"$0D"21"$0D"22"$0D"70"$0D"100"$0D"137"$0D
         "184"
      }
    }
    t_RenderMode:incl =
    {
      rendermode: =
      {
        txt = "&"
        hint = "Render Mode"
        typ = "C"
        items = "Normal"$0D"Pure Color"$0D"Texture"$0D"Glow (sprites only)"$0D
         "Solid"$0D"Additive"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
    }
    t_RenderFields:incl =
    {
      t_RenderFxChoices = !
      t_RenderMode = !
      renderamt: =
      {
        txt = "&"
        hint = "FX Amount (1 - 255)"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "FX Color (R G B)"
      }
    }
    t_RenderFieldsMax:incl =
    {
      t_RenderFxChoices = !
      t_RenderMode = !
      renderamt: =
      {
        txt = "&"
        hint = "FX Amount (1 - 255)"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "FX Color (R G B)"
      }
    }
    t_LockSounds:incl =
    {
      locked_sound: =
      {
        txt = "&"
        hint = "Locked Sound"
        typ = "C"
        items = "None"$0D"Access Denied (2)"$0D"Small zap (8)"$0D"Buzz (10)"$0D
         "Buzz Off (11)"$0D"Latch Locked (12)"
        values = "0"$0D"2"$0D"8"$0D"10"$0D"11"$0D"12"
      }
      unlocked_sound: =
      {
        txt = "&"
        hint = "Unlocked Sound"
        typ = "C"
        items = "None"$0D"Big zap & Warmup (1)"$0D"Access Granted (3)"$0D"Quic"
         "k Combolock (4)"$0D"Power Deadbolt 1 (5)"$0D"Power Deadbolt 2 (6)"$0D
         "Plunger (7)"$0D"Small zap (8)"$0D"Keycard Sound (9)"$0D"Buzz (10)"$0D
         "Latch Unlocked (13)"$0D"Lightswitch"
        values = "0"$0D"1"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"10"$0D
         "13"$0D"14"
      }
      locked_sentence: =
      {
        txt = "&"
        hint = "Locked Sentence"
        typ = "C"
        items = "None"$0D"Gen. Access Denied (NA)"$0D"Security Lockout (ND)"$0D
         "Blast Door (NF)"$0D"Fire Door (NFIRE)"$0D"Chemical Door (NCHEM)"$0D"R"
         "adiation Door (NRAD)"$0D"Gen. Containment (NCON)"$0D"Maintenance Doo"
         "r (NH)"$0D"Broken Shut Door (NG)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
      }
      unlocked_sentence: =
      {
        txt = "&"
        hint = "Unlocked Sentence"
        typ = "C"
        items = "None"$0D"Gen. Access Granted (EA)"$0D"Security Disengaged (ED"
         ")"$0D"Blast Door (EF)"$0D"Fire Door (EFIRE)"$0D"Chemical Door (ECHEM"
         ")"$0D"Radiation Door (ERAD)"$0D"Gen. Containment (ECON)"$0D"Maintena"
         "nce area (EH)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
    }
    t_PlayerClass:incl =
    {
      bbox = '-16 -16 -36 16 16 36'
      t_Angles = !
    }
    t_Monster:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_RenderFields = !
      t_Appearflags = !
      health: =
      {
        txt = "&"
        hint = "Initial health (0 = normal)"
      }
      model: =
      {
        txt = "&"
        hint = "Model (e.g. models/can.mdl)"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      skin: =
      {
        txt = "&"
        hint = "Skin"
      }
      scale: =
      {
        txt = "&"
        hint = "Scale (1.0 = normal size)"
      }
      target: =
      {
        txt = "&"
        hint = "Patrol Path"
      }
      m_iClass: =
      {
        txt = "&"
        hint = "Behave as"
        typ = "C"
        items = "Normal"$0D"Scientist"$0D"Barney"$0D"Human Military"$0D"Machin"
         "e (Human Military)"$0D"Alien Military"$0D"Other Alien"$0D"Headcrab"$0D
         "Bullsquid"$0D"Faction A"$0D"Faction B"$0D"Faction C"
        values = "0"$0D"3"$0D"11"$0D"4"$0D"1"$0D"5"$0D"7"$0D"8"$0D"9"$0D"14"$0D
         "15"$0D"16"
      }
      m_iPlayerReact: =
      {
        txt = "&"
        hint = "Reaction to player"
        typ = "C"
        items = "Normal"$0D"Ignore"$0D"Friendly until hurt"$0D"Friendly unless"
         " provoked"$0D"Enemy"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      TriggerTarget: =
      {
        txt = "&"
        hint = "TriggerTarget"
      }
      TriggerCondition: =
      {
        txt = "&"
        hint = "Trigger Condition"
        typ = "C"
        items = "No Trigger"$0D"See Player, Mad at Player"$0D"Take Damage"$0D"5"
         "0% Health Remaining"$0D"Death"$0D"Hear World"$0D"Hear Player"$0D"Hea"
         "r Combat"$0D"See Player Unconditional"$0D"See Player, Not In Combat"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"7"$0D"8"$0D"9"$0D"10"$0D"11"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "WaitTillSeen"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Gag"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Monster Clip"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Prisoner"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "No yellow blobs"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Fade Corpse"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4096"
        cap = "Doesn't scare"
      }
    }
    t_TalkMonster:incl =
    {
      UseSentence: =
      {
        txt = "&"
        hint = "Use Sentence"
      }
      UnUseSentence: =
      {
        txt = "&"
        hint = "Un-Use Sentence"
      }
      RefusalSentence: =
      {
        txt = "&"
        hint = "Refusal Sentence"
      }
      master: =
      {
        txt = "&"
        hint = "Master (prevents following)"
      }
      SpeakAs: =
      {
        txt = "&"
        hint = "Speech Group"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Pre-Disaster"
      }
    }
    t_gibshooterbase:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      m_iGibs: =
      {
        txt = "&"
        hint = "Number of shots"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay between shots"
      }
      m_iszPosition: =
      {
        txt = "&"
        hint = "At position (blank = here) [LP]"
      }
      m_iszVelocity: =
      {
        txt = "&"
        hint = "At velocity (blank = angle) [LV]"
      }
      m_flVelocity: =
      {
        txt = "&"
        hint = "Gib Speed Factor [LR]"
      }
      m_flVariance: =
      {
        txt = "&"
        hint = "Course Variance"
      }
      m_flGibLife: =
      {
        txt = "&"
        hint = "Shot lifetime (secs)"
      }
      m_iszTargetName: =
      {
        txt = "&"
        hint = "Shot's name"
      }
      m_iszSpawnTarget: =
      {
        txt = "&"
        hint = "Fire on spawn (locus = shot)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Repeatable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Debug"
      }
    }
    t_Light:incl =
    {
      targetname: =
      {
        txt = "&"
        hint = "Name"
      }
      _light: =
      {
        txt = "&"
        hint = "Brightness"
      }
      style: =
      {
        txt = "&"
        hint = "Appearance (static)"
        typ = "C"
        items = "Normal (on)"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D
         "Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D
         "Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"$0D
         "Underwater"
        values = "0"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D"8"$0D
         "4"$0D"9"$0D"12"
      }
      pattern: =
      {
        txt = "&"
        hint = "Custom Appearance (on)"
      }
      m_iOnStyle: =
      {
        txt = "&"
        hint = "Appearance (on)"
        typ = "C"
        items = "Normal (on)"$0D"Off"$0D"Fluorescent flicker"$0D"Slow, strong "
         "pulse"$0D"Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Fli"
         "cker B"$0D"Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Sl"
         "ow strobe"$0D"Underwater"
        values = "0"$0D"13"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
         "8"$0D"4"$0D"9"$0D"12"
      }
      m_iOffStyle: =
      {
        txt = "&"
        hint = "Appearance (off)"
        typ = "C"
        items = "Normal (off)"$0D"On"$0D"Fluorescent flicker"$0D"Slow, strong "
         "pulse"$0D"Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Fli"
         "cker B"$0D"Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Sl"
         "ow strobe"$0D"Underwater"
        values = "0"$0D"20"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
         "8"$0D"4"$0D"9"$0D"12"
      }
      m_iTurnOnTime: =
      {
        txt = "&"
        hint = "Time taken to turn on (secs)"
      }
      m_iTurnOnStyle: =
      {
        txt = "&"
        hint = "Appearance (turn on)"
        typ = "C"
        items = "Normal (off)"$0D"On"$0D"Fluorescent flicker"$0D"Slow, strong "
         "pulse"$0D"Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Fli"
         "cker B"$0D"Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Sl"
         "ow strobe"$0D"Underwater"
        values = "0"$0D"20"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
         "8"$0D"4"$0D"9"$0D"12"
      }
      m_iTurnOffTime: =
      {
        txt = "&"
        hint = "Time taken to turn off (secs)"
      }
      m_iTurnOffStyle: =
      {
        txt = "&"
        hint = "Appearance (turn off)"
        typ = "C"
        items = "Normal (on)"$0D"Off"$0D"Fluorescent flicker"$0D"Slow, strong "
         "pulse"$0D"Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Fli"
         "cker B"$0D"Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Sl"
         "ow strobe"$0D"Underwater"
        values = "0"$0D"13"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
         "8"$0D"4"$0D"9"$0D"12"
      }
    }
    t_Breakable:incl =
    {
      t_Targetname = !
      t_Global = !
      target: =
      {
        txt = "&"
        hint = "Target on break"
      }
      whenhit: =
      {
        txt = "&"
        hint = "Trigger when hit (locus = position)"
      }
      health: =
      {
        txt = "&"
        hint = "Strength"
      }
      material: =
      {
        txt = "&"
        hint = "Material type"
        typ = "C"
        items = "Glass"$0D"Wood"$0D"Metal"$0D"Flesh"$0D"Cinder Block"$0D"Ceili"
         "ng Tile"$0D"Computer"$0D"Unbreakable Glass"$0D"Rocks"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
      explosion: =
      {
        txt = "&"
        hint = "Gibs Direction"
        typ = "C"
        items = "Random"$0D"Relative to Attack"
        values = "0"$0D"1"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before fire"
      }
      gibmodel: =
      {
        txt = "&"
        hint = "Gib Model"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      spawnobject: =
      {
        txt = "&"
        hint = "Spawn On Break"
        typ = "C"
        items = "Nothing"$0D"Battery"$0D"Healthkit"$0D"9mm Handgun"$0D"9mm Cli"
         "p"$0D"Machine Gun"$0D"Machine Gun Clip"$0D"Machine Gun Grenades"$0D"S"
         "hotgun"$0D"Shotgun Shells"$0D"Crossbow"$0D"Crossbow Bolts"$0D"357"$0D
         "357 clip"$0D"RPG"$0D"RPG Clip"$0D"Gauss clip"$0D"Hand grenade"$0D"Tr"
         "ipmine"$0D"Satchel Charge"$0D"Snark"$0D"Hornet Gun"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"
      }
      explodemagnitude: =
      {
        txt = "&"
        hint = "Explode Magnitude (0=none)"
      }
      respawn: =
      {
        txt = "&"
        hint = "Respawn time (secs)"
        typ = "C"
        items = "No respawn"$0D"Respawn when triggered"
        values = "0"$0D"-1"
      }
      netname: =
      {
        txt = "&"
        hint = "Target on respawn"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Only Trigger"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Touch"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Pressure"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Fade Respawn"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Invert Hit Vector"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Instant Crowbar"
      }
    }
    t_Door:incl =
    {
      t_Appearflags = !
      target: =
      {
        txt = "&"
        hint = "Target (Always)"
      }
      message: =
      {
        txt = "&"
        hint = "Target on Open"
      }
      netname: =
      {
        txt = "&"
        hint = "Target on Close"
      }
      killtarget: =
      {
        txt = "&"
        hint = "KillTarget"
      }
      immediatemode: =
      {
        txt = "&"
        hint = "Fire before moving"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      onoffmode: =
      {
        txt = "&"
        hint = "On/Off Aware"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed"
      }
      movesnd: =
      {
        txt = "&"
        hint = "Move Sound"
        typ = "C"
        items = "No Sound"$0D"Servo (Sliding) (1)"$0D"Pneumatic (Sliding) (2)"$0D
         "Pneumatic (Rolling) (3)"$0D"Vacuum (4)"$0D"Power Hydraulic (5)"$0D"L"
         "arge Rollers (6)"$0D"Track Door (7)"$0D"Snappy Metal Door (8)"$0D"Sq"
         "ueaky 1 (9)"$0D"Squeaky 2 (10)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"
      }
      stopsnd: =
      {
        txt = "&"
        hint = "Stop Sound"
        typ = "C"
        items = "No Sound"$0D"Clang with brake (1)"$0D"Clang reverb (2)"$0D"Ra"
         "tchet Stop (3)"$0D"Chunk (4)"$0D"Light airbrake (5)"$0D"Metal Slide "
         "Stop (6)"$0D"Metal Lock Stop (7)"$0D"Snappy Metal Stop (8)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
      wait: =
      {
        txt = "&"
        hint = "Delay before close"
        typ = "C"
        items = "Stays Open (-1)"
        values = "-1"
      }
      lip: =
      {
        txt = "&"
        hint = "Lip"
      }
      dmg: =
      {
        txt = "&"
        hint = "Damage inflicted when blocked"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before fire"
      }
      health: =
      {
        txt = "&"
        hint = "Health (shoot open)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Starts Open"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Don't link"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Passable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Toggle"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Use Only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Monsters Can't"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Force Touchable"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    t_BaseTank:incl =
    {
      t_Targetname = !
      t_Target = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_Global = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Active"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Not Solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Line of Sight"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Controllable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Laser Spot"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Match Target"
      }
      master: =
      {
        txt = "&"
        hint = "(Team) Master"
      }
      firemaster: =
      {
        txt = "&"
        hint = "Fire Master"
      }
      m_iszLocusFire: =
      {
        txt = "&"
        hint = "Trigger on firing (locus = barrel)"
      }
      yawrate: =
      {
        txt = "&"
        hint = "Yaw rate"
      }
      yawrange: =
      {
        txt = "&"
        hint = "Yaw range"
      }
      yawtolerance: =
      {
        txt = "&"
        hint = "Yaw tolerance"
      }
      pitchrate: =
      {
        txt = "&"
        hint = "Pitch rate"
      }
      pitchrange: =
      {
        txt = "&"
        hint = "Pitch range"
      }
      pitchtolerance: =
      {
        txt = "&"
        hint = "Pitch tolerance"
      }
      barrel: =
      {
        txt = "&"
        hint = "Barrel Length"
      }
      barrely: =
      {
        txt = "&"
        hint = "Barrel Horizontal"
      }
      barrelz: =
      {
        txt = "&"
        hint = "Barrel Vertical"
      }
      spritesmoke: =
      {
        txt = "&"
        hint = "Smoke Sprite"
      }
      spriteflash: =
      {
        txt = "&"
        hint = "Flash Sprite"
      }
      spritescale: =
      {
        txt = "&"
        hint = "Sprite scale"
      }
      rotatesound: =
      {
        txt = "&"
        hint = "Rotate Sound"
      }
      firerate: =
      {
        txt = "&"
        hint = "Rate of Fire"
      }
      bullet_damage: =
      {
        txt = "&"
        hint = "Damage Per Bullet"
      }
      persistence: =
      {
        txt = "&"
        hint = "Firing persistence"
      }
      firespread: =
      {
        txt = "&"
        hint = "Bullet accuracy"
        typ = "C"
        items = "Perfect Shot"$0D"Small cone"$0D"Medium cone"$0D"Large cone"$0D
         "Extra-large cone"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      minRange: =
      {
        txt = "&"
        hint = "Minmum target range"
      }
      maxRange: =
      {
        txt = "&"
        hint = "Maximum target range"
      }
      m_iClass: =
      {
        txt = "&"
        hint = "Behaviour"
        typ = "C"
        items = "Attack only players"$0D"Barney"$0D"Human Military"$0D"Alien M"
         "ilitary"
        values = "0"$0D"11"$0D"4"$0D"5"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    t_PlatSounds:incl =
    {
      movesnd: =
      {
        txt = "&"
        hint = "Move Sound"
        typ = "C"
        items = "No Sound"$0D"big elev 1"$0D"big elev 2"$0D"tech elev 1"$0D"te"
         "ch elev 2"$0D"tech elev 3"$0D"freight elev 1"$0D"freight elev 2"$0D"h"
         "eavy elev"$0D"rack elev"$0D"rail elev"$0D"squeek elev"$0D"odd elev 1"
         $0D"odd elev 2"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"
      }
      custommovesnd: =
      {
        txt = "&"
        hint = "Custom Move Sound"
      }
      stopsnd: =
      {
        txt = "&"
        hint = "Stop Sound"
        typ = "C"
        items = "No Sound"$0D"big elev stop1"$0D"big elev stop2"$0D"freight el"
         "ev stop"$0D"heavy elev stop"$0D"rack stop"$0D"rail stop"$0D"squeek s"
         "top"$0D"quick stop"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
      customstopsnd: =
      {
        txt = "&"
        hint = "Custom Stop Sound"
      }
      volume: =
      {
        txt = "&"
        hint = "Sound Volume 0.0 - 1.0"
      }
    }
    t_Trackchange:incl =
    {
      t_Targetname = !
      t_RenderFields = !
      t_Global = !
      t_PlatSounds = !
      height: =
      {
        txt = "&"
        hint = "Travel altitude"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Auto Activate train"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Relink track"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Start at Bottom"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Rotate Only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "X Axis"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Y Axis"
      }
      rotation: =
      {
        txt = "&"
        hint = "Spin amount"
      }
      train: =
      {
        txt = "&"
        hint = "Train to switch"
      }
      toptrack: =
      {
        txt = "&"
        hint = "Top track"
      }
      bottomtrack: =
      {
        txt = "&"
        hint = "Bottom track"
      }
      speed: =
      {
        txt = "&"
        hint = "Move/Rotate speed"
      }
    }
    t_Trigger:incl =
    {
      t_Targetname = !
      t_Master = !
      t_Targetx = !
    }
    t_TriggerCond:incl =
    {
      netname: =
      {
        txt = "&"
        hint = "Triggered only by entity"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Monsters"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "No Clients"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Pushables"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Everything else"
      }
    }
    t_Script:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Target (fire when done)"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before firing target"
      }
      killtarget: =
      {
        txt = "&"
        hint = "KillTarget when done"
      }
      m_iszFireOnBegin: =
      {
        txt = "&"
        hint = "Fire after moving"
      }
      m_iszEntity: =
      {
        txt = "&"
        hint = "Target Monster [LE]"
      }
      m_flRadius: =
      {
        txt = "&"
        hint = "Search Radius"
      }
      m_iPriority: =
      {
        txt = "&"
        hint = "Priority"
        typ = "C"
        items = "Normal"$0D"Override other sequences"
        values = "0"$0D"4"
      }
      m_iFinishSchedule: =
      {
        txt = "&"
        hint = "AI Schedule when done"
        typ = "C"
        items = "Default AI"$0D"Ambush"
        values = "0"$0D"1"
      }
      m_iRepeats: =
      {
        txt = "&"
        hint = "Repeat action X more times"
      }
      m_fRepeatFrame: =
      {
        txt = "&"
        hint = "Repeat from frame"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Repeatable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "No Interruptions"
      }
    }
    t_ScriptSequence:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Script = !
      m_iszMoveTarget: =
      {
        txt = "&"
        hint = "Move target (blank = this) [LE]"
      }
      m_fMoveTo: =
      {
        txt = "&"
        hint = "Move to Position"
        typ = "C"
        items = "No (don't turn)"$0D"Walk"$0D"Run"$0D"No - Only turn"$0D"Insta"
         "nt move + turn"$0D"No - Instant turn"
        values = "0"$0D"1"$0D"2"$0D"5"$0D"4"$0D"6"
      }
      m_iszAttack: =
      {
        txt = "&"
        hint = "Turn target (blank = this) [LE]"
      }
      m_fTurnType: =
      {
        txt = "&"
        hint = "Turn mode"
        typ = "C"
        items = "Match Angle"$0D"Turn to face"$0D"Don't Turn"
        values = "0"$0D"1"$0D"2"
      }
      m_iszPlay: =
      {
        txt = "&"
        hint = "Action Animation"
      }
      m_iszIdle: =
      {
        txt = "&"
        hint = "Idle Animation"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Leave Corpse"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "No Script Movement"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Monster Dies"
      }
    }
    t_aiscripted_sequence:incl =
    {
      t_ScriptSequence = !
    }
    aiscripted_sequence:form =
    {
      t_aiscripted_sequence = !
    }
    t_ambient_fmodstream:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "File Name"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove on fire"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Loop"
      }
      frags: =
      {
        txt = "&"
        hint = "Music fade in time"
        typ = "C"
        items = "Instant"
        values = "0"
      }
    }
    ambient_fmodstream:form =
    {
      t_ambient_fmodstream = !
    }
    t_ambient_generic:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      message: =
      {
        txt = "&"
        hint = "WAV Name (e.g. vox/c.wav)"
      }
      health: =
      {
        txt = "&"
        hint = "Volume (10 = loudest)"
      }
      target: =
      {
        txt = "&"
        hint = "Entity to play from"
      }
      channel: =
      {
        txt = "&"
        hint = "Channel to use for that entity"
        typ = "C"
        items = "Weapon"$0D"Voice"$0D"Item"$0D"Body"$0D"Stream"$0D"Static"
        values = "1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
      preset: =
      {
        txt = "&"
        hint = "Dynamic Presets"
        typ = "C"
        items = "None"$0D"Huge Machine"$0D"Big Machine"$0D"Machine"$0D"Slow Fa"
         "de in"$0D"Fade in"$0D"Quick Fade in"$0D"Slow Pulse"$0D"Pulse"$0D"Qui"
         "ck pulse"$0D"Slow Oscillator"$0D"Oscillator"$0D"Quick Oscillator"$0D
         "Grunge pitch"$0D"Very low pitch"$0D"Low pitch"$0D"High pitch"$0D"Ver"
         "y high pitch"$0D"Screaming pitch"$0D"Oscillate spinup/down"$0D"Pulse"
         " spinup/down"$0D"Random pitch"$0D"Random pitch fast"$0D"Incremental "
         "Spinup"$0D"Alien"$0D"Bizzare"$0D"Planet X"$0D"Haunted"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"
      }
      volstart: =
      {
        txt = "&"
        hint = "Start Volume"
      }
      noise: =
      {
        txt = "&"
        hint = "Calc_ratio Volume (overrides)"
      }
      fadein: =
      {
        txt = "&"
        hint = "Fade in time (0-100)"
      }
      fadeout: =
      {
        txt = "&"
        hint = "Fade out time (0-100)"
      }
      pitch: =
      {
        txt = "&"
        hint = "Pitch (> 100 = higher)"
      }
      pitchstart: =
      {
        txt = "&"
        hint = "Start Pitch"
      }
      spinup: =
      {
        txt = "&"
        hint = "Spin up time (0-100)"
      }
      spindown: =
      {
        txt = "&"
        hint = "Spin down time (0-100)"
      }
      lfotype: =
      {
        txt = "&"
        hint = "LFO type (0 - 3)"
        typ = "C"
        items = "Off"$0D"Square"$0D"Triangle"$0D"Round"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      lforate: =
      {
        txt = "&"
        hint = "LFO rate (0-1000)"
      }
      lfomodpitch: =
      {
        txt = "&"
        hint = "LFO mod pitch (0-100)"
      }
      lfomodvol: =
      {
        txt = "&"
        hint = "LFO mod vol (0-100)"
      }
      cspinup: =
      {
        txt = "&"
        hint = "Incremental spinup count"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Play Everywhere"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Small Radius"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Medium Radius"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Large Radius"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Start Silent"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Is NOT Looped"
      }
    }
    ambient_generic:form =
    {
      t_ambient_generic = !
    }
    t_button_target:incl =
    {
      t_Target = !
      t_Master = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Use Activates"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Start On"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Non Solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Can't shoot"
      }
    }
    button_target:form =
    {
      t_button_target = !
    }
    t_calc_position:incl =
    {
      bbox = '-12 -12 -12 12 12 12'
      t_Targetname = !
      netname: =
      {
        txt = "&"
        hint = "Entity to use [LE]"
      }
      impulse: =
      {
        txt = "&"
        hint = "Position to calculate"
        typ = "C"
        items = "Origin"$0D"Eyes"$0D"Top"$0D"Centre"$0D"Bottom"$0D"Attachment "
         "point 0"$0D"Attachment point 1"$0D"Attachment point 2"$0D"Attachment"
         " point 3"$0D"Random"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
      }
      message: =
      {
        txt = "&"
        hint = "Add offset [LV]"
      }
    }
    calc_position:form =
    {
      t_calc_position = !
    }
    t_calc_ratio:incl =
    {
      bbox = '-12 -12 -12 12 12 12'
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Based on ratio [LR]"
      }
      skin: =
      {
        txt = "&"
        hint = "Ratio to get (Basis)"
        typ = "C"
        items = "health/maxhealth(Monsters/Players/Breakables)"$0D"speed (use "
         "scalefactor to obtain a ratio)(Monsters/Players)"$0D"HasWeapons(Play"
         "ers)"$0D"current count(Watcher_Count)"$0D"current count/Comparison n"
         "umber (Watcher_Count)"
        values = "0"$0D"1"$0D"3"$0D"0"$0D"1"
      }
      impulse: =
      {
        txt = "&"
        hint = "Transformation"
        typ = "C"
        items = "None"$0D"Reversed (1-X)"$0D"Negative (-X)"$0D"Reciprocal (1/X"
         ")"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      netname: =
      {
        txt = "&"
        hint = "Offset by [LR]"
      }
      body: =
      {
        txt = "&"
        hint = "Ratio to get (Offset)"
        typ = "C"
        items = "health/maxhealth(Monsters/Players/Breakables)"$0D"speed (use "
         "scalefactor to obtain a ratio)(Monsters/Players)"$0D"HasWeapons(Play"
         "ers)"$0D"current count(Watcher_Count)"$0D"current count/Comparison n"
         "umber (Watcher_Count)"
        values = "0"$0D"1"$0D"3"$0D"0"$0D"1"
      }
      message: =
      {
        txt = "&"
        hint = "Scale factor [LR]"
      }
    }
    calc_ratio:form =
    {
      t_calc_ratio = !
    }
    t_worldspawn:incl =
    {
      message: =
      {
        txt = "&"
        hint = "Scale factor [LR]"
      }
      message: =
      {
        txt = "&"
        hint = "Map Description / Title"
      }
      skyname: =
      {
        txt = "&"
        hint = "environment map (cl_skyname)"
      }
      sounds: =
      {
        txt = "&"
        hint = "CD track to play"
      }
      light: =
      {
        txt = "&"
        hint = "Default light level"
      }
      WaveHeight: =
      {
        txt = "&"
        hint = "Default Wave Height"
      }
      MaxRange: =
      {
        txt = "&"
        hint = "Max viewable distance"
      }
      chaptertitle: =
      {
        txt = "&"
        hint = "Chapter Title Message"
      }
      startdark: =
      {
        txt = "&"
        hint = "Level Fade In"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      gametitle: =
      {
        txt = "&"
        hint = "Display 'Half-Life' title?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      newunit: =
      {
        txt = "&"
        hint = "Flush global entities?"
        typ = "C"
        items = "No, keep global ents"$0D"Yes, flush global ents"
        values = "0"$0D"1"
      }
      mapteams: =
      {
        txt = "&"
        hint = "Map Team List"
      }
      defaultteam: =
      {
        txt = "&"
        hint = "Default Team"
        typ = "C"
        items = "Fewest Players"$0D"First Team"
        values = "0"$0D"1"
      }
      startsuit: =
      {
        txt = "&"
        hint = "HEV from start"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      allowmonsters: =
      {
        txt = "&"
        hint = "Allow Monsters (MP only)"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      allow_sp_gjump: =
      {
        txt = "&"
        hint = "Allow SP Gauss Jump"
        typ = "C"
        items = "No (Default)"$0D"Yes"
        values = "0"$0D"1"
      }
      nomusicstop: =
      {
        txt = "&"
        hint = "No Music Stop"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      noitemdropping: =
      {
        txt = "&"
        hint = "No item dropping?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      noise3: =
      {
        txt = "&"
        hint = "Custom no item dropping message"
      }
      nosimon: =
      {
        txt = "&"
        hint = "No Sick Simon coop"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Lobby map"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      doctormap: =
      {
        txt = "&"
        hint = "Custom doctor restart map"
      }
      iuser2: =
      {
        txt = "&"
        hint = "Can drop phone?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      materialstxt: =
      {
        txt = "&"
        hint = "Custom materials.txt (eg sound/materials.txt)"
      }
      player1: =
      {
        txt = "&"
        hint = "Custom plr mdl (1)"
      }
      player2: =
      {
        txt = "&"
        hint = "Custom plr mdl (2)"
      }
      player3: =
      {
        txt = "&"
        hint = "Custom plr mdl (3)"
      }
      player4: =
      {
        txt = "&"
        hint = "Custom plr mdl (4)"
      }
      customsleeve: =
      {
        txt = "&"
        hint = "Custom sleeve tga"
      }
      customfingers: =
      {
        txt = "&"
        hint = "Custom fingers tga"
      }
      customgloves: =
      {
        txt = "&"
        hint = "Custom gloves tga"
      }
      iuser3: =
      {
        txt = "&"
        hint = "Allow revolver dualwield"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
    }
    worldspawn:form =
    {
      t_worldspawn = !
    }
    t_Sequence:incl =
    {
      sequence: =
      {
        txt = "&"
        hint = "Animation Sequence (editor)"
      }
    }
    t_ZHLTLightKeys:incl =
    {
      zhlt_lightflags: =
      {
        txt = "&"
        hint = "HLRAD Opacity (ZHLT 2.5.1+)"
        typ = "C"
        items = "Normal (0)"$0D"Embedded Fix (1)"$0D"Opaque (Blocks light) (2)"
         $0D"Opaque + Embedded Fix (3)"$0D"ConcaveFix (6)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"6"
      }
      light_origin: =
      {
        txt = "&"
        hint = "Light Origin (ZHLT 2.5.1+)"
      }
    }
    t_ZhltLights:incl =
    {
      _fade: =
      {
        txt = "&"
        hint = "Fade (ZHLT 2.5.1+)"
      }
      _falloff: =
      {
        txt = "&"
        hint = "Falloff (ZHLT 2.5.1+)"
        typ = "C"
        items = "Inverse Square (1)"$0D"Inverse Linear (2)"
        values = "1"$0D"2"
      }
    }
    t_TexLight:incl =
    {
      style: =
      {
        txt = "&"
        hint = "Texlight style"
        typ = "C"
        items = "Normal (on)"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D
         "Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D
         "Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"$0D
         "Underwater"
        values = "0"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D"8"$0D
         "4"$0D"9"$0D"12"
      }
    }
    t_SwitchTexLight:incl =
    {
      style: =
      {
        txt = "&"
        hint = "Texlight style"
        typ = "C"
        items = "Normal (on)"$0D"Switchable (starts on)"$0D"Switchable (starts"
         " off)"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D"Slow pulse,"
         " noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D"Candle A"$0D
         "Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"$0D"Underwater"
        values = "0"$0D"-1"$0D"-2"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D
         "7"$0D"8"$0D"4"$0D"9"$0D"12"
      }
    }
    t_Appearflags:incl =
    {
      skill: =
      {
        txt = "&"
        hint = "Skill setting"
        typ = "C"
        items = "All skills"$0D"Not in easy"$0D"Not in medium"$0D"Not in hard"$0D
         "Only in easy"$0D"Only in medium"$0D"Only in hard"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"6"$0D"5"$0D"3"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Not in Deathmatch"
      }
    }
    t_Angles:incl =
    {
      angles: =
      {
        txt = "&"
        hint = "Pitch Yaw Roll (Y Z X)"
      }
    }
    t_Targetname:incl =
    {
      targetname: =
      {
        txt = "&"
        hint = "Name"
      }
    }
    t_Target:incl =
    {
      target: =
      {
        txt = "&"
        hint = "Target"
      }
    }
    t_MoveWith:incl =
    {
      movewith: =
      {
        txt = "&"
        hint = "Moves with"
      }
    }
    t_Master:incl =
    {
      master: =
      {
        txt = "&"
        hint = "Master"
      }
    }
    t_Weapon:incl =
    {
      bbox = '-16 -16 0 16 16 32'
      t_Targetname = !
      t_Angles = !
      t_Appearflags = !
      frags: =
      {
        txt = "&"
        hint = "Default bullets in clip"
        typ = "C"
        items = "Normal"$0D"Empty"
        values = "-1"$0D"-2"
      }
      master: =
      {
        txt = "&"
        hint = "Item Lock Master"
      }
      customv: =
      {
        txt = "&"
        hint = "Custom v model"
      }
      customw: =
      {
        txt = "&"
        hint = "Custom w model"
      }
      customscript: =
      {
        txt = "&"
        hint = "Custom weapon script"
      }
    }
    t_Ammo:incl =
    {
      t_Weapon = !
    }
    t_Global:incl =
    {
      globalname: =
      {
        txt = "&"
        hint = "Global Entity Name"
      }
    }
    t_Targetx:incl =
    {
      t_Target = !
      delay: =
      {
        txt = "&"
        hint = "Delay before trigger"
      }
      killtarget: =
      {
        txt = "&"
        hint = "KillTarget"
      }
    }
    t_RenderFxChoices:incl =
    {
      renderfx: =
      {
        txt = "&"
        hint = "Render FX"
        typ = "C"
        items = "Normal"$0D"Slow Pulse"$0D"Fast Pulse"$0D"Slow Wide Pulse"$0D"F"
         "ast Wide Pulse"$0D"Slow Strobe"$0D"Fast Strobe"$0D"Faster Strobe"$0D
         "Slow Flicker"$0D"Fast Flicker"$0D"Constant Glow (Sprites)"$0D"Distor"
         "t (Models)"$0D"Hologram (Distort + fade)"$0D"Bulge Sideways (Models)"
         $0D"Glowing Aura (Models)"$0D"Reflection (Models)"$0D"Entity in PVS"$0D
         "Skybox Entity"$0D"Fullbright Pro"$0D"Skybox Entity Fullbright Pro"$0D
         "Camera attached light"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"9"$0D"10"$0D"11"$0D"12"$0D"13"$0D
         "14"$0D"15"$0D"16"$0D"18"$0D"19"$0D"21"$0D"22"$0D"70"$0D"100"$0D"137"$0D
         "184"
      }
    }
    t_RenderMode:incl =
    {
      rendermode: =
      {
        txt = "&"
        hint = "Render Mode"
        typ = "C"
        items = "Normal"$0D"Pure Color"$0D"Texture"$0D"Glow (sprites only)"$0D
         "Solid"$0D"Additive"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
    }
    t_RenderFields:incl =
    {
      t_RenderFxChoices = !
      t_RenderMode = !
      renderamt: =
      {
        txt = "&"
        hint = "FX Amount (1 - 255)"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "FX Color (R G B)"
      }
    }
    t_RenderFieldsMax:incl =
    {
      t_RenderFxChoices = !
      t_RenderMode = !
      renderamt: =
      {
        txt = "&"
        hint = "FX Amount (1 - 255)"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "FX Color (R G B)"
      }
    }
    t_LockSounds:incl =
    {
      locked_sound: =
      {
        txt = "&"
        hint = "Locked Sound"
        typ = "C"
        items = "None"$0D"Access Denied (2)"$0D"Small zap (8)"$0D"Buzz (10)"$0D
         "Buzz Off (11)"$0D"Latch Locked (12)"
        values = "0"$0D"2"$0D"8"$0D"10"$0D"11"$0D"12"
      }
      unlocked_sound: =
      {
        txt = "&"
        hint = "Unlocked Sound"
        typ = "C"
        items = "None"$0D"Big zap & Warmup (1)"$0D"Access Granted (3)"$0D"Quic"
         "k Combolock (4)"$0D"Power Deadbolt 1 (5)"$0D"Power Deadbolt 2 (6)"$0D
         "Plunger (7)"$0D"Small zap (8)"$0D"Keycard Sound (9)"$0D"Buzz (10)"$0D
         "Latch Unlocked (13)"$0D"Lightswitch"
        values = "0"$0D"1"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"10"$0D
         "13"$0D"14"
      }
      locked_sentence: =
      {
        txt = "&"
        hint = "Locked Sentence"
        typ = "C"
        items = "None"$0D"Gen. Access Denied (NA)"$0D"Security Lockout (ND)"$0D
         "Blast Door (NF)"$0D"Fire Door (NFIRE)"$0D"Chemical Door (NCHEM)"$0D"R"
         "adiation Door (NRAD)"$0D"Gen. Containment (NCON)"$0D"Maintenance Doo"
         "r (NH)"$0D"Broken Shut Door (NG)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
      }
      unlocked_sentence: =
      {
        txt = "&"
        hint = "Unlocked Sentence"
        typ = "C"
        items = "None"$0D"Gen. Access Granted (EA)"$0D"Security Disengaged (ED"
         ")"$0D"Blast Door (EF)"$0D"Fire Door (EFIRE)"$0D"Chemical Door (ECHEM"
         ")"$0D"Radiation Door (ERAD)"$0D"Gen. Containment (ECON)"$0D"Maintena"
         "nce area (EH)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
    }
    t_PlayerClass:incl =
    {
      bbox = '-16 -16 -36 16 16 36'
      t_Angles = !
    }
    t_Monster:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_RenderFields = !
      t_Appearflags = !
      health: =
      {
        txt = "&"
        hint = "Initial health (0 = normal)"
      }
      model: =
      {
        txt = "&"
        hint = "Model (e.g. models/can.mdl)"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      skin: =
      {
        txt = "&"
        hint = "Skin"
      }
      scale: =
      {
        txt = "&"
        hint = "Scale (1.0 = normal size)"
      }
      target: =
      {
        txt = "&"
        hint = "Patrol Path"
      }
      m_iClass: =
      {
        txt = "&"
        hint = "Behave as"
        typ = "C"
        items = "Normal"$0D"Scientist"$0D"Barney"$0D"Human Military"$0D"Machin"
         "e (Human Military)"$0D"Alien Military"$0D"Other Alien"$0D"Headcrab"$0D
         "Bullsquid"$0D"Faction A"$0D"Faction B"$0D"Faction C"
        values = "0"$0D"3"$0D"11"$0D"4"$0D"1"$0D"5"$0D"7"$0D"8"$0D"9"$0D"14"$0D
         "15"$0D"16"
      }
      m_iPlayerReact: =
      {
        txt = "&"
        hint = "Reaction to player"
        typ = "C"
        items = "Normal"$0D"Ignore"$0D"Friendly until hurt"$0D"Friendly unless"
         " provoked"$0D"Enemy"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      TriggerTarget: =
      {
        txt = "&"
        hint = "TriggerTarget"
      }
      TriggerCondition: =
      {
        txt = "&"
        hint = "Trigger Condition"
        typ = "C"
        items = "No Trigger"$0D"See Player, Mad at Player"$0D"Take Damage"$0D"5"
         "0% Health Remaining"$0D"Death"$0D"Hear World"$0D"Hear Player"$0D"Hea"
         "r Combat"$0D"See Player Unconditional"$0D"See Player, Not In Combat"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"7"$0D"8"$0D"9"$0D"10"$0D"11"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "WaitTillSeen"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Gag"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Monster Clip"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Prisoner"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "No yellow blobs"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Fade Corpse"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4096"
        cap = "Doesn't scare"
      }
    }
    t_TalkMonster:incl =
    {
      UseSentence: =
      {
        txt = "&"
        hint = "Use Sentence"
      }
      UnUseSentence: =
      {
        txt = "&"
        hint = "Un-Use Sentence"
      }
      RefusalSentence: =
      {
        txt = "&"
        hint = "Refusal Sentence"
      }
      master: =
      {
        txt = "&"
        hint = "Master (prevents following)"
      }
      SpeakAs: =
      {
        txt = "&"
        hint = "Speech Group"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Pre-Disaster"
      }
    }
    t_gibshooterbase:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      m_iGibs: =
      {
        txt = "&"
        hint = "Number of shots"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay between shots"
      }
      m_iszPosition: =
      {
        txt = "&"
        hint = "At position (blank = here) [LP]"
      }
      m_iszVelocity: =
      {
        txt = "&"
        hint = "At velocity (blank = angle) [LV]"
      }
      m_flVelocity: =
      {
        txt = "&"
        hint = "Gib Speed Factor [LR]"
      }
      m_flVariance: =
      {
        txt = "&"
        hint = "Course Variance"
      }
      m_flGibLife: =
      {
        txt = "&"
        hint = "Shot lifetime (secs)"
      }
      m_iszTargetName: =
      {
        txt = "&"
        hint = "Shot's name"
      }
      m_iszSpawnTarget: =
      {
        txt = "&"
        hint = "Fire on spawn (locus = shot)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Repeatable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Debug"
      }
    }
    t_Light:incl =
    {
      targetname: =
      {
        txt = "&"
        hint = "Name"
      }
      _light: =
      {
        txt = "&"
        hint = "Brightness"
      }
      style: =
      {
        txt = "&"
        hint = "Appearance (static)"
        typ = "C"
        items = "Normal (on)"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D
         "Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D
         "Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"$0D
         "Underwater"
        values = "0"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D"8"$0D
         "4"$0D"9"$0D"12"
      }
      pattern: =
      {
        txt = "&"
        hint = "Custom Appearance (on)"
      }
      m_iOnStyle: =
      {
        txt = "&"
        hint = "Appearance (on)"
        typ = "C"
        items = "Normal (on)"$0D"Off"$0D"Fluorescent flicker"$0D"Slow, strong "
         "pulse"$0D"Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Fli"
         "cker B"$0D"Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Sl"
         "ow strobe"$0D"Underwater"
        values = "0"$0D"13"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
         "8"$0D"4"$0D"9"$0D"12"
      }
      m_iOffStyle: =
      {
        txt = "&"
        hint = "Appearance (off)"
        typ = "C"
        items = "Normal (off)"$0D"On"$0D"Fluorescent flicker"$0D"Slow, strong "
         "pulse"$0D"Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Fli"
         "cker B"$0D"Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Sl"
         "ow strobe"$0D"Underwater"
        values = "0"$0D"20"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
         "8"$0D"4"$0D"9"$0D"12"
      }
      m_iTurnOnTime: =
      {
        txt = "&"
        hint = "Time taken to turn on (secs)"
      }
      m_iTurnOnStyle: =
      {
        txt = "&"
        hint = "Appearance (turn on)"
        typ = "C"
        items = "Normal (off)"$0D"On"$0D"Fluorescent flicker"$0D"Slow, strong "
         "pulse"$0D"Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Fli"
         "cker B"$0D"Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Sl"
         "ow strobe"$0D"Underwater"
        values = "0"$0D"20"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
         "8"$0D"4"$0D"9"$0D"12"
      }
      m_iTurnOffTime: =
      {
        txt = "&"
        hint = "Time taken to turn off (secs)"
      }
      m_iTurnOffStyle: =
      {
        txt = "&"
        hint = "Appearance (turn off)"
        typ = "C"
        items = "Normal (on)"$0D"Off"$0D"Fluorescent flicker"$0D"Slow, strong "
         "pulse"$0D"Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Fli"
         "cker B"$0D"Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Sl"
         "ow strobe"$0D"Underwater"
        values = "0"$0D"13"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
         "8"$0D"4"$0D"9"$0D"12"
      }
    }
    t_Breakable:incl =
    {
      t_Targetname = !
      t_Global = !
      target: =
      {
        txt = "&"
        hint = "Target on break"
      }
      whenhit: =
      {
        txt = "&"
        hint = "Trigger when hit (locus = position)"
      }
      health: =
      {
        txt = "&"
        hint = "Strength"
      }
      material: =
      {
        txt = "&"
        hint = "Material type"
        typ = "C"
        items = "Glass"$0D"Wood"$0D"Metal"$0D"Flesh"$0D"Cinder Block"$0D"Ceili"
         "ng Tile"$0D"Computer"$0D"Unbreakable Glass"$0D"Rocks"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
      explosion: =
      {
        txt = "&"
        hint = "Gibs Direction"
        typ = "C"
        items = "Random"$0D"Relative to Attack"
        values = "0"$0D"1"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before fire"
      }
      gibmodel: =
      {
        txt = "&"
        hint = "Gib Model"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      spawnobject: =
      {
        txt = "&"
        hint = "Spawn On Break"
        typ = "C"
        items = "Nothing"$0D"Battery"$0D"Healthkit"$0D"9mm Handgun"$0D"9mm Cli"
         "p"$0D"Machine Gun"$0D"Machine Gun Clip"$0D"Machine Gun Grenades"$0D"S"
         "hotgun"$0D"Shotgun Shells"$0D"Crossbow"$0D"Crossbow Bolts"$0D"357"$0D
         "357 clip"$0D"RPG"$0D"RPG Clip"$0D"Gauss clip"$0D"Hand grenade"$0D"Tr"
         "ipmine"$0D"Satchel Charge"$0D"Snark"$0D"Hornet Gun"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"
      }
      explodemagnitude: =
      {
        txt = "&"
        hint = "Explode Magnitude (0=none)"
      }
      respawn: =
      {
        txt = "&"
        hint = "Respawn time (secs)"
        typ = "C"
        items = "No respawn"$0D"Respawn when triggered"
        values = "0"$0D"-1"
      }
      netname: =
      {
        txt = "&"
        hint = "Target on respawn"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Only Trigger"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Touch"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Pressure"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Fade Respawn"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Invert Hit Vector"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Instant Crowbar"
      }
    }
    t_Door:incl =
    {
      t_Appearflags = !
      target: =
      {
        txt = "&"
        hint = "Target (Always)"
      }
      message: =
      {
        txt = "&"
        hint = "Target on Open"
      }
      netname: =
      {
        txt = "&"
        hint = "Target on Close"
      }
      killtarget: =
      {
        txt = "&"
        hint = "KillTarget"
      }
      immediatemode: =
      {
        txt = "&"
        hint = "Fire before moving"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      onoffmode: =
      {
        txt = "&"
        hint = "On/Off Aware"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed"
      }
      movesnd: =
      {
        txt = "&"
        hint = "Move Sound"
        typ = "C"
        items = "No Sound"$0D"Servo (Sliding) (1)"$0D"Pneumatic (Sliding) (2)"$0D
         "Pneumatic (Rolling) (3)"$0D"Vacuum (4)"$0D"Power Hydraulic (5)"$0D"L"
         "arge Rollers (6)"$0D"Track Door (7)"$0D"Snappy Metal Door (8)"$0D"Sq"
         "ueaky 1 (9)"$0D"Squeaky 2 (10)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"
      }
      stopsnd: =
      {
        txt = "&"
        hint = "Stop Sound"
        typ = "C"
        items = "No Sound"$0D"Clang with brake (1)"$0D"Clang reverb (2)"$0D"Ra"
         "tchet Stop (3)"$0D"Chunk (4)"$0D"Light airbrake (5)"$0D"Metal Slide "
         "Stop (6)"$0D"Metal Lock Stop (7)"$0D"Snappy Metal Stop (8)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
      wait: =
      {
        txt = "&"
        hint = "Delay before close"
        typ = "C"
        items = "Stays Open (-1)"
        values = "-1"
      }
      lip: =
      {
        txt = "&"
        hint = "Lip"
      }
      dmg: =
      {
        txt = "&"
        hint = "Damage inflicted when blocked"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before fire"
      }
      health: =
      {
        txt = "&"
        hint = "Health (shoot open)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Starts Open"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Don't link"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Passable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Toggle"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Use Only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Monsters Can't"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Force Touchable"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    t_BaseTank:incl =
    {
      t_Targetname = !
      t_Target = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_Global = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Active"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Not Solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Line of Sight"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Controllable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Laser Spot"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Match Target"
      }
      master: =
      {
        txt = "&"
        hint = "(Team) Master"
      }
      firemaster: =
      {
        txt = "&"
        hint = "Fire Master"
      }
      m_iszLocusFire: =
      {
        txt = "&"
        hint = "Trigger on firing (locus = barrel)"
      }
      yawrate: =
      {
        txt = "&"
        hint = "Yaw rate"
      }
      yawrange: =
      {
        txt = "&"
        hint = "Yaw range"
      }
      yawtolerance: =
      {
        txt = "&"
        hint = "Yaw tolerance"
      }
      pitchrate: =
      {
        txt = "&"
        hint = "Pitch rate"
      }
      pitchrange: =
      {
        txt = "&"
        hint = "Pitch range"
      }
      pitchtolerance: =
      {
        txt = "&"
        hint = "Pitch tolerance"
      }
      barrel: =
      {
        txt = "&"
        hint = "Barrel Length"
      }
      barrely: =
      {
        txt = "&"
        hint = "Barrel Horizontal"
      }
      barrelz: =
      {
        txt = "&"
        hint = "Barrel Vertical"
      }
      spritesmoke: =
      {
        txt = "&"
        hint = "Smoke Sprite"
      }
      spriteflash: =
      {
        txt = "&"
        hint = "Flash Sprite"
      }
      spritescale: =
      {
        txt = "&"
        hint = "Sprite scale"
      }
      rotatesound: =
      {
        txt = "&"
        hint = "Rotate Sound"
      }
      firerate: =
      {
        txt = "&"
        hint = "Rate of Fire"
      }
      bullet_damage: =
      {
        txt = "&"
        hint = "Damage Per Bullet"
      }
      persistence: =
      {
        txt = "&"
        hint = "Firing persistence"
      }
      firespread: =
      {
        txt = "&"
        hint = "Bullet accuracy"
        typ = "C"
        items = "Perfect Shot"$0D"Small cone"$0D"Medium cone"$0D"Large cone"$0D
         "Extra-large cone"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      minRange: =
      {
        txt = "&"
        hint = "Minmum target range"
      }
      maxRange: =
      {
        txt = "&"
        hint = "Maximum target range"
      }
      m_iClass: =
      {
        txt = "&"
        hint = "Behaviour"
        typ = "C"
        items = "Attack only players"$0D"Barney"$0D"Human Military"$0D"Alien M"
         "ilitary"
        values = "0"$0D"11"$0D"4"$0D"5"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    t_PlatSounds:incl =
    {
      movesnd: =
      {
        txt = "&"
        hint = "Move Sound"
        typ = "C"
        items = "No Sound"$0D"big elev 1"$0D"big elev 2"$0D"tech elev 1"$0D"te"
         "ch elev 2"$0D"tech elev 3"$0D"freight elev 1"$0D"freight elev 2"$0D"h"
         "eavy elev"$0D"rack elev"$0D"rail elev"$0D"squeek elev"$0D"odd elev 1"
         $0D"odd elev 2"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"
      }
      custommovesnd: =
      {
        txt = "&"
        hint = "Custom Move Sound"
      }
      stopsnd: =
      {
        txt = "&"
        hint = "Stop Sound"
        typ = "C"
        items = "No Sound"$0D"big elev stop1"$0D"big elev stop2"$0D"freight el"
         "ev stop"$0D"heavy elev stop"$0D"rack stop"$0D"rail stop"$0D"squeek s"
         "top"$0D"quick stop"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
      customstopsnd: =
      {
        txt = "&"
        hint = "Custom Stop Sound"
      }
      volume: =
      {
        txt = "&"
        hint = "Sound Volume 0.0 - 1.0"
      }
    }
    t_Trackchange:incl =
    {
      t_Targetname = !
      t_RenderFields = !
      t_Global = !
      t_PlatSounds = !
      height: =
      {
        txt = "&"
        hint = "Travel altitude"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Auto Activate train"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Relink track"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Start at Bottom"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Rotate Only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "X Axis"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Y Axis"
      }
      rotation: =
      {
        txt = "&"
        hint = "Spin amount"
      }
      train: =
      {
        txt = "&"
        hint = "Train to switch"
      }
      toptrack: =
      {
        txt = "&"
        hint = "Top track"
      }
      bottomtrack: =
      {
        txt = "&"
        hint = "Bottom track"
      }
      speed: =
      {
        txt = "&"
        hint = "Move/Rotate speed"
      }
    }
    t_Trigger:incl =
    {
      t_Targetname = !
      t_Master = !
      t_Targetx = !
    }
    t_TriggerCond:incl =
    {
      netname: =
      {
        txt = "&"
        hint = "Triggered only by entity"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Monsters"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "No Clients"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Pushables"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Everything else"
      }
    }
    t_Script:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Target (fire when done)"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before firing target"
      }
      killtarget: =
      {
        txt = "&"
        hint = "KillTarget when done"
      }
      m_iszFireOnBegin: =
      {
        txt = "&"
        hint = "Fire after moving"
      }
      m_iszEntity: =
      {
        txt = "&"
        hint = "Target Monster [LE]"
      }
      m_flRadius: =
      {
        txt = "&"
        hint = "Search Radius"
      }
      m_iPriority: =
      {
        txt = "&"
        hint = "Priority"
        typ = "C"
        items = "Normal"$0D"Override other sequences"
        values = "0"$0D"4"
      }
      m_iFinishSchedule: =
      {
        txt = "&"
        hint = "AI Schedule when done"
        typ = "C"
        items = "Default AI"$0D"Ambush"
        values = "0"$0D"1"
      }
      m_iRepeats: =
      {
        txt = "&"
        hint = "Repeat action X more times"
      }
      m_fRepeatFrame: =
      {
        txt = "&"
        hint = "Repeat from frame"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Repeatable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "No Interruptions"
      }
    }
    t_ScriptSequence:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Script = !
      m_iszMoveTarget: =
      {
        txt = "&"
        hint = "Move target (blank = this) [LE]"
      }
      m_fMoveTo: =
      {
        txt = "&"
        hint = "Move to Position"
        typ = "C"
        items = "No (don't turn)"$0D"Walk"$0D"Run"$0D"No - Only turn"$0D"Insta"
         "nt move + turn"$0D"No - Instant turn"
        values = "0"$0D"1"$0D"2"$0D"5"$0D"4"$0D"6"
      }
      m_iszAttack: =
      {
        txt = "&"
        hint = "Turn target (blank = this) [LE]"
      }
      m_fTurnType: =
      {
        txt = "&"
        hint = "Turn mode"
        typ = "C"
        items = "Match Angle"$0D"Turn to face"$0D"Don't Turn"
        values = "0"$0D"1"$0D"2"
      }
      m_iszPlay: =
      {
        txt = "&"
        hint = "Action Animation"
      }
      m_iszIdle: =
      {
        txt = "&"
        hint = "Idle Animation"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Leave Corpse"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "No Script Movement"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Monster Dies"
      }
    }
    t_aiscripted_sequence:incl =
    {
      t_ScriptSequence = !
    }
    aiscripted_sequence:form =
    {
      t_aiscripted_sequence = !
    }
    t_ambient_fmodstream:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "File Name"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove on fire"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Loop"
      }
      frags: =
      {
        txt = "&"
        hint = "Music fade in time"
        typ = "C"
        items = "Instant"
        values = "0"
      }
    }
    ambient_fmodstream:form =
    {
      t_ambient_fmodstream = !
    }
    t_ambient_generic:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      message: =
      {
        txt = "&"
        hint = "WAV Name (e.g. vox/c.wav)"
      }
      health: =
      {
        txt = "&"
        hint = "Volume (10 = loudest)"
      }
      target: =
      {
        txt = "&"
        hint = "Entity to play from"
      }
      channel: =
      {
        txt = "&"
        hint = "Channel to use for that entity"
        typ = "C"
        items = "Weapon"$0D"Voice"$0D"Item"$0D"Body"$0D"Stream"$0D"Static"
        values = "1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
      preset: =
      {
        txt = "&"
        hint = "Dynamic Presets"
        typ = "C"
        items = "None"$0D"Huge Machine"$0D"Big Machine"$0D"Machine"$0D"Slow Fa"
         "de in"$0D"Fade in"$0D"Quick Fade in"$0D"Slow Pulse"$0D"Pulse"$0D"Qui"
         "ck pulse"$0D"Slow Oscillator"$0D"Oscillator"$0D"Quick Oscillator"$0D
         "Grunge pitch"$0D"Very low pitch"$0D"Low pitch"$0D"High pitch"$0D"Ver"
         "y high pitch"$0D"Screaming pitch"$0D"Oscillate spinup/down"$0D"Pulse"
         " spinup/down"$0D"Random pitch"$0D"Random pitch fast"$0D"Incremental "
         "Spinup"$0D"Alien"$0D"Bizzare"$0D"Planet X"$0D"Haunted"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"
      }
      volstart: =
      {
        txt = "&"
        hint = "Start Volume"
      }
      noise: =
      {
        txt = "&"
        hint = "Calc_ratio Volume (overrides)"
      }
      fadein: =
      {
        txt = "&"
        hint = "Fade in time (0-100)"
      }
      fadeout: =
      {
        txt = "&"
        hint = "Fade out time (0-100)"
      }
      pitch: =
      {
        txt = "&"
        hint = "Pitch (> 100 = higher)"
      }
      pitchstart: =
      {
        txt = "&"
        hint = "Start Pitch"
      }
      spinup: =
      {
        txt = "&"
        hint = "Spin up time (0-100)"
      }
      spindown: =
      {
        txt = "&"
        hint = "Spin down time (0-100)"
      }
      lfotype: =
      {
        txt = "&"
        hint = "LFO type (0 - 3)"
        typ = "C"
        items = "Off"$0D"Square"$0D"Triangle"$0D"Round"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      lforate: =
      {
        txt = "&"
        hint = "LFO rate (0-1000)"
      }
      lfomodpitch: =
      {
        txt = "&"
        hint = "LFO mod pitch (0-100)"
      }
      lfomodvol: =
      {
        txt = "&"
        hint = "LFO mod vol (0-100)"
      }
      cspinup: =
      {
        txt = "&"
        hint = "Incremental spinup count"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Play Everywhere"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Small Radius"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Medium Radius"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Large Radius"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Start Silent"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Is NOT Looped"
      }
    }
    ambient_generic:form =
    {
      t_ambient_generic = !
    }
    t_button_target:incl =
    {
      t_Target = !
      t_Master = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Use Activates"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Start On"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Non Solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Can't shoot"
      }
    }
    button_target:form =
    {
      t_button_target = !
    }
    t_calc_position:incl =
    {
      bbox = '-12 -12 -12 12 12 12'
      t_Targetname = !
      netname: =
      {
        txt = "&"
        hint = "Entity to use [LE]"
      }
      impulse: =
      {
        txt = "&"
        hint = "Position to calculate"
        typ = "C"
        items = "Origin"$0D"Eyes"$0D"Top"$0D"Centre"$0D"Bottom"$0D"Attachment "
         "point 0"$0D"Attachment point 1"$0D"Attachment point 2"$0D"Attachment"
         " point 3"$0D"Random"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"
      }
      message: =
      {
        txt = "&"
        hint = "Add offset [LV]"
      }
    }
    calc_position:form =
    {
      t_calc_position = !
    }
    t_calc_ratio:incl =
    {
      bbox = '-12 -12 -12 12 12 12'
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Based on ratio [LR]"
      }
      skin: =
      {
        txt = "&"
        hint = "Ratio to get (Basis)"
        typ = "C"
        items = "health/maxhealth(Monsters/Players/Breakables)"$0D"speed (use "
         "scalefactor to obtain a ratio)(Monsters/Players)"$0D"HasWeapons(Play"
         "ers)"$0D"current count(Watcher_Count)"$0D"current count/Comparison n"
         "umber (Watcher_Count)"
        values = "0"$0D"1"$0D"3"$0D"0"$0D"1"
      }
      impulse: =
      {
        txt = "&"
        hint = "Transformation"
        typ = "C"
        items = "None"$0D"Reversed (1-X)"$0D"Negative (-X)"$0D"Reciprocal (1/X"
         ")"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      netname: =
      {
        txt = "&"
        hint = "Offset by [LR]"
      }
      body: =
      {
        txt = "&"
        hint = "Ratio to get (Offset)"
        typ = "C"
        items = "health/maxhealth(Monsters/Players/Breakables)"$0D"speed (use "
         "scalefactor to obtain a ratio)(Monsters/Players)"$0D"HasWeapons(Play"
         "ers)"$0D"current count(Watcher_Count)"$0D"current count/Comparison n"
         "umber (Watcher_Count)"
        values = "0"$0D"1"$0D"3"$0D"0"$0D"1"
      }
      message: =
      {
        txt = "&"
        hint = "Scale factor [LR]"
      }
      button: =
      {
        txt = "&"
        hint = "Ratio to get (Scale)"
        typ = "C"
        items = "health/maxhealth(Monsters/Players/Breakables)"$0D"speed (use "
         "scalefactor to obtain a ratio)(Monsters/Players)"$0D"HasWeapons(Play"
         "ers)"$0D"current count(Watcher_Count)"$0D"current count/Comparison n"
         "umber (Watcher_Count)"
        values = "0"$0D"1"$0D"3"$0D"0"$0D"1"
      }
      noise: =
      {
        txt = "&"
        hint = "Min (blank = none) [LR]"
      }
      noise1: =
      {
        txt = "&"
        hint = "Max (blank = none) [LR]"
      }
      frags: =
      {
        txt = "&"
        hint = "If outside range"
        typ = "C"
        items = "Pick nearest value"$0D"Wrap around"$0D"Bounce back"
        values = "0"$0D"1"$0D"2"
      }
    }
    calc_ratio:form =
    {
      t_calc_ratio = !
    }
    t_calc_subvelocity:incl =
    {
      bbox = '-12 -12 -12 12 12 12'
      t_Targetname = !
      netname: =
      {
        txt = "&"
        hint = "Entity to use [LE]"
      }
      impulse: =
      {
        txt = "&"
        hint = "Value to calculate from"
        typ = "C"
        items = "Movement Velocity"$0D"Angle"$0D"View Angle"$0D"Attachment poi"
         "nt 0"$0D"Attachment point 1"$0D"Attachment point 2"$0D"Attachment po"
         "int 3"
        values = "0"$0D"1"$0D"2"$0D"5"$0D"6"$0D"7"$0D"8"
      }
      noise: =
      {
        txt = "&"
        hint = "Scale factor [LR]"
      }
      message: =
      {
        txt = "&"
        hint = "Add offset [LV]"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Normalize"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Flip Vertical"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Discard X"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Discard Y"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Discard Z"
      }
    }
    calc_subvelocity:form =
    {
      t_calc_subvelocity = !
    }
    t_calc_velocity_path:incl =
    {
      bbox = '-12 -12 -12 12 12 12'
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Start position [LP]"
      }
      netname: =
      {
        txt = "&"
        hint = "Destination"
      }
      armorvalue: =
      {
        txt = "&"
        hint = "Destination is"
        typ = "C"
        items = "Position [LP]"$0D"Offset [LV]"
        values = "0"$0D"1"
      }
      health: =
      {
        txt = "&"
        hint = "Length Calculation"
        typ = "C"
        items = "Square (X = X*X)"$0D"None (X = X)"$0D"Normalise (X = 1)"$0D"R"
         "eciprocal (X = 1/X)"$0D"Inverse Square (X = 1/X*X)"
        values = "4"$0D"0"$0D"1"$0D"2"$0D"3"
      }
      noise: =
      {
        txt = "&"
        hint = "Length factor [LR]"
      }
      frags: =
      {
        txt = "&"
        hint = "Line is blocked by"
        typ = "C"
        items = "Nothing"$0D"Walls"$0D"Walls & Glass"$0D"Walls & Monsters"$0D"W"
         "alls, Monsters & Glass"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
    }
    calc_velocity_path:form =
    {
      t_calc_velocity_path = !
    }
    t_calc_velocity_polar:incl =
    {
      bbox = '-12 -12 -12 12 12 12'
      t_Targetname = !
      netname: =
      {
        txt = "&"
        hint = "Based on velocity [LV]"
      }
      angles: =
      {
        txt = "&"
        hint = "Rotated by angle (Y Z X)"
      }
      noise: =
      {
        txt = "&"
        hint = "Length factor [LR]"
      }
      message: =
      {
        txt = "&"
        hint = "Add offset [LV]"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Normalize"
      }
    }
    calc_velocity_polar:form =
    {
      t_calc_velocity_polar = !
    }
    t_camera_spot_trigger:incl =
    {
      t_Targetname = !
      t_Target = !
      t_MoveWith = !
    }
    camera_spot_trigger:form =
    {
      t_camera_spot_trigger = !
    }
    t_cycler:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Targetname = !
      t_RenderFields = !
      t_MoveWith = !
      model: =
      {
        txt = "&"
        hint = "Model"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
    }
    cycler:form =
    {
      t_cycler = !
    }
    t_cycler_sprite:incl =
    {
      t_Targetname = !
      t_RenderFields = !
      t_MoveWith = !
      model: =
      {
        txt = "&"
        hint = "Sprite"
      }
      framerate: =
      {
        txt = "&"
        hint = "Frames per second"
      }
    }
    cycler_sprite:form =
    {
      t_cycler_sprite = !
    }
    t_cycler_weapon:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Monster = !
      t_MoveWith = !
    }
    cycler_weapon:form =
    {
      t_cycler_weapon = !
    }
    t_BeamStartEnd:incl =
    {
      LightningStart: =
      {
        txt = "&"
        hint = "Start Entity"
      }
      LightningEnd: =
      {
        txt = "&"
        hint = "Ending Entity"
      }
    }
    t_env_static_decal:incl =
    {
      bbox = '-8 -8 -8 8 8 8'
      netname: =
      {
        txt = "&"
        hint = "Decal group name"
      }
      skin: =
      {
        txt = "&"
        hint = "Direction"
        typ = "C"
        items = "Auto"$0D"Negative X"$0D"Positive X"$0D"Negative Y"$0D"Positiv"
         "e Y"$0D"Negative Z"$0D"Positive Z"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
    }
    env_static_decal:form =
    {
      t_env_static_decal = !
    }
    t_env_beam:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_BeamStartEnd = !
      t_RenderFxChoices = !
      renderamt: =
      {
        txt = "&"
        hint = "Brightness (1 - 255)"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Beam Color (R G B)"
      }
      Radius: =
      {
        txt = "&"
        hint = "Radius"
      }
      life: =
      {
        txt = "&"
        hint = "Life (seconds 0 = infinite)"
      }
      BoltWidth: =
      {
        txt = "&"
        hint = "Width of beam (pixels*0.1 0-255)"
      }
      NoiseAmplitude: =
      {
        txt = "&"
        hint = "Distortion (0-255)"
      }
      texture: =
      {
        txt = "&"
        hint = "Sprite Name"
      }
      TextureScroll: =
      {
        txt = "&"
        hint = "Texture Scroll Rate (0-100)"
      }
      framerate: =
      {
        txt = "&"
        hint = "Frames per 10 seconds"
      }
      framestart: =
      {
        txt = "&"
        hint = "Starting Frame"
      }
      StrikeTime: =
      {
        txt = "&"
        hint = "Strike again time (-1 = never)"
      }
      damage: =
      {
        txt = "&"
        hint = "Damage / second"
      }
      frags: =
      {
        txt = "&"
        hint = "Damage type"
        typ = "C"
        items = "Energy Beam"$0D"Fracture"$0D"Bullet ('blood loss')"$0D"Lacera"
         "tions"$0D"Burning"$0D"Freezing"$0D"Crowbar"$0D"Electric shock"$0D"So"
         "nic ('internal bleeding')"$0D"Drowning"$0D"Biohazard"$0D"Poison (dur"
         "ation)"$0D"Radiation"$0D"Hazardous chemical"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"128"$0D"256"$0D"512"$0D
         "16384"$0D"65536"$0D"131072"$0D"262144"$0D"1048576"
      }
      target: =
      {
        txt = "&"
        hint = "Fire on trip"
      }
      netname: =
      {
        txt = "&"
        hint = "Tripped only by entity"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start On"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Toggle"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Random Strike"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Ring"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "StartSparks"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "EndSparks"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Decal End"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Fade Start"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Fade End"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Draw Solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Draw Sine"
      }
    }
    env_beam:form =
    {
      t_env_beam = !
    }
    t_env_beamtrail:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Entity to trail (blank = this) [LE]"
      }
      netname: =
      {
        txt = "&"
        hint = "Sprite Name"
      }
      renderamt: =
      {
        txt = "&"
        hint = "Brightness (1 - 255)"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Color (R G B)"
      }
      armorvalue: =
      {
        txt = "&"
        hint = "Width"
      }
      health: =
      {
        txt = "&"
        hint = "Fade time (secs)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start off"
      }
    }
    env_beamtrail:form =
    {
      t_env_beamtrail = !
    }
    t_env_beverage:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Initial position (blank = here) [LP]"
      }
      health: =
      {
        txt = "&"
        hint = "Capacity"
      }
      skin: =
      {
        txt = "&"
        hint = "Beverage Type"
        typ = "C"
        items = "Coca-Cola"$0D"Sprite"$0D"Diet Coke"$0D"Orange"$0D"Surge"$0D"M"
         "oxie"$0D"Random"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
    }
    env_beverage:form =
    {
      t_env_beverage = !
    }
    t_env_blood:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Initial position (blank = here) [LP]"
      }
      netname: =
      {
        txt = "&"
        hint = "Direction (blank = angles) [LV]"
      }
      color: =
      {
        txt = "&"
        hint = "Blood Color"
        typ = "C"
        items = "Red (Human)"$0D"Yellow (Alien)"
        values = "0"$0D"1"
      }
      amount: =
      {
        txt = "&"
        hint = "Amount of blood (damage to simulate)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Random Direction"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Blood Stream"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "On Player"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Spray decals"
      }
    }
    env_blood:form =
    {
      t_env_blood = !
    }
    t_env_bubbles:incl =
    {
      t_Targetname = !
      t_ZHLTLightKeys = !
      t_MoveWith = !
      density: =
      {
        txt = "&"
        hint = "Bubble density"
      }
      frequency: =
      {
        txt = "&"
        hint = "Bubble frequency"
      }
      current: =
      {
        txt = "&"
        hint = "Speed of Current"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start Off"
      }
    }
    env_bubbles:form =
    {
      t_env_bubbles = !
    }
    t_env_customize:incl =
    {
      targetname: =
      {
        txt = "&"
        hint = "Name"
      }
      target: =
      {
        txt = "&"
        hint = "Target to affect [LE]"
      }
      m_flRadius: =
      {
        txt = "&"
        hint = "Search Radius"
      }
      body: =
      {
        txt = "&"
        hint = "Set body"
        typ = "C"
        items = "No change"
        values = "-1"
      }
      skin: =
      {
        txt = "&"
        hint = "Set skin"
        typ = "C"
        items = "No change"$0D"Toggle 0/1"$0D"Skin 0 (normal)"$0D"Skin 1"$0D"S"
         "kin 2"$0D"Skin 3"
        values = "-1"$0D"-2"$0D"0"$0D"1"$0D"2"$0D"3"
      }
      frame: =
      {
        txt = "&"
        hint = "Set brush texture"
        typ = "C"
        items = "No change"$0D"Toggle 0/1"$0D"Texture 0 (normal)"$0D"Texture 1"
         " (alternate)"$0D"On/Off based on usetype"$0D"Off/On based on usetype"
        values = "-1"$0D"-2"$0D"0"$0D"1"$0D"4"$0D"5"
      }
      m_iszModel: =
      {
        txt = "&"
        hint = "Set model (e.g. models/can.mdl)"
      }
      m_bloodColor: =
      {
        txt = "&"
        hint = "Blood Color"
        typ = "C"
        items = "No change"$0D"Don't Bleed"$0D"Red (Human)"$0D"Yellow (Alien)"
        values = "0"$0D"-1"$0D"247"$0D"195"
      }
      m_voicePitch: =
      {
        txt = "&"
        hint = "Voice Pitch (100 = normal)"
        typ = "C"
        items = "No change"
        values = "-1"
      }
      m_fFramerate: =
      {
        txt = "&"
        hint = "Frame rate (-1 = no change)"
      }
      m_fController0: =
      {
        txt = "&"
        hint = "Bone controller 0"
        typ = "C"
        items = "No change"$0D"Set to 0"
        values = "0"$0D"1024"
      }
      m_fController1: =
      {
        txt = "&"
        hint = "Bone controller 1"
        typ = "C"
        items = "No change"$0D"Set to 0"
        values = "0"$0D"1024"
      }
      m_fController2: =
      {
        txt = "&"
        hint = "Bone controller 2"
        typ = "C"
        items = "No change"$0D"Set to 0"
        values = "0"$0D"1024"
      }
      m_fController3: =
      {
        txt = "&"
        hint = "Bone controller 3"
        typ = "C"
        items = "No change"$0D"Set to 0"
        values = "0"$0D"1024"
      }
      m_iClass: =
      {
        txt = "&"
        hint = "Set behaviour"
        typ = "C"
        items = "No change"$0D"Scientist"$0D"Barney"$0D"Human Military"$0D"Mac"
         "hine (Human Military)"$0D"Alien Military"$0D"Other Alien"$0D"Headcra"
         "b"$0D"Bullsquid"$0D"Faction A"$0D"Faction B"$0D"Faction C"
        values = "0"$0D"3"$0D"11"$0D"4"$0D"1"$0D"5"$0D"7"$0D"8"$0D"9"$0D"14"$0D
         "15"$0D"16"
      }
      m_iPlayerReact: =
      {
        txt = "&"
        hint = "Reaction to player"
        typ = "C"
        items = "No Change"$0D"Normal"$0D"Ignore"$0D"Friendly until hurt"$0D"F"
         "riendly unless provoked"$0D"Enemy"
        values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      m_iVisible: =
      {
        txt = "&"
        hint = "Visibility"
        typ = "C"
        items = "No change"$0D"Visible"$0D"Invisible"$0D"Toggle"$0D"On/Off bas"
         "ed on usetype"$0D"Off/On based on usetype"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
      m_iSolid: =
      {
        txt = "&"
        hint = "Solidity"
        typ = "C"
        items = "No change"$0D"Solid"$0D"Not Solid"$0D"Toggle"$0D"On/Off based"
         " on usetype"$0D"Off/On based on usetype"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
      m_iPrisoner: =
      {
        txt = "&"
        hint = "Prisoner"
        typ = "C"
        items = "No change"$0D"Yes"$0D"No"$0D"Toggle"$0D"On/Off based on usety"
         "pe"$0D"Off/On based on usetype"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
      m_iMonsterClip: =
      {
        txt = "&"
        hint = "MonsterClip flag"
        typ = "C"
        items = "No change"$0D"On"$0D"Off"$0D"Toggle"$0D"On/Off based on usety"
         "pe"$0D"Off/On based on usetype"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
      m_iProvoked: =
      {
        txt = "&"
        hint = "Angry At Player"
        typ = "C"
        items = "No change"$0D"Yes"$0D"No"$0D"Toggle"$0D"On/Off based on usety"
         "pe"$0D"Off/On based on usetype"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Affect corpses"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Once Only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Debug"
      }
    }
    env_customize:form =
    {
      t_env_customize = !
    }
    t_env_decal:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Position (blank = here) [LP]"
      }
      netname: =
      {
        txt = "&"
        hint = "Spray direction (blank = angle) [LV]"
      }
      message: =
      {
        txt = "&"
        hint = "Max distance (blank = none) [LR]"
      }
      impulse: =
      {
        txt = "&"
        hint = "Decal group"
        typ = "C"
        items = "Gunshot"$0D"Big gunshot"$0D"Blood"$0D"Alien blood"$0D"Glass c"
         "racks"$0D"Scorch marks"$0D"Bullsquid splat"$0D"Custom (see below)"
        values = "1"$0D"5"$0D"2"$0D"3"$0D"4"$0D"6"$0D"7"$0D"0"
      }
      noise: =
      {
        txt = "&"
        hint = "Custom decal texture"
      }
    }
    env_decal:form =
    {
      t_env_decal = !
    }
    t_env_dlight:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      message: =
      {
        txt = "&"
        hint = "Position (blank = here) [LP]"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Light Color (R G B)"
      }
      radius: =
      {
        txt = "&"
        hint = "Radius"
      }
      health: =
      {
        txt = "&"
        hint = "Duration (0 = until triggered)"
      }
      frags: =
      {
        txt = "&"
        hint = "Decay (units/sec)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Only once"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Start on"
      }
    }
    env_dlight:form =
    {
      t_env_dlight = !
    }
    t_env_elight:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      netname: =
      {
        txt = "&"
        hint = "At position (blank = here) [LP]"
      }
      target: =
      {
        txt = "&"
        hint = "Entity to follow (blank = this) [LE]"
      }
      impulse: =
      {
        txt = "&"
        hint = "Attachment point on that entity"
        typ = "C"
        items = "None"$0D"1"$0D"2"$0D"3"$0D"4"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      renderamt: =
      {
        txt = "&"
        hint = "Radius"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Color (R G B)"
      }
      health: =
      {
        txt = "&"
        hint = "Duration (0 = until triggered)"
      }
      frags: =
      {
        txt = "&"
        hint = "Decay (units/sec)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Only once"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Start on"
      }
    }
    env_elight:form =
    {
      t_env_elight = !
    }
    t_rain_settings:incl =
    {
      m_flDistance: =
      {
        txt = "&"
        hint = "Rain distance"
      }
      m_iMode: =
      {
        txt = "&"
        hint = "Weather type"
        typ = "C"
        items = "Rain"$0D"Snow"
        values = "0"$0D"1"
      }
    }
    rain_settings:form =
    {
      t_rain_settings = !
    }
    t_rain_modify:incl =
    {
      m_flTime: =
      {
        txt = "&"
        hint = "Fading time"
      }
      m_iDripsPerSecond: =
      {
        txt = "&"
        hint = "Drips per second"
      }
      m_flWindX: =
      {
        txt = "&"
        hint = "Wind X"
      }
      m_flWindY: =
      {
        txt = "&"
        hint = "Wind Y"
      }
      m_flRandX: =
      {
        txt = "&"
        hint = "Rand X"
      }
      m_flRandY: =
      {
        txt = "&"
        hint = "Rand Y"
      }
    }
    rain_modify:form =
    {
      t_rain_modify = !
    }
    t_env_rain:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      angles: =
      {
        txt = "&"
        hint = "Pitch Yaw Roll (Y Z X)"
      }
      m_dripSpeed: =
      {
        txt = "&"
        hint = "Drip Speed"
      }
      m_dripSize: =
      {
        txt = "&"
        hint = "Drip Width"
      }
      m_brightness: =
      {
        txt = "&"
        hint = "Drip Brightness (1 - 255)"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Drip Color (R G B)"
      }
      m_iNoise: =
      {
        txt = "&"
        hint = "Beam noise (distortion)"
      }
      m_burstSize: =
      {
        txt = "&"
        hint = "Number of drips per update"
      }
      m_flUpdateTime: =
      {
        txt = "&"
        hint = "Time between updates"
      }
      m_flMaxUpdateTime: =
      {
        txt = "&"
        hint = "Max time between updates (random)"
      }
      target: =
      {
        txt = "&"
        hint = "Fire on updating"
      }
      m_fLifeTime: =
      {
        txt = "&"
        hint = "Beam Lifetime (0 = three updates)"
      }
      texture: =
      {
        txt = "&"
        hint = "Drip Sprite"
      }
      m_axis: =
      {
        txt = "&"
        hint = "Beam Direction"
        typ = "C"
        items = "Z axis (vertical)"$0D"X axis"$0D"Y axis"
        values = "0"$0D"1"$0D"2"
      }
      m_iExtent: =
      {
        txt = "&"
        hint = "Extent type"
        typ = "C"
        items = "Fill brush"$0D"Obstructable"$0D"Reverse obstructable"$0D"Arci"
         "ng"$0D"Reverse arcing"$0D"Arcing Through"
        values = "0"$0D"1"$0D"3"$0D"2"$0D"4"$0D"5"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start Off"
      }
    }
    env_rain:form =
    {
      t_env_rain = !
    }
    t_env_mirror:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      radius: =
      {
        txt = "&"
        hint = "Radius"
      }
      frags: =
      {
        txt = "&"
        hint = "Frags ([SF]blank for auto)"
      }
      spawnflag: =
      {
        txt = "&"
        typ = "X1"
        cap = "Draw Player"
      }
    }
    env_mirror:form =
    {
      t_env_mirror = !
    }
    t_env_explosion:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Initial position (blank = here) [LP]"
      }
      iMagnitude: =
      {
        txt = "&"
        hint = "Magnitude/Radius"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No Damage"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Repeatable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "No Fireball"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "No Smoke"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "No Decal"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "No Sparks"
      }
    }
    env_explosion:form =
    {
      t_env_explosion = !
    }
    t_env_fade:incl =
    {
      t_Targetname = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Fade From"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Modulate"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Activator Only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Permanent"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Fire at Camera"
      }
      duration: =
      {
        txt = "&"
        hint = "Duration (seconds)"
      }
      holdtime: =
      {
        txt = "&"
        hint = "Hold Fade (seconds)"
      }
      renderamt: =
      {
        txt = "&"
        hint = "Fade Alpha"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Fade Color (R G B)"
      }
    }
    env_fade:form =
    {
      t_env_fade = !
    }
    t_env_fog:incl =
    {
      t_Targetname = !
      fadein: =
      {
        txt = "&"
        hint = "Fade in time"
      }
      holdtime: =
      {
        txt = "&"
        hint = "Hold time (0 = permanent)"
      }
      fadeout: =
      {
        txt = "&"
        hint = "Fade out time"
      }
      startdist: =
      {
        txt = "&"
        hint = "Fog start position"
      }
      enddist: =
      {
        txt = "&"
        hint = "Fog end position"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Fog Color (R G B)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start active"
      }
    }
    env_fog:form =
    {
      t_env_fog = !
    }
    t_env_footsteps:incl =
    {
      t_Targetname = !
      t_Master = !
      frags: =
      {
        txt = "&"
        hint = "Preset Footstep type"
        typ = "C"
        items = "Custom (see below)"$0D"Concrete"$0D"Metal"$0D"Dirt"$0D"Vent"$0D
         "Grate"$0D"Tile"$0D"Paddling"$0D"Wading"$0D"Ladder"
        values = "0"$0D"-1"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
      noise: =
      {
        txt = "&"
        hint = "Custom Footstep sound"
      }
      noise1: =
      {
        txt = "&"
        hint = "Ladder sound"
      }
      noise2: =
      {
        txt = "&"
        hint = "Wading sound"
      }
      noise3: =
      {
        txt = "&"
        hint = "Paddling sound"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Set only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Once only"
      }
    }
    env_footsteps:form =
    {
      t_env_footsteps = !
    }
    t_env_funnel:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_MoveWith = !
      message: =
      {
        txt = "&"
        hint = "Position (blank = here) [LP]"
      }
      netname: =
      {
        txt = "&"
        hint = "Particle sprite"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Reverse"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Repeatable"
      }
    }
    env_funnel:form =
    {
      t_env_funnel = !
    }
    t_env_global:incl =
    {
      t_Targetname = !
      globalstate: =
      {
        txt = "&"
        hint = "Global State to Set"
      }
      triggermode: =
      {
        txt = "&"
        hint = "Trigger to send"
        typ = "C"
        items = "Off"$0D"On"$0D"Dead"$0D"Toggle"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      initialstate: =
      {
        txt = "&"
        hint = "Initial State"
        typ = "C"
        items = "Off"$0D"On"$0D"Dead"
        values = "0"$0D"1"$0D"2"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Set Initial State"
      }
    }
    env_global:form =
    {
      t_env_global = !
    }
    t_env_glow:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      t_MoveWith = !
      t_RenderFieldsMax = !
      model: =
      {
        txt = "&"
        hint = "Sprite Name"
      }
      scale: =
      {
        txt = "&"
        hint = "Scale"
      }
    }
    env_glow:form =
    {
      t_env_glow = !
    }
    t_env_laser:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_RenderFxChoices = !
      t_Angles = !
      t_MoveWith = !
      LaserStart: =
      {
        txt = "&"
        hint = "Start At (blank = here) [LP]"
      }
      LaserTarget: =
      {
        txt = "&"
        hint = "Fire Towards"
      }
      m_iTowardsMode: =
      {
        txt = "&"
        hint = "Meaning of Fire Towards"
        typ = "C"
        items = "Position [LP]"$0D"Direction [LV]"
        values = "0"$0D"1"
      }
      renderamt: =
      {
        txt = "&"
        hint = "Brightness (1 - 255)"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Beam Color (R G B)"
      }
      width: =
      {
        txt = "&"
        hint = "Width of beam (pixels*0.1 0-255)"
      }
      NoiseAmplitude: =
      {
        txt = "&"
        hint = "Amount of noise (0-255)"
      }
      texture: =
      {
        txt = "&"
        hint = "Sprite Name"
      }
      StartSprite: =
      {
        txt = "&"
        hint = "Start Sprite"
      }
      EndSprite: =
      {
        txt = "&"
        hint = "End Sprite"
      }
      TextureScroll: =
      {
        txt = "&"
        hint = "Texture Scroll Rate (0-100)"
      }
      framestart: =
      {
        txt = "&"
        hint = "Starting Frame"
      }
      damage: =
      {
        txt = "&"
        hint = "Damage / second"
      }
      frags: =
      {
        txt = "&"
        hint = "Damage type"
        typ = "C"
        items = "Energy Beam"$0D"Fracture"$0D"Bullet ('blood loss')"$0D"Lacera"
         "tions"$0D"Burning"$0D"Freezing"$0D"Sonic ('internal bleeding')"$0D"D"
         "rowning"$0D"Biohazard"$0D"Poison (continuous)"$0D"Radiation"$0D"Haza"
         "rdous chemical"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"512"$0D"16384"$0D"65536"
         $0D"131072"$0D"262144"$0D"1048576"
      }
      target: =
      {
        txt = "&"
        hint = "Fire when tripped"
      }
      netname: =
      {
        txt = "&"
        hint = "Tripped only by entity"
      }
      m_iProjection: =
      {
        txt = "&"
        hint = "Projection mode"
        typ = "C"
        items = "Normal"$0D"Extend past endpoint"
        values = "0"$0D"1"
      }
      m_iStoppedBy: =
      {
        txt = "&"
        hint = "Stopped by"
        typ = "C"
        items = "Glass & Monsters"$0D"Monsters only"$0D"Glass & Monster hulls"$0D
         "Monster hulls only"$0D"Glass only"$0D"Neither"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start On"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "StartSparks"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "EndSparks"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Decal End"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Fade Start"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Fade End"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Draw Solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Interpolate"
      }
    }
    env_laser:form =
    {
      t_env_laser = !
    }
    t_env_message:incl =
    {
      t_Targetname = !
      t_Target = !
      message: =
      {
        txt = "&"
        hint = "Message Name"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Play Once"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "All Clients"
      }
      messagesound: =
      {
        txt = "&"
        hint = "Sound Effect"
      }
      messagevolume: =
      {
        txt = "&"
        hint = "Volume 0-10"
      }
      messageattenuation: =
      {
        txt = "&"
        hint = "Sound Radius"
        typ = "C"
        items = "Small Radius"$0D"Medium Radius"$0D"Large  Radius"$0D"Play Eve"
         "rywhere"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
    }
    env_message:form =
    {
      t_env_message = !
    }
    t_env_model:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_Sequence = !
      model: =
      {
        txt = "&"
        hint = "Model name"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      skin: =
      {
        txt = "&"
        hint = "Skin"
      }
      body: =
      {
        txt = "&"
        hint = "Body"
      }
      scale: =
      {
        txt = "&"
        hint = "Scale (1.0 = normal size)"
      }
      m_iszSequence_On: =
      {
        txt = "&"
        hint = "Sequence when on"
      }
      m_iAction_On: =
      {
        txt = "&"
        hint = "Behaviour when on"
        typ = "C"
        items = "Freeze when sequence ends"$0D"Loop"$0D"Change state when sequ"
         "ence ends"
        values = "0"$0D"1"$0D"2"
      }
      m_iszSequence_Off: =
      {
        txt = "&"
        hint = "Sequence when off"
      }
      m_iAction_Off: =
      {
        txt = "&"
        hint = "Behaviour when off"
        typ = "C"
        items = "Freeze when sequence ends"$0D"Loop"$0D"Change state when sequ"
         "ence ends"
        values = "0"$0D"1"$0D"2"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Initially Off"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Drop to Floor"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Turn head"
      }
      chestnums: =
      {
        txt = "&"
        hint = "Has Chest Nums?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Coop player"
        typ = "C"
        items = "None"$0D"Player 1"$0D"Player 2"$0D"Player 3"$0D"Player 4"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
    }
    env_model:form =
    {
      t_env_model = !
    }
    t_env_quakefx:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Position (blank = here) [LP]"
      }
      impulse: =
      {
        txt = "&"
        hint = "Effect type"
        typ = "C"
        items = "Tar Explosion"$0D"Lava Splash"$0D"Teleport Splash"$0D"Explosi"
         "on"$0D"Particle Burst"
        values = "4"$0D"10"$0D"11"$0D"12"$0D"122"
      }
      frags: =
      {
        txt = "&"
        hint = "Particle Burst: color number"
      }
      armortype: =
      {
        txt = "&"
        hint = "Particle Burst: radius"
      }
      health: =
      {
        txt = "&"
        hint = "Particle Burst: duration"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Repeatable"
      }
    }
    env_quakefx:form =
    {
      t_env_quakefx = !
    }
    t_env_particle:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      message: =
      {
        txt = "&"
        hint = "Particle file"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start On"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Spawn Use"
      }
    }
    env_particle:form =
    {
      t_env_particle = !
    }
    t_env_render:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_RenderFields = !
      message: =
      {
        txt = "&"
        hint = "FX Amount factor [LR]"
      }
      m_fScale: =
      {
        txt = "&"
        hint = "Scale (0 = no change)"
      }
      m_lScale: =
      {
        txt = "&"
        hint = "Scale (0 = no change) [LR]"
      }
      target: =
      {
        txt = "&"
        hint = "Target to affect [LE]"
      }
      frags: =
      {
        txt = "&"
        hint = "Fade Time (secs)"
      }
      armorvalue: =
      {
        txt = "&"
        hint = "Fade Coarseness (secs)"
      }
      netname: =
      {
        txt = "&"
        hint = "Trigger after fading"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No Renderfx"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "No Renderamt"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "No Rendermode"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "No Rendercolor"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Remove target"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Remove self"
      }
    }
    env_render:form =
    {
      t_env_render = !
    }
    t_env_shake:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "GlobalShake"
      }
      amplitude: =
      {
        txt = "&"
        hint = "Amplitude 0-16"
      }
      radius: =
      {
        txt = "&"
        hint = "Effect radius"
      }
      duration: =
      {
        txt = "&"
        hint = "Duration (seconds)"
      }
      frequency: =
      {
        txt = "&"
        hint = "0.1 = jerk, 255.0 = rumble"
      }
    }
    env_shake:form =
    {
      t_env_shake = !
    }
    t_env_shockwave:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Centered"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Repeatable"
      }
      m_iszPosition: =
      {
        txt = "&"
        hint = "Position (blank = here) [LP]"
      }
      netname: =
      {
        txt = "&"
        hint = "Spritename"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Color"
      }
      renderamt: =
      {
        txt = "&"
        hint = "Opacity (0-255)"
      }
      m_iTime: =
      {
        txt = "&"
        hint = "Duration"
      }
      m_iRadius: =
      {
        txt = "&"
        hint = "Final radius"
      }
      m_iHeight: =
      {
        txt = "&"
        hint = "Wave height"
      }
      m_iScrollRate: =
      {
        txt = "&"
        hint = "Scroll rate"
      }
      m_iNoise: =
      {
        txt = "&"
        hint = "Distortion ('noise')"
      }
      m_iFrameRate: =
      {
        txt = "&"
        hint = "Frame Rate"
      }
      m_iStartFrame: =
      {
        txt = "&"
        hint = "Starting Frame"
      }
    }
    env_shockwave:form =
    {
      t_env_shockwave = !
    }
    t_env_shooter:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_gibshooterbase = !
      t_RenderFields = !
      shootmodel: =
      {
        txt = "&"
        hint = "Model or Sprite name"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      noise: =
      {
        txt = "&"
        hint = "Scale [LR]"
      }
      skin: =
      {
        txt = "&"
        hint = "Skin"
      }
      body: =
      {
        txt = "&"
        hint = "Body (models only)"
      }
      frame: =
      {
        txt = "&"
        hint = "Start frame"
      }
      framerate: =
      {
        txt = "&"
        hint = "Framerate"
      }
      m_iPhysics: =
      {
        txt = "&"
        hint = "Behaviour of children"
        typ = "C"
        items = "Bouncy gib (normal)"$0D"Sticky gib"$0D"Noclip"$0D"Fly (ignore"
         " gravity)"$0D"Fly & bounce"$0D"Arc (obey gravity)"$0D"Arc & bounce"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
      m_iBloodColor: =
      {
        txt = "&"
        hint = "Blood color"
        typ = "C"
        items = "Don't bleed"$0D"Red (human)"$0D"Yellow (alien)"
        values = "0"$0D"247"$0D"195"
      }
      shootsounds: =
      {
        txt = "&"
        hint = "Material Sound"
        typ = "C"
        items = "None"$0D"Glass"$0D"Wood"$0D"Metal"$0D"Flesh"$0D"Concrete"
        values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      m_fFriction: =
      {
        txt = "&"
        hint = "Bounce height"
      }
      m_iszTouch: =
      {
        txt = "&"
        hint = "Fire on collision (locus = shot)"
      }
      m_iszTouchOther: =
      {
        txt = "&"
        hint = "Fire on collision (locus = wall)"
      }
      m_vecSize: =
      {
        txt = "&"
        hint = "Shot size (X Y Z)"
      }
    }
    env_shooter:form =
    {
      t_env_shooter = !
    }
    t_env_sky:incl =
    {
      t_Targetname = !
    }
    env_sky:form =
    {
      t_env_sky = !
    }
    t_env_sound:incl =
    {
      t_Master = !
      t_MoveWith = !
      targetname: =
      {
        txt = "&"
        hint = "Name"
      }
      target: =
      {
        txt = "&"
        hint = "Fire when activated"
      }
      radius: =
      {
        txt = "&"
        hint = "Radius"
      }
      roomtype: =
      {
        txt = "&"
        hint = "Room Type"
        typ = "C"
        items = "(Disable all filters)"$0D"Generic (no filters)"$0D"Metal Smal"
         "l"$0D"Metal Medium"$0D"Metal Large"$0D"Tunnel Small"$0D"Tunnel Mediu"
         "m"$0D"Tunnel Large"$0D"Chamber Small"$0D"Chamber Medium"$0D"Chamber "
         "Large"$0D"Bright Small"$0D"Bright Medium"$0D"Bright Large"$0D"Water "
         "1"$0D"Water 2"$0D"Water 3"$0D"Concrete Small"$0D"Concrete Medium"$0D
         "Concrete Large"$0D"Big 1"$0D"Big 2"$0D"Big 3"$0D"Cavern Small"$0D"Ca"
         "vern Medium"$0D"Cavern Large"$0D"Weirdo 1"$0D"Weirdo 2"$0D"Weirdo 3"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"
      }
    }
    env_sound:form =
    {
      t_env_sound = !
    }
    t_env_spark:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Initial position (blank = here) [LP]"
      }
      MaxDelay: =
      {
        txt = "&"
        hint = "Max Time between sparks"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Cyclic"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Toggle"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Start ON"
      }
    }
    env_spark:form =
    {
      t_env_spark = !
    }
    t_env_sprite:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFieldsMax = !
      framerate: =
      {
        txt = "&"
        hint = "Framerate"
      }
      model: =
      {
        txt = "&"
        hint = "Sprite Name"
      }
      scale: =
      {
        txt = "&"
        hint = "Scale"
      }
      message: =
      {
        txt = "&"
        hint = "Attached to entity..."
      }
      frags: =
      {
        txt = "&"
        hint = "...at attachment point"
        typ = "C"
        items = "0"$0D"1"$0D"2"$0D"3"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start on"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Play Once"
      }
    }
    env_sprite:form =
    {
      t_env_sprite = !
    }
    t_env_state:incl =
    {
      t_Targetname = !
      t_Master = !
      target: =
      {
        txt = "&"
        hint = "Target (on & off)"
      }
      noise1: =
      {
        txt = "&"
        hint = "Fire when turned on"
      }
      noise2: =
      {
        txt = "&"
        hint = "Fire when turned off"
      }
      turnontime: =
      {
        txt = "&"
        hint = "Time taken to turn on"
      }
      turnofftime: =
      {
        txt = "&"
        hint = "Time taken to turn off"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start On"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Debug Mode"
      }
    }
    env_state:form =
    {
      t_env_state = !
    }
    t_env_warpball:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Initial position (blank = here) [LP]"
      }
      health: =
      {
        txt = "&"
        hint = "Max lightning-arc length"
      }
      frags: =
      {
        txt = "&"
        hint = "Number of lightning bolts"
      }
    }
    env_warpball:form =
    {
      t_env_warpball = !
    }
    t_func_asylumlookat:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_Appearflags = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_SwitchTexLight = !
      t_Global = !
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_asylumlookat:form =
    {
      t_func_asylumlookat = !
    }
    t_func_breakable:incl =
    {
      t_Breakable = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_SwitchTexLight = !
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_breakable:form =
    {
      t_func_breakable = !
    }
    t_func_button:incl =
    {
      t_Targetname = !
      t_Target = !
      t_Angles = !
      t_MoveWith = !
      t_Master = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_SwitchTexLight = !
      t_Global = !
      t_LockSounds = !
      speed: =
      {
        txt = "&"
        hint = "Speed"
      }
      health: =
      {
        txt = "&"
        hint = "Health (shootable if > 0)"
      }
      lip: =
      {
        txt = "&"
        hint = "Lip"
      }
      sounds: =
      {
        txt = "&"
        hint = "Sounds"
        typ = "C"
        items = "None"$0D"Big zap & Warmup (1)"$0D"Access Denied (2)"$0D"Acces"
         "s Granted (3)"$0D"Quick Combolock (4)"$0D"Power Deadbolt 1 (5)"$0D"P"
         "ower Deadbolt 2 (6)"$0D"Plunger (7)"$0D"Small zap (8)"$0D"Keycard So"
         "und (9)"$0D"Buzz (10)"$0D"Buzz Off (11)"$0D"Lightswitch"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"14"
      }
      wait: =
      {
        txt = "&"
        hint = "Delay before Reset"
        typ = "C"
        items = "Stays pressed (-1)"
        values = "-1"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before trigger"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Don't move"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Direct use only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Toggle"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Sparks"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Not Solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Touch Activates"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Can't Use"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Keep item after use"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Unlock auto use"
      }
      lockedby: =
      {
        txt = "&"
        hint = "Entity the door is locked by"
      }
      lockedmsg: =
      {
        txt = "&"
        hint = "Locked message"
      }
      lockedsnd: =
      {
        txt = "&"
        hint = "Locked sound"
      }
      unlockedsnd: =
      {
        txt = "&"
        hint = "Unlocked sound"
      }
      unlockedmsg: =
      {
        txt = "&"
        hint = "Unlocked message"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_button:form =
    {
      t_func_button = !
    }
    t_func_conveyor:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No Push"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Not Solid"
      }
      speed: =
      {
        txt = "&"
        hint = "Conveyor Speed"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_conveyor:form =
    {
      t_func_conveyor = !
    }
    t_func_coopallplayersbutton:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      message: =
      {
        txt = "&"
        hint = "Name of trigger_coop_changelevel"
      }
      target: =
      {
        txt = "&"
        hint = "Name of target to fire"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_coopallplayersbutton:form =
    {
      t_func_coopallplayersbutton = !
    }
    t_func_door:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_Master = !
      t_Door = !
      t_LockSounds = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      directuse: =
      {
        txt = "&"
        hint = "Direct use only"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      acceleration: =
      {
        txt = "&"
        hint = "Acceleration '0' for infinite"
      }
      deceleration: =
      {
        txt = "&"
        hint = "Deceleration '0' for infinite"
      }
    }
    func_door:form =
    {
      t_func_door = !
    }
    t_func_door_rotating:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_Master = !
      t_Door = !
      t_LockSounds = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      directuse: =
      {
        txt = "&"
        hint = "Direct use only"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Reverse Dir"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "One-way"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "X Axis"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Y Axis"
      }
      distance: =
      {
        txt = "&"
        hint = "Distance (deg)"
      }
      axes: =
      {
        txt = "&"
        hint = "Axis Multipliers (Y Z X)"
      }
    }
    func_door_rotating:form =
    {
      t_func_door_rotating = !
    }
    t_func_escalatorstep:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_Master = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "End Section"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Start Off"
      }
      forwardaxis: =
      {
        txt = "&"
        hint = "Forward Axis"
        typ = "C"
        items = "-X"$0D"+X"$0D"-Y"$0D"+Y"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
    }
    func_escalatorstep:form =
    {
      t_func_escalatorstep = !
    }
    t_func_friction:incl =
    {
      t_Appearflags = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      modifier: =
      {
        txt = "&"
        hint = "Percentage of standard (0 - 100)"
      }
    }
    func_friction:form =
    {
      t_func_friction = !
    }
    t_func_guntarget:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      speed: =
      {
        txt = "&"
        hint = "Speed (units per second)"
      }
      target: =
      {
        txt = "&"
        hint = "First stop target"
      }
      message: =
      {
        txt = "&"
        hint = "Fire when damaged"
      }
      health: =
      {
        txt = "&"
        hint = "Damage to Take"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_guntarget:form =
    {
      t_func_guntarget = !
    }
    t_func_healthcharger:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_SwitchTexLight = !
      t_Global = !
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_healthcharger:form =
    {
      t_func_healthcharger = !
    }
    t_func_illusionary:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      skin: =
      {
        txt = "&"
        hint = "Contents"
        typ = "C"
        items = "Empty"$0D"Volumetric Light"$0D"Zero-G"$0D"Hover-Field"$0D"Fog"
         " effect"$0D"Special 1 (Particles)"$0D"Special 2 (Particles)"$0D"Spec"
         "ial 3 (Particles)"
        values = "-1"$0D"-7"$0D"-17"$0D"-18"$0D"-19"$0D"-20"$0D"-21"$0D"-22"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_illusionary:form =
    {
      t_func_illusionary = !
    }
    t_func_ladder:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Visible"
      }
    }
    func_ladder:form =
    {
      t_func_ladder = !
    }
    t_func_laddercontrol:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      target: =
      {
        txt = "&"
        hint = "Target Ladder To Control"
      }
    }
    func_laddercontrol:form =
    {
      t_func_laddercontrol = !
    }
    t_func_monsterclip:incl =
    {
      t_Targetname = !
      t_MoveWith = !
    }
    func_monsterclip:form =
    {
      t_func_monsterclip = !
    }
    t_func_mortar_field:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      m_flSpread: =
      {
        txt = "&"
        hint = "Spread Radius"
      }
      m_iCount: =
      {
        txt = "&"
        hint = "Repeat Count"
      }
      m_fControl: =
      {
        txt = "&"
        hint = "Targeting"
        typ = "C"
        items = "Random"$0D"Activator"$0D"Table"
        values = "0"$0D"1"$0D"2"
      }
      m_iszXController: =
      {
        txt = "&"
        hint = "X Controller"
      }
      m_iszYController: =
      {
        txt = "&"
        hint = "Y Controller"
      }
    }
    func_mortar_field:form =
    {
      t_func_mortar_field = !
    }
    t_func_pendulum:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      t_Appearflags = !
      speed: =
      {
        txt = "&"
        hint = "Speed"
      }
      axes: =
      {
        txt = "&"
        hint = "Axis Multipliers (Y Z X)"
      }
      distance: =
      {
        txt = "&"
        hint = "Distance (deg)"
      }
      damp: =
      {
        txt = "&"
        hint = "Damping (0-1000)"
      }
      dmg: =
      {
        txt = "&"
        hint = "Damage inflicted when blocked"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start ON"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Passable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Auto-return"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "X Axis"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Y Axis"
      }
      _minlight: =
      {
        txt = "&"
        hint = "_minlight"
      }
    }
    func_pendulum:form =
    {
      t_func_pendulum = !
    }
    t_func_plat:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      t_PlatSounds = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Toggle"
      }
      height: =
      {
        txt = "&"
        hint = "Travel altitude (can be negative)"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_plat:form =
    {
      t_func_plat = !
    }
    t_func_platrot:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      t_PlatSounds = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Toggle"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "X Axis"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Y Axis"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed of rotation"
      }
      axes: =
      {
        txt = "&"
        hint = "Axis Multipliers (Y Z X)"
      }
      height: =
      {
        txt = "&"
        hint = "Travel altitude (can be negative)"
      }
      rotation: =
      {
        txt = "&"
        hint = "Spin amount"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_platrot:form =
    {
      t_func_platrot = !
    }
    t_func_pushable:incl =
    {
      t_Breakable = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Breakable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Can't Pull"
      }
      friction: =
      {
        txt = "&"
        hint = "Friction (0-400)"
      }
      buoyancy: =
      {
        txt = "&"
        hint = "Buoyancy"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_pushable:form =
    {
      t_func_pushable = !
    }
    t_func_recharge:incl =
    {
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_SwitchTexLight = !
      t_Global = !
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_recharge:form =
    {
      t_func_recharge = !
    }
    t_func_rot_button:incl =
    {
      t_Targetname = !
      t_Target = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      t_Master = !
      t_LockSounds = !
      changetarget: =
      {
        txt = "&"
        hint = "ChangeTarget Name"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed"
      }
      axes: =
      {
        txt = "&"
        hint = "Axis Multipliers (Y Z X)"
      }
      health: =
      {
        txt = "&"
        hint = "Health (shootable if > 0)"
      }
      sounds: =
      {
        txt = "&"
        hint = "Sounds"
        typ = "C"
        items = "None"$0D"Squeaky (1)"$0D"Squeaky Pneumatic (2)"$0D"Ratchet Gr"
         "oan (3)"$0D"Clean Ratchet (4)"$0D"Gas Clunk (5)"
        values = "-1"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"
      }
      wait: =
      {
        txt = "&"
        hint = "Delay before reset"
        typ = "C"
        items = "Stays pressed"
        values = "-1"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before trigger"
      }
      distance: =
      {
        txt = "&"
        hint = "Distance (deg)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Not solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Reverse Dir"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Direct use only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Toggle"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "X Axis"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Y Axis"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Touch Activates"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Invert '+Use'able"
      }
      _minlight: =
      {
        txt = "&"
        hint = "_minlight"
      }
    }
    func_rot_button:form =
    {
      t_func_rot_button = !
    }
    t_func_rotating:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      angles: =
      {
        txt = "&"
        hint = "Pitch Yaw Roll (Y Z X)"
      }
      speed: =
      {
        txt = "&"
        hint = "Rotation Speed"
      }
      axes: =
      {
        txt = "&"
        hint = "Axis Multipliers (Y Z X)"
      }
      volume: =
      {
        txt = "&"
        hint = "Volume (10 = loudest)"
      }
      fanfriction: =
      {
        txt = "&"
        hint = "Friction (0 - 100%)"
      }
      sounds: =
      {
        txt = "&"
        hint = "Fan Sounds"
        typ = "C"
        items = "No Sound"$0D"Fast Whine (1)"$0D"Slow Rush (2)"$0D"Medium Rick"
         "ety (3)"$0D"Fast Beating (4)"$0D"Slow Smooth (5)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
      message: =
      {
        txt = "&"
        hint = "WAV Name"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start ON"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Reverse Direction"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "X Axis"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Y Axis"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Acc/Dcc"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Fan Pain"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Not Solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Small Radius"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Medium Radius"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Large Radius"
      }
      _minlight: =
      {
        txt = "&"
        hint = "_minlight"
      }
      spawnorigin: =
      {
        txt = "&"
        hint = "X Y Z - Move here after lighting"
      }
      dmg: =
      {
        txt = "&"
        hint = "Damage inflicted when blocked"
      }
    }
    func_rotating:form =
    {
      t_func_rotating = !
    }
    t_func_shine:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Shine sprite"
      }
      scale: =
      {
        txt = "&"
        hint = "Shine scale"
      }
      renderamt: =
      {
        txt = "&"
        hint = "Shine brightness (0-255)"
      }
    }
    func_shine:form =
    {
      t_func_shine = !
    }
    t_func_stairs:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
    }
    func_stairs:form =
    {
      t_func_stairs = !
    }
    t_func_tank:incl =
    {
      t_BaseTank = !
      t_ZHLTLightKeys = !
      bullet: =
      {
        txt = "&"
        hint = "Bullets"
        typ = "C"
        items = "None"$0D"9mm"$0D"MP5"$0D"12mm"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
    }
    func_tank:form =
    {
      t_func_tank = !
    }
    t_func_tankcontrols:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Tank entity name"
      }
      frags: =
      {
        txt = "&"
        hint = "Tolerance (-1 = total)"
      }
      crosshair: =
      {
        txt = "&"
        hint = "Crosshair to use"
        typ = "C"
        items = "None"$0D"MP5"
        values = "0"$0D"4"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Ignore +Use"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Visible"
      }
    }
    func_tankcontrols:form =
    {
      t_func_tankcontrols = !
    }
    t_func_tanklaser:incl =
    {
      t_BaseTank = !
      t_ZHLTLightKeys = !
      laserentity: =
      {
        txt = "&"
        hint = "env_laser Entity"
      }
    }
    func_tanklaser:form =
    {
      t_func_tanklaser = !
    }
    t_func_tankmortar:incl =
    {
      t_BaseTank = !
      t_ZHLTLightKeys = !
      iMagnitude: =
      {
        txt = "&"
        hint = "Explosion Magnitude"
      }
    }
    func_tankmortar:form =
    {
      t_func_tankmortar = !
    }
    t_func_tankrocket:incl =
    {
      t_BaseTank = !
      t_ZHLTLightKeys = !
    }
    func_tankrocket:form =
    {
      t_func_tankrocket = !
    }
    t_func_trackautochange:incl =
    {
      t_Trackchange = !
      t_ZHLTLightKeys = !
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_trackautochange:form =
    {
      t_func_trackautochange = !
    }
    t_func_trackchange:incl =
    {
      t_Trackchange = !
      t_ZHLTLightKeys = !
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_trackchange:form =
    {
      t_func_trackchange = !
    }
    t_func_tracktrain:incl =
    {
      t_Targetname = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No Pitch (X-rot)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "No User Control"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "No Reverse"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Passable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "No Yaw (Z-rot)"
      }
      target: =
      {
        txt = "&"
        hint = "First stop target"
      }
      sounds: =
      {
        txt = "&"
        hint = "Move Sound"
        typ = "C"
        items = "None (or custom)"$0D"Rail 1"$0D"Rail 2"$0D"Rail 3"$0D"Rail 4"$0D
         "Rail 6"$0D"Rail 7"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
      custommovesound: =
      {
        txt = "&"
        hint = "Custom Move Sound"
      }
      customstartsound: =
      {
        txt = "&"
        hint = "Start Sound"
      }
      custombrakesound: =
      {
        txt = "&"
        hint = "Stop Sound"
      }
      wheels: =
      {
        txt = "&"
        hint = "Distance between the wheels"
      }
      height: =
      {
        txt = "&"
        hint = "Height above track"
      }
      startspeed: =
      {
        txt = "&"
        hint = "Initial speed"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed (units per second)"
      }
      dmg: =
      {
        txt = "&"
        hint = "Damage on crush"
      }
      volume: =
      {
        txt = "&"
        hint = "Volume (10 = loudest)"
      }
      bank: =
      {
        txt = "&"
        hint = "Bank angle on turns"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
      avelocity: =
      {
        txt = "&"
        hint = "Initial avelocity (Y Z X)"
      }
    }
    func_tracktrain:form =
    {
      t_func_tracktrain = !
    }
    t_func_train:incl =
    {
      t_Targetname = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      t_PlatSounds = !
      target: =
      {
        txt = "&"
        hint = "First stop target"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed (units per second)"
      }
      avelocity: =
      {
        txt = "&"
        hint = "Initial avelocity (Y Z X)"
      }
      dmg: =
      {
        txt = "&"
        hint = "Damage on crush"
        typ = "C"
        items = "No damage"
        values = "-1"
      }
      skin: =
      {
        txt = "&"
        hint = "Contents"
      }
      volume: =
      {
        txt = "&"
        hint = "Sound Volume 0.0 - 1.0"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Origin on paths"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Initially On"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Not solid"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_train:form =
    {
      t_func_train = !
    }
    t_func_traincontrols:incl =
    {
      target: =
      {
        txt = "&"
        hint = "Train Name"
      }
    }
    func_traincontrols:form =
    {
      t_func_traincontrols = !
    }
    t_func_valve:incl =
    {
      t_Targetname = !
      t_Target = !
      t_Angles = !
      t_MoveWith = !
      t_Master = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_SwitchTexLight = !
      t_Global = !
      iuser1: =
      {
        txt = "&"
        hint = "Distance (deg)"
      }
      iuser2: =
      {
        txt = "&"
        hint = "Degrees/0.025 secs"
      }
      iuser4: =
      {
        txt = "&"
        hint = "Axis"
        typ = "C"
        items = "X"$0D"Y"$0D"Z"
        values = "0"$0D"1"$0D"2"
      }
      lockedby: =
      {
        txt = "&"
        hint = "Entity the valve is locked by"
      }
      lockedmsg: =
      {
        txt = "&"
        hint = "Locked message"
      }
      lockedsnd: =
      {
        txt = "&"
        hint = "Locked sound"
      }
      unlockedsnd: =
      {
        txt = "&"
        hint = "Unlocked sound"
      }
      unlockedmsg: =
      {
        txt = "&"
        hint = "Unlocked message"
      }
      message: =
      {
        txt = "&"
        hint = "Entity to rotate too"
      }
      impulse: =
      {
        txt = "&"
        hint = "ENTITY Axis"
        typ = "C"
        items = "X"$0D"Y"$0D"Z"
        values = "0"$0D"1"$0D"2"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Keep key after unlock"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_valve:form =
    {
      t_func_valve = !
    }
    t_func_wall:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_Appearflags = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_SwitchTexLight = !
      t_Global = !
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    func_wall:form =
    {
      t_func_wall = !
    }
    t_func_wall_toggle:incl =
    {
      t_func_wall = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Starts Invisible"
      }
    }
    func_wall_toggle:form =
    {
      t_func_wall_toggle = !
    }
    t_func_water:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_Master = !
      t_Door = !
      t_LockSounds = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Starts Open"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Use Only"
      }
      skin: =
      {
        txt = "&"
        hint = "Contents"
        typ = "C"
        items = "Water"$0D"Slime"$0D"Lava"
        values = "-3"$0D"-4"$0D"-5"
      }
      WaveHeight: =
      {
        txt = "&"
        hint = "Wave Height"
      }
    }
    func_water:form =
    {
      t_func_water = !
    }
    t_game_counter:incl =
    {
      t_Targetname = !
      t_Targetx = !
      t_Master = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove On fire"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Reset On fire"
      }
      frags: =
      {
        txt = "&"
        hint = "Initial Value"
      }
      health: =
      {
        txt = "&"
        hint = "Limit Value"
      }
    }
    game_counter:form =
    {
      t_game_counter = !
    }
    t_game_counter_set:incl =
    {
      t_Targetname = !
      t_Target = !
      t_Master = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove On fire"
      }
      frags: =
      {
        txt = "&"
        hint = "New Value"
      }
    }
    game_counter_set:form =
    {
      t_game_counter_set = !
    }
    t_game_end:incl =
    {
      t_Targetname = !
      t_Master = !
    }
    game_end:form =
    {
      t_game_end = !
    }
    t_game_player_equip:incl =
    {
      t_Targetname = !
      master: =
      {
        txt = "&"
        hint = "Team Master"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Use Only"
      }
    }
    game_player_equip:form =
    {
      t_game_player_equip = !
    }
    t_game_player_hurt:incl =
    {
      t_Targetname = !
      t_Master = !
      dmg: =
      {
        txt = "&"
        hint = "Damage To Apply"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove On fire"
      }
    }
    game_player_hurt:form =
    {
      t_game_player_hurt = !
    }
    t_game_player_team:incl =
    {
      t_Targetname = !
      t_Master = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove On fire"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Kill Player"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Gib Player"
      }
      target: =
      {
        txt = "&"
        hint = "game_team_master to use"
      }
    }
    game_player_team:form =
    {
      t_game_player_team = !
    }
    t_game_score:incl =
    {
      t_Targetname = !
      t_Master = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Allow Negative"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Team Points"
      }
      points: =
      {
        txt = "&"
        hint = "Points to add (+/-)"
      }
    }
    game_score:form =
    {
      t_game_score = !
    }
    t_game_team_master:incl =
    {
      t_Targetname = !
      t_Targetx = !
      t_Master = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove On fire"
      }
      triggerstate: =
      {
        txt = "&"
        hint = "Trigger to send"
        typ = "C"
        items = "Off"$0D"On"$0D"Toggle"
        values = "0"$0D"1"$0D"2"
      }
      teamindex: =
      {
        txt = "&"
        hint = "Team Index (-1 = no team)"
      }
    }
    game_team_master:form =
    {
      t_game_team_master = !
    }
    t_game_team_set:incl =
    {
      t_Targetname = !
      t_Targetx = !
      t_Master = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove On fire"
      }
    }
    game_team_set:form =
    {
      t_game_team_set = !
    }
    t_game_text:incl =
    {
      t_Targetname = !
      t_Master = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "All Players"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Only once"
      }
      target: =
      {
        txt = "&"
        hint = "Fire when done"
      }
      message: =
      {
        txt = "&"
        hint = "Message Text"
      }
      x: =
      {
        txt = "&"
        hint = "X (0 - 1.0 = left to right) (-1 centers)"
      }
      y: =
      {
        txt = "&"
        hint = "Y (0 - 1.0 = top to bottom) (-1 centers)"
      }
      effect: =
      {
        txt = "&"
        hint = "Text Effect"
        typ = "C"
        items = "Fade In/Out"$0D"Credits"$0D"Scan Out"
        values = "0"$0D"1"$0D"2"
      }
      color: =
      {
        txt = "&"
        hint = "Color1"
      }
      color2: =
      {
        txt = "&"
        hint = "Color2"
      }
      fadein: =
      {
        txt = "&"
        hint = "Fade in Time (or character scan time)"
      }
      fadeout: =
      {
        txt = "&"
        hint = "Fade Out Time"
      }
      holdtime: =
      {
        txt = "&"
        hint = "Hold Time"
      }
      fxtime: =
      {
        txt = "&"
        hint = "Scan time (scan effect only)"
      }
      channel: =
      {
        txt = "&"
        hint = "Text Channel"
        typ = "C"
        items = "Channel 1"$0D"Channel 2"$0D"Channel 3"$0D"Channel 4"
        values = "1"$0D"2"$0D"3"$0D"4"
      }
    }
    game_text:form =
    {
      t_game_text = !
    }
    t_game_zone_player:incl =
    {
      t_Targetname = !
      intarget: =
      {
        txt = "&"
        hint = "Target for IN players"
      }
      outtarget: =
      {
        txt = "&"
        hint = "Target for OUT players"
      }
      incount: =
      {
        txt = "&"
        hint = "Counter for IN players"
      }
      outcount: =
      {
        txt = "&"
        hint = "Counter for OUT players"
      }
    }
    game_zone_player:form =
    {
      t_game_zone_player = !
    }
    t_gibshooter:incl =
    {
      t_gibshooterbase = !
      m_iBloodColor: =
      {
        txt = "&"
        hint = "Blood color"
        typ = "C"
        items = "Don't Bleed"$0D"Red (human)"$0D"Yellow (alien)"
        values = "-1"$0D"0"$0D"195"
      }
    }
    gibshooter:form =
    {
      t_gibshooter = !
    }
    t_hud_sprite:incl =
    {
      t_Targetname = !
      model: =
      {
        txt = "&"
        hint = "Sprite name"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Color"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start on"
      }
    }
    hud_sprite:form =
    {
      t_hud_sprite = !
    }
    t_infodecal:incl =
    {
      t_Targetname = !
      t_Appearflags = !
      texture: =
      {
        txt = "&"
        typ = "ET"
        Cap = "texture..."
      }
    }
    infodecal:form =
    {
      t_infodecal = !
    }
    t_info_alias:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Reference while On"
      }
      netname: =
      {
        txt = "&"
        hint = "Reference while Off"
      }
      mode: =
      {
        txt = "&"
        hint = "Use Mode, 0= On/Off 1= list mode"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start Off"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Debug Mode"
      }
    }
    info_alias:form =
    {
      t_info_alias = !
    }
    t_info_bigmomma:incl =
    {
      bbox = '-24 -24 0 24 24 16'
      t_Targetname = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Run To Node"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Wait Indefinitely"
      }
      target: =
      {
        txt = "&"
        hint = "Next node"
      }
      radius: =
      {
        txt = "&"
        hint = "Radius"
      }
      reachdelay: =
      {
        txt = "&"
        hint = "Wait after approach"
      }
      killtarget: =
      {
        txt = "&"
        hint = "KillTarget"
      }
      reachtarget: =
      {
        txt = "&"
        hint = "Fire on approach"
      }
      reachsequence: =
      {
        txt = "&"
        hint = "Sequence on approach"
      }
      health: =
      {
        txt = "&"
        hint = "Health on approach"
      }
      presequence: =
      {
        txt = "&"
        hint = "Sequence before approach"
      }
    }
    info_bigmomma:form =
    {
      t_info_bigmomma = !
    }
    t_info_compile_parameters:incl =
    {
      bbox = '-8 -8 0 8 8 32'
      texdata: =
      {
        txt = "&"
        hint = "Texture Data Memory (in KB)"
      }
      estimate: =
      {
        txt = "&"
        hint = "Estimate Compile Times?"
        typ = "C"
        items = "Yes"$0D"No"
        values = "0"$0D"1"
      }
      bounce: =
      {
        txt = "&"
        hint = "Number of radiosity bounces"
      }
      ambient: =
      {
        txt = "&"
        hint = "Ambient world light (0.0 to 1.0, R G B)"
      }
      smooth: =
      {
        txt = "&"
        hint = "Smoothing threshold (in degrees)"
      }
      dscale: =
      {
        txt = "&"
        hint = "Direct Lighting Scale"
      }
      chop: =
      {
        txt = "&"
        hint = "Chop Size"
      }
      texchop: =
      {
        txt = "&"
        hint = "Texture Light Chop Size"
      }
      hullfile: =
      {
        txt = "&"
        hint = "Custom Hullfile"
      }
      priority: =
      {
        txt = "&"
        hint = "Priority Level"
        typ = "C"
        items = "Normal"$0D"High"$0D"Low"
        values = "0"$0D"1"$0D"-1"
      }
      wadautodetect: =
      {
        txt = "&"
        hint = "Wad Auto Detect"
        typ = "C"
        items = "Off"$0D"On"
        values = "0"$0D"1"
      }
      wadconfig: =
      {
        txt = "&"
        hint = "Custom Wad Configuration"
      }
      verbose: =
      {
        txt = "&"
        hint = "Verbose compile messages"
        typ = "C"
        items = "Off"$0D"On"
        values = "0"$0D"1"
      }
      noclipeconomy: =
      {
        txt = "&"
        hint = "Strip Uneeded Clipnodes?"
        typ = "C"
        items = "Yes"$0D"No"
        values = "1"$0D"0"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Run CSG"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = " No Clip"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = " Only Ents"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = " No Sky Clip"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Run BSP"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = " Leak Only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = " No Clip"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Run VIS"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = " Fast "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Run RAD"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4096"
        cap = " Sparse "
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8192"
        cap = " Circus Mode"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16384"
        cap = " Extra Mode "
      }
    }
    info_compile_parameters:form =
    {
      t_info_compile_parameters = !
    }
    t_info_group:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Alias to change when fired [LE]"
      }
      defaultmember: =
      {
        txt = "&"
        hint = "Default member prefix"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Debug Mode"
      }
    }
    info_group:form =
    {
      t_info_group = !
    }
    t_info_intermission:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Target = !
      t_Angles = !
      t_MoveWith = !
    }
    info_intermission:form =
    {
      t_info_intermission = !
    }
    t_info_landmark:incl =
    {
      t_Targetname = !
      t_MoveWith = !
    }
    info_landmark:form =
    {
      t_info_landmark = !
    }
    t_info_movewith:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "MoveWith when active"
      }
      netname: =
      {
        txt = "&"
        hint = "MoveWith when inactive"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start inactive"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Blockable"
      }
    }
    info_movewith:form =
    {
      t_info_movewith = !
    }
    t_info_node:incl =
    {
      bbox = '-2 -2 -2 2 2 2'
    }
    info_node:form =
    {
      t_info_node = !
    }
    t_info_node_air:incl =
    {
      bbox = '-32 -32 0 32 32 64'
    }
    info_node_air:form =
    {
      t_info_node_air = !
    }
    t_info_null:incl =
    {
      t_Targetname = !
    }
    info_null:form =
    {
      t_info_null = !
    }
    t_info_player_coop:incl =
    {
      t_PlayerClass = !
    }
    info_player_coop:form =
    {
      t_info_player_coop = !
    }
    t_info_player_deathmatch:incl =
    {
      t_PlayerClass = !
      t_Master = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Target"
      }
    }
    info_player_deathmatch:form =
    {
      t_info_player_deathmatch = !
    }
    t_info_player_start:incl =
    {
      t_PlayerClass = !
      t_MoveWith = !
      t_Sequence = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start with HEV"
      }
    }
    info_player_start:form =
    {
      t_info_player_start = !
    }
    t_info_target:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Use null.spr"
      }
    }
    info_target:form =
    {
      t_info_target = !
    }
    t_info_teleport_destination:incl =
    {
      bbox = '-8 -8 0 8 8 16'
      t_Targetname = !
      t_PlayerClass = !
      t_MoveWith = !
    }
    info_teleport_destination:form =
    {
      t_info_teleport_destination = !
    }
    t_info_texlights:incl =
    {
    }
    info_texlights:form =
    {
      t_info_texlights = !
    }
    t_item_airtank:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Weapon = !
      t_Targetx = !
    }
    item_airtank:form =
    {
      t_item_airtank = !
    }
    t_item_antidote:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Weapon = !
      t_Targetx = !
    }
    item_antidote:form =
    {
      t_item_antidote = !
    }
    t_item_battery:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Weapon = !
      t_Targetx = !
      model: =
      {
        txt = "&"
        hint = "Model (models/w_battery.mdl)"
      }
      skin: =
      {
        txt = "&"
        hint = "Skin"
      }
      body: =
      {
        txt = "&"
        hint = "Body"
      }
      noise: =
      {
        txt = "&"
        hint = "Sound (items/gunpickup2.wav)"
      }
      armorvalue: =
      {
        txt = "&"
        hint = "Charge by (0 = normal)"
      }
    }
    item_battery:form =
    {
      t_item_battery = !
    }
    t_item_flashlight:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Weapon = !
      t_Targetx = !
    }
    item_flashlight:form =
    {
      t_item_flashlight = !
    }
    t_item_healthkit:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Weapon = !
      t_Targetx = !
    }
    item_healthkit:form =
    {
      t_item_healthkit = !
    }
    t_item_longjump:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Weapon = !
      t_Targetx = !
    }
    item_longjump:form =
    {
      t_item_longjump = !
    }
    t_item_security:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Weapon = !
      t_Targetx = !
    }
    item_security:form =
    {
      t_item_security = !
    }
    t_item_suit:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Weapon = !
      t_Targetx = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Short Logon"
      }
    }
    item_suit:form =
    {
      t_item_suit = !
    }
    t_light:incl =
    {
      t_Light = !
      t_ZhltLights = !
      target: =
      {
        txt = "&"
        hint = "Target to shine at"
      }
      firetarget: =
      {
        txt = "&"
        hint = "Target to trigger"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Initially dark"
      }
    }
    light:form =
    {
      t_light = !
    }
    t_light_glow:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      frags: =
      {
        txt = "&"
        hint = "Glow Type"
        typ = "C"
        items = "Brightest"$0D"Flashlight"$0D"None"
        values = "2"$0D"1"$0D"0"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Initially dark"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Flare"
      }
    }
    light_glow:form =
    {
      t_light_glow = !
    }
    t_light_environment:incl =
    {
      t_Angles = !
      t_ZhltLights = !
      pitch: =
      {
        txt = "&"
        hint = "Pitch"
      }
      _light: =
      {
        txt = "&"
        hint = "Brightness"
      }
      _diffuse_light: =
      {
        txt = "&"
        hint = "Shadow colour"
      }
    }
    light_environment:form =
    {
      t_light_environment = !
    }
    t_light_spot:incl =
    {
      t_Target = !
      t_Light = !
      t_ZhltLights = !
      firetarget: =
      {
        txt = "&"
        hint = "Target to trigger"
      }
      _cone: =
      {
        txt = "&"
        hint = "Inner (bright) angle"
      }
      _cone2: =
      {
        txt = "&"
        hint = "Outer (fading) angle"
      }
      pitch: =
      {
        txt = "&"
        hint = "Pitch"
      }
      _sky: =
      {
        txt = "&"
        hint = "Is Sky"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Initially dark"
      }
    }
    light_spot:form =
    {
      t_light_spot = !
    }
    t_momentary_door:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_Master = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      t_Global = !
      speed: =
      {
        txt = "&"
        hint = "Speed"
        typ = "C"
        items = "No limit"
        values = "0"
      }
      movesnd: =
      {
        txt = "&"
        hint = "Move Sound"
        typ = "C"
        items = "No Sound"$0D"Servo (Sliding) (1)"$0D"Pneumatic (Sliding) (2)"$0D
         "Pneumatic (Rolling) (3)"$0D"Vacuum (4)"$0D"Power Hydraulic (5)"$0D"L"
         "arge Rollers (6)"$0D"Track Door (7)"$0D"Snappy Metal Door (8)"$0D"Sq"
         "ueaky 1 (9)"$0D"Squeaky 2 (10)"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"
      }
      stopsnd: =
      {
        txt = "&"
        hint = "Stop sound"
        typ = "C"
        items = "No Sound"$0D"Clang with brake"$0D"Clang Reverb"$0D"Ratchet st"
         "op"$0D"Chunk"$0D"Light Airbrake"$0D"Metal Slide Stop"$0D"Metal Lock "
         "Stop"$0D"Snappy Metal Stop"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
      lip: =
      {
        txt = "&"
        hint = "Lip"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Starts Open"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
    }
    momentary_door:form =
    {
      t_momentary_door = !
    }
    t_locus_alias:incl =
    {
      bbox = '-8 -8 -8 8 8 8'
      t_Targetname = !
      netname: =
      {
        txt = "&"
        hint = "Initial value"
      }
    }
    locus_alias:form =
    {
      t_locus_alias = !
    }
    t_locus_beam:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      m_iszStart: =
      {
        txt = "&"
        hint = "Start at (blank = here)"
      }
      m_iszEnd: =
      {
        txt = "&"
        hint = "End at (blank = here)"
      }
      impulse: =
      {
        txt = "&"
        hint = "Start & End are"
        typ = "C"
        items = "Entity & Entity [LE LE]"$0D"Entity & Position [LE LP]"$0D"Pos"
         "ition & Position [LP LP]"$0D"Position & Direction [LP LV]"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      m_iszSprite: =
      {
        txt = "&"
        hint = "Sprite Name"
      }
      renderamt: =
      {
        txt = "&"
        hint = "Brightness (1 - 255)"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Color (R G B)"
      }
      m_iWidth: =
      {
        txt = "&"
        hint = "Width"
      }
      m_iDistortion: =
      {
        txt = "&"
        hint = "Distortion ('noise')"
      }
      m_fFrame: =
      {
        txt = "&"
        hint = "Start frame"
      }
      m_iScrollRate: =
      {
        txt = "&"
        hint = "Scroll rate"
      }
      m_fDuration: =
      {
        txt = "&"
        hint = "Duration (0 = unlimited)"
      }
      m_fDamage: =
      {
        txt = "&"
        hint = "Damage amount"
      }
      m_iDamageType: =
      {
        txt = "&"
        hint = "Damage type"
        typ = "C"
        items = "Energy Beam"$0D"Fracture"$0D"Blood Loss"$0D"Lacerations"$0D"B"
         "urning"$0D"Freezing"$0D"Internal bleeding"$0D"Drowning"$0D"Biohazard"
         $0D"Poison (duration)"$0D"Radiation"$0D"Hazardous chemical"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"512"$0D"16384"$0D"65536"
         $0D"131072"$0D"262144"$0D"1048576"
      }
      m_iszTargetName: =
      {
        txt = "&"
        hint = "Name of children"
      }
      target: =
      {
        txt = "&"
        hint = "Fire on spawn (locus = child)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Ring"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "StartSparks"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "EndSparks"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Decal End"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Fade Start"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Fade End"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Draw Solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Draw Sine"
      }
    }
    locus_beam:form =
    {
      t_locus_beam = !
    }
    t_locus_variable:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      m_iszPosition: =
      {
        txt = "&"
        hint = "Position to record  [LP]"
      }
      m_iszVelocity: =
      {
        txt = "&"
        hint = "Velocity to record [LV]"
      }
      m_iszRatio: =
      {
        txt = "&"
        hint = "Ratio to record [LR]"
      }
      m_iszTargetname: =
      {
        txt = "&"
        hint = "Child's name (blank = no child)"
      }
      m_iszFireOnSpawn: =
      {
        txt = "&"
        hint = "Fire on spawn (locus = child)"
      }
      m_fDuration: =
      {
        txt = "&"
        hint = "Removed after time (secs)"
      }
    }
    locus_variable:form =
    {
      t_locus_variable = !
    }
    t_momentary_rot_button:incl =
    {
      t_Targetname = !
      t_Target = !
      t_Angles = !
      t_Master = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      speed: =
      {
        txt = "&"
        hint = "Speed"
      }
      axes: =
      {
        txt = "&"
        hint = "Axis Multipliers (Y Z X)"
      }
      sounds: =
      {
        txt = "&"
        hint = "Sounds"
        typ = "C"
        items = "None"$0D"Big zap & Warmup"$0D"Access Denied"$0D"Access Grante"
         "d"$0D"Quick Combolock"$0D"Power Deadbolt 1"$0D"Power Deadbolt 2"$0D"P"
         "lunger"$0D"Small zap"$0D"Keycard Sound"$0D"Squeaky"$0D"Squeaky Pneum"
         "atic"$0D"Ratchet Groan"$0D"Clean Ratchet"$0D"Gas Clunk"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"2"
         "1"$0D"22"$0D"23"$0D"24"$0D"25"
      }
      distance: =
      {
        txt = "&"
        hint = "Distance (deg)"
      }
      returnspeed: =
      {
        txt = "&"
        hint = "Auto-return speed"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Door Hack"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Not useable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Target at degrees"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Auto Return"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "X Axis"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Y Axis"
      }
      _minlight: =
      {
        txt = "&"
        hint = "_minlight"
      }
      angles: =
      {
        txt = "&"
        hint = "Pitch Yaw Roll (Y Z X)"
      }
    }
    momentary_rot_button:form =
    {
      t_momentary_rot_button = !
    }
    t_monster_baby:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_baby:form =
    {
      t_monster_baby = !
    }
    t_monster_booksimon:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      t_Sequence = !
      message: =
      {
        txt = "&"
        hint = "Name of boss healthbar monster"
      }
      frags: =
      {
        txt = "&"
        hint = "SP/Coop"
        typ = "C"
        items = "Coop"$0D"SP"
        values = "0"$0D"1"
      }
      iuser2: =
      {
        txt = "&"
        hint = "Distance before hides"
      }
      iuser4: =
      {
        txt = "&"
        hint = "Weapon"
        typ = "C"
        items = "Shotgun"$0D"Glock"$0D"TMP"
        values = "0"$0D"1"$0D"2"
      }
    }
    monster_booksimon:form =
    {
      t_monster_booksimon = !
    }
    t_monster_booksimonsledgehammer:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      t_Sequence = !
      message: =
      {
        txt = "&"
        hint = "Name of boss healthbar monster"
      }
    }
    monster_booksimonsledgehammer:form =
    {
      t_monster_booksimonsledgehammer = !
    }
    t_monster_bosschainsaw:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_bosschainsaw:form =
    {
      t_monster_bosschainsaw = !
    }
    t_monster_child:incl =
    {
      bbox = '-10 -10 0 10 10 60'
      t_Monster = !
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Burning"
      }
    }
    monster_child:form =
    {
      t_monster_child = !
    }
    t_monster_crab:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Monster = !
    }
    monster_crab:form =
    {
      t_monster_crab = !
    }
    t_monster_crazybitch:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_crazybitch:form =
    {
      t_monster_crazybitch = !
    }
    t_monster_custom:incl =
    {
      bbox = '-10 -10 0 10 10 60'
      t_Monster = !
      attacksound1: =
      {
        txt = "&"
        hint = "Attack 1 sound"
      }
      attacksound2: =
      {
        txt = "&"
        hint = "Attack 2 sound"
      }
      alertsound1: =
      {
        txt = "&"
        hint = "Alert 1 sound"
      }
      alertsound2: =
      {
        txt = "&"
        hint = "Alert 2 sound"
      }
      painsound1: =
      {
        txt = "&"
        hint = "Pain 1 sound"
      }
      painsound2: =
      {
        txt = "&"
        hint = "Pain 2 sound"
      }
      deathsound1: =
      {
        txt = "&"
        hint = "Death 1 sound"
      }
      deathsound2: =
      {
        txt = "&"
        hint = "Death 2 sound"
      }
      attackhitsound1: =
      {
        txt = "&"
        hint = "Body hit 1 sound"
      }
      attackhitsound2: =
      {
        txt = "&"
        hint = "Body hit 2 sound"
      }
      attackhitwallsound1: =
      {
        txt = "&"
        hint = "Wall hit 1 sound"
      }
      attackhitwallsound2: =
      {
        txt = "&"
        hint = "Wall hit 2 sound"
      }
      attackmisssound1: =
      {
        txt = "&"
        hint = "Attack miss 1 sound"
      }
      attackmisssound2: =
      {
        txt = "&"
        hint = "Attack miss 2 sound"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Attack event 1 dmg"
      }
      iuser2: =
      {
        txt = "&"
        hint = "Attack event 2 dmg"
      }
      iuser3: =
      {
        txt = "&"
        hint = "Attack event 3 dmg"
      }
      fuser1: =
      {
        txt = "&"
        hint = "Hurt by"
        typ = "C"
        items = "All"$0D"Only bullets"$0D"Only melee"
        values = "0"$0D"1"$0D"2"
      }
    }
    monster_custom:form =
    {
      t_monster_custom = !
    }
    t_monster_doctorboss:incl =
    {
      bbox = '-16 -16 -36 16 16 36'
      t_Monster = !
      target: =
      {
        txt = "&"
        hint = "Trigger when killed"
      }
      message: =
      {
        txt = "&"
        hint = "Solid Damage Box"
      }
      sequence: =
      {
        txt = "&"
        hint = "Animation Sequence (editor)"
        typ = "C"
        items = "Idle"$0D"Box 1 hide"$0D"Box 1 get up"$0D"Box 1 shoot"$0D"Box "
         "1 get back"$0D"Box 1 to box 2"$0D"Box 2 hide"$0D"Box 2 get up"$0D"Bo"
         "x 2 shoot"$0D"Box 2 get back"$0D"Box 2 to box 1"$0D"Box 2 to box 3"$0D
         "Box 3 hide"$0D"Box 3 get up"$0D"Box 3 shoot"$0D"Box 3 get back"$0D"B"
         "ox 3 to box 2"$0D"Box 3 to box 4"$0D"Box 4 hide"$0D"Box 4 get up"$0D
         "Box 4 shoot"$0D"Box 4 get back"$0D"Box 4 to box 3"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"
      }
    }
    monster_doctorboss:form =
    {
      t_monster_doctorboss = !
    }
    t_monster_faceless:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_faceless:form =
    {
      t_monster_faceless = !
    }
    t_monster_facelessv:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_facelessv:form =
    {
      t_monster_facelessv = !
    }
    t_monster_faster:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_faster:form =
    {
      t_monster_faster = !
    }
    t_monster_flygare:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_flygare:form =
    {
      t_monster_flygare = !
    }
    t_monster_furniture:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_furniture:form =
    {
      t_monster_furniture = !
    }
    t_monster_generic:incl =
    {
      bbox = '-16 -16 -36 16 16 36'
      t_Monster = !
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Not solid"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Head Controller"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Player model"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Invulnerable"
      }
      model: =
      {
        txt = "&"
        hint = "model"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      size: =
      {
        txt = "&"
        hint = "Size (X Y Z)"
      }
      body: =
      {
        txt = "&"
        hint = "Body"
      }
      health: =
      {
        txt = "&"
        hint = "Initial Health"
      }
      m_bloodColor: =
      {
        txt = "&"
        hint = "Blood Color"
        typ = "C"
        items = "Don't Bleed"$0D"Red (Human)"$0D"Yellow (Alien)"
        values = "-1"$0D"0"$0D"195"
      }
      m_iszGibModel: =
      {
        txt = "&"
        hint = "Gib Model"
      }
      chestnums: =
      {
        txt = "&"
        hint = "Has Chest Nums?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
    }
    monster_generic:form =
    {
      t_monster_generic = !
    }
    t_monster_generic_dead:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Targetname = !
      t_Angles = !
      t_Appearflags = !
      t_RenderFields = !
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Player model"
      }
      netname: =
      {
        txt = "&"
        hint = "Sequence name"
      }
      frags: =
      {
        txt = "&"
        hint = "Death Type"
        typ = "C"
        items = "Just dead"$0D"Fell backwards"$0D"Fell forwards"$0D"Died viole"
         "ntly"$0D"Head shot"$0D"Chest shot"$0D"Gut shot"$0D"Shot in the back"
        values = "36"$0D"37"$0D"38"$0D"39"$0D"66"$0D"67"$0D"68"$0D"69"
      }
      body: =
      {
        txt = "&"
        hint = "Body"
      }
      m_bloodColor: =
      {
        txt = "&"
        hint = "Blood Color"
        typ = "C"
        items = "Don't Bleed"$0D"Red (Human)"$0D"Yellow (Alien)"
        values = "-1"$0D"0"$0D"195"
      }
      m_iszGibModel: =
      {
        txt = "&"
        hint = "Gib Model"
      }
    }
    monster_generic_dead:form =
    {
      t_monster_generic_dead = !
    }
    t_monster_krypande:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      body: =
      {
        txt = "&"
        hint = "Body"
        typ = "C"
        items = "Random"$0D"randigman"$0D"goretex"$0D"jeans"
        values = "-1"$0D"0"$0D"1"$0D"2"
      }
    }
    monster_krypande:form =
    {
      t_monster_krypande = !
    }
    t_monster_nerd:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_nerd:form =
    {
      t_monster_nerd = !
    }
    t_monster_rcrazy:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_rcrazy:form =
    {
      t_monster_rcrazy = !
    }
    t_monster_roofboss:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_roofboss:form =
    {
      t_monster_roofboss = !
    }
    t_monster_ruben:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_ruben:form =
    {
      t_monster_ruben = !
    }
    t_monster_sawcrazy:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_sawcrazy:form =
    {
      t_monster_sawcrazy = !
    }
    t_monster_sewerboss:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_sewerboss:form =
    {
      t_monster_sewerboss = !
    }
    t_monster_sewmo:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Lie in water"
      }
    }
    monster_sewmo:form =
    {
      t_monster_sewmo = !
    }
    t_monster_spitter:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      target: =
      {
        txt = "&"
        hint = "Gay to trigger when he appears"
      }
    }
    monster_spitter:form =
    {
      t_monster_spitter = !
    }
    t_monster_taller:incl =
    {
      bbox = '-32 -32 0 32 32 168'
      t_Monster = !
    }
    monster_taller:form =
    {
      t_monster_taller = !
    }
    t_monster_target:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_MoveWith = !
      frags: =
      {
        txt = "&"
        hint = "When active, count as:"
        typ = "C"
        items = "Ignored"$0D"Scientist"$0D"Barney"$0D"Human Military"$0D"Alien"
         " Military"$0D"Other Alien"$0D"Headcrab"$0D"Bullsquid"$0D"Faction A"$0D
         "Faction B"$0D"Faction C"
        values = "0"$0D"3"$0D"11"$0D"4"$0D"5"$0D"7"$0D"8"$0D"9"$0D"14"$0D"15"$0D
         "16"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start inactive"
      }
    }
    monster_target:form =
    {
      t_monster_target = !
    }
    t_monster_slowerstuck:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_slowerstuck:form =
    {
      t_monster_slowerstuck = !
    }
    t_monster_slower:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      body: =
      {
        txt = "&"
        hint = "Body"
        typ = "C"
        items = "Random"$0D"randigman"$0D"goretex"$0D"jeans"
        values = "-1"$0D"0"$0D"1"$0D"2"
      }
      sequence: =
      {
        txt = "&"
        hint = "Animation Sequence (editor)"
        typ = "C"
        items = "idle1"$0D"turn left"$0D"turn right"$0D"flinch small"$0D"flinc"
         "h"$0D"big flinch"$0D"getup"$0D"falling"$0D"attack1"$0D"attack2"$0D"w"
         "alk"$0D"laflinch"$0D"raflinch"$0D"llflinch"$0D"rlflinch"$0D"dieheads"
         "hot"$0D"dieheadshot2"$0D"diesimple"$0D"dieback"$0D"dieforward"$0D"pa"
         "use"$0D"bust through wall"$0D"kick punnch wall"$0D"bust window"$0D"s"
         "oda"$0D"slide idle"$0D"slide wall"$0D"ventclimbidle"$0D"vent climb"$0D
         "deadidle"$0D"dead wall"$0D"freaksitdie"$0D"freaksit"$0D"eatbodytable"
         $0D"eatbody"$0D"eatbodystand"$0D"ripdoor"$0D"pull Scientist"$0D"eatin"
         "g"$0D"eat to stand"$0D"vent z idle"$0D"vent c1a3"$0D"haul zombie"$0D
         "c2a3 snack getup"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"$0D"29"$0D
         "30"$0D"31"$0D"32"$0D"33"$0D"34"$0D"35"$0D"36"$0D"37"$0D"38"$0D"39"$0D
         "40"$0D"41"$0D"42"$0D"43"
      }
    }
    monster_slower:form =
    {
      t_monster_slower = !
    }
    t_monster_slower3:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      body: =
      {
        txt = "&"
        hint = "Body"
        typ = "C"
        items = "Random"$0D"randigman"$0D"goretex"$0D"jeans"
        values = "-1"$0D"0"$0D"1"$0D"2"
      }
      sequence: =
      {
        txt = "&"
        hint = "Animation Sequence (editor)"
        typ = "C"
        items = "idle1"$0D"turn left"$0D"turn right"$0D"flinch small"$0D"flinc"
         "h"$0D"big flinch"$0D"getup"$0D"falling"$0D"attack1"$0D"attack2"$0D"w"
         "alk"$0D"laflinch"$0D"raflinch"$0D"llflinch"$0D"rlflinch"$0D"dieheads"
         "hot"$0D"dieheadshot2"$0D"diesimple"$0D"dieback"$0D"dieforward"$0D"pa"
         "use"$0D"bust through wall"$0D"kick punnch wall"$0D"bust window"$0D"s"
         "oda"$0D"slide idle"$0D"slide wall"$0D"ventclimbidle"$0D"vent climb"$0D
         "deadidle"$0D"dead wall"$0D"freaksitdie"$0D"freaksit"$0D"eatbodytable"
         $0D"eatbody"$0D"eatbodystand"$0D"ripdoor"$0D"pull Scientist"$0D"eatin"
         "g"$0D"eat to stand"$0D"vent z idle"$0D"vent c1a3"$0D"haul zombie"$0D
         "c2a3 snack getup"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"$0D"29"$0D
         "30"$0D"31"$0D"32"$0D"33"$0D"34"$0D"35"$0D"36"$0D"37"$0D"38"$0D"39"$0D
         "40"$0D"41"$0D"42"$0D"43"
      }
    }
    monster_slower3:form =
    {
      t_monster_slower3 = !
    }
    t_monster_sawrunner:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      body: =
      {
        txt = "&"
        hint = "Body"
        typ = "C"
        items = "Random"$0D"randigman"$0D"goretex"$0D"jeans"
        values = "-1"$0D"0"$0D"1"$0D"2"
      }
      sequence: =
      {
        txt = "&"
        hint = "Animation Sequence (editor)"
        typ = "C"
        items = "idle1"$0D"turn left"$0D"turn right"$0D"flinch small"$0D"flinc"
         "h"$0D"big flinch"$0D"getup"$0D"falling"$0D"attack1"$0D"attack2"$0D"w"
         "alk"$0D"laflinch"$0D"raflinch"$0D"llflinch"$0D"rlflinch"$0D"dieheads"
         "hot"$0D"dieheadshot2"$0D"diesimple"$0D"dieback"$0D"dieforward"$0D"pa"
         "use"$0D"bust through wall"$0D"kick punnch wall"$0D"bust window"$0D"s"
         "oda"$0D"slide idle"$0D"slide wall"$0D"ventclimbidle"$0D"vent climb"$0D
         "deadidle"$0D"dead wall"$0D"freaksitdie"$0D"freaksit"$0D"eatbodytable"
         $0D"eatbody"$0D"eatbodystand"$0D"ripdoor"$0D"pull Scientist"$0D"eatin"
         "g"$0D"eat to stand"$0D"vent z idle"$0D"vent c1a3"$0D"haul zombie"$0D
         "c2a3 snack getup"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"$0D"29"$0D
         "30"$0D"31"$0D"32"$0D"33"$0D"34"$0D"35"$0D"36"$0D"37"$0D"38"$0D"39"$0D
         "40"$0D"41"$0D"42"$0D"43"
      }
    }
    monster_sawrunner:form =
    {
      t_monster_sawrunner = !
    }
    t_monster_stranger:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_stranger:form =
    {
      t_monster_stranger = !
    }
    t_monster_suicider:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      iuser1: =
      {
        txt = "&"
        hint = "Weapon"
        typ = "C"
        items = "Glock"$0D"P345"
        values = "0"$0D"1"
      }
      fuser1: =
      {
        txt = "&"
        hint = "Multiply shoot dmg by"
      }
    }
    monster_suicider:form =
    {
      t_monster_suicider = !
    }
    t_monster_watro:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
    }
    monster_watro:form =
    {
      t_monster_watro = !
    }
    t_monstermaker:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_MoveWith = !
      monsterbody: =
      {
        txt = "&"
        hint = "Body of monster"
      }
      model: =
      {
        txt = "&"
        hint = "Custom model"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      keyscript: =
      {
        txt = "&"
        hint = "Script (if item_key)"
      }
      noise: =
      {
        txt = "&"
        hint = "Position to place monster at [LP]"
      }
      noise1: =
      {
        txt = "&"
        hint = "Offset from position of monster [LV]"
      }
      noise2: =
      {
        txt = "&"
        hint = "Angles of monster [LV]"
      }
      noise3: =
      {
        txt = "&"
        hint = "Velocity of monster [LV]"
      }
      TriggerTarget: =
      {
        txt = "&"
        hint = "TriggerTarget"
      }
      TriggerCondition: =
      {
        txt = "&"
        hint = "Trigger Condition"
        typ = "C"
        items = "No Trigger"$0D"See Player, Mad at Player"$0D"Take Damage"$0D"5"
         "0% Health Remaining"$0D"Death"$0D"Hear World"$0D"Hear Player"$0D"Hea"
         "r Combat"$0D"See Player Unconditional"$0D"See Player, Not In Combat"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"7"$0D"8"$0D"9"$0D"10"$0D"11"
      }
      target: =
      {
        txt = "&"
        hint = "Target On Release"
      }
      monstertype: =
      {
        txt = "&"
        hint = "Monster Type"
      }
      netname: =
      {
        txt = "&"
        hint = "Name of Spawned Monsters"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start ON"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Force fade"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Cyclic"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "MonsterClip"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Leave corpses"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Force Spawn"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Survival Mode"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Don't Drop Gun"
      }
      monstercount: =
      {
        txt = "&"
        hint = "Number of Monsters"
        typ = "C"
        items = "Unlimited"
        values = "-1"
      }
      delay: =
      {
        txt = "&"
        hint = "Time between spawns"
      }
      spawndelay: =
      {
        txt = "&"
        hint = "Delay before release"
      }
      m_imaxlivechildren: =
      {
        txt = "&"
        hint = "Max live children"
      }
      m_iClass: =
      {
        txt = "&"
        hint = "Monsters behave as"
        typ = "C"
        items = "Normal"$0D"Scientist"$0D"Barney"$0D"Human Military"$0D"Machin"
         "e (Human Military)"$0D"Alien Military"$0D"Other Alien"$0D"Headcrab"$0D
         "Bullsquid"$0D"Faction A"$0D"Faction B"$0D"Faction C"
        values = "0"$0D"3"$0D"11"$0D"4"$0D"1"$0D"5"$0D"7"$0D"8"$0D"9"$0D"14"$0D
         "15"$0D"16"
      }
      m_iPlayerReact: =
      {
        txt = "&"
        hint = "Monsters reaction to player"
        typ = "C"
        items = "Normal"$0D"Ignore"$0D"Friendly until hurt"$0D"Friendly unless"
         " provoked"$0D"Enemy"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
    }
    monstermaker:form =
    {
      t_monstermaker = !
    }
    t_motion_manager:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Target to affect [LE]"
      }
      m_iszPosition: =
      {
        txt = "&"
        hint = "Position (blank = no change)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Debug"
      }
    }
    motion_manager:form =
    {
      t_motion_manager = !
    }
    t_multisource:incl =
    {
      t_Targetname = !
      t_Target = !
      netname: =
      {
        txt = "&"
        hint = "Target on turning off"
      }
      globalstate: =
      {
        txt = "&"
        hint = "Global State Master"
      }
    }
    multisource:form =
    {
      t_multisource = !
    }
    t_multi_alias:incl =
    {
      t_Targetname = !
      m_iMode: =
      {
        txt = "&"
        hint = "Mode"
        typ = "C"
        items = "Normal"$0D"Choose one (weighted)"$0D"% chance for each"
        values = "0"$0D"1"$0D"2"
      }
    }
    multi_alias:form =
    {
      t_multi_alias = !
    }
    t_multi_manager:incl =
    {
      t_Targetname = !
      t_Master = !
      wait: =
      {
        txt = "&"
        hint = "Time offset"
      }
      maxwait: =
      {
        txt = "&"
        hint = "Max Time offset (Random)"
      }
      triggerstate: =
      {
        txt = "&"
        hint = "Trigger to send"
        typ = "C"
        items = "Toggle"$0D"On"$0D"Off"$0D"Kill"$0D"Same as input"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      mode: =
      {
        txt = "&"
        hint = "Mode"
        typ = "C"
        items = "Normal (time offset)"$0D"Choose one (weighted)"$0D"% chance f"
         "or each"$0D"No delay (ordered)"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      m_iszThreadName: =
      {
        txt = "&"
        hint = "Name of threads"
      }
      m_iszLocusThread: =
      {
        txt = "&"
        hint = "Trigger on spawn (locus = thread)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Multi-threaded"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Loop"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Once only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Start on"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Debug mode"
      }
    }
    multi_manager:form =
    {
      t_multi_manager = !
    }
    t_multi_watcher:incl =
    {
      t_Targetname = !
      m_fLogic: =
      {
        txt = "&"
        hint = "Logical test"
        typ = "C"
        items = "All (AND)"$0D"Not all (NAND)"$0D"At least one (OR)"$0D"None ("
         "NOR)"$0D"Exactly one (XOR)"$0D"Any number but one (XNOR)"
        values = "0"$0D"2"$0D"1"$0D"3"$0D"4"$0D"5"
      }
      target: =
      {
        txt = "&"
        hint = "Entity to notify"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Send 'Toggle'"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "NOT 'On'"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "'Off'"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "'Turn On'"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "'Turn Off'"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "'In Use'"
      }
    }
    multi_watcher:form =
    {
      t_multi_watcher = !
    }
    t_path_corner:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Wait for retrigger"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Teleport"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Fire once"
      }
      target: =
      {
        txt = "&"
        hint = "Next stop target"
      }
      message: =
      {
        txt = "&"
        hint = "Fire on Pass"
      }
      wait: =
      {
        txt = "&"
        hint = "Wait here (secs)"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed (0 = no change)"
      }
      armortype: =
      {
        txt = "&"
        hint = "Meaning of 'Speed'"
        typ = "C"
        items = "Set new speed"$0D"Increase speed by"$0D"Time to next corner"
        values = "0"$0D"1"$0D"2"
      }
      turnspeed: =
      {
        txt = "&"
        hint = "Turn speed (Y Z X)"
      }
      armorvalue: =
      {
        txt = "&"
        hint = "Match Angle"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
    }
    path_corner:form =
    {
      t_path_corner = !
    }
    t_path_track:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Disabled"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Fire once"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Branch Reverse"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Disable train"
      }
      target: =
      {
        txt = "&"
        hint = "Next stop target"
      }
      altpath: =
      {
        txt = "&"
        hint = "Branch Path"
      }
      message: =
      {
        txt = "&"
        hint = "Fire on Pass"
      }
      netname: =
      {
        txt = "&"
        hint = "Fire on dead end"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed (0 = no change)"
      }
      armortype: =
      {
        txt = "&"
        hint = "Meaning of 'Speed'"
        typ = "C"
        items = "Set current speed"$0D"Set master speed"$0D"Increase speed by"$0D
         "Time to next corner"
        values = "0"$0D"3"$0D"1"$0D"2"
      }
      turnspeed: =
      {
        txt = "&"
        hint = "Turn speed (Y Z X)"
      }
      frags: =
      {
        txt = "&"
        hint = "Meaning of 'Turn Speed'"
        typ = "C"
        items = "Set current turn speed"$0D"Set master turn speed"$0D"Back to "
         "normal"
        values = "0"$0D"1"$0D"2"
      }
      armorvalue: =
      {
        txt = "&"
        hint = "Match Angle"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
    }
    path_track:form =
    {
      t_path_track = !
    }
    t_player_freeze:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      delay: =
      {
        txt = "&"
        hint = "Duration (0 = until retriggered)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Affect locus"
      }
    }
    player_freeze:form =
    {
      t_player_freeze = !
    }
    t_player_loadsaved:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      duration: =
      {
        txt = "&"
        hint = "Fade Duration (seconds)"
      }
      holdtime: =
      {
        txt = "&"
        hint = "Hold Fade (seconds)"
      }
      renderamt: =
      {
        txt = "&"
        hint = "Fade Alpha"
      }
      rendercolor: =
      {
        txt = "&"
        hint = "Fade Color (R G B)"
      }
      messagetime: =
      {
        txt = "&"
        hint = "Show Message delay"
      }
      message: =
      {
        txt = "&"
        hint = "Message To Display"
      }
      loadtime: =
      {
        txt = "&"
        hint = "Reload delay"
      }
    }
    player_loadsaved:form =
    {
      t_player_loadsaved = !
    }
    t_player_weaponstrip:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      bullets: =
      {
        txt = "&"
        hint = "Take 9mm bullets"
        typ = "C"
        items = "All"$0D"All except clips"$0D"Empty clips only"$0D"None"
        values = "0"$0D"-2"$0D"-1"$0D"-3"
      }
      magnum: =
      {
        txt = "&"
        hint = "Take 357 bullets"
        typ = "C"
        items = "All"$0D"All except clip"$0D"Empty clip only"$0D"None"
        values = "0"$0D"-2"$0D"-1"$0D"-3"
      }
      shotgun: =
      {
        txt = "&"
        hint = "Take shotgun ammo"
        typ = "C"
        items = "All"$0D"All except clip"$0D"Empty clip only"$0D"None"
        values = "0"$0D"-2"$0D"-1"$0D"-3"
      }
      crossbow: =
      {
        txt = "&"
        hint = "Take crossbow bolts"
        typ = "C"
        items = "All"$0D"All except clip"$0D"Empty clip only"$0D"None"
        values = "0"$0D"-2"$0D"-1"$0D"-3"
      }
      argrenades: =
      {
        txt = "&"
        hint = "Take AR grenades"
        typ = "C"
        items = "All"$0D"None"
        values = "0"$0D"-1"
      }
      rockets: =
      {
        txt = "&"
        hint = "Take rockets"
        typ = "C"
        items = "All"$0D"All except clip"$0D"Empty clip only"$0D"None"
        values = "0"$0D"-2"$0D"-1"$0D"-3"
      }
      uranium: =
      {
        txt = "&"
        hint = "Take uranium ammo"
        typ = "C"
        items = "All"$0D"All except clips"$0D"Empty clips only"$0D"None"
        values = "0"$0D"-2"$0D"-1"$0D"-3"
      }
      satchels: =
      {
        txt = "&"
        hint = "Take satchel charges"
        typ = "C"
        items = "All"$0D"None"
        values = "0"$0D"-1"
      }
      snarks: =
      {
        txt = "&"
        hint = "Take snarks"
        typ = "C"
        items = "All"$0D"None"
        values = "0"$0D"-1"
      }
      tripmines: =
      {
        txt = "&"
        hint = "Take tripmines"
        typ = "C"
        items = "All"$0D"None"
        values = "0"$0D"-1"
      }
      handgrenades: =
      {
        txt = "&"
        hint = "Take handgrenades"
        typ = "C"
        items = "All"$0D"None"
        values = "0"$0D"-1"
      }
      hornetgun: =
      {
        txt = "&"
        hint = "Take Hornet Gun"
        typ = "C"
        items = "Gun & ammo"$0D"Ammo"$0D"None"
        values = "0"$0D"-3"$0D"-1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove suit"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Leave crowbar"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Leave glock"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Leave 357"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Leave mp5"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Leave crossbow"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Leave shotgun"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "Leave rpg"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Leave gauss"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Leave egon"
      }
    }
    player_weaponstrip:form =
    {
      t_player_weaponstrip = !
    }
    t_scripted_action:incl =
    {
      t_Script = !
      m_iszMoveTarget: =
      {
        txt = "&"
        hint = "Move target (blank = this) [LE]"
      }
      m_fMoveTo: =
      {
        txt = "&"
        hint = "Move to Position"
        typ = "C"
        items = "No (don't turn)"$0D"Walk"$0D"Run"$0D"No - Only turn"$0D"Insta"
         "nt move + turn"$0D"No - Instant turn"
        values = "0"$0D"1"$0D"2"$0D"5"$0D"4"$0D"6"
      }
      m_iszAttack: =
      {
        txt = "&"
        hint = "Entity to attack (blank = this) [LE]"
      }
      m_fTurnType: =
      {
        txt = "&"
        hint = "Turn mode"
        typ = "C"
        items = "Match Angle"$0D"Turn to face"$0D"Don't Turn"
        values = "0"$0D"1"$0D"2"
      }
      m_fAction: =
      {
        txt = "&"
        hint = "Action to perform"
        typ = "C"
        items = "Ranged Attack"$0D"Ranged Attack 2"$0D"Melee Attack"$0D"Melee "
         "Attack 2"$0D"Special Attack"$0D"Special Attack 2"$0D"Reload"$0D"Jump"
         $0D"No action"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Override AI"
      }
    }
    scripted_action:form =
    {
      t_scripted_action = !
    }
    t_scripted_sentence:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Targetname = !
      t_Targetx = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Fire Once"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Followers Only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Interrupt Speech"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "Concurrent"
      }
      sentence: =
      {
        txt = "&"
        hint = "Sentence Name"
      }
      entity: =
      {
        txt = "&"
        hint = "Target Monster (blank for HEV) [LE]"
      }
      duration: =
      {
        txt = "&"
        hint = "Sentence Time"
      }
      radius: =
      {
        txt = "&"
        hint = "Search Radius"
      }
      refire: =
      {
        txt = "&"
        hint = "Delay Before Refire"
      }
      listener: =
      {
        txt = "&"
        hint = "Listener Name/Class"
      }
      volume: =
      {
        txt = "&"
        hint = "Volume 0-10"
      }
      attenuation: =
      {
        txt = "&"
        hint = "Sound Radius"
        typ = "C"
        items = "Small Radius"$0D"Medium Radius"$0D"Large  Radius"$0D"Play Eve"
         "rywhere"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
    }
    scripted_sentence:form =
    {
      t_scripted_sentence = !
    }
    t_scripted_sequence:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_ScriptSequence = !
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Override AI"
      }
    }
    scripted_sequence:form =
    {
      t_scripted_sequence = !
    }
    t_scripted_tanksequence:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      m_iszEntity: =
      {
        txt = "&"
        hint = "Tank to affect"
      }
      m_iTurn: =
      {
        txt = "&"
        hint = "Turn to"
        typ = "C"
        items = "Don't turn"$0D"Match angle"$0D"Face sequence"$0D"Face enemy"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      m_iszEnemy: =
      {
        txt = "&"
        hint = "Enemy to face"
      }
      m_iShoot: =
      {
        txt = "&"
        hint = "Fire gun"
        typ = "C"
        items = "Don't fire"$0D"Once (at end)"$0D"Constantly"$0D"While facing "
         "target"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      m_iUntil: =
      {
        txt = "&"
        hint = "Halt condition"
        typ = "C"
        items = "None"$0D"Tank faces target"$0D"Enemy dies"
        values = "0"$0D"1"$0D"2"
      }
      target: =
      {
        txt = "&"
        hint = "Trigger on halt"
      }
      m_fDuration: =
      {
        txt = "&"
        hint = "Time limit (0 = no limit)"
      }
      netname: =
      {
        txt = "&"
        hint = "Trigger on timeout"
      }
      m_iActive: =
      {
        txt = "&"
        hint = "Tank state afterwards"
        typ = "C"
        items = "No change"$0D"Active"$0D"Inactive"$0D"Toggle"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      m_iControllable: =
      {
        txt = "&"
        hint = "Control afterwards"
        typ = "C"
        items = "No change"$0D"Controllable"$0D"Not Controllable"$0D"Toggle"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      m_iLaserSpot: =
      {
        txt = "&"
        hint = "Laser Spot afterwards"
        typ = "C"
        items = "No change"$0D"Turn on"$0D"Turn off"$0D"Toggle"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Dump player"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Repeatable"
      }
    }
    scripted_tanksequence:form =
    {
      t_scripted_tanksequence = !
    }
    t_scripted_trainsequence:incl =
    {
      bbox = '-16 -16 -16 16 16 16'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      m_iszEntity: =
      {
        txt = "&"
        hint = "Func_train to affect [LE]"
      }
      m_iszDestination: =
      {
        txt = "&"
        hint = "Destination to head for [LE]"
      }
      m_iDirection: =
      {
        txt = "&"
        hint = "Train direction"
        typ = "C"
        items = "Towards destination"$0D"Forwards"$0D"Backwards"$0D"No change"
        values = "4"$0D"1"$0D"2"$0D"0"
      }
      target: =
      {
        txt = "&"
        hint = "Fire on arrival"
      }
      m_fDuration: =
      {
        txt = "&"
        hint = "Time limit (0 = no limit)"
      }
      netname: =
      {
        txt = "&"
        hint = "Fire on timeout"
      }
      m_iszTerminate: =
      {
        txt = "&"
        hint = "Fire at end, regardless"
      }
      m_iPostDirection: =
      {
        txt = "&"
        hint = "Direction afterwards"
        typ = "C"
        items = "Forwards"$0D"Stop"
        values = "1"$0D"3"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Once only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Skip path"
      }
    }
    scripted_trainsequence:form =
    {
      t_scripted_trainsequence = !
    }
    t_speaker:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      preset: =
      {
        txt = "&"
        hint = "Announcement Presets"
        typ = "C"
        items = "None"$0D"C1A0 Announcer"$0D"C1A1 Announcer"$0D"C1A2 Announcer"
         $0D"C1A3 Announcer"$0D"C1A4 Announcer"$0D"C2A1 Announcer"$0D"C2A2 Ann"
         "ouncer"$0D"C2A4 Announcer"$0D"C3A1 Announcer"$0D"C3A2 Announcer"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"9"$0D"11"$0D
         "12"
      }
      message: =
      {
        txt = "&"
        hint = "Sentence Group Name"
      }
      health: =
      {
        txt = "&"
        hint = "Volume (10 = loudest)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start Silent"
      }
    }
    speaker:form =
    {
      t_speaker = !
    }
    t_target_cdaudio:incl =
    {
      t_Targetname = !
      health: =
      {
        txt = "&"
        hint = "Track #"
        typ = "C"
        items = "Stop"$0D"Track 1"$0D"Track 2"$0D"Track 3"$0D"Track 4"$0D"Trac"
         "k 5"$0D"Track 6"$0D"Track 7"$0D"Track 8"$0D"Track 9"$0D"Track 10"$0D
         "Track 11"$0D"Track 12"$0D"Track 13"$0D"Track 14"$0D"Track 15"$0D"Tra"
         "ck 16"$0D"Track 17"$0D"Track 18"$0D"Track 19"$0D"Track 20"$0D"Track "
         "21"$0D"Track 22"$0D"Track 23"$0D"Track 24"$0D"Track 25"$0D"Track 26"$0D
         "Track 27"$0D"Track 28"$0D"Track 29"$0D"Track 30"
        values = "-1"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D
         "10"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"$0D"29"$0D
         "30"
      }
      message: =
      {
        txt = "&"
        hint = "File Name"
      }
      radius: =
      {
        txt = "&"
        hint = "Player Radius"
      }
    }
    target_cdaudio:form =
    {
      t_target_cdaudio = !
    }
    t_trigger_auto:incl =
    {
      t_Targetx = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove On fire"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "From Player"
      }
      globalstate: =
      {
        txt = "&"
        hint = "Global State to Read"
      }
      triggerstate: =
      {
        txt = "&"
        hint = "Trigger to send"
        typ = "C"
        items = "Off"$0D"On"$0D"Toggle"$0D"Kill"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
    }
    trigger_auto:form =
    {
      t_trigger_auto = !
    }
    t_trigger_autosave:incl =
    {
      t_Targetname = !
      t_Master = !
      t_MoveWith = !
    }
    trigger_autosave:form =
    {
      t_trigger_autosave = !
    }
    t_trigger_bounce:incl =
    {
      t_Trigger = !
      t_TriggerCond = !
      t_Angles = !
      t_MoveWith = !
      frags: =
      {
        txt = "&"
        hint = "Factor (0=stop, 1=perfect bounce)"
      }
      armorvalue: =
      {
        txt = "&"
        hint = "Minimum Speed"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Truncate Speed"
      }
    }
    trigger_bounce:form =
    {
      t_trigger_bounce = !
    }
    t_trigger_booksimon:incl =
    {
      t_Trigger = !
      t_TriggerCond = !
      t_Angles = !
      t_MoveWith = !
      message: =
      {
        txt = "&"
        hint = "Name of info_simon_spawnpoint to spawn him at"
      }
      target: =
      {
        txt = "&"
        hint = "Trigger when spawn Simon"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Start on"
        typ = "C"
        items = "Off"$0D"On"
        values = "0"$0D"1"
      }
    }
    trigger_booksimon:form =
    {
      t_trigger_booksimon = !
    }
    t_trigger_camera:incl =
    {
      t_Targetname = !
      t_Targetx = !
      wait: =
      {
        txt = "&"
        hint = "Hold time"
      }
      moveto: =
      {
        txt = "&"
        hint = "Path Corner"
      }
      message: =
      {
        txt = "&"
        hint = "Fire when done"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start At Player"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Follow Player"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Freeze Player"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Disable HUD"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Black Bars"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "No Cam Movement"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "Noise Effect"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X256"
        cap = "TV Frame"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X512"
        cap = "Remove yesno"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1024"
        cap = "Unskippable"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2048"
        cap = "Cancel cof_mdlcutscene"
      }
      speed: =
      {
        txt = "&"
        hint = "Initial Speed"
      }
      acceleration: =
      {
        txt = "&"
        hint = "Acceleration units/sec^2"
      }
      deceleration: =
      {
        txt = "&"
        hint = "Stop Deceleration units/sec^2"
      }
      m_iszViewEntity: =
      {
        txt = "&"
        hint = "Entity to view from (blank = this)"
      }
      zangle: =
      {
        txt = "&"
        hint = "Z angle, bitches"
      }
      skipmanager: =
      {
        txt = "&"
        hint = "Name of Skip Manager"
      }
      m_sAttachedModel: =
      {
        txt = "&"
        hint = "Entity to attach to"
      }
      m_iAttachment: =
      {
        txt = "&"
        hint = "Attachment number"
        typ = "C"
        items = "No attachment (origin)"
        values = "-1"
      }
      keepblackbars: =
      {
        txt = "&"
        hint = "Keep black bars after camera off"
        typ = "C"
        items = "No (Remove bars)"$0D"Yes (Keep bars)"
        values = "0"$0D"1"
      }
      keepnohud: =
      {
        txt = "&"
        hint = "Keep no HUD after camera off"
        typ = "C"
        items = "No (Show HUD)"$0D"Yes (Keep HUD hidden)"
        values = "0"$0D"1"
      }
      iuser2: =
      {
        txt = "&"
        hint = "Hide vignette?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
    }
    trigger_camera:form =
    {
      t_trigger_camera = !
    }
    t_trigger_cdaudio:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "File Name"
      }
      health: =
      {
        txt = "&"
        hint = "Track #"
        typ = "C"
        items = "Stop"$0D"Track 1"$0D"Track 2"$0D"Track 3"$0D"Track 4"$0D"Trac"
         "k 5"$0D"Track 6"$0D"Track 7"$0D"Track 8"$0D"Track 9"$0D"Track 10"$0D
         "Track 11"$0D"Track 12"$0D"Track 13"$0D"Track 14"$0D"Track 15"$0D"Tra"
         "ck 16"$0D"Track 17"$0D"Track 18"$0D"Track 19"$0D"Track 20"$0D"Track "
         "21"$0D"Track 22"$0D"Track 23"$0D"Track 24"$0D"Track 25"$0D"Track 26"$0D
         "Track 27"$0D"Track 28"$0D"Track 29"$0D"Track 30"
        values = "-1"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D
         "10"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"$0D"29"$0D
         "30"
      }
    }
    trigger_cdaudio:form =
    {
      t_trigger_cdaudio = !
    }
    t_trigger_changealias:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Alias to affect"
      }
      netname: =
      {
        txt = "&"
        hint = "String to Set"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Resolve references"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Debug Mode"
      }
    }
    trigger_changealias:form =
    {
      t_trigger_changealias = !
    }
    t_trigger_changecvar:incl =
    {
      t_Targetname = !
      netname: =
      {
        txt = "&"
        hint = "CVar to change"
      }
      message: =
      {
        txt = "&"
        hint = "Value to set"
      }
      armorvalue: =
      {
        txt = "&"
        hint = "Duration (-1 = until triggered)"
      }
    }
    trigger_changecvar:form =
    {
      t_trigger_changecvar = !
    }
    t_trigger_changelevel:incl =
    {
      targetname: =
      {
        txt = "&"
        hint = "Name"
      }
      map: =
      {
        txt = "&"
        hint = "New map name"
      }
      landmark: =
      {
        txt = "&"
        hint = "Landmark name"
      }
      changetarget: =
      {
        txt = "&"
        hint = "Change Target"
      }
      changedelay: =
      {
        txt = "&"
        hint = "Delay before change target"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No Intermission"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "USE Only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Transfer dropped items/weapons"
      }
    }
    trigger_changelevel:form =
    {
      t_trigger_changelevel = !
    }
    t_trigger_changetarget:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Entity to affect [LE]"
      }
      m_iszNewTarget: =
      {
        txt = "&"
        hint = "New Target [LE]"
      }
    }
    trigger_changetarget:form =
    {
      t_trigger_changetarget = !
    }
    t_trigger_changevalue:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Entity to affect [LE]"
      }
      netname: =
      {
        txt = "&"
        hint = "Keyname to change"
      }
      m_iszNewValue: =
      {
        txt = "&"
        hint = "New value to set"
      }
    }
    trigger_changevalue:form =
    {
      t_trigger_changevalue = !
    }
    t_trigger_cofmobile:incl =
    {
      t_Targetname = !
      t_Targetx = !
      bodynumber: =
      {
        txt = "&"
        hint = "Body to change to"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No SMS sound"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Low battery"
      }
    }
    trigger_cofmobile:form =
    {
      t_trigger_cofmobile = !
    }
    t_trigger_cofteleport:incl =
    {
      t_Targetname = !
      t_Master = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Destination Entity"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Only Once"
      }
    }
    trigger_cofteleport:form =
    {
      t_trigger_cofteleport = !
    }
    t_trigger_command:incl =
    {
      t_Targetname = !
      netname: =
      {
        txt = "&"
        hint = "Command String"
      }
    }
    trigger_command:form =
    {
      t_trigger_command = !
    }
    t_trigger_coop_changelevel:incl =
    {
      t_Targetname = !
      t_Master = !
      t_MoveWith = !
      t_RenderFields = !
    }
    trigger_coop_changelevel:form =
    {
      t_trigger_coop_changelevel = !
    }
    t_trigger_counter:incl =
    {
      t_Trigger = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No Message"
      }
      count: =
      {
        txt = "&"
        hint = "Count before activation"
      }
    }
    trigger_counter:form =
    {
      t_trigger_counter = !
    }
    t_trigger_endsection:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      section: =
      {
        txt = "&"
        hint = "Section"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "USE Only"
      }
    }
    trigger_endsection:form =
    {
      t_trigger_endsection = !
    }
    t_trigger_gravity:incl =
    {
      t_Targetname = !
      gravity: =
      {
        txt = "&"
        hint = "Gravity (0-1)"
      }
    }
    trigger_gravity:form =
    {
      t_trigger_gravity = !
    }
    t_trigger_hevcharge:incl =
    {
      t_Targetname = !
      t_Target = !
      t_Master = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Target Once"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Start Off"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Don't Speak"
      }
      frags: =
      {
        txt = "&"
        hint = "Charge Amount"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before trigger"
      }
    }
    trigger_hevcharge:form =
    {
      t_trigger_hevcharge = !
    }
    t_trigger_hurt:incl =
    {
      t_Targetname = !
      t_Target = !
      t_Master = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Fire once"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Start Off"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "No clients"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Only when fired"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Only on touch"
      }
      dmg: =
      {
        txt = "&"
        hint = "Damage"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before trigger"
      }
      damagetype: =
      {
        txt = "&"
        hint = "Damage Type"
        typ = "C"
        items = "GENERIC"$0D"CRUSH"$0D"BULLET"$0D"SLASH"$0D"BURN"$0D"FREEZE"$0D
         "FALL"$0D"BLAST"$0D"CLUB"$0D"SHOCK"$0D"SONIC"$0D"ENERGYBEAM"$0D"DROWN"
         $0D"PARALYSE"$0D"NERVEGAS"$0D"POISON"$0D"RADIATION"$0D"DROWNRECOVER"$0D
         "CHEMICAL"$0D"SLOWBURN"$0D"SLOWFREEZE"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"8"$0D"16"$0D"32"$0D"64"$0D"128"$0D"2"
         "56"$0D"512"$0D"1024"$0D"16384"$0D"32768"$0D"65536"$0D"131072"$0D"262"
         "144"$0D"524288"$0D"1048576"$0D"2097152"$0D"4194304"
      }
      cangib: =
      {
        txt = "&"
        hint = "To gib or not to gib"
        typ = "C"
        items = "Normal"$0D"Always gib"$0D"Never gib"
        values = "0"$0D"1"$0D"2"
      }
    }
    trigger_hurt:form =
    {
      t_trigger_hurt = !
    }
    t_trigger_monsterjump:incl =
    {
      t_Master = !
      t_MoveWith = !
      speed: =
      {
        txt = "&"
        hint = "Jump Speed"
      }
      height: =
      {
        txt = "&"
        hint = "Jump Height"
      }
    }
    trigger_monsterjump:form =
    {
      t_trigger_monsterjump = !
    }
    t_trigger_motion:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Target to affect [LE]"
      }
      m_iszPosition: =
      {
        txt = "&"
        hint = "Position (blank = no change)"
      }
      m_iPosMode: =
      {
        txt = "&"
        hint = "Meaning of Position"
        typ = "C"
        items = "Set new position [LP]"$0D"Add offset [LV]"
        values = "0"$0D"1"
      }
      m_iszAngles: =
      {
        txt = "&"
        hint = "Angles (blank = no change)"
      }
      m_iAngMode: =
      {
        txt = "&"
        hint = "Meaning of Angles"
        typ = "C"
        items = "Set new angle [LV]"$0D"Rotate by [LV]"$0D"Rotate by (Y Z X)"
        values = "0"$0D"1"$0D"2"
      }
      m_iszVelocity: =
      {
        txt = "&"
        hint = "Velocity (blank = no change)"
      }
      m_iVelMode: =
      {
        txt = "&"
        hint = "Meaning of Velocity"
        typ = "C"
        items = "Set new velocity [LV]"$0D"Add to velocity [LV]"$0D"Rotate vel"
         "ocity by [LV]"$0D"Rotate velocity (Y Z X)"
        values = "0"$0D"1"$0D"2"$0D"3"
      }
      m_iszAVelocity: =
      {
        txt = "&"
        hint = "AVelocity (blank = no change)"
      }
      m_iAVelMode: =
      {
        txt = "&"
        hint = "Meaning of AVelocity"
        typ = "C"
        items = "Set new avelocity (Y Z X)"$0D"Add to avelocity (Y Z X)"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Debug"
      }
    }
    trigger_motion:form =
    {
      t_trigger_motion = !
    }
    t_trigger_once:incl =
    {
      t_Trigger = !
      t_TriggerCond = !
      t_MoveWith = !
      message: =
      {
        txt = "&"
        hint = "Text when triggered"
      }
      noise: =
      {
        txt = "&"
        hint = "Sound when triggered"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Start on/off"
        typ = "C"
        items = "On"$0D"Off"
        values = "0"$0D"1"
      }
    }
    trigger_once:form =
    {
      t_trigger_once = !
    }
    t_trigger_multiple:incl =
    {
      t_trigger_once = !
      netname: =
      {
        txt = "&"
        hint = "fire when leave area"
      }
      wait: =
      {
        txt = "&"
        hint = "Delay before reset"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Start on/off"
        typ = "C"
        items = "On"$0D"Off"
        values = "0"$0D"1"
      }
    }
    trigger_multiple:form =
    {
      t_trigger_multiple = !
    }
    t_trigger_onsight:incl =
    {
      t_Targetname = !
      t_Master = !
      t_MoveWith = !
      netname: =
      {
        txt = "&"
        hint = "Looking entity (blank=player)"
      }
      message: =
      {
        txt = "&"
        hint = "Entity/classname to look at"
      }
      target: =
      {
        txt = "&"
        hint = "Fire when seen"
      }
      noise: =
      {
        txt = "&"
        hint = "Fire when no longer seen"
      }
      noise1: =
      {
        txt = "&"
        hint = "Fire on/off (seen/not seen)"
      }
      frags: =
      {
        txt = "&"
        hint = "View range (0=unlimited)"
      }
      max_health: =
      {
        txt = "&"
        hint = "Field of view (degrees)"
        typ = "C"
        items = "(-1): Use monster's view"
        values = "-1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No LOS check"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Seethru glass"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Check State of 'looker'"
      }
    }
    trigger_onsight:form =
    {
      t_trigger_onsight = !
    }
    t_trigger_push:incl =
    {
      t_Trigger = !
      t_MoveWith = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Once Only"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Start Off"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Only monsters"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed of push"
      }
    }
    trigger_push:form =
    {
      t_trigger_push = !
    }
    t_trigger_lightstyle:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Target to affect [LE]"
      }
      style: =
      {
        txt = "&"
        hint = "New Appearance"
        typ = "C"
        items = "On"$0D"Off"$0D"Fluorescent flicker"$0D"Slow, strong pulse"$0D
         "Slow pulse, noblack"$0D"Gentle pulse"$0D"Flicker A"$0D"Flicker B"$0D
         "Candle A"$0D"Candle B"$0D"Candle C"$0D"Fast strobe"$0D"Slow strobe"$0D
         "Underwater"$0D"Slow Fade In"$0D"Medium Fade In"$0D"Fast Fade In"
        values = "0"$0D"13"$0D"10"$0D"2"$0D"11"$0D"5"$0D"1"$0D"6"$0D"3"$0D"7"$0D
         "8"$0D"4"$0D"9"$0D"12"$0D"14"$0D"15"$0D"16"
      }
      pattern: =
      {
        txt = "&"
        hint = "Custom Appearance"
      }
      m_iFade: =
      {
        txt = "&"
        hint = "Fade time"
      }
      m_iWait: =
      {
        txt = "&"
        hint = "Hold time (-1 = permanent)"
      }
    }
    trigger_lightstyle:form =
    {
      t_trigger_lightstyle = !
    }
    t_trigger_relay:incl =
    {
      t_Targetname = !
      t_Targetx = !
      t_Master = !
      m_iszAltTarget: =
      {
        txt = "&"
        hint = "Target if locked by master"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove On fire"
      }
      triggerstate: =
      {
        txt = "&"
        hint = "Trigger to send"
        typ = "C"
        items = "Off"$0D"On"$0D"Toggle"$0D"Kill"$0D"Same as input"$0D"Opposite"
         " of input"$0D"Ratio (momentary doors)"
        values = "0"$0D"1"$0D"2"$0D"4"$0D"5"$0D"6"$0D"7"
      }
      value: =
      {
        txt = "&"
        hint = "Set ratio (blank = no change) [LR]"
      }
    }
    trigger_relay:form =
    {
      t_trigger_relay = !
    }
    t_trigger_rottest:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Marker ent"
      }
      netname: =
      {
        txt = "&"
        hint = "Reference ent"
      }
      message: =
      {
        txt = "&"
        hint = "Hinge ent"
      }
      health: =
      {
        txt = "&"
        hint = "Distance"
      }
      armortype: =
      {
        txt = "&"
        hint = "Angle Step"
      }
    }
    trigger_rottest:form =
    {
      t_trigger_rottest = !
    }
    t_trigger_sound:incl =
    {
      t_Targetname = !
      t_Master = !
      target: =
      {
        txt = "&"
        hint = "Fire when activated"
      }
      delay: =
      {
        txt = "&"
        hint = "Delay before trigger"
      }
      killtarget: =
      {
        txt = "&"
        hint = "KillTarget"
      }
      roomtype: =
      {
        txt = "&"
        hint = "Room Type"
        typ = "C"
        items = "(Disable all filters)"$0D"Generic (no filters)"$0D"Metal Smal"
         "l"$0D"Metal Medium"$0D"Metal Large"$0D"Tunnel Small"$0D"Tunnel Mediu"
         "m"$0D"Tunnel Large"$0D"Chamber Small"$0D"Chamber Medium"$0D"Chamber "
         "Large"$0D"Bright Small"$0D"Bright Medium"$0D"Bright Large"$0D"Water "
         "1"$0D"Water 2"$0D"Water 3"$0D"Concrete Small"$0D"Concrete Medium"$0D
         "Concrete Large"$0D"Big 1"$0D"Big 2"$0D"Big 3"$0D"Cavern Small"$0D"Ca"
         "vern Medium"$0D"Cavern Large"$0D"Weirdo 1"$0D"Weirdo 2"$0D"Weirdo 3"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"$0D"16"$0D"17"$0D"18"$0D"19"$0D
         "20"$0D"21"$0D"22"$0D"23"$0D"24"$0D"25"$0D"26"$0D"27"$0D"28"
      }
    }
    trigger_sound:form =
    {
      t_trigger_sound = !
    }
    t_trigger_startpatrol:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Target monster"
      }
      m_iszPath: =
      {
        txt = "&"
        hint = "Patrol path start"
      }
    }
    trigger_startpatrol:form =
    {
      t_trigger_startpatrol = !
    }
    t_trigger_suicide:incl =
    {
      t_Trigger = !
      t_MoveWith = !
      iuser1: =
      {
        txt = "&"
        hint = "Chance to trigger (1 in x)"
        typ = "C"
        items = "1 (always)"
        values = "1"
      }
    }
    trigger_suicide:form =
    {
      t_trigger_suicide = !
    }
    t_trigger_teleport:incl =
    {
      t_Targetname = !
      t_Master = !
      t_TriggerCond = !
      t_MoveWith = !
      target: =
      {
        txt = "&"
        hint = "Destination entity"
      }
      message: =
      {
        txt = "&"
        hint = "Landmark entity"
      }
      noise: =
      {
        txt = "&"
        hint = "Fire on teleporting"
      }
    }
    trigger_teleport:form =
    {
      t_trigger_teleport = !
    }
    t_trigger_transition:incl =
    {
      t_Targetname = !
    }
    trigger_transition:form =
    {
      t_trigger_transition = !
    }
    t_watcher:incl =
    {
      t_Targetname = !
      m_iszWatch: =
      {
        txt = "&"
        hint = "Entity to watch [LE]"
      }
      m_fLogic: =
      {
        txt = "&"
        hint = "State if entity isn't found"
        typ = "C"
        items = "On"$0D"Off"
        values = "0"$0D"1"
      }
      target: =
      {
        txt = "&"
        hint = "Target to notify"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Send 'Toggle'"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Don't Send On"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Don't Send Off"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "NOT 'On'"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "'Off'"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "'Turn On'"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "'Turn Off'"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X128"
        cap = "'In Use'"
      }
    }
    watcher:form =
    {
      t_watcher = !
    }
    t_watcher_count:incl =
    {
      t_Targetname = !
      noise: =
      {
        txt = "&"
        hint = "Count entities named..."
      }
      impulse: =
      {
        txt = "&"
        hint = "Comparison number"
      }
      m_iMode: =
      {
        txt = "&"
        hint = "Type of comparison"
        typ = "C"
        items = "'On' when count = number"$0D"'On' when count != number"$0D"'O"
         "n' when count > number"$0D"'On' when count >= number"$0D"'On' when c"
         "ount < number"$0D"'On' when count <= number"
        values = "0"$0D"3"$0D"1"$0D"5"$0D"2"$0D"4"
      }
      target: =
      {
        txt = "&"
        hint = "Fire on changing state"
      }
      netname: =
      {
        txt = "&"
        hint = "Fire on turning on"
      }
      message: =
      {
        txt = "&"
        hint = "Fire on turning off"
      }
      noise1: =
      {
        txt = "&"
        hint = "Fire when count increases"
      }
      noise2: =
      {
        txt = "&"
        hint = "Fire when count decreases"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Fire at startup"
      }
    }
    watcher_count:form =
    {
      t_watcher_count = !
    }
    t_weapon_debug:incl =
    {
      t_Weapon = !
    }
    weapon_debug:form =
    {
      t_weapon_debug = !
    }
    t_weaponbox:incl =
    {
      bbox = '-16 -16 0 16 16 64'
    }
    weaponbox:form =
    {
      t_weaponbox = !
    }
    t_world_items:incl =
    {
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
      type: =
      {
        txt = "&"
        hint = "types"
        typ = "C"
        items = "Antidote"$0D"Security Card"$0D"Battery"$0D"Suit"
        values = "42"$0D"43"$0D"44"$0D"45"
      }
    }
    world_items:form =
    {
      t_world_items = !
    }
    t_ammo_shells:incl =
    {
      t_Ammo = !
      t_Targetx = !
    }
    ammo_shells:form =
    {
      t_ammo_shells = !
    }
    t_ammo_glock:incl =
    {
      t_Ammo = !
      t_Targetx = !
    }
    ammo_glock:form =
    {
      t_ammo_glock = !
    }
    t_ammo_p345:incl =
    {
      t_Ammo = !
      t_Targetx = !
    }
    ammo_p345:form =
    {
      t_ammo_p345 = !
    }
    t_ammo_m16:incl =
    {
      t_Ammo = !
      t_Targetx = !
    }
    ammo_m16:form =
    {
      t_ammo_m16 = !
    }
    t_ammo_revolver:incl =
    {
      t_Ammo = !
      t_Targetx = !
    }
    ammo_revolver:form =
    {
      t_ammo_revolver = !
    }
    t_ammo_rifle:incl =
    {
      t_Ammo = !
      t_Targetx = !
    }
    ammo_rifle:form =
    {
      t_ammo_rifle = !
    }
    t_ammo_tmp:incl =
    {
      t_Ammo = !
      t_Targetx = !
    }
    ammo_tmp:form =
    {
      t_ammo_tmp = !
    }
    t_ammo_vp70:incl =
    {
      t_Ammo = !
      t_Targetx = !
    }
    ammo_vp70:form =
    {
      t_ammo_vp70 = !
    }
    t_env_dynlight:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_Angles = !
      rendercolor: =
      {
        txt = "&"
        hint = "Light Color (R G B)"
      }
      renderamt: =
      {
        txt = "&"
        hint = "Radius"
      }
      scale: =
      {
        txt = "&"
        hint = "Cone (spotlights)"
      }
      rendermode: =
      {
        txt = "&"
        hint = "texture (spotlights)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Start off"
      }
    }
    env_dynlight:form =
    {
      t_env_dynlight = !
    }
    t_envpos_sky:incl =
    {
      bbox = '-8 -8 -8 8 8 8'
      skin: =
      {
        txt = "&"
        hint = "Ambinet light hack"
      }
      body: =
      {
        txt = "&"
        hint = "Direct light hack"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Amblight hack"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Dirlight hack"
      }
    }
    envpos_sky:form =
    {
      t_envpos_sky = !
    }
    t_envpos_world:incl =
    {
      bbox = '-8 -8 -8 8 8 8'
      health: =
      {
        txt = "&"
        hint = "Speed factor"
      }
    }
    envpos_world:form =
    {
      t_envpos_world = !
    }
    t_door_prop:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_RenderFields = !
      model: =
      {
        txt = "&"
        hint = "Model name"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      skin: =
      {
        txt = "&"
        hint = "Skin"
      }
      body: =
      {
        txt = "&"
        hint = "Body"
      }
      scale: =
      {
        txt = "&"
        hint = "Scale (1.0 = normal size)"
      }
      m_iszSequence_On: =
      {
        txt = "&"
        hint = "Sequence when on"
      }
      m_iAction_On: =
      {
        txt = "&"
        hint = "Behaviour when on"
        typ = "C"
        items = "Freeze when sequence ends"$0D"Loop"$0D"Change state when sequ"
         "ence ends"
        values = "0"$0D"1"$0D"2"
      }
      m_iszSequence_Off: =
      {
        txt = "&"
        hint = "Sequence when off"
      }
      m_iAction_Off: =
      {
        txt = "&"
        hint = "Behaviour when off"
        typ = "C"
        items = "Freeze when sequence ends"$0D"Loop"$0D"Change state when sequ"
         "ence ends"
        values = "0"$0D"1"$0D"2"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Initially Off"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Drop to Floor"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Solid"
      }
    }
    door_prop:form =
    {
      t_door_prop = !
    }
    t_door_prop_view:incl =
    {
      bbox = '-8 -8 0 8 8 16'
      t_PlayerClass = !
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of model entity to follow"
      }
    }
    door_prop_view:form =
    {
      t_door_prop_view = !
    }
    t_camera:incl =
    {
      bbox = '-8 -8 0 8 8 16'
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of model entity for animation"
      }
    }
    camera:form =
    {
      t_camera = !
    }
    t_camera_model:incl =
    {
      bbox = '-8 -8 0 8 8 16'
      t_Targetname = !
      t_MoveWith = !
      model: =
      {
        txt = "&"
        hint = "Model name"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      animation1: =
      {
        txt = "&"
        hint = "Animation 1"
      }
      animation2: =
      {
        txt = "&"
        hint = "Animation 2"
      }
      animation3: =
      {
        txt = "&"
        hint = "Animation 3"
      }
      animation4: =
      {
        txt = "&"
        hint = "Animation 4"
      }
      animation5: =
      {
        txt = "&"
        hint = "Animation 5"
      }
    }
    camera_model:form =
    {
      t_camera_model = !
    }
    t_prop:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_RenderFields = !
      model: =
      {
        txt = "&"
        hint = "Model name"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      skin: =
      {
        txt = "&"
        hint = "Skin"
      }
      body: =
      {
        txt = "&"
        hint = "Body"
      }
      scale: =
      {
        txt = "&"
        hint = "Scale (1.0 = normal size)"
      }
      m_iszSequence_On: =
      {
        txt = "&"
        hint = "Sequence when on"
      }
      m_iAction_On: =
      {
        txt = "&"
        hint = "Behaviour when on"
        typ = "C"
        items = "Freeze when sequence ends"$0D"Loop"$0D"Change state when sequ"
         "ence ends"
        values = "0"$0D"1"$0D"2"
      }
      m_iszSequence_Off: =
      {
        txt = "&"
        hint = "Sequence when off"
      }
      m_iAction_Off: =
      {
        txt = "&"
        hint = "Behaviour when off"
        typ = "C"
        items = "Freeze when sequence ends"$0D"Loop"$0D"Change state when sequ"
         "ence ends"
        values = "0"$0D"1"$0D"2"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Initially Off"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Drop to Floor"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Solid"
      }
    }
    prop:form =
    {
      t_prop = !
    }
    t_inter_door:incl =
    {
      t_Targetname = !
      t_Global = !
      t_RenderFields = !
      t_Master = !
      target: =
      {
        txt = "&"
        hint = "Exit Position"
      }
      opensound: =
      {
        txt = "&"
        hint = "Door Open Sound"
      }
      closesound: =
      {
        txt = "&"
        hint = "Door Close Sound"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
      music: =
      {
        txt = "&"
        hint = "Music after door closes"
      }
      lockedby: =
      {
        txt = "&"
        hint = "Entity the door is locked by"
      }
      lockedmsg: =
      {
        txt = "&"
        hint = "Locked message"
      }
      lockedsnd: =
      {
        txt = "&"
        hint = "Locked sound"
      }
      unlockedsnd: =
      {
        txt = "&"
        hint = "Unlocked sound"
      }
      unlockedmsg: =
      {
        txt = "&"
        hint = "Unlocked message"
      }
      propertarget: =
      {
        txt = "&"
        hint = "Target to fire on open"
      }
      useunlock: =
      {
        txt = "&"
        hint = "Door to unlock when used"
      }
      newlevelsnd: =
      {
        txt = "&"
        hint = "New level door close sound"
      }
      musicfadein: =
      {
        txt = "&"
        hint = "Music fade in time"
        typ = "C"
        items = "Instant"
        values = "-1"
      }
      musicfadeout: =
      {
        txt = "&"
        hint = "Music fade out time"
        typ = "C"
        items = "Instant"
        values = "-1"
      }
      silentroom: =
      {
        txt = "&"
        hint = "Silent Room"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Keep key after unlock"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Loop gay music"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Start disabled"
      }
    }
    inter_door:form =
    {
      t_inter_door = !
    }
    t_inter_door_coop_changelevel:incl =
    {
      t_Targetname = !
      t_Global = !
      t_RenderFields = !
      t_Master = !
      target: =
      {
        txt = "&"
        hint = "Name of trigger_coop_changelevel"
      }
      noise: =
      {
        txt = "&"
        hint = "Door Open Sound"
      }
      message: =
      {
        txt = "&"
        hint = "Name of map to change to"
      }
      music: =
      {
        txt = "&"
        hint = "Music4u"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Looping SHIT"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      fuser1: =
      {
        txt = "&"
        hint = "Fade time"
      }
    }
    inter_door_coop_changelevel:form =
    {
      t_inter_door_coop_changelevel = !
    }
    t_inter_door_coop:incl =
    {
      bbox = '-8 -8 0 8 8 16'
      t_Targetname = !
      t_Global = !
      t_RenderFields = !
      model: =
      {
        txt = "&"
        hint = "Custom model"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      target: =
      {
        txt = "&"
        hint = "Exit Position"
      }
      opensound: =
      {
        txt = "&"
        hint = "Door Open Sound"
      }
      closesound: =
      {
        txt = "&"
        hint = "Door Close Sound"
      }
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
      music: =
      {
        txt = "&"
        hint = "Music after door closes"
      }
      lockedby: =
      {
        txt = "&"
        hint = "Entity the door is locked by"
      }
      lockedmsg: =
      {
        txt = "&"
        hint = "Locked message"
      }
      lockedsnd: =
      {
        txt = "&"
        hint = "Locked sound"
      }
      unlockedsnd: =
      {
        txt = "&"
        hint = "Unlocked sound"
      }
      unlockedmsg: =
      {
        txt = "&"
        hint = "Unlocked message"
      }
      propertarget: =
      {
        txt = "&"
        hint = "Target to fire on open"
      }
      useunlock: =
      {
        txt = "&"
        hint = "Door to unlock when used"
      }
      newlevelsnd: =
      {
        txt = "&"
        hint = "New level door close sound"
      }
      musicfadein: =
      {
        txt = "&"
        hint = "Music fade in time"
        typ = "C"
        items = "Instant"
        values = "-1"
      }
      musicfadeout: =
      {
        txt = "&"
        hint = "Music fade out time"
        typ = "C"
        items = "Instant"
        values = "-1"
      }
      silentroom: =
      {
        txt = "&"
        hint = "Silent Room"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Keep key after unlock"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Loop gay music"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Start disabled"
      }
    }
    inter_door_coop:form =
    {
      t_inter_door_coop = !
    }
    t_inter_door_exit:incl =
    {
      bbox = '-8 -8 0 8 8 16'
      t_PlayerClass = !
      t_Targetname = !
    }
    inter_door_exit:form =
    {
      t_inter_door_exit = !
    }
    t_inter_door_disable:incl =
    {
      bbox = '-8 -8 -4 8 8 4'
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Name of the door to enable/disable"
      }
      frags: =
      {
        txt = "&"
        hint = "Enable/Disable door"
        typ = "C"
        items = "Disable"$0D"Enable"
        values = "0"$0D"1"
      }
    }
    inter_door_disable:form =
    {
      t_inter_door_disable = !
    }
    t_item_glocktaclight:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Targetx = !
    }
    item_glocktaclight:form =
    {
      t_item_glocktaclight = !
    }
    t_item_nightvision:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Weapon = !
      t_Targetx = !
    }
    item_nightvision:form =
    {
      t_item_nightvision = !
    }
    t_item_phonebattery:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Targetx = !
    }
    item_phonebattery:form =
    {
      t_item_phonebattery = !
    }
    t_item_key:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Targetx = !
      message: =
      {
        txt = "&"
        hint = "Name of .txt for the key (eg: testkey.txt)"
      }
      model: =
      {
        txt = "&"
        hint = "Model (e.g. models/can.mdl)"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Cassette Tapes"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Hidden package"
      }
    }
    item_key:form =
    {
      t_item_key = !
    }
    t_item_padlock:incl =
    {
      bbox = '-8 -8 0 8 8 16'
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of camera to look at"
      }
      target: =
      {
        txt = "&"
        hint = "Trigger when unlocked"
      }
    }
    item_padlock:form =
    {
      t_item_padlock = !
    }
    t_boat:incl =
    {
      t_MoveWith = !
    }
    boat:form =
    {
      t_boat = !
    }
    t_boat_exit:incl =
    {
      t_MoveWith = !
      message: =
      {
        txt = "&"
        hint = "Name of place (Asylum dock etc)"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Set boat X pos"
      }
      iuser2: =
      {
        txt = "&"
        hint = "Set boat Y pos"
      }
      iuser3: =
      {
        txt = "&"
        hint = "Set boat Z pos"
      }
      iuser4: =
      {
        txt = "&"
        hint = "Set boat Y angle"
      }
    }
    boat_exit:form =
    {
      t_boat_exit = !
    }
    t_boat_hide_spot:incl =
    {
      bbox = '-8 -8 -8 8 8 8'
      t_Targetname = !
      t_MoveWith = !
    }
    boat_hide_spot:form =
    {
      t_boat_hide_spot = !
    }
    t_cof_addcodenote:incl =
    {
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Code type"
        typ = "C"
        items = "PC"$0D"Videotape"$0D"Window"
        values = "1"$0D"2"$0D"3"
      }
    }
    cof_addcodenote:form =
    {
      t_cof_addcodenote = !
    }
    t_cof_barshoot:incl =
    {
      t_MoveWith = !
      t_RenderFields = !
      message: =
      {
        txt = "&"
        hint = "Name of entity to play voice sounds"
      }
    }
    cof_barshoot:form =
    {
      t_cof_barshoot = !
    }
    t_cof_begingame:incl =
    {
      t_Targetname = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Doctor mode"
      }
    }
    cof_begingame:form =
    {
      t_cof_begingame = !
    }
    t_cof_billboard:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of tga (eg: gustavdahlwelcome)"
      }
      noise: =
      {
        txt = "&"
        hint = "Noise when triggered"
      }
      text: =
      {
        txt = "&"
        hint = "Message when used"
      }
    }
    cof_billboard:form =
    {
      t_cof_billboard = !
    }
    t_cof_blackandwhite:incl =
    {
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Amount - 255 max"
      }
    }
    cof_blackandwhite:form =
    {
      t_cof_blackandwhite = !
    }
    t_cof_blur:incl =
    {
      t_Targetname = !
      rate: =
      {
        txt = "&"
        hint = "Blur Rate"
      }
      fade: =
      {
        txt = "&"
        hint = "Blur Fade"
      }
      strength: =
      {
        txt = "&"
        hint = "Blur Strength"
      }
    }
    cof_blur:form =
    {
      t_cof_blur = !
    }
    t_cof_bosshealthbar:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of boss"
      }
      emptytga: =
      {
        txt = "&"
        hint = "Name of empty bar tga"
      }
      fulltga: =
      {
        txt = "&"
        hint = "Name of full bar tga"
      }
    }
    cof_bosshealthbar:form =
    {
      t_cof_bosshealthbar = !
    }
    t_cof_burningbarrel:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Targetname = !
      model: =
      {
        txt = "&"
        hint = "Use custom model?"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      noise: =
      {
        txt = "&"
        hint = "Custom fire sound?"
      }
    }
    cof_burningbarrel:form =
    {
      t_cof_burningbarrel = !
    }
    t_cof_camerazoom:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      zoomfov: =
      {
        txt = "&"
        hint = "FOV"
      }
      zoomtime: =
      {
        txt = "&"
        hint = "Zoom Speed"
        typ = "C"
        items = "Instant"
        values = "666"
      }
      returntime: =
      {
        txt = "&"
        hint = "Time until reset"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Non-instant return"
      }
    }
    cof_camerazoom:form =
    {
      t_cof_camerazoom = !
    }
    t_cof_closeallvgui:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
    }
    cof_closeallvgui:form =
    {
      t_cof_closeallvgui = !
    }
    t_cof_changelevel:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Level name (eg c1a1a)"
      }
    }
    cof_changelevel:form =
    {
      t_cof_changelevel = !
    }
    t_cof_clothesmenu:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      cameraent: =
      {
        txt = "&"
        hint = "Camera entity"
      }
      simonent: =
      {
        txt = "&"
        hint = "Simon entity"
      }
    }
    cof_clothesmenu:form =
    {
      t_cof_clothesmenu = !
    }
    t_cof_chapter:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Chapter name"
      }
      noise: =
      {
        txt = "&"
        hint = "Text appear sound"
      }
    }
    cof_chapter:form =
    {
      t_cof_chapter = !
    }
    t_cof_computer:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Target when correct user+pass"
      }
    }
    cof_computer:form =
    {
      t_cof_computer = !
    }
    t_cof_coopgameover:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
    }
    cof_coopgameover:form =
    {
      t_cof_coopgameover = !
    }
    t_cof_coop_spawn1:incl =
    {
      bbox = '-16 -16 -36 16 16 36'
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Enabled/disabled"
        typ = "C"
        items = "Enabled"$0D"Disabled"
        values = "0"$0D"1"
      }
    }
    cof_coop_spawn1:form =
    {
      t_cof_coop_spawn1 = !
    }
    t_cof_coop_spawn2:incl =
    {
      bbox = '-16 -16 -36 16 16 36'
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Enabled/disabled"
        typ = "C"
        items = "Enabled"$0D"Disabled"
        values = "0"$0D"1"
      }
    }
    cof_coop_spawn2:form =
    {
      t_cof_coop_spawn2 = !
    }
    t_cof_coop_spawn3:incl =
    {
      bbox = '-16 -16 -36 16 16 36'
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Enabled/disabled"
        typ = "C"
        items = "Enabled"$0D"Disabled"
        values = "0"$0D"1"
      }
    }
    cof_coop_spawn3:form =
    {
      t_cof_coop_spawn3 = !
    }
    t_cof_coop_spawn4:incl =
    {
      bbox = '-16 -16 -36 16 16 36'
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Enabled/disabled"
        typ = "C"
        items = "Enabled"$0D"Disabled"
        values = "0"$0D"1"
      }
    }
    cof_coop_spawn4:form =
    {
      t_cof_coop_spawn4 = !
    }
    t_cof_coop_stats:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Next map to change to"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No credits"
      }
    }
    cof_coop_stats:form =
    {
      t_cof_coop_stats = !
    }
    t_cof_spawnpointonoff:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of spawn point"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Enable/disable"
        typ = "C"
        items = "Enable it"$0D"Disable it"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Teleport players"
      }
    }
    cof_spawnpointonoff:form =
    {
      t_cof_spawnpointonoff = !
    }
    t_cof_clearitems:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Single item to remove"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove ALL"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "All Players"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Three slots"
      }
    }
    cof_clearitems:form =
    {
      t_cof_clearitems = !
    }
    t_cof_cracker:incl =
    {
      t_Targetname = !
      dmg: =
      {
        txt = "&"
        hint = "Damage per trigger"
      }
    }
    cof_cracker:form =
    {
      t_cof_cracker = !
    }
    t_cof_credits:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Custom credits file (conclusions etc)"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Speed"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Turn off credits"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Trigger stats"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Custom credits"
      }
    }
    cof_credits:form =
    {
      t_cof_credits = !
    }
    t_cof_customiseplayer:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      player1: =
      {
        txt = "&"
        hint = "Custom plr mdl (1)"
      }
      player2: =
      {
        txt = "&"
        hint = "Custom plr mdl (2)"
      }
      player3: =
      {
        txt = "&"
        hint = "Custom plr mdl (3)"
      }
      player4: =
      {
        txt = "&"
        hint = "Custom plr mdl (4)"
      }
      sleeve: =
      {
        txt = "&"
        hint = "Custom sleeve"
      }
      fingers: =
      {
        txt = "&"
        hint = "Custom fingers"
      }
      gloves: =
      {
        txt = "&"
        hint = "Custom gloves"
      }
    }
    cof_customiseplayer:form =
    {
      t_cof_customiseplayer = !
    }
    t_cof_deadcat:incl =
    {
      bbox = '-16 -16 0 16 16 16'
      t_Targetname = !
    }
    cof_deadcat:form =
    {
      t_cof_deadcat = !
    }
    t_cof_developer_commentary:incl =
    {
      bbox = '-16 -16 0 16 16 36'
      t_Targetname = !
      model: =
      {
        txt = "&"
        hint = "Use custom model?"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      noise: =
      {
        txt = "&"
        hint = "Commentary file"
      }
      fuser2: =
      {
        txt = "&"
        hint = "Length (in secs)"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Speaker"
        typ = "C"
        items = "Minuit"$0D"ruMpel"$0D"Sporkeh"$0D"DragonNOR"$0D"BerZerk"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      message: =
      {
        txt = "&"
        hint = "Custom speaker"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Always unlocked"
      }
    }
    cof_developer_commentary:form =
    {
      t_cof_developer_commentary = !
    }
    t_cof_difficultysettings:incl =
    {
      t_Targetname = !
    }
    cof_difficultysettings:form =
    {
      t_cof_difficultysettings = !
    }
    t_cof_doctorweaponset:incl =
    {
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Doctor's Weapon"
        typ = "C"
        items = "P345"$0D"Revolver"
        values = "1"$0D"2"
      }
    }
    cof_doctorweaponset:form =
    {
      t_cof_doctorweaponset = !
    }
    t_cof_doctorweapontrigger:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Trigger if P345"
      }
      message: =
      {
        txt = "&"
        hint = "Trigger if revolver"
      }
    }
    cof_doctorweapontrigger:form =
    {
      t_cof_doctorweapontrigger = !
    }
    t_cof_document:incl =
    {
      t_Targetname = !
      page1: =
      {
        txt = "&"
        hint = "Page 1"
      }
      page2: =
      {
        txt = "&"
        hint = "Page 2"
      }
      page3: =
      {
        txt = "&"
        hint = "Page 3"
      }
      page4: =
      {
        txt = "&"
        hint = "Page 4"
      }
      note1: =
      {
        txt = "&"
        hint = "Txt file Page 1"
      }
      note2: =
      {
        txt = "&"
        hint = "Txt file Page 2"
      }
      note3: =
      {
        txt = "&"
        hint = "Txt file Page 3"
      }
      note4: =
      {
        txt = "&"
        hint = "Txt file Page 4"
      }
      turnsound: =
      {
        txt = "&"
        hint = "Page Turn Sound"
      }
      label: =
      {
        txt = "&"
        hint = "Document title"
      }
    }
    cof_document:form =
    {
      t_cof_document = !
    }
    t_cof_doctorshoot:incl =
    {
      t_Targetname = !
      t_RenderFields = !
    }
    cof_doctorshoot:form =
    {
      t_cof_doctorshoot = !
    }
    t_cof_ending:incl =
    {
      t_Targetname = !
      t_Target = !
      iuser1: =
      {
        txt = "&"
        hint = "Ending choice"
        typ = "C"
        items = "Killed roof boss"$0D"Given doctor P345"$0D"Delivered package"
        values = "0"$0D"1"$0D"2"
      }
    }
    cof_ending:form =
    {
      t_cof_ending = !
    }
    t_cof_entityrestore:incl =
    {
      t_Targetname = !
      t_Target = !
      impulse: =
      {
        txt = "&"
        hint = "Save/Restore items"
        typ = "C"
        items = "Save items"$0D"Restore items"
        values = "0"$0D"1"
      }
    }
    cof_entityrestore:form =
    {
      t_cof_entityrestore = !
    }
    t_cof_entteleport:incl =
    {
      t_Targetname = !
      t_Target = !
    }
    cof_entteleport:form =
    {
      t_cof_entteleport = !
    }
    t_cof_fatfuckingcunt:incl =
    {
      t_MoveWith = !
      t_RenderFields = !
      message: =
      {
        txt = "&"
        hint = "Name of entity to kill"
      }
    }
    cof_fatfuckingcunt:form =
    {
      t_cof_fatfuckingcunt = !
    }
    t_cof_giveitems:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Weapon or key to give. example:(weapon_glock or testkey.txt)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Key Item"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Always give"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Weapon Info"
      }
    }
    cof_giveitems:form =
    {
      t_cof_giveitems = !
    }
    t_cof_goodpoints:incl =
    {
      t_Targetname = !
      impulse: =
      {
        txt = "&"
        hint = "Add/Remove point"
        typ = "C"
        items = "Add"$0D"Remove"
        values = "0"$0D"1"
      }
    }
    cof_goodpoints:form =
    {
      t_cof_goodpoints = !
    }
    t_cof_goodpointstrigger:incl =
    {
      t_Targetname = !
      triggerone: =
      {
        txt = "&"
        hint = "Trigger with only 1 point"
      }
      triggertwo: =
      {
        txt = "&"
        hint = "Trigger with only 2 points"
      }
      triggerthree: =
      {
        txt = "&"
        hint = "Trigger with only 3 points"
      }
      triggerfour: =
      {
        txt = "&"
        hint = "Trigger with only 4 points"
      }
      triggerfive: =
      {
        txt = "&"
        hint = "Trigger with only 5 points"
      }
    }
    cof_goodpointstrigger:form =
    {
      t_cof_goodpointstrigger = !
    }
    t_cof_greyfade:incl =
    {
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Fade from/to grey"
        typ = "C"
        items = "Fade to grey"$0D"Fade from grey"
        values = "0"$0D"1"
      }
      iuser2: =
      {
        txt = "&"
        hint = "Custom fade time"
        typ = "C"
        items = "Normal time"
        values = "0"
      }
    }
    cof_greyfade:form =
    {
      t_cof_greyfade = !
    }
    t_cof_hint:incl =
    {
      t_Targetname = !
      t_Target = !
      message: =
      {
        txt = "&"
        hint = "Hint to use (eg sprint)"
      }
    }
    cof_hint:form =
    {
      t_cof_hint = !
    }
    t_cof_hoodie:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      model: =
      {
        txt = "&"
        hint = "Custom hoodie model"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Hoodie type"
        typ = "C"
        items = "Leatherhoff"$0D"ModDB"$0D"Hello Kitty"$0D"BF3"$0D"Camo"$0D"HL"
         "C"$0D"Black Metal"$0D"Psykskallar"$0D"Fuck anime"$0D"Sick Simon"$0D"T"
         "witcher"$0D"Page 1 - Pages"$0D"Page 2 - Ranks"$0D"Page 3 - Suits"$0D
         "Page 4 - Items"$0D"Page 5 - Weapons"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"$0D"12"$0D"13"$0D"14"$0D"15"
      }
    }
    cof_hoodie:form =
    {
      t_cof_hoodie = !
    }
    t_cof_interdooronoff:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of inter_door to toggle"
      }
      newlockedby: =
      {
        txt = "&"
        hint = "Custom LockedBy"
      }
    }
    cof_interdooronoff:form =
    {
      t_cof_interdooronoff = !
    }
    t_cof_introduction:incl =
    {
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Type"
        typ = "C"
        items = "SP"$0D"Doc"$0D"Coop"
        values = "0"$0D"1"$0D"2"
      }
      iuser2: =
      {
        txt = "&"
        hint = "On/off"
        typ = "C"
        items = "Off"$0D"On"
        values = "0"$0D"1"
      }
      iuser3: =
      {
        txt = "&"
        hint = "Troll mod?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
    }
    cof_introduction:form =
    {
      t_cof_introduction = !
    }
    t_cof_inter_door_exitchange:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of inter_door"
      }
      target: =
      {
        txt = "&"
        hint = "New inter_door_exit"
      }
    }
    cof_inter_door_exitchange:form =
    {
      t_cof_inter_door_exitchange = !
    }
    t_cof_keypad:incl =
    {
      t_Targetname = !
      t_Targetx = !
      message: =
      {
        txt = "&"
        hint = "Message when unlocked"
      }
    }
    cof_keypad:form =
    {
      t_cof_keypad = !
    }
    t_cof_keypad2:incl =
    {
      t_Targetname = !
      t_Targetx = !
    }
    cof_keypad2:form =
    {
      t_cof_keypad2 = !
    }
    t_cof_keypad3:incl =
    {
      t_Targetname = !
      t_Targetx = !
    }
    cof_keypad3:form =
    {
      t_cof_keypad3 = !
    }
    t_cof_keypad4:incl =
    {
      t_Targetname = !
      t_Targetx = !
    }
    cof_keypad4:form =
    {
      t_cof_keypad4 = !
    }
    t_cof_keypadnew:incl =
    {
      bbox = '-8 -8 0 8 8 8'
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Number"
      }
      model: =
      {
        txt = "&"
        hint = "Model"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      target: =
      {
        txt = "&"
        hint = "Trigger when unlocked"
      }
      noise: =
      {
        txt = "&"
        hint = "Sound to precache"
      }
      noise2: =
      {
        txt = "&"
        hint = "Wrong code sound"
      }
      noise3: =
      {
        txt = "&"
        hint = "Right code sound"
      }
    }
    cof_keypadnew:form =
    {
      t_cof_keypadnew = !
    }
    t_cof_killplayer:incl =
    {
      t_Targetname = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No death sound"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "No arm"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "No camera"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X8"
        cap = "No fade"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "No music"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "No bodydrop"
      }
    }
    cof_killplayer:form =
    {
      t_cof_killplayer = !
    }
    t_cof_mdlcutscene:incl =
    {
      bbox = '-8 -8 -8 8 8 8'
      t_Targetname = !
      t_RenderFxChoices = !
      t_Targetx = !
      t_Angles = !
      t_Sequence = !
      model: =
      {
        txt = "&"
        hint = "Model name"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      animation1: =
      {
        txt = "&"
        hint = "Animation 1"
      }
      animation2: =
      {
        txt = "&"
        hint = "Animation 2"
      }
      animation3: =
      {
        txt = "&"
        hint = "Animation 3"
      }
      animation4: =
      {
        txt = "&"
        hint = "Animation 4"
      }
      animation5: =
      {
        txt = "&"
        hint = "Animation 5"
      }
      animation6: =
      {
        txt = "&"
        hint = "Animation 6"
      }
      animation7: =
      {
        txt = "&"
        hint = "Animation 7"
      }
      animation8: =
      {
        txt = "&"
        hint = "Animation 8"
      }
      animation9: =
      {
        txt = "&"
        hint = "Animation 9"
      }
      animation10: =
      {
        txt = "&"
        hint = "Animation 10"
      }
      animation11: =
      {
        txt = "&"
        hint = "Animation 11"
      }
      animation12: =
      {
        txt = "&"
        hint = "Animation 12"
      }
      animation13: =
      {
        txt = "&"
        hint = "Animation 13"
      }
      animation14: =
      {
        txt = "&"
        hint = "Animation 14"
      }
      animation15: =
      {
        txt = "&"
        hint = "Animation 15"
      }
      animation16: =
      {
        txt = "&"
        hint = "Animation 16"
      }
      animation17: =
      {
        txt = "&"
        hint = "Animation 17"
      }
      animation18: =
      {
        txt = "&"
        hint = "Animation 18"
      }
      animation19: =
      {
        txt = "&"
        hint = "Animation 19"
      }
      animation20: =
      {
        txt = "&"
        hint = "Animation 20"
      }
      animation21: =
      {
        txt = "&"
        hint = "Animation 21"
      }
      animation22: =
      {
        txt = "&"
        hint = "Animation 22"
      }
      animation23: =
      {
        txt = "&"
        hint = "Animation 23"
      }
      animation24: =
      {
        txt = "&"
        hint = "Animation 24"
      }
      animation25: =
      {
        txt = "&"
        hint = "Animation 25"
      }
      animation26: =
      {
        txt = "&"
        hint = "Animation 26"
      }
      animation27: =
      {
        txt = "&"
        hint = "Animation 27"
      }
      animation28: =
      {
        txt = "&"
        hint = "Animation 28"
      }
      animation29: =
      {
        txt = "&"
        hint = "Animation 29"
      }
      animation30: =
      {
        txt = "&"
        hint = "Animation 30"
      }
      message: =
      {
        txt = "&"
        hint = "Entity to move with"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Freeze player"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Hide HUD"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Black bars"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X16"
        cap = "Cancel after anims"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X32"
        cap = "Cancel trigger_camera"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X64"
        cap = "Hide vignette"
      }
    }
    cof_mdlcutscene:form =
    {
      t_cof_mdlcutscene = !
    }
    t_cof_monster_random_spawn:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Angles = !
      model: =
      {
        txt = "&"
        hint = "Model name"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      targetname: =
      {
        txt = "&"
        hint = "Group name"
      }
      message: =
      {
        txt = "&"
        hint = "Monster type (monster_slower etc)"
      }
      frags: =
      {
        txt = "&"
        hint = "Max nerds to spawn"
      }
      health: =
      {
        txt = "&"
        hint = "Entity to check spawn (1 per group)"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Monsterclip"
      }
    }
    cof_monster_random_spawn:form =
    {
      t_cof_monster_random_spawn = !
    }
    t_cof_numeralplate_left:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
    }
    cof_numeralplate_left:form =
    {
      t_cof_numeralplate_left = !
    }
    t_cof_numeralplate_right:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
    }
    cof_numeralplate_right:form =
    {
      t_cof_numeralplate_right = !
    }
    t_cof_objective:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of hint to use"
      }
      target: =
      {
        txt = "&"
        hint = "Custom hints file"
      }
    }
    cof_objective:form =
    {
      t_cof_objective = !
    }
    t_cof_passwordnote:incl =
    {
      t_Angles = !
      t_RenderFields = !
      usertype: =
      {
        txt = "&"
        hint = "Username or Password?"
        typ = "C"
        items = "Username"$0D"Password"
        values = "0"$0D"1"
      }
    }
    cof_passwordnote:form =
    {
      t_cof_passwordnote = !
    }
    t_cof_pushablevan:incl =
    {
      t_Angles = !
      t_RenderFields = !
      model: =
      {
        txt = "&"
        hint = "model"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
    }
    cof_pushablevan:form =
    {
      t_cof_pushablevan = !
    }
    t_cof_phonecall:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Target after call"
      }
      subtitlenumber1: =
      {
        txt = "&"
        hint = "Subtile line 1"
      }
      subtitlenumber2: =
      {
        txt = "&"
        hint = "Subtile line 2"
      }
      subtitlenumber3: =
      {
        txt = "&"
        hint = "Subtile line 3"
      }
      subtitlenumber4: =
      {
        txt = "&"
        hint = "Subtile line 4"
      }
      subtitlenumber5: =
      {
        txt = "&"
        hint = "Subtile line 5"
      }
      subtitlenumber6: =
      {
        txt = "&"
        hint = "Subtile line 6"
      }
      subtitlenumber7: =
      {
        txt = "&"
        hint = "Subtile line 7"
      }
      subtitlenumber8: =
      {
        txt = "&"
        hint = "Subtile line 8"
      }
      subtitlenumber9: =
      {
        txt = "&"
        hint = "Subtile line 9"
      }
      subtitlenumber10: =
      {
        txt = "&"
        hint = "Subtile line 10"
      }
      subtitlenumber11: =
      {
        txt = "&"
        hint = "Subtile line 11"
      }
      subtitlenumber12: =
      {
        txt = "&"
        hint = "Subtile line 12"
      }
      subtitlenumber13: =
      {
        txt = "&"
        hint = "Subtile line 13"
      }
      subtitlenumber14: =
      {
        txt = "&"
        hint = "Subtile line 14"
      }
      subtitlenumber15: =
      {
        txt = "&"
        hint = "Subtile line 15"
      }
      subtitlenumber16: =
      {
        txt = "&"
        hint = "Subtile line 16"
      }
      subtitlenumber17: =
      {
        txt = "&"
        hint = "Subtile line 17"
      }
      subtitlenumber18: =
      {
        txt = "&"
        hint = "Subtile line 18"
      }
      subtitlenumber19: =
      {
        txt = "&"
        hint = "Subtile line 19"
      }
      subtitlenumber20: =
      {
        txt = "&"
        hint = "Subtile line 20"
      }
      subtitlenumber21: =
      {
        txt = "&"
        hint = "Subtile line 21"
      }
      subtitlenumber22: =
      {
        txt = "&"
        hint = "Subtile line 22"
      }
      subtitlenumber23: =
      {
        txt = "&"
        hint = "Subtile line 23"
      }
      subtitlenumber24: =
      {
        txt = "&"
        hint = "Subtile line 24"
      }
      subtitlenumber25: =
      {
        txt = "&"
        hint = "Subtile line 25"
      }
      subtitlenumber26: =
      {
        txt = "&"
        hint = "Subtile line 26"
      }
      subtitlenumber27: =
      {
        txt = "&"
        hint = "Subtile line 27"
      }
      subtitlenumber28: =
      {
        txt = "&"
        hint = "Subtile line 28"
      }
      subtitlenumber29: =
      {
        txt = "&"
        hint = "Subtile line 29"
      }
      subtitlenumber30: =
      {
        txt = "&"
        hint = "Subtile line 30"
      }
      subtitlenumber31: =
      {
        txt = "&"
        hint = "Subtile line 31"
      }
      subtitlenumber32: =
      {
        txt = "&"
        hint = "Subtile line 32"
      }
      subtitletime1: =
      {
        txt = "&"
        hint = "Time until line 1"
      }
      subtitletime2: =
      {
        txt = "&"
        hint = "Time until line 2"
      }
      subtitletime3: =
      {
        txt = "&"
        hint = "Time until line 3"
      }
      subtitletime4: =
      {
        txt = "&"
        hint = "Time until line 4"
      }
      subtitletime5: =
      {
        txt = "&"
        hint = "Time until line 5"
      }
      subtitletime6: =
      {
        txt = "&"
        hint = "Time until line 6"
      }
      subtitletime7: =
      {
        txt = "&"
        hint = "Time until line 7"
      }
      subtitletime8: =
      {
        txt = "&"
        hint = "Time until line 8"
      }
      subtitletime9: =
      {
        txt = "&"
        hint = "Time until line 9"
      }
      subtitletime10: =
      {
        txt = "&"
        hint = "Time until line 10"
      }
      subtitletime11: =
      {
        txt = "&"
        hint = "Time until line 11"
      }
      subtitletime12: =
      {
        txt = "&"
        hint = "Time until line 12"
      }
      subtitletime13: =
      {
        txt = "&"
        hint = "Time until line 13"
      }
      subtitletime14: =
      {
        txt = "&"
        hint = "Time until line 14"
      }
      subtitletime15: =
      {
        txt = "&"
        hint = "Time until line 15"
      }
      subtitletime16: =
      {
        txt = "&"
        hint = "Time until line 16"
      }
      subtitletime17: =
      {
        txt = "&"
        hint = "Time until line 17"
      }
      subtitletime18: =
      {
        txt = "&"
        hint = "Time until line 18"
      }
      subtitletime19: =
      {
        txt = "&"
        hint = "Time until line 19"
      }
      subtitletime20: =
      {
        txt = "&"
        hint = "Time until line 20"
      }
      subtitletime21: =
      {
        txt = "&"
        hint = "Time until line 21"
      }
      subtitletime22: =
      {
        txt = "&"
        hint = "Time until line 22"
      }
      subtitletime23: =
      {
        txt = "&"
        hint = "Time until line 23"
      }
      subtitletime24: =
      {
        txt = "&"
        hint = "Time until line 24"
      }
      subtitletime25: =
      {
        txt = "&"
        hint = "Time until line 25"
      }
      subtitletime26: =
      {
        txt = "&"
        hint = "Time until line 26"
      }
      subtitletime27: =
      {
        txt = "&"
        hint = "Time until line 27"
      }
      subtitletime28: =
      {
        txt = "&"
        hint = "Time until line 28"
      }
      subtitletime29: =
      {
        txt = "&"
        hint = "Time until line 29"
      }
      subtitletime30: =
      {
        txt = "&"
        hint = "Time until line 30"
      }
      subtitletime31: =
      {
        txt = "&"
        hint = "Time until line 31"
      }
      subtitletime32: =
      {
        txt = "&"
        hint = "Time until line 32"
      }
      audiofile: =
      {
        txt = "&"
        hint = "Sound (after answered)"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Call type"
        typ = "C"
        items = "Incoming"$0D"Outgoing"
        values = "0"$0D"1"
      }
    }
    cof_phonecall:form =
    {
      t_cof_phonecall = !
    }
    t_cof_phonedisable:incl =
    {
      t_Targetname = !
    }
    cof_phonedisable:form =
    {
      t_cof_phonedisable = !
    }
    t_cof_phonetrigger:incl =
    {
      t_Targetname = !
      t_Target = !
    }
    cof_phonetrigger:form =
    {
      t_cof_phonetrigger = !
    }
    t_cof_puzzlebar:incl =
    {
      bbox = '-8 -8 0 8 8 32'
      t_PlayerClass = !
      t_Targetname = !
      t_Targetx = !
      iuser3: =
      {
        txt = "&"
        hint = "Start opened?"
        typ = "C"
        items = "Opened"$0D"Closed"
        values = "0"$0D"1"
      }
    }
    cof_puzzlebar:form =
    {
      t_cof_puzzlebar = !
    }
    t_cof_puzzlebar2:incl =
    {
      bbox = '-8 -8 0 8 8 32'
      t_PlayerClass = !
      t_Targetname = !
      t_Targetx = !
      iuser3: =
      {
        txt = "&"
        hint = "Start opened?"
        typ = "C"
        items = "Opened"$0D"Closed"
        values = "0"$0D"1"
      }
    }
    cof_puzzlebar2:form =
    {
      t_cof_puzzlebar2 = !
    }
    t_cof_puzzlebar3:incl =
    {
      bbox = '-8 -8 0 8 8 32'
      t_PlayerClass = !
      t_Targetname = !
      t_Targetx = !
      iuser3: =
      {
        txt = "&"
        hint = "Start opened?"
        typ = "C"
        items = "Opened"$0D"Closed"
        values = "0"$0D"1"
      }
    }
    cof_puzzlebar3:form =
    {
      t_cof_puzzlebar3 = !
    }
    t_cof_puzzlebar4:incl =
    {
      bbox = '-8 -8 0 8 8 32'
      t_PlayerClass = !
      t_Targetname = !
      t_Targetx = !
      iuser3: =
      {
        txt = "&"
        hint = "Start opened?"
        typ = "C"
        items = "Opened"$0D"Closed"
        values = "0"$0D"1"
      }
    }
    cof_puzzlebar4:form =
    {
      t_cof_puzzlebar4 = !
    }
    t_cof_puzzlebar5:incl =
    {
      bbox = '-8 -8 0 8 8 32'
      t_PlayerClass = !
      t_Targetname = !
      t_Targetx = !
      iuser3: =
      {
        txt = "&"
        hint = "Start opened?"
        typ = "C"
        items = "Opened"$0D"Closed"
        values = "0"$0D"1"
      }
    }
    cof_puzzlebar5:form =
    {
      t_cof_puzzlebar5 = !
    }
    t_cof_puzzlebarbutton:incl =
    {
      t_RenderFields = !
      message: =
      {
        txt = "&"
        hint = "Name of Camera"
      }
      target: =
      {
        txt = "&"
        hint = "Fire when puzzle done"
      }
    }
    cof_puzzlebarbutton:form =
    {
      t_cof_puzzlebarbutton = !
    }
    t_cof_randomtimedspawner:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Monster to spawn"
      }
      message: =
      {
        txt = "&"
        hint = "Name of ents to spawn at (max 16)"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Minimum time before spawn"
      }
      iuser2: =
      {
        txt = "&"
        hint = "Maximum time before spawn"
      }
      iuser4: =
      {
        txt = "&"
        hint = "Max nerds to spawn"
        typ = "C"
        items = "Infinite"
        values = "0"
      }
    }
    cof_randomtimedspawner:form =
    {
      t_cof_randomtimedspawner = !
    }
    t_cof_simonspeak:incl =
    {
      t_Targetname = !
      noise: =
      {
        txt = "&"
        hint = "Sound to use"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Audio channel"
        typ = "C"
        items = "CHAN_AUTO"$0D"CHAN_WEAPON"$0D"CHAN_VOICE"$0D"CHAN_ITEM"$0D"CH"
         "AN_BODY"$0D"CHAN_STREAM"$0D"CHAN_STATIC"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
      fuser1: =
      {
        txt = "&"
        hint = "Volume"
      }
    }
    cof_simonspeak:form =
    {
      t_cof_simonspeak = !
    }
    t_cof_simpletext:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Text to display"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Colour"
        typ = "C"
        items = "Yellow"$0D"Blue"$0D"Red"$0D"Yellow"$0D"Green"$0D"Grey"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "All players"
      }
    }
    cof_simpletext:form =
    {
      t_cof_simpletext = !
    }
    t_cof_skipmanager:incl =
    {
      t_Targetname = !
      entity: =
      {
        txt = "&"
        hint = "Entity to trigger"
      }
      aweapon: =
      {
        txt = "&"
        hint = "Weapon to give"
      }
      bweapon: =
      {
        txt = "&"
        hint = "Second weapon to give"
      }
      cweapon: =
      {
        txt = "&"
        hint = "Third weapon to give"
      }
      aitem: =
      {
        txt = "&"
        hint = "Item to give"
      }
      bitem: =
      {
        txt = "&"
        hint = "Second item to give"
      }
      citem: =
      {
        txt = "&"
        hint = "Third item to give"
      }
      teleport: =
      {
        txt = "&"
        hint = "Teleport entity"
      }
    }
    cof_skipmanager:form =
    {
      t_cof_skipmanager = !
    }
    t_cof_slowmotion:incl =
    {
      t_Targetname = !
      health: =
      {
        txt = "&"
        hint = "Slow motion speed"
      }
    }
    cof_slowmotion:form =
    {
      t_cof_slowmotion = !
    }
    t_cof_startdoctormode:incl =
    {
      t_Targetname = !
    }
    cof_startdoctormode:form =
    {
      t_cof_startdoctormode = !
    }
    t_cof_stats:incl =
    {
      t_Targetname = !
    }
    cof_stats:form =
    {
      t_cof_stats = !
    }
    t_cof_stopwheelchair:incl =
    {
      t_Targetname = !
    }
    cof_stopwheelchair:form =
    {
      t_cof_stopwheelchair = !
    }
    t_cof_strangle:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Fire after killing"
      }
      message: =
      {
        txt = "&"
        hint = "Name of boss healthbar monster"
      }
    }
    cof_strangle:form =
    {
      t_cof_strangle = !
    }
    t_cof_stresstest:incl =
    {
      t_Targetname = !
    }
    cof_stresstest:form =
    {
      t_cof_stresstest = !
    }
    t_cof_survivalmode:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Trigger when won"
      }
      target: =
      {
        txt = "&"
        hint = "Trigger when all die"
      }
      iuser1: =
      {
        txt = "&"
        hint = "How long to survive (secs)"
      }
    }
    cof_survivalmode:form =
    {
      t_cof_survivalmode = !
    }
    t_cof_updatekeypad:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of tortyrscen2.mdl monster"
      }
    }
    cof_updatekeypad:form =
    {
      t_cof_updatekeypad = !
    }
    t_cof_telephone:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Trigger after right number dialed"
      }
    }
    cof_telephone:form =
    {
      t_cof_telephone = !
    }
    t_cof_telescope:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Entity to view from"
      }
    }
    cof_telescope:form =
    {
      t_cof_telescope = !
    }
    t_cof_telescope_camera:incl =
    {
      t_Targetname = !
    }
    cof_telescope_camera:form =
    {
      t_cof_telescope_camera = !
    }
    t_cof_killmp3:incl =
    {
      t_Targetname = !
      frags: =
      {
        txt = "&"
        hint = "Music fade out time"
        typ = "C"
        items = "Instant"
        values = "0"
      }
    }
    cof_killmp3:form =
    {
      t_cof_killmp3 = !
    }
    t_cof_telescope_cancel:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of cof_telescope to cancel"
      }
    }
    cof_telescope_cancel:form =
    {
      t_cof_telescope_cancel = !
    }
    t_cof_ladderclimb:incl =
    {
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Up/down"
        typ = "C"
        items = "Up"$0D"Down"
        values = "0"$0D"1"
      }
    }
    cof_ladderclimb:form =
    {
      t_cof_ladderclimb = !
    }
    t_cof_ladder_manager:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Targetname = !
      t_Targetx = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_Sequence = !
      model: =
      {
        txt = "&"
        hint = "Model name"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      animation1: =
      {
        txt = "&"
        hint = "Animation 1"
      }
      animation2: =
      {
        txt = "&"
        hint = "Animation 2"
      }
      animation3: =
      {
        txt = "&"
        hint = "Animation 3"
      }
      animation4: =
      {
        txt = "&"
        hint = "Animation 4"
      }
      animation5: =
      {
        txt = "&"
        hint = "Animation 5"
      }
      animation6: =
      {
        txt = "&"
        hint = "Animation 6"
      }
      animation7: =
      {
        txt = "&"
        hint = "Animation 7"
      }
      animation8: =
      {
        txt = "&"
        hint = "Animation 8"
      }
      animation9: =
      {
        txt = "&"
        hint = "Animation 9"
      }
      animation10: =
      {
        txt = "&"
        hint = "Animation 10"
      }
      animation11: =
      {
        txt = "&"
        hint = "Animation 11"
      }
      animation12: =
      {
        txt = "&"
        hint = "Animation 12"
      }
      animation13: =
      {
        txt = "&"
        hint = "Animation 13"
      }
      animation14: =
      {
        txt = "&"
        hint = "Animation 14"
      }
      animation15: =
      {
        txt = "&"
        hint = "Animation 15"
      }
      animation16: =
      {
        txt = "&"
        hint = "Animation 16"
      }
      animation17: =
      {
        txt = "&"
        hint = "Animation 17"
      }
      animation18: =
      {
        txt = "&"
        hint = "Animation 18"
      }
      animation19: =
      {
        txt = "&"
        hint = "Animation 19"
      }
      animation20: =
      {
        txt = "&"
        hint = "Animation 20"
      }
      animation21: =
      {
        txt = "&"
        hint = "Animation 21"
      }
      animation22: =
      {
        txt = "&"
        hint = "Animation 22"
      }
      animation23: =
      {
        txt = "&"
        hint = "Animation 23"
      }
      animation24: =
      {
        txt = "&"
        hint = "Animation 24"
      }
      animation25: =
      {
        txt = "&"
        hint = "Animation 25"
      }
      animation26: =
      {
        txt = "&"
        hint = "Animation 26"
      }
      animation27: =
      {
        txt = "&"
        hint = "Animation 27"
      }
      animation28: =
      {
        txt = "&"
        hint = "Animation 28"
      }
      animation29: =
      {
        txt = "&"
        hint = "Animation 29"
      }
      animation30: =
      {
        txt = "&"
        hint = "Animation 30"
      }
      customoff: =
      {
        txt = "&"
        hint = "Custom Off animation"
      }
      customon: =
      {
        txt = "&"
        hint = "Custom On animation"
      }
      customoffd: =
      {
        txt = "&"
        hint = "Custom Off DESCEND animation"
      }
      customond: =
      {
        txt = "&"
        hint = "Custom On DESCEND animation"
      }
      descendoffset: =
      {
        txt = "&"
        hint = "Number of units to start descent"
      }
      topent: =
      {
        txt = "&"
        hint = "Entity to end at(top)"
      }
      bottoment: =
      {
        txt = "&"
        hint = "Entity to end at(bottom)"
      }
    }
    cof_ladder_manager:form =
    {
      t_cof_ladder_manager = !
    }
    t_cof_ladder_manager_use:incl =
    {
      t_Targetname = !
      t_RenderFields = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Up AND down"
      }
      target: =
      {
        txt = "&"
        hint = "Name of cof_ladder_manager"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Up/Down"
        typ = "C"
        items = "Up"$0D"Down"
        values = "0"$0D"1"
      }
    }
    cof_ladder_manager_use:form =
    {
      t_cof_ladder_manager_use = !
    }
    t_cof_lensflare:incl =
    {
      t_Targetname = !
    }
    cof_lensflare:form =
    {
      t_cof_lensflare = !
    }
    t_cof_leveltrigger:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of entity to trigger"
      }
      map: =
      {
        txt = "&"
        hint = "Name of map to trigger it on"
      }
    }
    cof_leveltrigger:form =
    {
      t_cof_leveltrigger = !
    }
    t_cof_lobby_start:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Name of entity to trigger"
      }
    }
    cof_lobby_start:form =
    {
      t_cof_lobby_start = !
    }
    t_cof_logo:incl =
    {
      t_Targetname = !
      frags: =
      {
        txt = "&"
        hint = "Logo or Name"
        typ = "C"
        items = "CoF Logo"$0D"Andreas"$0D"James"$0D"Jordy"$0D"Stig"$0D"Lasse"$0D
         "Aina"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
    }
    cof_logo:form =
    {
      t_cof_logo = !
    }
    t_cof_lookat:incl =
    {
      t_Targetname = !
      fuser1: =
      {
        txt = "&"
        hint = "How long to look for (seconds)"
      }
    }
    cof_lookat:form =
    {
      t_cof_lookat = !
    }
    t_cof_maxhealthchange:incl =
    {
      t_Targetname = !
      impulse: =
      {
        txt = "&"
        hint = "Max health"
        typ = "C"
        items = "100%"$0D"80%"$0D"66%"
        values = "0"$0D"1"$0D"2"
      }
    }
    cof_maxhealthchange:form =
    {
      t_cof_maxhealthchange = !
    }
    t_cof_phonecheck:incl =
    {
      t_Targetname = !
      t_Target = !
      impulse: =
      {
        txt = "&"
        hint = "Number to call"
      }
      noise: =
      {
        txt = "&"
        hint = "Play sound when triggered"
      }
      iuser1: =
      {
        txt = "&"
        hint = "Max distance"
      }
      frags: =
      {
        txt = "&"
        hint = "Distance based?"
        typ = "C"
        items = "Yes"$0D"No"
        values = "0"$0D"1"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Infinite use"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Call from anywhere"
      }
    }
    cof_phonecheck:form =
    {
      t_cof_phonecheck = !
    }
    t_cof_playerbreathetoggle:incl =
    {
      t_Targetname = !
      frags: =
      {
        txt = "&"
        hint = "Turn breathing on/off"
        typ = "C"
        items = "Off"$0D"On"
        values = "0"$0D"1"
      }
    }
    cof_playerbreathetoggle:form =
    {
      t_cof_playerbreathetoggle = !
    }
    t_cof_serversettings:incl =
    {
      t_Targetname = !
    }
    cof_serversettings:form =
    {
      t_cof_serversettings = !
    }
    t_cof_speedchange:incl =
    {
      t_Targetname = !
      t_Target = !
      speed: =
      {
        txt = "&"
        hint = "Speed to set"
      }
    }
    cof_speedchange:form =
    {
      t_cof_speedchange = !
    }
    t_cof_teleport:incl =
    {
      t_Targetname = !
      target: =
      {
        txt = "&"
        hint = "Teleport Destination"
      }
      message: =
      {
        txt = "&"
        hint = "Name of entity to teleport (blank = player)"
      }
    }
    cof_teleport:form =
    {
      t_cof_teleport = !
    }
    t_cof_trainprop:incl =
    {
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Direction to go along"
        typ = "C"
        items = "X Axis"$0D"Y Axis"$0D"Z Axis"
        values = "0"$0D"1"$0D"2"
      }
      iuser3: =
      {
        txt = "&"
        hint = "How far to go, in units"
      }
      fuser1: =
      {
        txt = "&"
        hint = "Speed (units/frame)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Hill"
      }
    }
    cof_trainprop:form =
    {
      t_cof_trainprop = !
    }
    t_cof_triggeron:incl =
    {
      t_Targetname = !
      t_Target = !
    }
    cof_triggeron:form =
    {
      t_cof_triggeron = !
    }
    t_cof_yesno:incl =
    {
      t_Targetname = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Remove weapon/item"
      }
      message: =
      {
        txt = "&"
        hint = ".tga to use for panel"
      }
      target: =
      {
        txt = "&"
        hint = "Target (Yes)"
      }
      notrigger: =
      {
        txt = "&"
        hint = "Target (No)"
      }
      cvarset: =
      {
        txt = "&"
        hint = "Cvar to set Yes? (sv_cheats for example)"
      }
      cvarvalue: =
      {
        txt = "&"
        hint = "Value of cvar to set Yes (1 for example)"
      }
      cvarsetno: =
      {
        txt = "&"
        hint = "Cvar to set No? (sv_cheats for example)"
      }
      cvarvalueno: =
      {
        txt = "&"
        hint = "Value of cvar to set No (1 for example)"
      }
      weaponneed: =
      {
        txt = "&"
        hint = "Weapon needed to show yes/no (weapon_mobile for example)"
      }
      itemneed: =
      {
        txt = "&"
        hint = "Item needed to show yes/no (inventoryitems/test.txt for exampl"
         "e)"
      }
      noitemmsg: =
      {
        txt = "&"
        hint = "Message displayed when don't have weapon/item needed"
      }
    }
    cof_yesno:form =
    {
      t_cof_yesno = !
    }
    t_cof_weaponswitch:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Weapon (eg weapon_mobile)"
      }
    }
    cof_weaponswitch:form =
    {
      t_cof_weaponswitch = !
    }
    t_cof_weapontrigger:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Weapon needed (eg weapon_mobile)"
      }
      target: =
      {
        txt = "&"
        hint = "Trigger if we DO have weapon"
      }
      noise: =
      {
        txt = "&"
        hint = "Trigger if we DON'T have weapon"
      }
    }
    cof_weapontrigger:form =
    {
      t_cof_weapontrigger = !
    }
    t_cof_wheelchairmode:incl =
    {
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Entity to spawn wheelchair at"
      }
    }
    cof_wheelchairmode:form =
    {
      t_cof_wheelchairmode = !
    }
    t_cutscene_model:incl =
    {
      bbox = '-8 -8 0 8 8 16'
      t_RenderFields = !
      t_Targetname = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "No anim blend"
      }
      model: =
      {
        txt = "&"
        hint = "Model name"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      animation1: =
      {
        txt = "&"
        hint = "Animation 1"
      }
      animation2: =
      {
        txt = "&"
        hint = "Animation 2"
      }
      animation3: =
      {
        txt = "&"
        hint = "Animation 3"
      }
      animation4: =
      {
        txt = "&"
        hint = "Animation 4"
      }
      animation5: =
      {
        txt = "&"
        hint = "Animation 5"
      }
      animation6: =
      {
        txt = "&"
        hint = "Animation 6"
      }
      animation7: =
      {
        txt = "&"
        hint = "Animation 7"
      }
      animation8: =
      {
        txt = "&"
        hint = "Animation 8"
      }
      animation9: =
      {
        txt = "&"
        hint = "Animation 9"
      }
      animation10: =
      {
        txt = "&"
        hint = "Animation 10"
      }
      animation11: =
      {
        txt = "&"
        hint = "Animation 11"
      }
      animation12: =
      {
        txt = "&"
        hint = "Animation 12"
      }
      animation13: =
      {
        txt = "&"
        hint = "Animation 13"
      }
      animation14: =
      {
        txt = "&"
        hint = "Animation 14"
      }
      animation15: =
      {
        txt = "&"
        hint = "Animation 15"
      }
      animation16: =
      {
        txt = "&"
        hint = "Animation 16"
      }
      animation17: =
      {
        txt = "&"
        hint = "Animation 17"
      }
      animation18: =
      {
        txt = "&"
        hint = "Animation 18"
      }
      animation19: =
      {
        txt = "&"
        hint = "Animation 19"
      }
      animation20: =
      {
        txt = "&"
        hint = "Animation 20"
      }
      animation21: =
      {
        txt = "&"
        hint = "Animation 21"
      }
      animation22: =
      {
        txt = "&"
        hint = "Animation 22"
      }
      animation23: =
      {
        txt = "&"
        hint = "Animation 23"
      }
      animation24: =
      {
        txt = "&"
        hint = "Animation 24"
      }
      animation25: =
      {
        txt = "&"
        hint = "Animation 25"
      }
      animation26: =
      {
        txt = "&"
        hint = "Animation 26"
      }
      animation27: =
      {
        txt = "&"
        hint = "Animation 27"
      }
      animation28: =
      {
        txt = "&"
        hint = "Animation 28"
      }
      animation29: =
      {
        txt = "&"
        hint = "Animation 29"
      }
      animation30: =
      {
        txt = "&"
        hint = "Animation 30"
      }
    }
    cutscene_model:form =
    {
      t_cutscene_model = !
    }
    t_dripper:incl =
    {
      t_Targetname = !
      fuser1: =
      {
        txt = "&"
        hint = "Drip speed"
      }
    }
    dripper:form =
    {
      t_dripper = !
    }
    t_func_fogfield:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      _minlight: =
      {
        txt = "&"
        hint = "Minimum light level"
      }
      axis: =
      {
        txt = "&"
        hint = "NOT USED Axis"
        typ = "C"
        items = "X/Y - Left/right"$0D"Z - Up"
        values = "1"$0D"2"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Start on"
      }
    }
    func_fogfield:form =
    {
      t_func_fogfield = !
    }
    t_func_timer:incl =
    {
      t_Targetname = !
      iuser1: =
      {
        txt = "&"
        hint = "Start or Finish"
        typ = "C"
        items = "Start timer"$0D"Finish timer"
        values = "0"$0D"1"
      }
    }
    func_timer:form =
    {
      t_func_timer = !
    }
    t_func_trainbutts:incl =
    {
      t_Targetname = !
      t_MoveWith = !
      t_RenderFields = !
      t_ZHLTLightKeys = !
      iuser1: =
      {
        txt = "&"
        hint = "Direction to go along"
        typ = "C"
        items = "X Axis"$0D"Y Axis"$0D"Z Axis"
        values = "0"$0D"1"$0D"2"
      }
      iuser3: =
      {
        txt = "&"
        hint = "How far to go, in units"
      }
      fuser1: =
      {
        txt = "&"
        hint = "Speed (units/frame)"
      }
    }
    func_trainbutts:form =
    {
      t_func_trainbutts = !
    }
    t_info_roofboss_target:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      t_MoveWith = !
    }
    info_roofboss_target:form =
    {
      t_info_roofboss_target = !
    }
    t_real_camera:incl =
    {
      bbox = '-32 -32 0 32 32 72'
      t_PlayerClass = !
      t_Targetname = !
      message: =
      {
        txt = "&"
        hint = "Animation to play when used"
      }
    }
    real_camera:form =
    {
      t_real_camera = !
    }
    t_statue_eagle:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_Sequence = !
      startpos: =
      {
        txt = "&"
        hint = "Starting Position"
        typ = "C"
        items = "Centre"$0D"Left"$0D"Up"$0D"Right"$0D"Down"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
    }
    statue_eagle:form =
    {
      t_statue_eagle = !
    }
    t_statue_horse:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_Sequence = !
      startpos: =
      {
        txt = "&"
        hint = "Starting Position"
        typ = "C"
        items = "Centre"$0D"Left"$0D"Up"$0D"Right"$0D"Down"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
    }
    statue_horse:form =
    {
      t_statue_horse = !
    }
    t_statue_lion:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_Sequence = !
      startpos: =
      {
        txt = "&"
        hint = "Starting Position"
        typ = "C"
        items = "Centre"$0D"Left"$0D"Up"$0D"Right"$0D"Down"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
    }
    statue_lion:form =
    {
      t_statue_lion = !
    }
    t_statue_owl:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      t_Sequence = !
      startpos: =
      {
        txt = "&"
        hint = "Starting Position"
        typ = "C"
        items = "Centre"$0D"Left"$0D"Up"$0D"Right"$0D"Down"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
    }
    statue_owl:form =
    {
      t_statue_owl = !
    }
    t_statue_puzzle_complete:incl =
    {
      t_Targetname = !
      t_Target = !
    }
    statue_puzzle_complete:form =
    {
      t_statue_puzzle_complete = !
    }
    t_subtitle_main:incl =
    {
      t_Targetname = !
      linenumber: =
      {
        txt = "&"
        hint = "Subtitle Line Number"
      }
    }
    subtitle_main:form =
    {
      t_subtitle_main = !
    }
    t_subtitle_linechange:incl =
    {
      bbox = '-4 -4 -4 4 4 4'
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      linechange: =
      {
        txt = "&"
        hint = "Subtitle line to use"
      }
    }
    subtitle_linechange:form =
    {
      t_subtitle_linechange = !
    }
    t_subtitle_multiple:incl =
    {
      t_Targetname = !
      subtitlenumber1: =
      {
        txt = "&"
        hint = "Subtile line 1"
      }
      subtitlenumber2: =
      {
        txt = "&"
        hint = "Subtile line 2"
      }
      subtitlenumber3: =
      {
        txt = "&"
        hint = "Subtile line 3"
      }
      subtitlenumber4: =
      {
        txt = "&"
        hint = "Subtile line 4"
      }
      subtitlenumber5: =
      {
        txt = "&"
        hint = "Subtile line 5"
      }
      subtitlenumber6: =
      {
        txt = "&"
        hint = "Subtile line 6"
      }
      subtitlenumber7: =
      {
        txt = "&"
        hint = "Subtile line 7"
      }
      subtitlenumber8: =
      {
        txt = "&"
        hint = "Subtile line 8"
      }
      subtitlenumber9: =
      {
        txt = "&"
        hint = "Subtile line 9"
      }
      subtitlenumber10: =
      {
        txt = "&"
        hint = "Subtile line 10"
      }
      subtitlenumber11: =
      {
        txt = "&"
        hint = "Subtile line 11"
      }
      subtitlenumber12: =
      {
        txt = "&"
        hint = "Subtile line 12"
      }
      subtitlenumber13: =
      {
        txt = "&"
        hint = "Subtile line 13"
      }
      subtitlenumber14: =
      {
        txt = "&"
        hint = "Subtile line 14"
      }
      subtitlenumber15: =
      {
        txt = "&"
        hint = "Subtile line 15"
      }
      subtitlenumber16: =
      {
        txt = "&"
        hint = "Subtile line 16"
      }
      subtitlenumber17: =
      {
        txt = "&"
        hint = "Subtile line 17"
      }
      subtitlenumber18: =
      {
        txt = "&"
        hint = "Subtile line 18"
      }
      subtitlenumber19: =
      {
        txt = "&"
        hint = "Subtile line 19"
      }
      subtitlenumber20: =
      {
        txt = "&"
        hint = "Subtile line 20"
      }
      subtitlenumber21: =
      {
        txt = "&"
        hint = "Subtile line 21"
      }
      subtitlenumber22: =
      {
        txt = "&"
        hint = "Subtile line 22"
      }
      subtitlenumber23: =
      {
        txt = "&"
        hint = "Subtile line 23"
      }
      subtitlenumber24: =
      {
        txt = "&"
        hint = "Subtile line 24"
      }
      subtitlenumber25: =
      {
        txt = "&"
        hint = "Subtile line 25"
      }
      subtitlenumber26: =
      {
        txt = "&"
        hint = "Subtile line 26"
      }
      subtitlenumber27: =
      {
        txt = "&"
        hint = "Subtile line 27"
      }
      subtitlenumber28: =
      {
        txt = "&"
        hint = "Subtile line 28"
      }
      subtitlenumber29: =
      {
        txt = "&"
        hint = "Subtile line 29"
      }
      subtitlenumber30: =
      {
        txt = "&"
        hint = "Subtile line 30"
      }
      subtitlenumber31: =
      {
        txt = "&"
        hint = "Subtile line 31"
      }
      subtitlenumber32: =
      {
        txt = "&"
        hint = "Subtile line 32"
      }
      subtitletime1: =
      {
        txt = "&"
        hint = "Time until line 1"
      }
      subtitletime2: =
      {
        txt = "&"
        hint = "Time until line 2"
      }
      subtitletime3: =
      {
        txt = "&"
        hint = "Time until line 3"
      }
      subtitletime4: =
      {
        txt = "&"
        hint = "Time until line 4"
      }
      subtitletime5: =
      {
        txt = "&"
        hint = "Time until line 5"
      }
      subtitletime6: =
      {
        txt = "&"
        hint = "Time until line 6"
      }
      subtitletime7: =
      {
        txt = "&"
        hint = "Time until line 7"
      }
      subtitletime8: =
      {
        txt = "&"
        hint = "Time until line 8"
      }
      subtitletime9: =
      {
        txt = "&"
        hint = "Time until line 9"
      }
      subtitletime10: =
      {
        txt = "&"
        hint = "Time until line 10"
      }
      subtitletime11: =
      {
        txt = "&"
        hint = "Time until line 11"
      }
      subtitletime12: =
      {
        txt = "&"
        hint = "Time until line 12"
      }
      subtitletime13: =
      {
        txt = "&"
        hint = "Time until line 13"
      }
      subtitletime14: =
      {
        txt = "&"
        hint = "Time until line 14"
      }
      subtitletime15: =
      {
        txt = "&"
        hint = "Time until line 15"
      }
      subtitletime16: =
      {
        txt = "&"
        hint = "Time until line 16"
      }
      subtitletime17: =
      {
        txt = "&"
        hint = "Time until line 17"
      }
      subtitletime18: =
      {
        txt = "&"
        hint = "Time until line 18"
      }
      subtitletime19: =
      {
        txt = "&"
        hint = "Time until line 19"
      }
      subtitletime20: =
      {
        txt = "&"
        hint = "Time until line 20"
      }
      subtitletime21: =
      {
        txt = "&"
        hint = "Time until line 21"
      }
      subtitletime22: =
      {
        txt = "&"
        hint = "Time until line 22"
      }
      subtitletime23: =
      {
        txt = "&"
        hint = "Time until line 23"
      }
      subtitletime24: =
      {
        txt = "&"
        hint = "Time until line 24"
      }
      subtitletime25: =
      {
        txt = "&"
        hint = "Time until line 25"
      }
      subtitletime26: =
      {
        txt = "&"
        hint = "Time until line 26"
      }
      subtitletime27: =
      {
        txt = "&"
        hint = "Time until line 27"
      }
      subtitletime28: =
      {
        txt = "&"
        hint = "Time until line 28"
      }
      subtitletime29: =
      {
        txt = "&"
        hint = "Time until line 29"
      }
      subtitletime30: =
      {
        txt = "&"
        hint = "Time until line 30"
      }
      subtitletime31: =
      {
        txt = "&"
        hint = "Time until line 31"
      }
      subtitletime32: =
      {
        txt = "&"
        hint = "Time until line 32"
      }
    }
    subtitle_multiple:form =
    {
      t_subtitle_multiple = !
    }
    t_tape_recorder:incl =
    {
      t_Targetname = !
      t_Angles = !
      t_MoveWith = !
      t_RenderFields = !
      model: =
      {
        txt = "&"
        hint = "Different Model?"
        typ = "B"
        Cap = "models..."
        form = "t_models_hl2_form:form"
      }
      message: =
      {
        txt = "&"
        hint = "Location"
      }
      custommsg: =
      {
        txt = "&"
        hint = "Custom first message"
      }
      skin: =
      {
        txt = "&"
        hint = "Skin"
      }
      body: =
      {
        txt = "&"
        hint = "Body"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Alley Recorder"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Don't drop"
      }
    }
    tape_recorder:form =
    {
      t_tape_recorder = !
    }
    t_trigger_checkbrush:incl =
    {
      t_Targetname = !
      t_RenderFields = !
      message: =
      {
        txt = "&"
        hint = "Text to Display"
      }
      usesound: =
      {
        txt = "&"
        hint = "Sound when used (if wanted)"
      }
      checkdelay: =
      {
        txt = "&"
        hint = "Minimum time between each +use"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Code msg?"
      }
    }
    trigger_checkbrush:form =
    {
      t_trigger_checkbrush = !
    }
    t_trigger_statueuse:incl =
    {
      t_Targetname = !
      t_RenderFields = !
      t_Master = !
      statuetype: =
      {
        txt = "&"
        hint = "Statue/Sign Type"
        typ = "C"
        items = "Eagle"$0D"Horse"$0D"Lion"$0D"Owl"$0D"You Are Here"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
    }
    trigger_statueuse:form =
    {
      t_trigger_statueuse = !
    }
    t_trigger_subwaywall:incl =
    {
      t_Targetname = !
      t_RenderFields = !
      target: =
      {
        txt = "&"
        hint = "Fire when broken"
      }
      noise1: =
      {
        txt = "&"
        hint = "Sound when hit"
      }
      noise2: =
      {
        txt = "&"
        hint = "Sound when breaks"
      }
      frags: =
      {
        txt = "&"
        hint = "Number of hits to break"
      }
      message: =
      {
        txt = "&"
        hint = "Message when used"
      }
    }
    trigger_subwaywall:form =
    {
      t_trigger_subwaywall = !
    }
    t_weapon_axe:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Ending5b"
      }
    }
    weapon_axe:form =
    {
      t_weapon_axe = !
    }
    t_weapon_booklaser:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_booklaser:form =
    {
      t_weapon_booklaser = !
    }
    t_weapon_branch:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_branch:form =
    {
      t_weapon_branch = !
    }
    t_weapon_camera:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Unlockable"
      }
    }
    weapon_camera:form =
    {
      t_weapon_camera = !
    }
    t_weapon_famas:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_famas:form =
    {
      t_weapon_famas = !
    }
    t_weapon_flashlight:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_flashlight:form =
    {
      t_weapon_flashlight = !
    }
    t_weapon_flare:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_flare:form =
    {
      t_weapon_flare = !
    }
    t_weapon_lantern:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_lantern:form =
    {
      t_weapon_lantern = !
    }
    t_weapon_m16:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_m16:form =
    {
      t_weapon_m16 = !
    }
    t_weapon_mobile:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_mobile:form =
    {
      t_weapon_mobile = !
    }
    t_weapon_nightstick:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_nightstick:form =
    {
      t_weapon_nightstick = !
    }
    t_weapon_p345:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_p345:form =
    {
      t_weapon_p345 = !
    }
    t_weapon_revolver:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_revolver:form =
    {
      t_weapon_revolver = !
    }
    t_weapon_rifle:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_rifle:form =
    {
      t_weapon_rifle = !
    }
    t_weapon_shotgun:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_shotgun:form =
    {
      t_weapon_shotgun = !
    }
    t_weapon_sledgehammer:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_sledgehammer:form =
    {
      t_weapon_sledgehammer = !
    }
    t_weapon_syringe:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_syringe:form =
    {
      t_weapon_syringe = !
    }
    t_weapon_switchblade:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_switchblade:form =
    {
      t_weapon_switchblade = !
    }
    t_weapon_tmp:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_tmp:form =
    {
      t_weapon_tmp = !
    }
    t_weapon_vp70:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_vp70:form =
    {
      t_weapon_vp70 = !
    }
    t_weapon_glock:incl =
    {
      bbox = '-16 -16 -5 16 16 27'
      t_Weapon = !
      t_Targetx = !
      t_RenderFields = !
    }
    weapon_glock:form =
    {
      t_weapon_glock = !
    }
    t_info_simon_spawnpoint:incl =
    {
      t_PlayerClass = !
      t_MoveWith = !
      t_Sequence = !
    }
    info_simon_spawnpoint:form =
    {
      t_info_simon_spawnpoint = !
    }
    t_trigger_booksimon:incl =
    {
      t_Targetx = !
      message: =
      {
        txt = "&"
        hint = "Entity to spawn Sick Simon at"
      }
      target: =
      {
        txt = "&"
        hint = "Trigger when Sick Simon spawns"
      }
    }
    trigger_booksimon:form =
    {
      t_trigger_booksimon = !
    }
    t_monster_twitcher:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      t_Sequence = !
      body: =
      {
        txt = "&"
        hint = "Body"
        typ = "C"
        items = "Random"$0D"original"$0D"no"$0D"turken"$0D"nono"$0D"polisen"$0D
         "bruden"$0D"rymden"$0D"groenus"$0D"originalei"$0D"vitei"$0D"graglass"
        values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D
         "9"$0D"10"
      }
    }
    monster_twitcher:form =
    {
      t_monster_twitcher = !
    }
    t_monster_twitcher2:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      t_Sequence = !
      body: =
      {
        txt = "&"
        hint = "Body"
        typ = "C"
        items = "Random"$0D"original"$0D"no"$0D"turken"$0D"nono"$0D"polisen"$0D
         "bruden"$0D"rymden"$0D"groenus"$0D"originalei"$0D"vitei"$0D"graglass"
        values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D
         "9"$0D"10"
      }
    }
    monster_twitcher2:form =
    {
      t_monster_twitcher2 = !
    }
    t_monster_twitcher3:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      t_Sequence = !
      body: =
      {
        txt = "&"
        hint = "Body"
        typ = "C"
        items = "Random"$0D"original"$0D"no"$0D"turken"$0D"nono"$0D"polisen"$0D
         "bruden"$0D"rymden"$0D"groenus"$0D"originalei"$0D"vitei"$0D"graglass"
        values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D
         "9"$0D"10"
      }
    }
    monster_twitcher3:form =
    {
      t_monster_twitcher3 = !
    }
    t_monster_twitcher4:incl =
    {
      bbox = '-16 -16 0 16 16 72'
      t_Monster = !
      t_Sequence = !
      body: =
      {
        txt = "&"
        hint = "Body"
        typ = "C"
        items = "Random"$0D"original"$0D"no"$0D"turken"$0D"nono"$0D"polisen"$0D
         "bruden"$0D"rymden"$0D"groenus"$0D"originalei"$0D"vitei"$0D"graglass"
        values = "-1"$0D"0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D
         "9"$0D"10"
      }
    }
    monster_twitcher4:form =
    {
      t_monster_twitcher4 = !
    }
    t_aom_pills:incl =
    {
      bbox = '-16 -16 0 16 16 16'
      t_Targetname = !
    }
    aom_pills:form =
    {
      t_aom_pills = !
    }
  }
}
