QQRKSRC1
// This file has been written by QuArK QuArK 6.4 alpha
// It's the text version of file: DataTorque.qrk

{
  QuArKProtected = "1"
  Description = "Base Torque data"
  Torque setup.qctx =
  {
    Game = "Torque"
    HTML = "help\index.html"
  }
  NewFiles.qtx =
  {
    ToolBox = "New files..."
    Root = "Torque file types.qtxfolder"
    Torque file types.qtxfolder =
    {
      Pk3.pk3 =
      {
      }
    }
  }
  t_orig:incl =
  {
    origin = "0 0 0"
  }
  TorqueEntities.qtx =
  {
    ToolBox = "New map items..."
    Root = "Torque Entities.qtxfolder"
    Torque Entities.qtxfolder =
    {
      quarantine player scale:g =
      {
        _color = "1 0 0"
        ;view = "20"
        redbox:p =
        {
          side:f =
          {
            v = '-15.99997 15.99998 31.99998 -144.00000 15.99998 31.99998 -15.99997
              15.99998 160'
            tv = '-32 15.99998 -24 15.99998 -32 1.99999'
            tex = "stain1"
          }
          side:f =
          {
            v = '16.00003 15.99998 31.99998 16.00003 144.00000 31.99998 16.00003
              15.99998 160'
            tv = '-31.99998 15.99998 -23.99999 15.99998 -31.99998 1.99999'
            tex = "stain1"
          }
          side:f =
          {
            v = '0.00003 -16 31.99998 128.00000 -16 31.99998 0.00003 -16 160'
            tv = '-16 15.99998 -8 15.99998 -16 1.99999'
            tex = "stain1"
          }
          side:f =
          {
            v = '-15.99997 0 31.99998 -15.99997 -128 31.99998 -15.99997 0 160'
            tv = '-15.99998 15.99998 -7.99999 15.99998 -15.99998 1.99999'
            tex = "stain1"
          }
          front:f =
          {
            v = '-15.99997 15.99998 71.99998 112.00000 15.99998 71.99998 -15.99997
              144.00000 71.99998'
            tv = '-31.99998 0 -31.99998 8 -23.99999 0'
            tex = "stain1"
          }
          back:f =
          {
            v = '-15.99997 15.99998 16 112.00000 15.99998 16 -15.99997 -112 16'
            tv = '0 0 0 -8 -8 0'
            tex = "stain1"
          }
        }
      }
      Brush-based entities.qtxfolder =
      {
        detail:b =
        {
          ;incl = "brush64"
          ;desc = "Detail Brush Entity"
        }
        collision:b =
        {
          ;incl = "brush64"
          ;desc = "Collision Brush Entity"
        }
        vehicle_collision:b =
        {
          ;incl = "brush64"
          ;desc = "Vehicle Collision Brush Entity"
        }
        portal:b =
        {
          ;incl = "brush64"
          ;desc = "Portal Brush Entity"
          ambient_light = "0"
        }
      }
      light_* entities.qtxfolder =
      {
        light_emitter_point:e =
        {
          origin = "0 0 0"
          ;desc = "Point emitter"
          state_index = "0"
          falloff_type = "1"
          falloff1 = "10"
          falloff2 = "100"
          falloff3 = "0"
        }
        light_emitter_spot:e =
        {
          origin = "0 0 0"
          ;desc = "Spot emitter"
          direction = "0 0 -1"
          theta = "0.2"
          phi = "0.4"
        }
        light_omni:e =
        {
          origin = "0 0 0"
          ;desc = "Omni Light"
          color = "255 255 255"
          alarm_type = "0"
          falloff1 = "10"
          falloff2 = "100"
        }
        light_spot:e =
        {
          origin = "0 0 0"
          ;desc = "Spot Light"
          color = "255 255 255"
          alarm_type = "0"
          falloff1 = "10"
          falloff2 = "100"
          distance1 = "10"
          distance2 = "100"
        }
        light_strobe:e =
        {
          origin = "0 0 0"
          ;desc = "Strobe Light"
          spawnflags = "1"
          alarm_type = "0"
          color1 = "255 255 255"
          color2 = "0 0 0"
          falloff1 = "10"
          falloff2 = "100"
        }
        light_pulse:e =
        {
          origin = "0 0 0"
          ;desc = "Pulse Light"
          spawnflags = "1"
          alarm_type = "0"
          color1 = "255 255 255"
          color2 = "0 0 0"
          falloff1 = "10"
          falloff2 = "100"
        }
        light_pulse2:e =
        {
          origin = "0 0 0"
          ;desc = "Prog. Pulse Light"
          spawnflags = "1"
          alarm_type = "0"
          color1 = "255 255 255"
          color2 = "0 0 0"
          falloff1 = "10"
          falloff2 = "100"
          attack = "1.0"
          sustain1 = "1.0"
          decay = "1.0"
          sustain2 = "1.0"
        }
        light_flicker:e =
        {
          origin = "0 0 0"
          ;desc = "Flicker Light"
          spawnflags = "1"
          alarm_type = "0"
          color1 = "255 255 255"
          color2 = "0 0 0"
          color3 = "0 0 0"
          color4 = "0 0 0"
          color5 = "0 0 0"
          falloff1 = "10"
          falloff2 = "100"
        }
        light_runway:e =
        {
          origin = "0 0 0"
          ;desc = "Runway Light"
          color = "255 255 255"
          spawnflags = "1"
          alarm_type = "0"
          pingpong = "0"
          steps = "0"
          falloff1 = "10"
          falloff2 = "100"
        }
      }
      Special entities.qtxfolder =
      {
        MirrorSurface:e =
        {
          ;desc = "Mirror Surface Entity"
          origin = "0 0 0"
          alpha_level = "0"
        }
        target:e =
        {
          origin = "0 0 0"
          ;desc = "Target"
        }
        trigger:b =
        {
          ;incl = "brush64"
          ;desc = "Trigger Entity"
        }
        Door_Elevator:b =
        {
          ;incl = "brush64"
          ;desc = "Door or Elevator"
        }
        Force_Field:b =
        {
          ;incl = "brush64"
          ;desc = "Force Field"
          color = "125 216 232"
        }
        path_node:e =
        {
          origin = "0 0 0"
          ;desc = "Path Node"
          next_time = "1000"
        }
        path_start:e =
        {
          origin = "0 0 0"
          ;desc = "Path Start"
          next_time = "1000"
        }
        ai_special_node:e =
        {
          origin = "0 0 0"
          ;desc = "AI Special Node"
        }
      }
    }
  }
  Entity forms.qctx =
  {
    t_Targetname:incl =
    {
      name: =
      {
        txt = "&"
        hint = "Target source"
      }
    }
    t_Target:incl =
    {
      target: =
      {
        txt = "&"
        hint = "Target destination"
      }
    }
    t_LightAnimFlags:incl =
    {
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Auto start"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Loop to end frame"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Random frame"
      }
    }
    t_LightAnimSpeed:incl =
    {
      speed: =
      {
        txt = "&"
        hint = "Speed"
        typ = "C"
        items = "Very slow"$0D"Slow"$0D"Normal"$0D"Fast"$0D"Very fast"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
    }
    t_LightFalloffs:incl =
    {
    }
    worldspawn:form =
    {
      detail_number: =
      {
        txt = "&"
        hint = "Shape's detail (LOD 0-3) index"
      }
      min_pixels: =
      {
        txt = "&"
        hint = "Minimum pixels for detail"
      }
      geometry_scale: =
      {
        txt = "&"
        hint = "Geometry scale (32~1meter; must be a power of 2)"
      }
      light_geometry_scale: =
      {
        txt = "&"
        hint = "Lighting scale (32 good start; must be a power of 2)"
      }
      ambient_color: =
      {
        txt = "&"
        hint = "Ambient color (RGB)"
      }
      emergency_ambient_color: =
      {
        txt = "&"
        hint = "Emergency ambient color (RGB)"
      }
      mapversion: =
      {
        txt = "&"
        hint = "Set this to a value of '220',"$0D"if you want QuArK to write i"
         "n WorldCraft 3.3 .MAP format"
      }
    }
    detail:form =
    {
    }
    collision:form =
    {
    }
    vehicle_collision:form =
    {
    }
    portal:form =
    {
      ambient_light: =
      {
        txt = "&"
        hint = "Ambient Light"
        typ = "C"
        items = "Does not pass through"$0D"Passes through"
        values = "0"$0D"1"
      }
    }
    MirrorSurface:form =
    {
      alpha_level: =
      {
        txt = "&"
        hint = "Translucency"
        typ = "C"
        items = "Fully mirrored"$0D"AlphaLevel=0.167"$0D"AlphaLevel=0.33"$0D"A"
         "lphaLevel=0.5"$0D"AlphaLevel=0.67"$0D"AplhaLevel=0.83"$0D"Use textur"
         "e's alpha channel"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
    }
    target:form =
    {
      name: =
      {
        txt = "&"
        hint = "Target source"
      }
    }
    light_emitter_point:form =
    {
      target: =
      {
        txt = "&"
        hint = "Target destination"
      }
      state_index: =
      {
        txt = "&"
        hint = "State index"
      }
      falloff_type: =
      {
        txt = "&"
        hint = "Falloff type"
        typ = "C"
        items = "Distance"$0D"Linear"
        values = "0"$0D"1"
      }
      falloff1: =
      {
        txt = "&"
        hint = "Falloff1"
      }
      falloff2: =
      {
        txt = "&"
        hint = "Falloff2"
      }
      falloff3: =
      {
        txt = "&"
        hint = "Falloff3"
      }
    }
    light_emitter_spot:form =
    {
      target: =
      {
        txt = "&"
        hint = "Target destination"
      }
      direction: =
      {
        txt = "&"
        hint = "Direction"
      }
      theta: =
      {
        txt = "&"
        hint = "Inner angle"
      }
      phi: =
      {
        txt = "&"
        hint = "Outer angle"
      }
    }
    light_omni:form =
    {
      color: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color (R G B)"
      }
      alarm_type: =
      {
        txt = "&"
        hint = "Alarm Type"
        typ = "C"
        items = "Normal only"$0D"Alarm only"$0D"Both Alarm and Normal"
        values = "0"$0D"1"$0D"2"
      }
      falloff1: =
      {
        txt = "&"
        hint = "Falloff1"
      }
      falloff2: =
      {
        txt = "&"
        hint = "Falloff2"
      }
    }
    light_spot:form =
    {
      target: =
      {
        txt = "&"
        hint = "Target destination"
      }
      color: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color (R G B)"
      }
      alarm_type: =
      {
        txt = "&"
        hint = "Alarm Type"
        typ = "C"
        items = "Normal only"$0D"Alarm only"$0D"Both Alarm and Normal"
        values = "0"$0D"1"$0D"2"
      }
      falloff1: =
      {
        txt = "&"
        hint = "Falloff1"
      }
      falloff2: =
      {
        txt = "&"
        hint = "Falloff2"
      }
      distance1: =
      {
        txt = "&"
        hint = "Inner distance"
      }
      distance2: =
      {
        txt = "&"
        hint = "Outer distance"
      }
    }
    light_strobe:form =
    {
      name: =
      {
        txt = "&"
        hint = "Target source"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed"
        typ = "C"
        items = "Very slow"$0D"Slow"$0D"Normal"$0D"Fast"$0D"Very fast"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Auto start"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X2"
        cap = "Loop to end frame"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X4"
        cap = "Random frame"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Auto start"
      }
      alarm_type: =
      {
        txt = "&"
        hint = "Alarm Type"
        typ = "C"
        items = "Normal only"$0D"Alarm only"
        values = "0"$0D"1"
      }
      color1: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color1 (R G B)"
      }
      color2: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color2 (R G B)"
      }
      falloff1: =
      {
        txt = "&"
        hint = "Falloff1"
      }
      falloff2: =
      {
        txt = "&"
        hint = "Falloff2"
      }
    }
    light_pulse:form =
    {
      name: =
      {
        txt = "&"
        hint = "Target source"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed"
        typ = "C"
        items = "Very slow"$0D"Slow"$0D"Normal"$0D"Fast"$0D"Very fast"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Auto start"
      }
      alarm_type: =
      {
        txt = "&"
        hint = "Alarm Type"
        typ = "C"
        items = "Normal only"$0D"Alarm only"
        values = "0"$0D"1"
      }
      color1: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color1 (R G B)"
      }
      color2: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color2 (R G B)"
      }
      falloff1: =
      {
        txt = "&"
        hint = "Falloff1"
      }
      falloff2: =
      {
        txt = "&"
        hint = "Falloff2"
      }
    }
    light_pulse2:form =
    {
      name: =
      {
        txt = "&"
        hint = "Target source"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Auto start"
      }
      alarm_type: =
      {
        txt = "&"
        hint = "Alarm Type"
        typ = "C"
        items = "Normal only"$0D"Alarm only"
        values = "0"$0D"1"
      }
      color1: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color1 (R G B)"
      }
      color2: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color2 (R G B)"
      }
      falloff1: =
      {
        txt = "&"
        hint = "Falloff1"
      }
      falloff2: =
      {
        txt = "&"
        hint = "Falloff2"
      }
      attack: =
      {
        txt = "&"
        hint = "Attack"
      }
      sustain1: =
      {
        txt = "&"
        hint = "Sustain1"
      }
      decay: =
      {
        txt = "&"
        hint = "Decay"
      }
      sustain2: =
      {
        txt = "&"
        hint = "Sustain2"
      }
    }
    light_flicker:form =
    {
      name: =
      {
        txt = "&"
        hint = "Target source"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed"
        typ = "C"
        items = "Very slow"$0D"Slow"$0D"Normal"$0D"Fast"$0D"Very fast"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Auto start"
      }
      alarm_type: =
      {
        txt = "&"
        hint = "Alarm Type"
        typ = "C"
        items = "Normal only"$0D"Alarm only"
        values = "0"$0D"1"
      }
      color1: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color1 (R G B)"
      }
      color2: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color2 (R G B)"
      }
      color3: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color3 (R G B)"
      }
      color4: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color4 (R G B)"
      }
      color5: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color5 (R G B)"
      }
      falloff1: =
      {
        txt = "&"
        hint = "Falloff1"
      }
      falloff2: =
      {
        txt = "&"
        hint = "Falloff2"
      }
    }
    light_runway:form =
    {
      name: =
      {
        txt = "&"
        hint = "Target source"
      }
      target: =
      {
        txt = "&"
        hint = "Target destination"
      }
      speed: =
      {
        txt = "&"
        hint = "Speed"
        typ = "C"
        items = "Very slow"$0D"Slow"$0D"Normal"$0D"Fast"$0D"Very fast"
        values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      color: =
      {
        txt = "&"
        Typ = "L[3]"
        hint = "Color (R G B)"
      }
      spawnflags: =
      {
        txt = "&"
        typ = "X1"
        cap = "Auto start"
      }
      alarm_type: =
      {
        txt = "&"
        hint = "Alarm Type"
        typ = "C"
        items = "Normal only"$0D"Alarm only"
        values = "0"$0D"1"
      }
      pingpong: =
      {
        txt = "&"
        hint = "Ping pong?"
        typ = "C"
        items = "No"$0D"Yes"
        values = "0"$0D"1"
      }
      steps: =
      {
        txt = "&"
        hint = "Steps"
      }
      falloff1: =
      {
        txt = "&"
        hint = "Falloff1"
      }
      falloff2: =
      {
        txt = "&"
        hint = "Falloff2"
      }
    }
    trigger:form =
    {
      name: =
      {
        txt = "&"
        hint = "Trigger Name"
      }
    }
    Door_Elevator:form =
    {
      name: =
      {
        txt = "&"
        hint = "Name"
      }
      path_name: =
      {
        txt = "&"
        hint = "Path Description"
      }
      trigger0_name: =
      {
        txt = "&"
        hint = "Trigger 0"
      }
      trigger1_name: =
      {
        txt = "&"
        hint = "Trigger 1"
      }
      trigger2_name: =
      {
        txt = "&"
        hint = "Trigger 2"
      }
      trigger3_name: =
      {
        txt = "&"
        hint = "Trigger 3"
      }
      trigger4_name: =
      {
        txt = "&"
        hint = "Trigger 4"
      }
      trigger5_name: =
      {
        txt = "&"
        hint = "Trigger 5"
      }
      trigger6_name: =
      {
        txt = "&"
        hint = "Trigger 6"
      }
      trigger7_name: =
      {
        txt = "&"
        hint = "Trigger 7"
      }
    }
    Force_Field:form =
    {
      name: =
      {
        txt = "&"
        hint = "Name"
      }
      color: =
      {
        txt = "&"
        hint = "Field color"
      }
      trigger0_name: =
      {
        txt = "&"
        hint = "Trigger 0"
      }
      trigger1_name: =
      {
        txt = "&"
        hint = "Trigger 1"
      }
      trigger2_name: =
      {
        txt = "&"
        hint = "Trigger 2"
      }
      trigger3_name: =
      {
        txt = "&"
        hint = "Trigger 3"
      }
      trigger4_name: =
      {
        txt = "&"
        hint = "Trigger 4"
      }
      trigger5_name: =
      {
        txt = "&"
        hint = "Trigger 5"
      }
      trigger6_name: =
      {
        txt = "&"
        hint = "Trigger 6"
      }
      trigger7_name: =
      {
        txt = "&"
        hint = "Trigger 7"
      }
    }
    path_node:form =
    {
      name: =
      {
        txt = "&"
        hint = "Name"
      }
      next_node: =
      {
        txt = "&"
        hint = "Next Node"
      }
      next_time: =
      {
        txt = "&"
        hint = "MS to next node"
      }
    }
    path_start:form =
    {
      name: =
      {
        txt = "&"
        hint = "Name"
      }
      next_node: =
      {
        txt = "&"
        hint = "Next Node"
      }
      next_time: =
      {
        txt = "&"
        hint = "MS to next node"
      }
    }
    ai_special_node:form =
    {
      name: =
      {
        txt = "&"
        hint = "Name"
      }
    }
  }
  NewMap:incl =
  {
    Game = "Torque"
    Root = "worldspawn:b"
    worldspawn:b =
    {
      detail_number = "0"
      min_pixels = "250"
      geometry_scale = "32.0"
      light_geometry_scale = "32.0"
      ambient_color = "0 0 0"
      emergency_ambient_color = "0 0 0"
      mapversion = "220"
      sample_group:g =
      {
        regular_polys:g =
        {
          poly:p =
          {
            east:f =
            {
              v = '368 -224 64 368 -96 64 368 -224 192'
              tex = "concrete"
            }
            west:f =
            {
              v = '-352 -224 64 -352 -352 64 -352 -224 192'
              tex = "concrete"
            }
            north:f =
            {
              v = '32 -272 64 -96 -272 64 32 -272 192'
              tex = "concrete"
            }
            south:f =
            {
              v = '32 -288 64 160 -288 64 32 -288 192'
              tex = "concrete"
            }
            up:f =
            {
              v = '32 -224 144 160 -224 144 32 -96 144'
              tex = "concrete"
            }
            down:f =
            {
              v = '32 -224 0 160 -224 0 32 -352 0'
              tex = "concrete"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '368 336 64 368 464 64 368 336 192'
              tex = "concrete"
            }
            west:f =
            {
              v = '-352 336 64 -352 208 64 -352 336 192'
              tex = "concrete"
            }
            north:f =
            {
              v = '32 288 64 -96 288 64 32 288 192'
              tex = "concrete"
            }
            south:f =
            {
              v = '32 272 64 160 272 64 32 272 192'
              tex = "concrete"
            }
            up:f =
            {
              v = '32 336 144 160 336 144 32 464 144'
              tex = "concrete"
            }
            down:f =
            {
              v = '32 336 0 160 336 0 32 208 0'
              tex = "concrete"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '-352 320 64 -352 448 64 -352 320 192'
              tex = "concrete"
            }
            west:f =
            {
              v = '-368 320 64 -368 192 64 -368 320 192'
              tex = "concrete"
            }
            north:f =
            {
              v = '32 64 64 -96 64 64 32 64 192'
              tex = "concrete"
            }
            south:f =
            {
              v = '32 -64 64 160 -64 64 32 -64 192'
              tex = "concrete"
            }
            up:f =
            {
              v = '32 320 144 160 320 144 32 448 144'
              tex = "concrete"
            }
            down:f =
            {
              v = '32 320 128 160 320 128 32 192 128'
              tex = "concrete"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '-352 320 64 -352 448 64 -352 320 192'
              tex = "concrete"
            }
            west:f =
            {
              v = '-368 320 64 -368 192 64 -368 320 192'
              tex = "concrete"
            }
            north:f =
            {
              v = '32 288 64 -96 288 64 32 288 192'
              tex = "concrete"
            }
            south:f =
            {
              v = '32 64 64 160 64 64 32 64 192'
              tex = "concrete"
            }
            up:f =
            {
              v = '32 320 144 160 320 144 32 448 144'
              tex = "concrete"
            }
            down:f =
            {
              v = '32 320 0 160 320 0 32 192 0'
              tex = "concrete"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '-352 320 64 -352 448 64 -352 320 192'
              tex = "concrete"
            }
            west:f =
            {
              v = '-368 320 64 -368 192 64 -368 320 192'
              tex = "concrete"
            }
            north:f =
            {
              v = '32 -64 64 -96 -64 64 32 -64 192'
              tex = "concrete"
            }
            south:f =
            {
              v = '32 -288 64 160 -288 64 32 -288 192'
              tex = "concrete"
            }
            up:f =
            {
              v = '32 320 144 160 320 144 32 448 144'
              tex = "concrete"
            }
            down:f =
            {
              v = '32 320 0 160 320 0 32 192 0'
              tex = "concrete"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '384 320 64 384 448 64 384 320 192'
              tex = "concrete"
            }
            west:f =
            {
              v = '368 320 64 368 192 64 368 320 192'
              tex = "concrete"
            }
            north:f =
            {
              v = '768 288 64 640 288 64 768 288 192'
              tex = "concrete"
            }
            south:f =
            {
              v = '768 -288 64 896 -288 64 768 -288 192'
              tex = "concrete"
            }
            up:f =
            {
              v = '768 320 144 896 320 144 768 448 144'
              tex = "concrete"
            }
            down:f =
            {
              v = '768 320 0 896 320 0 768 192 0'
              tex = "concrete"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '384 320 208 384 448 208 384 320 336'
              tex = "concrete"
            }
            west:f =
            {
              v = '-368 320 208 -368 192 208 -368 320 336'
              tex = "concrete"
            }
            north:f =
            {
              v = '752 288 208 624 288 208 752 288 336'
              tex = "concrete"
            }
            south:f =
            {
              v = '752 -288 208 880 -288 208 752 -288 336'
              tex = "concrete"
            }
            up:f =
            {
              v = '752 320 160 880 320 160 752 448 160'
              tex = "concrete"
            }
            down:f =
            {
              v = '752 320 144 880 320 144 752 192 144'
              tex = "concrete"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '384 320 48 384 448 48 384 320 176'
              tex = "concrete"
            }
            west:f =
            {
              v = '-368 320 48 -368 192 48 -368 320 176'
              tex = "concrete"
            }
            north:f =
            {
              v = '752 288 48 624 288 48 752 288 176'
              tex = "concrete"
            }
            south:f =
            {
              v = '752 -288 48 880 -288 48 752 -288 176'
              tex = "concrete"
            }
            up:f =
            {
              v = '752 320 0 880 320 0 752 448 0'
              tex = "concrete"
            }
            down:f =
            {
              v = '752 320 -16 880 320 -16 752 192 -16'
              tex = "concrete"
            }
          }
        }
        portals:g =
        {
          portal:b =
          {
            ambient_light = "0"
            poly:p =
            {
              east:f =
              {
                v = '-360 8 64 -360 136 64 -360 8 192'
                tex = "NULL"
              }
              west:f =
              {
                v = '-362 8 64 -362 -120 64 -362 8 192'
                tex = "NULL"
              }
              north:f =
              {
                v = '-298 66 64 -426 66 64 -298 66 192'
                tex = "NULL"
              }
              south:f =
              {
                v = '-298 -66 64 -170 -66 64 -298 -66 192'
                tex = "NULL"
              }
              up:f =
              {
                v = '-298 8 130 -170 8 130 -298 136 130'
                tex = "NULL"
              }
              down:f =
              {
                v = '-298 8 -2 -170 8 -2 -298 -120 -2'
                tex = "NULL"
              }
            }
          }
        }
        detail_polys:g =
        {
          detail:b =
          {
            poly:p =
            {
              east:f =
              {
                v = '128 -48 64 128 80 64 128 -48 192'
                tex = "concrete"
              }
              west:f =
              {
                v = '96 -48 64 96 -176 64 96 -48 192'
                tex = "concrete"
              }
              north:f =
              {
                v = '160 -80 64 32 -80 64 160 -80 192'
                tex = "concrete"
              }
              south:f =
              {
                v = '160 -112 64 288 -112 64 160 -112 192'
                tex = "concrete"
              }
              up:f =
              {
                v = '160 -48 144 288 -48 144 160 80 144'
                tex = "concrete"
              }
              down:f =
              {
                v = '160 -48 0 288 -48 0 160 -176 0'
                tex = "concrete"
              }
            }
            poly:p =
            {
              east:f =
              {
                v = '-96 -48 64 -96 80 64 -96 -48 192'
                tex = "concrete"
              }
              west:f =
              {
                v = '-128 -48 64 -128 -176 64 -128 -48 192'
                tex = "concrete"
              }
              north:f =
              {
                v = '-64 -80 64 -192 -80 64 -64 -80 192'
                tex = "concrete"
              }
              south:f =
              {
                v = '-64 -112 64 64 -112 64 -64 -112 192'
                tex = "concrete"
              }
              up:f =
              {
                v = '-64 -48 144 64 -48 144 -64 80 144'
                tex = "concrete"
              }
              down:f =
              {
                v = '-64 -48 0 64 -48 0 -64 -176 0'
                tex = "concrete"
              }
            }
            poly:p =
            {
              east:f =
              {
                v = '-96 144 64 -96 272 64 -96 144 192'
                tex = "concrete"
              }
              west:f =
              {
                v = '-128 144 64 -128 16 64 -128 144 192'
                tex = "concrete"
              }
              north:f =
              {
                v = '-64 112 64 -192 112 64 -64 112 192'
                tex = "concrete"
              }
              south:f =
              {
                v = '-64 80 64 64 80 64 -64 80 192'
                tex = "concrete"
              }
              up:f =
              {
                v = '-64 144 144 64 144 144 -64 272 144'
                tex = "concrete"
              }
              down:f =
              {
                v = '-64 144 0 64 144 0 -64 16 0'
                tex = "concrete"
              }
            }
            poly:p =
            {
              east:f =
              {
                v = '128 144 64 128 272 64 128 144 192'
                tex = "concrete"
              }
              west:f =
              {
                v = '96 144 64 96 16 64 96 144 192'
                tex = "concrete"
              }
              north:f =
              {
                v = '160 112 64 32 112 64 160 112 192'
                tex = "concrete"
              }
              south:f =
              {
                v = '160 80 64 288 80 64 160 80 192'
                tex = "concrete"
              }
              up:f =
              {
                v = '160 144 144 288 144 144 160 272 144'
                tex = "concrete"
              }
              down:f =
              {
                v = '160 144 0 288 144 0 160 16 0'
                tex = "concrete"
              }
            }
          }
        }
        lights:g =
        {
          light_omni:e =
          {
            origin = "-224 176 64"
            color = "255 255 255"
            alarm_type = "0"
            falloff1 = "10"
            falloff2 = "200"
          }
          light_omni:e =
          {
            origin = "240 160 64"
            color = "255 255 255"
            alarm_type = "0"
            falloff1 = "10"
            falloff2 = "200"
          }
          light_omni:e =
          {
            origin = "224 -192 64"
            color = "255 255 255"
            alarm_type = "0"
            falloff1 = "10"
            falloff2 = "200"
          }
          light_omni:e =
          {
            origin = "-224 -192 64"
            color = "255 255 255"
            alarm_type = "0"
            falloff1 = "10"
            falloff2 = "200"
          }
          light_omni:e =
          {
            origin = "0 0 64"
            color = "255 255 255"
            alarm_type = "0"
            falloff1 = "10"
            falloff2 = "200"
          }
        }
      }
    }
  }
}
