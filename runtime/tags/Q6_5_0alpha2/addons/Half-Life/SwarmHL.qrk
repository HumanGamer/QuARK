QQRKSRC1

//$Header$

{
  // QuArK data add-on, made by decker@planetquake.com on request from "DarthBobo" <DarthBobo@swarm.edgegaming.com>
  //
  // http://www.planethalflife.com/swarm

  Description = "Swarm - Half-Life"

  SWM Entities.qtx =
  {
    ToolBox = "New map items..."
    Root = "Swarm Entities.qtxfolder"

    // "<name>:incl" is templates (@baseclass)
    t_orig_ang:incl = { origin="0 0 0" angle="360" }

//
// Entity declarations, and default-values
//
    Swarm Entities.qtxfolder =
    {
      	// "<classname>:e" is point-entities (@Pointclass)
      	// "<classname>:b" is brush-entities (@Solidclass)
        Teams.qtxfolder =
      	{
                swarm_team_human:e = { t_orig_ang=! ;desc="Swarm Human Team"
                        teamname = "Human"
                        limit_hgrunt = "32"
                        limit_hscientist = "32"
                        limit_hcommander = "32"
                        limit_hassassin = "32"
                }
                swarm_team_xen:e = { t_orig_ang=! ;desc="Swarm Xen Team"
                        teamname = "Xen"
                        limit_agrunt = "32"
                        limit_acontroller = "32"
                        limit_aslave = "32"
                        limit_agarg = "3"
                }
        }
        Mission Ents.qtxfolder =
        {
                swarm_map_data:e = { ;desc="Swarm Map Data"
                        scenarioorder = "1"
                        numrounds = "1"
                }
                swarm_scenario:e = { ;desc="Swarm Sceanrio"
                        spawnflags = "2"
                }
                swarm_mission_destination:b = { ;desc="Swarm Mission Destination" ;incl="defpoly" }
                swarm_capture_mission:b = { ;desc="Swarm CTO Mission" ;incl="defpoly"
                        model = "models/crystal.mdl"

                        stolenmessage = "%s stole the %s Crystal!"
                        noise         = "vox/buzwarn.wav"
                        stolenpitch   = "100"
                        stolenvolume  = "1.0"

                        returnedmessage = "%s returned the %s Crystal!"
                        noise1          = "vox/buzwarn.wav"
                        returnedpitch   = "100"
                        returnedvolume  = "1.0"

                        capturedmessage = "%s captured the %s Crystal!"
                        noise2          = "vox/capture.wav"
                        capturedpitch   = "100"
                        capturedvolume  =  "1.0"

                        droppedmessage  = "%s dropped the %s Crystal!"
                        noise3          = "vox/buzwarn.wav"
                        droppedpitch    = "100"
                        droppedvolume   = "1.0"
                }
                swarm_destroy_mission:e = { ;desc="Swarm DTO Mission"
                        capturedmessage = "%s destroyed the %s Crystal!"
                        noise2          = "vox/capture.wav"
                        capturedpitch   = "100"
                        capturedvolume  = "1.0"
                }
                swarm_escort_mission:e = { ;desc="Swarm ETP Mission"
                        stolenmessage   = "Escort %s of the %s team!"
                        noise           = "vox/buzwarn.wav"
                        stolenpitch     = "100"
                        stolenvolume    = "1.0"

                        capturedmessage = "%s of the %s escaped!"
                        noise2          = "vox/capture.wav"
                        capturedpitch   = "100"
                        capturedvolume  = "1.0"

                        droppedmessage  = "%s of the %s was killed by %s of the %s!"
                        noise3          = "vox/buzwarn.wav"
                        droppedpitch    = "100"
                        droppedvolume   = "1.0"
                }
                swarm_survive_mission:e = { ;desc="Swarm SUR Mission"
                        capturedmessage = "The %s survived!"
                        noise2          = "vox/capture.wav"
                        capturedpitch   = "100"
                        capturedvolume  = "1.0"

                        droppedmessage  = "The %s where eradicated!"
                        noise3          = "vox/buzwarn.wav"
                        droppedpitch    = "100"
                        droppedvolume   = "1.0"
                }
        }
        Spawn Points.qtxfolder =
        {
                  swarm_spawn_point:e             = { t_orig_ang=! ;desc="Swarm Spawn Point" }

//                swarm_spawnpt_human:e           = { t_orig_ang=! ;desc="Generic Human Spawn" }
//                swarm_spawnpt_hgrunt:e          = { t_orig_ang=! ;desc="Grunt Spawn"         }
//                swarm_spawnpt_hassassin:e       = { t_orig_ang=! ;desc="Assassin Spawn"      }
//                swarm_spawnpt_hscientist:e      = { t_orig_ang=! ;desc="Scientist Spawn"     }
//                swarm_spawnpt_hcommander:e      = { t_orig_ang=! ;desc="Commander Spawn"     }
//
//                swarm_spawnpt_xen:e             = { t_orig_ang=! ;desc="Generic Xen Spawn" }
//                swarm_spawnpt_atripod:e         = { t_orig_ang=! ;desc="Xen Grunt Spawn"   }
//                swarm_spawnpt_agarg:e           = { t_orig_ang=! ;desc="Gargantua Spawn"   }
//                swarm_spawnpt_aslave:e          = { t_orig_ang=! ;desc="Slave Spawn"       }
//                swarm_spawnpt_acontroller:e     = { t_orig_ang=! ;desc="Controller Spawn"  }
        }
        Trigger.qtxfolder =
        {
                swarm_trigger_regen:b = { ;desc="Trigger Regeneration" ;incl="defpoly"
                        dmg             = "-10"
                        delay           = "0"
                        damagetype      = "8388608"
                }
        }
        Ammo Packs.qtxfolder =
        {
                swarm_ammo_human_primary:e = { t_orig_ang=! ;desc="Human Primary Ammo"
                        spawnflags = "15"
                }
                swarm_ammo_human_secondary:e = { t_orig_ang=! ;desc="Human Secondary Ammo"
                        spawnflags = "511"
                }
                swarm_ammo_xen_primary:e = { t_orig_ang=! ;desc="Xen Primary Ammo"
                        spawnflags = "1"
                }
                swarm_ammo_xen_secondary:e = { t_orig_ang=! ;desc="Xen Secondary Ammo"
                        spawnflags = "3"
                }
        }
    }
  }

  Entity forms.qctx =
  {
//
// INCLs (Similar to WC's @BaseClass)
//
        t_targetname:incl       = { targetname: = { Txt="&" Hint="The name of this object, so others can 'target' it." } }
        t_target:incl           = { target:     = { Txt="&" Hint="Target(s) to activate, when this object is triggered" } }
        t_targetx:incl = {
                t_target = !
                delay: = { Txt="&" Hint="Delay before activating target(s)" }
                killtarget: = { txt="&" hint="KillTarget" }
        }
        t_Appearflags:incl = {
                spawnflags: = { typ="X2048" cap="Not in Deathmatch" hint="" }
        }
        t_Weapon:incl = {
                bbox = '-16 -16 0 16 16 32'
                t_targetname = !
		}

        t_SwarmBase:incl = {
                // Which scenario this swarm entity belongs to.
                scenarioid: = { Txt="&" Typ="C" Hint="Scenario"}
        }
        t_SwarmTeam:incl = {
                t_SwarmBase = !
                // Associated Team
                teamname: = { Txt="&" Hint="Team Name" }
        }
        t_SwarmMission:incl = {
                t_targetname = !
                t_target = !
                t_SwarmTeam = !

                spawnflags: = { typ="X1"  cap="End Round"         hint="Completing Mission will end round." }
                spawnflags: = { typ="X2"  cap="Start Off"         hint="Start Round Disabled." }
                spawnflags: = { typ="X4"  cap="Reset Counter"     hint="Completing Mission will reset counter." }
                spawnflags: = { typ="X8"  cap="Reset On Complete" hint="Reset Mission when destination reached." }
                spawnflags: = { typ="X16" cap="Auto Return"       hint="Automatically return object to start location when touched by player on objects team." }
                spawnflags: = { typ="X32" cap="Drop to Ground"       hint="Dropt to ground when spawning?" }

                // Points to award team when mission is completed.
                teampoints: = { txt="&" hint="Team Points" }

                // Bonus time for completing mission.
                timebonus: = { txt="&" hint="Time Bonus" }

                // Which scenario this swarm entity belongs to.
                nextscenario: = { Txt="&" Typ="C" Hint="Next Scenario" }
        }

//        t_SwarmSpawnPt:incl = {
//                t_targetname = !
//                t_SwarmTeam = !
//
//                spawnflags: = { typ="X1" cap="Allowed allied teams" hint="Allow teams to Ally"                                       }
//                spawnflags: = { typ="X2" cap="Missions Only"        hint="Require a mission targeted at this spwan point to use it." }
//        }
//        t_SwarmHumanPt:incl = {
//                t_SwarmSpawnPt = !
//                bbox = '-16 -16 -36 16 16 36'
//                teamname: = { txt="&" hint="Team Name" }
//        }
//        t_SwarmXenPt:incl = {
//                t_SwarmSpawnPt = !
//                teamname: = { txt="&" hint="Team Name" }
//        }


//
// Forms
//
	swarm_team_human:form = {
                t_targetname = !
                teamname:               = { txt="&" hint="Team Name" }
                limit_hgrunt:           = { txt="&" hint="Max Grunts (0 = none)" }
                limit_hscientist:       = { txt="&" hint="Max Scientist (0 = none)" }
                limit_hcommander:       = { txt="&" hint="Max Commander (0 = none)" }
                limit_hassassin:        = { txt="&" hint="Max Assassin (0 = none)" }
	}
        swarm_team_xen:form = {
                t_targetname = !
                teamname:               = { txt="&" hint="Team Name" }
                limit_agrunt:           = { txt="&" hint="Max Grunts (0 = none)" }
                limit_acontroller:      = { txt="&" hint="Max Controllers (0 = none)" }
                limit_aslave:           = { txt="&" hint="Max Slaves (0 = none)" }
                limit_agarg:            = { txt="&" hint="Max Gargs (0 = none)" }
	}
        swarm_map_data:form = {
                // How will scenarios be sequenced
                scenarioorder: = { txt="&" typ="C" Hint="Order"
                        items = "Sequential"
                             $0D"Random"
                             $0D"Ordered"
                        values ="0"
                             $0D"1"
                             $0D"2"
                }

                // | seperated list of scenario names.
                scenariosequence: = { txt="&" hint="Sequence" }

                // Default number of rounds a scenarios will cycle.
                numrounds: = { txt="&" hint="Number Rounds Active" }
        }
        swarm_scenario:form = {
                t_SwarmBase = !

                // How long a round will last, 0 is untimed.
                roundtime: = { txt="&" Hint="Round Time" }

                // Number of rounds this scenario will cycle, over rides map data, unless 0.
                numrounds: = { txt="&" hint="Number Rounds Active" }

                spawnflags: = { typ="X1" cap="Allow Respawn" hint="Allow players to respwawn before round has ended." }
                spawnflags: = { typ="X2" cap="Friendly AI"   hint="Monsters don't attack Players of same race." }
        }
        swarm_mission_destination:form = {
                t_SwarmTeam = !
                t_targetname = !
                t_target = !

                spawnflags: = { typ="X1" cap="Kill Mission" hint="Kill any mission accepted by this destination" }
                spawnflags: = { typ="X2" cap="Start Off"    hint="Start Round Disabled" }
        }
        swarm_capture_mission:form = {
                t_SwarmMission = !

                spawnflags: = { typ="X32" cap="Drop to Ground" hint="Dropt to ground when spawning?" }

                // Model to use for object.
                model: = { txt="&" hint="Model" }

                // Maximum message length is 64 characters, messages longer than this will be truncated.
                //Vars for when object is picked up by enemy. %s: 1 = player, 2 = team.
                stolenmessage:  = { txt="&" hint="Stolen Message"$0D"for when object is picked up by enemy. %s: 1 = player, 2 = team." }
                noise:          = { txt="&" hint="Stolen Sound"   }
                stolenpitch:    = { txt="&" hint="Stolen Pitch"   }
                stolenvolume:   = { txt="&" hint="Stolen Volume"  }

                //Vars for when object is picked up by friend when not at original location. %s: 1 = player, 2 = team.
                returnedmessage: = { txt="&" hint="Returned Message"$0D"for when object is picked up by friend when not at original location. %s: 1 = player, 2 = team." }
                noise1:          = { txt="&" hint="Returned Sound"   }
                returnedpitch:   = { txt="&" hint="Returned Pitch"   }
                returnedvolume:  = { txt="&" hint="Returned Volume"  }

                //Vars for when object arrives at destination. %s: 1 = player, 2 = team.
                capturedmessage: = { txt="&" hint="Captured Message"$0D"for when object arrives at destination. %s: 1 = player, 2 = team." }
                noise2:          = { txt="&" hint="Captured Sound"   }
                capturedpitch:   = { txt="&" hint="Captured Pitch"   }
                capturedvolume:  = { txt="&" hint="Captured Volume"  }

                //Vars for when object is dropped up by enemy. %s: 1 = player, 2 = team.
                droppedmessage: = { txt="&" hint="Dropped Message"$0D"for when object is dropped up by enemy. %s: 1 = player, 2 = team." }
                noise3:         = { txt="&" hint="Dropped Sound"   }
                droppedpitch:   = { txt="&" hint="Dropped Pitch"   }
                droppedvolume:  = { txt="&" hint="Dropped Volume"  }
        }
        swarm_destroy_mission:form = {
                t_SwarmMission = !

                // Maximum message length is 64 characters, messages longer than this will be truncated.
                //Vars for when object is destroyed. %s: 1 = player, 2 = team.
                capturedmessage: = { txt="&" hint="Destroyed Message"$0D"for when object is destroyed. %s: 1 = player, 2 = team." }
                noise2:          = { txt="&" hint="Destroyed Sound"   }
                capturedpitch:   = { txt="&" hint="Destroyed Pitch"   }
                capturedvolume:  = { txt="&" hint="Destroyed Volume"  }
        }
        swarm_escort_mission:form = {
                t_SwarmMission = !

                // Limit choice of player to one class.
                escortclass: = { txt="&" typ="C"
                        items ="Any"
                            $0D"Human Grunt"
                            $0D"Assassin"
                            $0D"Scientist"
                            $0D"Commander"
                            $0D"Xen Grunt"
                            $0D"Slave"
                            $0D"Gargantua"
                            $0D"Controller"
                        values="0"
                            $0D"1"
                            $0D"2"
                            $0D"3"
                            $0D"4"
                            $0D"5"
                            $0D"6"
                            $0D"7"
                            $0D"8"
                }

                // Spawn point the target can spawn at, "" for any.
                spawnpoint: = { txt="&" hint="Spawn Point" }

                // Maximum message length is 64 characters, messages longer than this will be truncated.
                //Vars for when player to escort is Chosen. %s: 1 = player, 2 = team.
                stolenmessage:  = { txt="&" hint="Chosen Message"$0D"for when player to escort is Chosen. %s: 1 = player, 2 = team." }
                noise:          = { txt="&" hint="Chosen Sound"   }
                stolenpitch:    = { txt="&" hint="Chosen Pitch"   }
                stolenvolume:   = { txt="&" hint="Chosen Volume"  }

                //Vars for when escorted player escapes. %s: 1 = player, 2 = team.
                capturedmessage: = { txt="&" hint="Escaped Message"$0D"for when escorted player escapes. %s: 1 = player, 2 = team." }
                noise2:          = { txt="&" hint="Escaped Sound"   }
                capturedpitch:   = { txt="&" hint="Escaped Pitch"   }
                capturedvolume:  = { txt="&" hint="Escaped Volume"  }

                //Vars for when escorted player is killed. %s: 1 = escort player, escort 2 = team, 3 = attacking player, 4 = attacking team.
                droppedmessage: = { txt="&" hint="Killed Message"$0D"for when escorted player is killed. %s: 1 = escort player, escort 2 = team, 3 = attacking player, 4 = attacking team." }
                noise3:         = { txt="&" hint="Killed Sound"   }
                droppedpitch:   = { txt="&" hint="Killed Pitch"   }
                droppedvolume:  = { txt="&" hint="Killed Volume"  }
        }
        swarm_survive_mission:form = {
                t_SwarmMission = !

                // Maximum message length is 64 characters, messages longer than this will be truncated.
                //Vars for when time is up. %s: 1 = team.
                capturedmessage: = { txt="&" hint="Survived Message"$0D"for when time is up. %s: 1 = team." }
                noise2:          = { txt="&" hint="Survived Sound"   }
                capturedpitch:   = { txt="&" hint="Survived Pitch"   }
                capturedvolume:  = { txt="&" hint="Survived Volume"  }

                //Vars for when survive team is killed. %s: 1 = team.
                droppedmessage: = { txt="&" hint="Killed Message"$0D"for when survive team is killed. %s: 1 = team." }
                noise3:         = { txt="&" hint="Killed Sound"   }
                droppedpitch:   = { txt="&" hint="Killed Pitch"   }
                droppedvolume:  = { txt="&" hint="Killed Volume"  }
        }

        swarm_spawn_point:form = {
                t_targetname = !
                t_SwarmTeam = !
                bbox = '-32 -32 -64 32 32 64'

                spawnflags: = { typ="X1" cap="Allowed allied teams" hint="Allow teams to Ally"                                       }
                spawnflags: = { typ="X2" cap="Missions Only"        hint="Require a mission targeted at this spwan point to use it." }

                // Limit choice of player to one class.
                escortclass: = { txt="&" typ="C"
                        items ="Any"
                            $0D"Human Grunt"
                            $0D"Assassin"
                            $0D"Scientist"
                            $0D"Commander"
                            $0D"Xen Grunt"
                            $0D"Slave"
                            $0D"Gargantua"
                            $0D"Controller"
                        values="0"
                            $0D"1"
                            $0D"2"
                            $0D"3"
                            $0D"4"
                            $0D"5"
                            $0D"6"
                            $0D"7"
                            $0D"8"
                }
        }

//        swarm_spawnpt_human:form        = { t_SwarmHumanPt = ! }
//        swarm_spawnpt_hgrunt:form       = { t_SwarmHumanPt = ! }
//        swarm_spawnpt_hassassin:form    = { t_SwarmHumanPt = ! }
//        swarm_spawnpt_hscientist:form   = { t_SwarmHumanPt = ! }
//        swarm_spawnpt_hcommander:form   = { t_SwarmHumanPt = ! }

//        swarm_spawnpt_xen:form          = { t_SwarmXenPt = ! bbox = '-32 -32 -64 32 32 64' }
//        swarm_spawnpt_atripod:form      = { t_SwarmXenPt = ! bbox = '-32 -32 -32 32 32 32' }
//        swarm_spawnpt_agarg:form        = { t_SwarmXenPt = ! bbox = '-32 -32 -64 32 32 64' }
//        swarm_spawnpt_aslave:form       = { t_SwarmXenPt = ! bbox = '-16 -16 -36 16 16 36' }
//        swarm_spawnpt_acontroller:form  = { t_SwarmXenPt = ! bbox = '-32 -32 -32 32 32 32' }

        swarm_trigger_regen:form = {
                t_targetname = !
                t_target = !
                t_SwarmTeam = !

                spawnflags: = { typ="X1"  cap="Target Once"     hint="" }
                spawnflags: = { typ="X2"  cap="Start Off"       hint="" }
                spawnflags: = { typ="X8"  cap="No clients"      hint="" }
                spawnflags: = { typ="X16" cap="FireClientOnly"  hint="" }
                spawnflags: = { typ="X32" cap="TouchClientOnly" hint="" }

                master:     = { txt="&" hint="Master" }
                dmg:        = { txt="&" hint="Damage" }
                delay:      = { txt="&" hint="Delay before trigger" }
                damagetype: = { txt="&" typ="C"
                        items = "REGENERATION"
                        values = "8388608"
                }
        }

        swarm_ammo_human_primary:form = {
                t_Weapon = !
                t_Targetx = !
                t_SwarmBase = !

                spawnflags: = { typ="X1" cap="9mm Bullets"     hint="" }
                spawnflags: = { typ="X2" cap="Shoutgun Shells" hint="" }
                spawnflags: = { typ="X4" cap="Uranium"         hint="" }
                spawnflags: = { typ="X8" cap="Crossbow Bolts"  hint="" }
        }
        swarm_ammo_human_secondary:form = {
                t_Weapon = !
                t_Targetx = !
                t_SwarmBase = !

                spawnflags: = { typ="X1"   cap="Handgrenades"    hint="" }
                spawnflags: = { typ="X2"   cap="Conc Grenades"   hint="" }
                spawnflags: = { typ="X4"   cap="Smoke Grenades"  hint="" }
                spawnflags: = { typ="X8"   cap="M203 Grenades"   hint="" }
                spawnflags: = { typ="X16"  cap="Health Needles"  hint="" }
                spawnflags: = { typ="X32"  cap="Proximity Mines" hint="" }
                spawnflags: = { typ="X64"  cap="C4"              hint="" }
                spawnflags: = { typ="X128" cap="Tripmines"       hint="" }
                spawnflags: = { typ="X256" cap="Adrenaline"      hint="" }
        }

        swarm_ammo_xen_primary:form = {
                t_Weapon = !
                t_Targetx = !
                t_SwarmBase = !

                spawnflags: = { typ="X1" cap="Bioelectric" hint="" }
        }
        swarm_ammo_xen_secondary:form = {
                t_Weapon = !
                t_Targetx = !
                t_SwarmBase = !

                spawnflags: = { typ="X1" cap="Sonic Grenades" hint="" }
                spawnflags: = { typ="X2" cap="Snarks"         hint="" }
        }

  }
}
