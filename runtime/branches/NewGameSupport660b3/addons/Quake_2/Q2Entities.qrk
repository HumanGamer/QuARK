QQRKSRC1
// Quake2 entities file for Quark

//$Header$
// ----------- REVISION HISTORY ------------
//$Log$
//Revision 1.4  2008/06/03 23:52:00  cdunde
//A couple of corrections noted by our uses, Thank you.
//
//Revision 1.3  2008/05/21 18:15:15  cdunde
//To add and\or activate Half-Life 2 functions: (all original code by Alexander)
//1) to create extra Specifics setting handles for func_useableladder function (point0 & point1)
//      func_breakable_glass and func_breakable_surf functions
//      (lowerleft, upperleft, lowerright and upperright)
//2) to draw special light entity lines for functions like light_spot that have the Specifics
//      (angles, _cone, spotlightwidth and\or _inner_cone)
//3) face displacement. Commented out at this time. believe bezier type code should be used instead.
//
//Revision 1.2  2008/05/14 20:38:50  cdunde
//Fixed basic lighting in all games and a few other small typo errors.
//
//Revision 1.1  2008/03/28 19:10:37  cdunde
//Cleaned up, fixed if needed and brought into sync with all QuArK addons.
//
//

{
  QuArKProtected = "1"
  Description = "Quake 2 Entities - UPDATED By X7 05-29-08"
  Toolbox Folders.qtx =
  {
    ToolBox = "New map Items..."
    Root = "Quake2 Entities.qtxfolder"
    Quake2 Entities.qtxfolder =
    {
      Info_Player_* entities.qtxfolder =
      {
        info_player_start:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "The normal starting point for a level."
        }
        info_player_coop:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Potential spawning position for coop games."
        }
        info_player_deathmatch:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Potential spawning position for deathmatch games."
        }
        info_player_intermission:e =
        {
          origin = "0 0 0"
          angles = "30 225 0"
          ;desc = "The end of Level , end of Match, intermission point will be"
           " at one of these."
        }
      }
      Light_* entities.qtxfolder =
      {
        light:e =
        {
          origin = "0 0 0"
          _color = "1 1 1"
          light = "300"
          ;desc = "Invisible Light Source."
        }
        light_mine1:e =
        {
          origin = "0 0 0"
          angle = "360"
          _color = "1 1 1"
          light = "300"
          ;desc = "Dusty Fluorescent Light Fixture."
        }
        light_mine2:e =
        {
          origin = "0 0 0"
          angle = "360"
          _color = "1 1 1"
          light = "300"
          ;desc = "Clean Fluorescent Light Fixture."
        }
      }
      Null entities.qtxfolder =
      {
        info_null:e =
        {
          origin = "0 0 0"
          ;desc = "A target for light to create a spotlight."
        }
        info_notnull:e =
        {
          origin = "0 0 0"
          ;desc = "Lighting target or put this at the end of the gun on a turr"
           "et_breach."
        }
      }
      Weapon_* entities.qtxfolder =
      {
        weapon_shotgun:e =
        {
          origin = "0 0 0"
          ;desc = "This is the ShotGun uses ammo_shells."
        }
        weapon_supershotgun:e =
        {
          origin = "0 0 0"
          ;desc = "This is the Super ShotGun uses ammo_shells."
        }
        weapon_machinegun:e =
        {
          origin = "0 0 0"
          ;desc = "This is the  MachineGun uses ammo_bullets."
        }
        weapon_chaingun:e =
        {
          origin = "0 0 0"
          ;desc = "This is the ChainGun uses ammo_bullets."
        }
        weapon_grenadelauncher:e =
        {
          origin = "0 0 0"
          ;desc = "This is the Grenade Launcher uses ammo_grenades."
        }
        weapon_rocketlauncher:e =
        {
          origin = "0 0 0"
          ;desc = "This is the Rocket Launcher uses ammo_rockets."
        }
        weapon_hyperblaster:e =
        {
          origin = "0 0 0"
          ;desc = "This is the HyperBlaster uses ammo_cells."
        }
        weapon_railgun:e =
        {
          origin = "0 0 0"
          ;desc = "This is the RailGun uses ammo_slugs"
        }
        weapon_bfg:e =
        {
          origin = "0 0 0"
          ;desc = "This is the BFG10k uses ammo_cells"
        }
      }
      Ammo_* entities.qtxfolder =
      {
        ammo_shells:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for The ShotGun & Super ShotGun."
        }
        ammo_bullets:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the Machine & ChainGun."
        }
        ammo_grenades:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the Grenade Launcher it's also a Hand "
           "Grenade."
        }
        ammo_rockets:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the Rocket Launcher."
        }
        ammo_cells:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the HyperBlaster and BFG10k."
        }
        ammo_slugs:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the ammo for the RailGun."
        }
      }
      Monster_* entities.qtxfolder =
      {
        monster_berserk:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Berserker."
        }
        monster_boss2:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is a flying Boss (Hornet)."
        }
        monster_boss3_stand:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is Makron standing around (just for looks)."
        }
        monster_brain:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Brains."
        }
        monster_chick:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Iron Maiden."
        }
        monster_commander_body:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the tank commander's destroyed body (just for looks"
           ")."
        }
        monster_flipper:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Barracuda Shark."
        }
        monster_floater:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Technician."
        }
        monster_flyer:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Flyer."
        }
        monster_gladiator:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Gladiator."
        }
        monster_gunner:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Gunner."
        }
        monster_hover:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Icarus."
        }
        monster_infantry:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Enforcer."
        }
        monster_jorg:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Jorg."
        }
        monster_mutant:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Mutant."
        }
        monster_medic:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Medic."
        }
        monster_parasite:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Parasite."
        }
        monster_soldier:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This Guard has a MachineGun."
        }
        monster_soldier_light:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This Guard has a Blaster like the one you start with."
        }
        monster_soldier_ss:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This Guard has a ShotGun."
        }
        monster_tank:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Tank."
        }
        monster_tank_commander:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Tank Commander."
        }
        monster_supertank:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Super Tank."
        }
      }
      Path & Combat entities.qtxfolder =
      {
        path_corner:e =
        {
          origin = "0 0 0"
          ;desc = "Use this to get the monsters to walk around the map."
        }
        point_combat:e =
        {
          origin = "0 0 0"
          ;desc = "Used for making a monster push a button or whatever when it"
           " sees the player."
        }
      }
      Misc_* entities.qtxfolder =
      {
        misc_actor:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This isn't functional yet."
        }
        misc_banner:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the flag you see on the Base1 map."
        }
        misc_blackhole:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This just spins, the size is 256 units in all directions."
        }
        misc_deadsoldier:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is a dead soldier (Player model)."
        }
        misc_easterchick:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Iron Maiden kind of sitting down (just for look"
           "s)."
        }
        misc_easterchick2:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Iron Maiden a little different (just for looks)"
           "."
        }
        misc_eastertank:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the Tank sitting down (just for looks)."
        }
        misc_explobox:e =
        {
          origin = "0 0 0"
          angle = "360"
          dmg = "150"
          health = "10"
          mass = "400"
          ;desc = "This is the exploding Barrel."
        }
        misc_gib_arm:e =
        {
          origin = "0 0 0"
          ;desc = "A gibbed Arm."
        }
        misc_gib_head:e =
        {
          origin = "0 0 0"
          ;desc = "A gibbed Head."
        }
        misc_gib_leg:e =
        {
          origin = "0 0 0"
          ;desc = "A gibbed Leg."
        }
        misc_insane:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is a soldier gone insane (Player model)."
        }
        misc_satellite_dish:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Use a trigger_once or a func_button with a wait -1 value to"
           " target this."
        }
        misc_strogg_ship:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is one of the ships you see flying around on some of t"
           "he levels."
        }
        misc_teleporter:e =
        {
          origin = "0 0 0"
          angle = "360"
          target = "tele_1"
          ;desc = "This is where the player is teleported from."
        }
        misc_teleporter_dest:e =
        {
          origin = "0 0 0"
          angle = "360"
          targetname = "tele_1"
          ;desc = "This is where the player is teleported to."
        }
        misc_viper:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the other ship you see flying around."
        }
        misc_bigviper:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "This is the big ship you see in the intro (It doesn't do an"
           "ything)."
        }
        misc_viper_bomb:e =
        {
          origin = "0 0 0"
          angle = "360"
          dmg = "1000"
          ;desc = "This is a bomb to be used with the misc_viper."
        }
      }
      Key_* entities.qtxfolder =
      {
        key_airstrike_target:e =
        {
          origin = "0 0 0"
          ;desc = "Airstrike Target Key."
        }
        key_blue_key:e =
        {
          origin = "0 0 0"
          ;desc = "Blue Key."
        }
        key_commander_head:e =
        {
          origin = "0 0 0"
          ;desc = "Commander Head Key."
        }
        key_data_cd:e =
        {
          origin = "0 0 0"
          ;desc = "Data CD Key."
        }
        key_data_spinner:e =
        {
          origin = "0 0 0"
          ;desc = "Data Spinner Key."
        }
        key_pass:e =
        {
          origin = "0 0 0"
          ;desc = "Security Pass Key."
        }
        key_power_cube:e =
        {
          origin = "0 0 0"
          ;desc = "Power Cube Key."
        }
        key_pyramid:e =
        {
          origin = "0 0 0"
          ;desc = "Pyramid Key."
        }
        key_red_key:e =
        {
          origin = "0 0 0"
          ;desc = "Red Key."
        }
      }
      Item_* entities.qtxfolder =
      {
        item_adrenaline:e =
        {
          origin = "0 0 0"
          ;desc = "This sligthly increases your health permanently."
        }
        item_ancient_head:e =
        {
          origin = "0 0 0"
          ;desc = "John Carmacks head, adds 2 to max health."
        }
        item_armor_shard:e =
        {
          origin = "0 0 0"
          ;desc = "Adds 2 to your armor."
        }
        item_armor_body:e =
        {
          origin = "0 0 0"
          ;desc = "Adds 100 to your armor."
        }
        item_armor_combat:e =
        {
          origin = "0 0 0"
          ;desc = "Adds 50 to your armor."
        }
        item_armor_jacket:e =
        {
          origin = "0 0 0"
          ;desc = "Adds 25 to your armor."
        }
        item_bandolier:e =
        {
          origin = "0 0 0"
          ;desc = "Increases your carrying Capacity for all ammunition except "
           "grenades & rockets."
        }
        item_breather:e =
        {
          origin = "0 0 0"
          ;desc = "This provides oxygen when submerged in liquids."
        }
        item_enviro:e =
        {
          origin = "0 0 0"
          ;desc = "This provides oxygen & protection from harmful fluids."
        }
        item_health_small:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Gives you 2 more health points when you pickup a health."
        }
        item_health:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Gives you 10 health points."
        }
        item_health_large:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Gives you 25 health points."
        }
        item_health_mega:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Adds 100 health points to whatever you have, slowly goes ba"
           "ck down."
        }
        item_invulnerability:e =
        {
          origin = "0 0 0"
          ;desc = "Renders you temporarily indestructible."
        }
        item_pack:e =
        {
          origin = "0 0 0"
          ;desc = "This allows you to carry more ammo on your back."
        }
        item_power_screen:e =
        {
          origin = "0 0 0"
          ;desc = "Gives you 200 armor towards energy weapons."
        }
        item_power_shield:e =
        {
          origin = "0 0 0"
          ;desc = "Provides improved protection against energy weapons."
        }
        item_quad:e =
        {
          origin = "0 0 0"
          ;desc = "Temporarily multiplies all your weapon's strengths by four."
        }
        item_silencer:e =
        {
          origin = "0 0 0"
          ;desc = "Silences the discharge of any weapon."
        }
      }
      Func_* entities.qtxfolder =
      {
        func_areaportal:b =
        {
          ;desc = "Use this combined with doors."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "32768"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "32768"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "32768"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "32768"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "32768"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "32768"
              Flags = "128"
              Value = "0"
            }
          }
        }
        func_button:b =
        {
          angle = "360"
          lip = "4"
          sounds = "0"
          speed = "40"
          wait = "3"
          ;desc = "Just an every day Button."
          poly:p =
          {
            east:f =
            {
              v = '16 16 16 16 144 16 16 16 144'
              tex = "e1u1/arrow0"
              tv = '-33 33 95 33 -33 -95'
            }
            west:f =
            {
              v = '-16 16 16 -16 16 144 -16 144 16'
              tex = "e1u1/arrow0"
              tv = '-1 33 127 33 -1 -95'
            }
            north:f =
            {
              v = '32 16 16 32 16 144 160 16 16'
              tex = "e1u1/arrow0"
              tv = '15 33 143 33 15 -95'
            }
            south:f =
            {
              v = '32 -16 16 160 -16 16 32 -16 144'
              tex = "e1u1/arrow0"
              tv = '-49 33 79 33 -49 -95'
            }
            up:f =
            {
              v = '32 16 16 160 16 16 32 144 16'
              tex = "e1u1/arrow0"
              tv = '-33 -49 -33 79 95 -49'
            }
            down:f =
            {
              v = '32 16 -16 32 144 -16 160 16 -16'
              tex = "e1u1/arrow0"
              tv = '1 49 1 -79 -127 49'
            }
          }
        }
        func_clock:e =
        {
          origin = "0 0 0"
          ;desc = "Use this to make timed explosions."
        }
        func_conveyor:b =
        {
          speed = "100"
          ;desc = "This will push you, but the texture itself won't move. Neve"
           "r used in Quake2."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_door:b =
        {
          angle = "360"
          dmg = "2"
          lip = "8"
          sounds = "0"
          speed = "100"
          wait = "3"
          ;desc = "The standard entity for doors."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_door_rotating:b =
        {
          dmg = "2"
          distance = "90"
          sounds = "0"
          speed = "100"
          wait = "3"
          ;desc = "A rotating door."
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -72 -16 16 -8 -16 16 -72 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-16 -84 -16 -16 -84 48 -16 -20 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '-52 -48 -16 -52 -48 48 12 -48 -16'
              tex = "[origin]"
              tv = '-68 0 60 0 -68 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '-52 -80 -16 12 -80 -16 -52 -80 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '-52 -84 16 12 -84 16 -52 -20 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '-52 -84 -16 -52 -20 -16 12 -84 -16'
              tex = "[origin]"
              tv = '36 -36 36 -164 -92 -36'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '8 0 0 8 128 0 8 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-8 0 0 -8 0 128 -8 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_door_secret:b =
        {
          angle = "360"
          dmg = "2"
          wait = "5"
          ;desc = "This is for the making of Secret doors."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_explosive:b =
        {
          health = "100"
          mass = "75"
          ;desc = "This is used for shootable windows, boxes, walls and more."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_group:b =
        {
          ;desc = "Not used in game, used for editor convenience."
        }
        func_killbox:b =
        {
          ;desc = "This kills everything inside it."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
          }
        }
        func_object:b =
        {
          dmg = "2"
          ;desc = "This is solid bmodel that will fall if it's support it remo"
           "ved."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_plat:b =
        {
          accel = "500"
          dmg = "2"
          lip = "8"
          sounds = "1"
          speed = "150"
          ;desc = "This is used for platforms or elevators."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_rotating:b =
        {
          dmg = "2"
          speed = "100"
          ;desc = "This is for making things rotate or spin."
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -8 -16 16 56 -16 16 -8 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-16 -20 -16 -16 -20 48 -16 44 -16'
              tex = "[origin]"
              tv = '-4 0 124 0 -4 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '-52 16 -16 -52 16 48 12 16 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '-52 -16 -16 12 -16 -16 -52 -16 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '-52 -20 16 12 -20 16 -52 44 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '-52 -20 -16 -52 44 -16 12 -20 -16'
              tex = "[origin]"
              tv = '4 -36 4 -164 -124 -36'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_timer:e =
        {
          origin = "0 0 0"
          ;desc = "Use this to make timed events."
        }
        func_train:b =
        {
          dmg = "2"
          speed = "100"
          ;desc = "This is for making moving things."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_wall:b =
        {
          ;desc = "Make a wall appear or dissappear by connecting a func_butto"
           "n to this."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        func_water:b =
        {
          angle = "-2"
          speed = "25"
          sounds = "1"
          wait = "-1"
          ;desc = "Use this one to make water, lava or slime move."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "e1u1/bluwter"
              Contents = "32"
              Flags = "9"
              Value = "100"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "e1u1/bluwter"
              m = "1"
              Contents = "32"
              Flags = "9"
              Value = "100"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "e1u1/bluwter"
              m = "1"
              Contents = "32"
              Flags = "9"
              Value = "100"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "e1u1/bluwter"
              Contents = "32"
              Flags = "9"
              Value = "100"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "e1u1/bluwter"
              Contents = "32"
              Flags = "9"
              Value = "100"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "e1u1/bluwter"
              m = "1"
              Contents = "32"
              Flags = "9"
              Value = "100"
            }
          }
        }
      }
      Target_* entities.qtxfolder =
      {
        target_actor:e =
        {
          origin = "0 0 0"
          height = "200"
          speed = "200"
          ;desc = "Use this with the misc_actor(broken entity)."
        }
        target_blaster:e =
        {
          origin = "0 0 0"
          angle = "360"
          dmg = "15"
          speed = "1000"
          ;desc = "Fires a blaster (your 1st weapon). Use a trigger on this."
        }
        target_changelevel:e =
        {
          origin = "0 0 0"
          ;desc = "Use this to change to another map."
        }
        target_character:b =
        {
          ;desc = "This is a brush that functions as a display for a func_cloc"
           "k."
          poly:p =
          {
            east:f =
            {
              v = '8 0 -20 8 128 -20 8 0 108'
              tex = "test/num_0"
              tv = '-8 -4 120 -4 -8 -132'
            }
            west:f =
            {
              v = '-8 0 -20 -8 0 108 -8 128 -20'
              tex = "test/num_0"
              tv = '-8 -4 120 -4 -8 -132'
            }
            north:f =
            {
              v = '-12 8 -20 -12 8 108 116 8 -20'
              tex = "test/num_0"
              tv = '-20 -4 108 -4 -20 -132'
            }
            south:f =
            {
              v = '-12 -8 -20 116 -8 -20 -12 -8 108'
              tex = "test/num_0"
              tv = '4 -4 132 -4 4 -132'
            }
            up:f =
            {
              v = '-12 0 16 116 0 16 -12 128 16'
              tex = "e1u1/black"
              tv = '-8 4 -8 132 120 4'
            }
            down:f =
            {
              v = '-12 0 -16 -12 128 -16 116 0 -16'
              tex = "e1u1/black"
              tv = '8 -4 8 -132 -120 -4'
            }
          }
        }
        target_crosslevel_target:e =
        {
          origin = "0 0 0"
          delay = "1"
          ;desc = "This is a target on another map."
        }
        target_crosslevel_trigger:e =
        {
          origin = "0 0 0"
          ;desc = "This is to trigger a target_crosslevel_target on another ma"
           "p."
        }
        target_earthquake:e =
        {
          origin = "0 0 0"
          count = "5"
          speed = "200"
          ;desc = "This is for starting an earthquake."
        }
        target_explosion:e =
        {
          origin = "0 0 0"
          ;desc = "Use a trigger to set off this explosion."
        }
        target_goal:e =
        {
          origin = "0 0 0"
          ;desc = "Use this to tell a player that he/she has completed a goal."
        }
        target_help:e =
        {
          origin = "0 0 0"
          ;desc = "This is used to tell the player what the goal of the map is"
           "."
        }
        target_laser:e =
        {
          origin = "0 0 0"
          dmg = "100"
          ;desc = "Put this where you want a laser to hit."
        }
        target_lightramp:e =
        {
          origin = "0 0 0"
          ;desc = "This makes a light fade in or out."
        }
        target_secret:e =
        {
          origin = "0 0 0"
          message = "You have found a secret."
          ;desc = "This is used for counting how many secrets the player has f"
           "ound."
        }
        target_spawner:e =
        {
          origin = "0 0 0"
          speed = "100"
          ;desc = "Makes anything of your choice spawn at the target_spawner p"
           "oint."
        }
        target_speaker:e =
        {
          origin = "0 0 0"
          volume = "1.0"
          ;desc = "This is used for the sounds in Q2, like breaking glass and "
           "such."
        }
        target_splash:e =
        {
          origin = "0 0 0"
          angle = "-1"
          count = "20"
          sounds = "2"
          ;desc = "This is for effects like sparks and such."
        }
        target_string:e =
        {
          origin = "0 0 0"
          ;desc = "This acts as the relay from the func_clock to the target_ch"
           "aracters."
        }
        target_temp_entity:e =
        {
          origin = "0 0 0"
          ;desc = "This can be used for some great effects."
        }
      }
      Trigger_* entities.qtxfolder =
      {
        trigger_always:e =
        {
          origin = "0 0 0"
          delay = "0.2"
          ;desc = "This trigger will always fire, it is activated by the world"
           "."
        }
        trigger_counter:e =
        {
          origin = "0 0 0"
          count = "2"
          delay = "0.2"
          ;desc = "Use this if the player has to push more than one button to "
           "open a door."
        }
        trigger_elevator:e =
        {
          origin = "0 0 0"
          ;desc = "Use this if you need an elevator that has to stop at differ"
           "ent heights."
        }
        trigger_gravity:b =
        {
          gravity = "1.0"
          ;desc = "This only work on spawn weapons and gibs not the player."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
          }
        }
        trigger_hurt:b =
        {
          dmg = "5"
          ;desc = "This causes damage to the player when he touches this."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
          }
        }
        trigger_key:e =
        {
          origin = "0 0 0"
          item = "key_blue_key"
          ;desc = "This will make the door it is used with require a key to op"
           "en."
        }
        trigger_monsterjump:b =
        {
          angle = "360"
          speed = "200"
          height = "200"
          ;desc = "Use this to get the monsters to jump."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
          }
        }
        trigger_multiple:b =
        {
          ;desc = "Use this if you want something to a be trigger more than on"
           "ce."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
          }
        }
        trigger_once:b =
        {
          ;desc = "Use this to trigger something only once."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
          }
        }
        trigger_push:b =
        {
          angle = "-1"
          speed = "1000"
          ;desc = "Just as in Q1 use it to push the player in a given directio"
           "n."
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[trigger]"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[trigger]"
              m = "1"
              Contents = "0"
              Flags = "128"
              Value = "0"
            }
          }
        }
        trigger_relay:e =
        {
          origin = "0 0 0"
          ;desc = "This cannot be touched, it must be triggered by other event"
           "s."
        }
      }
      Turret_* entities.qtxfolder =
      {
        turret_base:b =
        {
          angle = "360"
          ;desc = "Used to make those cool guns."
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -8 -16 16 56 -16 16 -8 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-16 -20 -16 -16 -20 48 -16 44 -16'
              tex = "[origin]"
              tv = '-4 0 124 0 -4 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '-52 16 -16 -52 16 48 12 16 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '-52 -16 -16 12 -16 -16 -52 -16 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '-52 -20 16 12 -20 16 -52 44 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '-52 -20 -16 -52 44 -16 12 -20 -16'
              tex = "[origin]"
              tv = '4 -36 4 -164 -124 -36'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        turret_breach:b =
        {
          angle = "360"
          dmg = "10"
          maxpitch = "30"
          minpitch = "-30"
          maxyaw = "360"
          minyaw = "0"
          speed = "50"
          ;desc = "Used to make those cool guns."
          ORIGIN:p =
          {
            east:f =
            {
              v = '16 -8 -16 16 56 -16 16 -8 48'
              tex = "[origin]"
              tv = '-8 0 120 0 -8 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            west:f =
            {
              v = '-16 -20 -16 -16 -20 48 -16 44 -16'
              tex = "[origin]"
              tv = '-4 0 124 0 -4 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            north:f =
            {
              v = '-52 16 -16 -52 16 48 12 16 -16'
              tex = "[origin]"
              tv = '-36 0 92 0 -36 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            south:f =
            {
              v = '-52 -16 -16 12 -16 -16 -52 -16 48'
              tex = "[origin]"
              tv = '36 0 164 0 36 -128'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            up:f =
            {
              v = '-52 -20 16 12 -20 16 -52 44 16'
              tex = "[origin]"
              tv = '4 36 4 164 132 36'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
            down:f =
            {
              v = '-52 -20 -16 -52 44 -16 12 -20 -16'
              tex = "[origin]"
              tv = '4 -36 4 -164 -124 -36'
              Contents = "16777216"
              Flags = "128"
              Value = "0"
            }
          }
          poly:p =
          {
            east:f =
            {
              v = '64 0 0 64 128 0 64 0 128'
              tex = "[auto]"
            }
            west:f =
            {
              v = '-64 0 0 -64 0 128 -64 128 0'
              tex = "[auto]"
              m = "1"
            }
            north:f =
            {
              v = '0 64 0 0 64 128 128 64 0'
              tex = "[auto]"
              m = "1"
            }
            south:f =
            {
              v = '0 -64 0 128 -64 0 0 -64 128'
              tex = "[auto]"
            }
            up:f =
            {
              v = '0 0 64 128 0 64 0 128 64'
              tex = "[auto]"
            }
            down:f =
            {
              v = '0 0 -64 0 128 -64 128 0 -64'
              tex = "[auto]"
              m = "1"
            }
          }
        }
        turret_driver:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Used to make those cool guns."
        }
      }
      other entitie.qtxfolder =
      {
        viewthing:e =
        {
          origin = "0 0 0"
          angle = "360"
          ;desc = "Just for debugging level (DON'T USE)."
        }
      }
    }
  }
  Default forms.fctx =
  {
    t_item_form:form =
    {
      Caption = "Monster item Spawns"
      item: =
      {
        Typ = "C"
        Txt = "Weapons Classes"
        Items = "weapon_shotgun"$0D"weapon_supershotgun"$0D"weapon_machinegun"$0D
         "weapon_chaingun"$0D"weapon_grenadelauncher"$0D"weapon_rocketlauncher"
         $0D"weapon_hyperblaster"$0D"weapon_railgun"$0D"weapon_bfg"
        Values = "weapon_shotgun"$0D"weapon_supershotgun"$0D"weapon_machinegun"
         $0D"weapon_chaingun"$0D"weapon_grenadelauncher"$0D"weapon_rocketlaunc"
         "her"$0D"weapon_hyperblaster"$0D"weapon_railgun"$0D"weapon_bfg"
      }
      item: =
      {
        Typ = "C"
        Txt = "Ammo Classes"
        Items = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rocke"
         "ts"$0D"ammo_cells"$0D"ammo_slugs"
        Values = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rock"
         "ets"$0D"ammo_cells"$0D"ammo_slugs"
      }
      item: =
      {
        Typ = "C"
        Txt = "Item Classes"
        Items = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_invulnerabilit"
         "y"$0D"item_pack"$0D"item_power_screen"$0D"item_power_shield"$0D"item"
         "_quad"$0D"item_silencer"
        Values = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_invulnerabilit"
         "y"$0D"item_pack"$0D"item_power_screen"$0D"item_power_shield"$0D"item"
         "_quad"$0D"item_silencer"
      }
      item: =
      {
        Typ = "C"
        Txt = "Key Classes"
        Items = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"$0D
         "key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
        Values = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"
         $0D"key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
      }
    }
    t_noise_form:form =
    {
      Caption = "Quake II Sounds"
      noise: =
      {
        Typ = "C"
        Txt = "Item Sounds"
        Hint = "Nunber of sounds = 14"
        Items = "items/airout.wav"$0D"items/damage.wav"$0D"items/damage2.wav"$0D
         "items/damage3.wav"$0D"items/l_health.wav"$0D"items/m_health.wav"$0D"i"
         "tems/n_health.wav"$0D"items/pkup.wav"$0D"items/protect.wav"$0D"items"
         "/protect2.wav"$0D"items/protect3.wav"$0D"items/protect4.wav"$0D"item"
         "s/respawn1.wav"$0D"items/s_health.wav"
        Values = "items/airout.wav"$0D"items/damage.wav"$0D"items/damage2.wav"$0D
         "items/damage3.wav"$0D"items/l_health.wav"$0D"items/m_health.wav"$0D"i"
         "tems/n_health.wav"$0D"items/pkup.wav"$0D"items/protect.wav"$0D"items"
         "/protect2.wav"$0D"items/protect3.wav"$0D"items/protect4.wav"$0D"item"
         "s/respawn1.wav"$0D"items/s_health.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Miscellaneous Sounds"
        Hint = "Nunber of sounds = 26"
        Items = "misc/am_pkup.wav"$0D"misc/ar1_pkup.wav"$0D"misc/ar2_pkup.wav"$0D
         "misc/ar3_pkup.wav"$0D"misc/bigtele.wav"$0D"misc/comp_up.wav"$0D"misc"
         "/fhit3.wav"$0D"misc/h2ohit1.wav"$0D"misc/keytry.wav"$0D"misc/keyuse."
         "wav"$0D"misc/lasfly.wav"$0D"misc/menu1.wav"$0D"misc/menu2.wav"$0D"mi"
         "sc/menu3.wav"$0D"misc/pc_up.wav"$0D"misc/power1.wav"$0D"misc/power2."
         "wav"$0D"misc/secret.wav"$0D"misc/spawn1.wav"$0D"misc/talk.wav"$0D"mi"
         "sc/talk1.wav"$0D"misc/tele_up.wav"$0D"misc/tele1.wav"$0D"misc/udeath"
         ".wav"$0D"misc/w_pkup.wav"$0D"misc/windfly.wav"
        Values = "misc/am_pkup.wav"$0D"misc/ar1_pkup.wav"$0D"misc/ar2_pkup.wav"
         $0D"misc/ar3_pkup.wav"$0D"misc/bigtele.wav"$0D"misc/comp_up.wav"$0D"m"
         "isc/fhit3.wav"$0D"misc/h2ohit1.wav"$0D"misc/keytry.wav"$0D"misc/keyu"
         "se.wav"$0D"misc/lasfly.wav"$0D"misc/menu1.wav"$0D"misc/menu2.wav"$0D
         "misc/menu3.wav"$0D"misc/pc_up.wav"$0D"misc/power1.wav"$0D"misc/power"
         "2.wav"$0D"misc/secret.wav"$0D"misc/spawn1.wav"$0D"misc/talk.wav"$0D"m"
         "isc/talk1.wav"$0D"misc/tele_up.wav"$0D"misc/tele1.wav"$0D"misc/udeat"
         "h.wav"$0D"misc/w_pkup.wav"$0D"misc/windfly.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Weapon Sounds"
        Hint = "Nunber of sounds = 41"
        Items = "weapons/bfg__f1y.wav"$0D"weapons/bfg__1a.wav"$0D"weapons/bfg_"
         "_x1b.wav"$0D"weapons/bfg_hum.wav"$0D"weapons/blastf1a.wav"$0D"weapon"
         "s/chngnd1a.wav"$0D"weapons/chngnl1a.wav"$0D"weapons/chngnu1a.wav"$0D
         "weapons/grenlb1b.wav"$0D"weapons/grenlf1a.wav"$0D"weapons/grenlr1b.w"
         "av"$0D"weapons/grenlx1a.wav"$0D"weapons/hgrena1b.wav"$0D"weapons/hgr"
         "enb1a.wav"$0D"weapons/hgrenb2a.wav"$0D"weapons/hgrenc1b.wav"$0D"weap"
         "ons/hgrent1a.wav"$0D"weapons/hyprbd1a.wav"$0D"weapons/hyprbf1a.wav"$0D
         "weapons/hyprbl1a.wav"$0D"weapons/hyprbu1a.wav"$0D"weapons/laser2.wav"
         $0D"weapons/lashit.wav"$0D"weapons/machgf1b.wav"$0D"weapons/machgf2b."
         "wav"$0D"weapons/machgf3b.wav"$0D"weapons/machgf4b.wav"$0D"weapons/ma"
         "chgf5b.wav"$0D"weapons/noammo.wav"$0D"weapons/railgf1a.wav"$0D"weapo"
         "ns/railgr1a.wav"$0D"weapons/rg_hum.wav"$0D"weapons/rockfly.wav"$0D"w"
         "eapons/rocklf1a.wav"$0D"weapons/rocklr1b.wav"$0D"weapons/rocklx1a.wa"
         "v"$0D"weapons/shotgf1b.wav"$0D"weapons/shotgr1b.wav"$0D"weapons/ssho"
         "tf1b.wav"$0D"weapons/sshotr1b.wav"$0D"weapons/xpld_wat.wav"
        Values = "weapons/bfg__f1y.wav"$0D"weapons/bfg__1a.wav"$0D"weapons/bfg"
         "__x1b.wav"$0D"weapons/bfg_hum.wav"$0D"weapons/blastf1a.wav"$0D"weapo"
         "ns/chngnd1a.wav"$0D"weapons/chngnl1a.wav"$0D"weapons/chngnu1a.wav"$0D
         "weapons/grenlb1b.wav"$0D"weapons/grenlf1a.wav"$0D"weapons/grenlr1b.w"
         "av"$0D"weapons/grenlx1a.wav"$0D"weapons/hgrena1b.wav"$0D"weapons/hgr"
         "enb1a.wav"$0D"weapons/hgrenb2a.wav"$0D"weapons/hgrenc1b.wav"$0D"weap"
         "ons/hgrent1a.wav"$0D"weapons/hyprbd1a.wav"$0D"weapons/hyprbf1a.wav"$0D
         "weapons/hyprbl1a.wav"$0D"weapons/hyprbu1a.wav"$0D"weapons/laser2.wav"
         $0D"weapons/lashit.wav"$0D"weapons/machgf1b.wav"$0D"weapons/machgf2b."
         "wav"$0D"weapons/machgf3b.wav"$0D"weapons/machgf4b.wav"$0D"weapons/ma"
         "chgf5b.wav"$0D"weapons/noammo.wav"$0D"weapons/railgf1a.wav"$0D"weapo"
         "ns/railgr1a.wav"$0D"weapons/rg_hum.wav"$0D"weapons/rockfly.wav"$0D"w"
         "eapons/rocklf1a.wav"$0D"weapons/rocklr1b.wav"$0D"weapons/rocklx1a.wa"
         "v"$0D"weapons/shotgf1b.wav"$0D"weapons/shotgr1b.wav"$0D"weapons/ssho"
         "tf1b.wav"$0D"weapons/sshotr1b.wav"$0D"weapons/xpld_wat.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "World Sounds"
        Hint = "Nunber of sounds = 157"
        Items = "world/10_0.wav"$0D"world/airhiss1.wav"$0D"world/airhiss2.wav"$0D
         "world/amb1.wav"$0D"world/amb2.wav"$0D"world/amb3.wav"$0D"world/amb4."
         "wav"$0D"world/amb5.wav"$0D"world/amb6.wav"$0D"world/amb7.wav"$0D"wor"
         "ld/amb8.wav"$0D"world/amb9.wav"$0D"world/amb10.wav"$0D"world/amb11.w"
         "av"$0D"world/amb12.wav"$0D"world/amb13.wav"$0D"world/amb14.wav"$0D"w"
         "orld/amb15.wav"$0D"world/amb16.wav"$0D"world/amb17.wav"$0D"world/amb"
         "18.wav"$0D"world/amb19.wav"$0D"world/amb20.wav"$0D"world/amb21.wav"$0D
         "world/amb22.wav"$0D"world/amb23.wav"$0D"world/amb24.wav"$0D"world/ba"
         "ttle1.wav"$0D"world/battle2.wav"$0D"world/battle3.wav"$0D"world/batt"
         "le4.wav"$0D"world/battle5.wav"$0D"world/bigpump.wav"$0D"world/bigpum"
         "p2.wav"$0D"world/blackhole.wav"$0D"world/brkglas.wav"$0D"world/bubbl"
         "4.wav"$0D"world/bubl1.wav"$0D"world/bubl2.wav"$0D"world/bubl3.wav"$0D
         "world/comlas1.wav"$0D"world/comp_hum1.wav"$0D"world/comp_hum2.wav"$0D
         "world/comp_hum3.wav"$0D"world/curnt1.wav"$0D"world/curnt2.wav"$0D"wo"
         "rld/curnt3.wav"$0D"world/dataspin.wav"$0D"world/deactivated.wav"$0D"w"
         "orld/dish1.wav"$0D"world/dr_long.wav"$0D"world/dr_short.wav"$0D"worl"
         "d/drill1.wav"$0D"world/drill2a.wav"$0D"world/driller1.wav"$0D"world/"
         "drip_amb.wav"$0D"world/drip1.wav"$0D"world/drip2.wav"$0D"world/drip3"
         ".wav"$0D"world/electro.wav"$0D"world/explod1.wav"$0D"world/explod2.w"
         "av"$0D"world/fan1.wav"$0D"world/flesh1.wav"$0D"world/flesh2.wav"$0D"w"
         "orld/flyby.wav"$0D"world/flyby1.wav"$0D"world/flyby2.wav"$0D"world/f"
         "lyby3.wav"$0D"world/force1.wav"$0D"world/force2.wav"$0D"world/force3"
         ".wav"$0D"world/fusein.wav"$0D"world/fuseout.wav"$0D"world/incoming.w"
         "av"$0D"world/klaxon1.wav"$0D"world/klaxon2.wav"$0D"world/l_hum1.wav"$0D
         "world/l_hum2.wav"$0D"world/land.wav"$0D"world/laser.wav"$0D"world/la"
         "shum1.wav"$0D"world/lasoff1.wav"$0D"world/lava1.wav"$0D"world/lite_o"
         "n1.wav"$0D"world/lite_on2.wav"$0D"world/lite_on3.wav"$0D"world/lite_"
         "out.wav"$0D"world/mach1.wav"$0D"world/mach2.wav"$0D"world/mach3.wav"$0D
         "world/mov_watr.wav"$0D"world/pilot1.wav"$0D"world/pilot2.wav"$0D"wor"
         "ld/pilot3.wav"$0D"world/pump1.wav"$0D"world/pump2.wav"$0D"world/pump"
         "3.wav"$0D"world/pumping.wav"$0D"world/pyramid.wav"$0D"world/quake.wa"
         "v"$0D"world/radio2.wav"$0D"world/radio3.wav"$0D"world/reactor.wav"$0D
         "world/redforce.wav"$0D"world/ric1.wav"$0D"world/ric2.wav"$0D"world/r"
         "ic3.wav"$0D"world/rocks1.wav"$0D"world/scan1.wav"$0D"world/short1.wa"
         "v"$0D"world/spark1.wav"$0D"world/spark2.wav"$0D"world/spark3.wav"$0D
         "world/spark5.wav"$0D"world/spark6.wav"$0D"world/spark7.wav"$0D"world"
         "/steam1.wav"$0D"world/steam2.wav"$0D"world/steam3.wav"$0D"world/stp_"
         "watr.wav"$0D"world/tele1.wav"$0D"world/train1.wav"$0D"world/train2.w"
         "av"$0D"world/turbine1.wav"$0D"world/uplink2.wav"$0D"world/v_bas1.wav"
         $0D"world/v_bas2.wav"$0D"world/v_bas3.wav"$0D"world/v_bas4.wav"$0D"wo"
         "rld/v_bas5.wav"$0D"world/v_bas6.wav"$0D"world/v_cit1.wav"$0D"world/v"
         "_cit2.wav"$0D"world/v_cmd1.wav"$0D"world/v_cmd2.wav"$0D"world/v_fac2"
         ".wav"$0D"world/v_fac3.wav"$0D"world/v_gun1.wav"$0D"world/v_gun2.wav"$0D
         "world/v_war1.wav"$0D"world/ventsys.wav"$0D"world/voice1.wav"$0D"worl"
         "d/voice3.wav"$0D"world/voice4.wav"$0D"world/voice5.wav"$0D"world/voi"
         "ce6.wav"$0D"world/voice7.wav"$0D"world/voice10.wav"$0D"world/voice11"
         ".wav"$0D"world/water1.wav"$0D"world/wind2.wav"$0D"world/x_alarm.wav"$0D
         "world/x_light.wav"$0D"world/xian1.wav"$0D"world/xianbeats.wav"$0D"wo"
         "rld/yelforce.wav"
        Values = "world/10_0.wav"$0D"world/airhiss1.wav"$0D"world/airhiss2.wav"
         $0D"world/amb1.wav"$0D"world/amb2.wav"$0D"world/amb3.wav"$0D"world/am"
         "b4.wav"$0D"world/amb5.wav"$0D"world/amb6.wav"$0D"world/amb7.wav"$0D"w"
         "orld/amb8.wav"$0D"world/amb9.wav"$0D"world/amb10.wav"$0D"world/amb11"
         ".wav"$0D"world/amb12.wav"$0D"world/amb13.wav"$0D"world/amb14.wav"$0D
         "world/amb15.wav"$0D"world/amb16.wav"$0D"world/amb17.wav"$0D"world/am"
         "b18.wav"$0D"world/amb19.wav"$0D"world/amb20.wav"$0D"world/amb21.wav"$0D
         "world/amb22.wav"$0D"world/amb23.wav"$0D"world/amb24.wav"$0D"world/ba"
         "ttle1.wav"$0D"world/battle2.wav"$0D"world/battle3.wav"$0D"world/batt"
         "le4.wav"$0D"world/battle5.wav"$0D"world/bigpump.wav"$0D"world/bigpum"
         "p2.wav"$0D"world/blackhole.wav"$0D"world/brkglas.wav"$0D"world/bubbl"
         "4.wav"$0D"world/bubl1.wav"$0D"world/bubl2.wav"$0D"world/bubl3.wav"$0D
         "world/comlas1.wav"$0D"world/comp_hum1.wav"$0D"world/comp_hum2.wav"$0D
         "world/comp_hum3.wav"$0D"world/curnt1.wav"$0D"world/curnt2.wav"$0D"wo"
         "rld/curnt3.wav"$0D"world/dataspin.wav"$0D"world/deactivated.wav"$0D"w"
         "orld/dish1.wav"$0D"world/dr_long.wav"$0D"world/dr_short.wav"$0D"worl"
         "d/drill1.wav"$0D"world/drill2a.wav"$0D"world/driller1.wav"$0D"world/"
         "drip_amb.wav"$0D"world/drip1.wav"$0D"world/drip2.wav"$0D"world/drip3"
         ".wav"$0D"world/electro.wav"$0D"world/explod1.wav"$0D"world/explod2.w"
         "av"$0D"world/fan1.wav"$0D"world/flesh1.wav"$0D"world/flesh2.wav"$0D"w"
         "orld/flyby.wav"$0D"world/flyby1.wav"$0D"world/flyby2.wav"$0D"world/f"
         "lyby3.wav"$0D"world/force1.wav"$0D"world/force2.wav"$0D"world/force3"
         ".wav"$0D"world/fusein.wav"$0D"world/fuseout.wav"$0D"world/incoming.w"
         "av"$0D"world/klaxon1.wav"$0D"world/klaxon2.wav"$0D"world/l_hum1.wav"$0D
         "world/l_hum2.wav"$0D"world/land.wav"$0D"world/laser.wav"$0D"world/la"
         "shum1.wav"$0D"world/lasoff1.wav"$0D"world/lava1.wav"$0D"world/lite_o"
         "n1.wav"$0D"world/lite_on2.wav"$0D"world/lite_on3.wav"$0D"world/lite_"
         "out.wav"$0D"world/mach1.wav"$0D"world/mach2.wav"$0D"world/mach3.wav"$0D
         "world/mov_watr.wav"$0D"world/pilot1.wav"$0D"world/pilot2.wav"$0D"wor"
         "ld/pilot3.wav"$0D"world/pump1.wav"$0D"world/pump2.wav"$0D"world/pump"
         "3.wav"$0D"world/pumping.wav"$0D"world/pyramid.wav"$0D"world/quake.wa"
         "v"$0D"world/radio2.wav"$0D"world/radio3.wav"$0D"world/reactor.wav"$0D
         "world/redforce.wav"$0D"world/ric1.wav"$0D"world/ric2.wav"$0D"world/r"
         "ic3.wav"$0D"world/rocks1.wav"$0D"world/scan1.wav"$0D"world/short1.wa"
         "v"$0D"world/spark1.wav"$0D"world/spark2.wav"$0D"world/spark3.wav"$0D
         "world/spark5.wav"$0D"world/spark6.wav"$0D"world/spark7.wav"$0D"world"
         "/steam1.wav"$0D"world/steam2.wav"$0D"world/steam3.wav"$0D"world/stp_"
         "watr.wav"$0D"world/tele1.wav"$0D"world/train1.wav"$0D"world/train2.w"
         "av"$0D"world/turbine1.wav"$0D"world/uplink2.wav"$0D"world/v_bas1.wav"
         $0D"world/v_bas2.wav"$0D"world/v_bas3.wav"$0D"world/v_bas4.wav"$0D"wo"
         "rld/v_bas5.wav"$0D"world/v_bas6.wav"$0D"world/v_cit1.wav"$0D"world/v"
         "_cit2.wav"$0D"world/v_cmd1.wav"$0D"world/v_cmd2.wav"$0D"world/v_fac2"
         ".wav"$0D"world/v_fac3.wav"$0D"world/v_gun1.wav"$0D"world/v_gun2.wav"$0D
         "world/v_war1.wav"$0D"world/ventsys.wav"$0D"world/voice1.wav"$0D"worl"
         "d/voice3.wav"$0D"world/voice4.wav"$0D"world/voice5.wav"$0D"world/voi"
         "ce6.wav"$0D"world/voice7.wav"$0D"world/voice10.wav"$0D"world/voice11"
         ".wav"$0D"world/water1.wav"$0D"world/wind2.wav"$0D"world/x_alarm.wav"$0D
         "world/x_light.wav"$0D"world/xian1.wav"$0D"world/xianbeats.wav"$0D"wo"
         "rld/yelforce.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Func_ Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "doors/dr1_end.wav"$0D"doors/dr1_mid.wav"$0D"doors/dr1.strt.wa"
         "v"$0D"plats/pt1_end.wav"$0D"plats/pt1_mid.wav"$0D"plats/pt1_strt.wav"
         $0D"rotate/h_rot1.wav"$0D"rotate/h_rot2.wav"$0D"switches/butn2.wav"
        Values = "doors/dr1_end.wav"$0D"doors/dr1_mid.wav"$0D"doors/dr1.strt.w"
         "av"$0D"plats/pt1_end.wav"$0D"plats/pt1_mid.wav"$0D"plats/pt1_strt.wa"
         "v"$0D"rotate/h_rot1.wav"$0D"rotate/h_rot2.wav"$0D"switches/butn2.wav"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      noise: =
      {
        Typ = "C"
        Txt = "Player Sounds"
        Hint = "Nunber of sounds = 26"
        Items = "player/burn1.wav"$0D"player/burn2.wav"$0D"player/death4.wav"$0D
         "player/drown1.wav"$0D"player/fall1.wav"$0D"player/fall2.wav"$0D"play"
         "er/fry.wav"$0D"player/gasp1.wav"$0D"player/gasp2.wav"$0D"player/jump"
         "1.wav"$0D"player/land1.wav"$0D"player/lava_in.wav"$0D"player/lava1.w"
         "av"$0D"player/lava2.wav"$0D"player/step1.wav"$0D"player/step2.wav"$0D
         "player/step3.wav"$0D"player/step4.wav"$0D"player/u_breath1.wav"$0D"p"
         "layer/u_breath2.wav"$0D"player/wade1.wav"$0D"player/wade2.wav"$0D"pl"
         "ayer/wade3.wav"$0D"player/watr_in.wav"$0D"player/watr_out.wav"$0D"pl"
         "ayer/watr_un.wav"
        Values = "player/burn1.wav"$0D"player/burn2.wav"$0D"player/death4.wav"$0D
         "player/drown1.wav"$0D"player/fall1.wav"$0D"player/fall2.wav"$0D"play"
         "er/fry.wav"$0D"player/gasp1.wav"$0D"player/gasp2.wav"$0D"player/jump"
         "1.wav"$0D"player/land1.wav"$0D"player/lava_in.wav"$0D"player/lava1.w"
         "av"$0D"player/lava2.wav"$0D"player/step1.wav"$0D"player/step2.wav"$0D
         "player/step3.wav"$0D"player/step4.wav"$0D"player/u_breath1.wav"$0D"p"
         "layer/u_breath2.wav"$0D"player/wade1.wav"$0D"player/wade2.wav"$0D"pl"
         "ayer/wade3.wav"$0D"player/watr_in.wav"$0D"player/watr_out.wav"$0D"pl"
         "ayer/watr_un.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Female Player Sounds"
        Hint = "Nunber of sounds = 18"
        Items = "player/female/death1.wav"$0D"player/female/death2.wav"$0D"pla"
         "yer/female/death3.wav"$0D"player/female/death4.wav"$0D"player/female"
         "/drown.wav"$0D"player/female/fall1.wav"$0D"player/female/fall2.wav"$0D
         "player/female/gurp1.wav"$0D"player/female/gurp2.wav"$0D"player/femal"
         "e/jump1.wav"$0D"player/female/pain25_1.wav"$0D"player/female/pain25_"
         "2.wav"$0D"player/female/pain50_1.wav"$0D"player/female/pain50_2.wav"$0D
         "player/female/pain75_1.wav"$0D"player/female/pain75_2.wav"$0D"player"
         "/female/pain100_1.wav"$0D"player/female/pain100_2.wav"
        Values = "player/female/death1.wav"$0D"player/female/death2.wav"$0D"pl"
         "ayer/female/death3.wav"$0D"player/female/death4.wav"$0D"player/femal"
         "e/drown.wav"$0D"player/female/fall1.wav"$0D"player/female/fall2.wav"$0D
         "player/female/gurp1.wav"$0D"player/female/gurp2.wav"$0D"player/femal"
         "e/jump1.wav"$0D"player/female/pain25_1.wav"$0D"player/female/pain25_"
         "2.wav"$0D"player/female/pain50_1.wav"$0D"player/female/pain50_2.wav"$0D
         "player/female/pain75_1.wav"$0D"player/female/pain75_2.wav"$0D"player"
         "/female/pain100_1.wav"$0D"player/female/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Male Player Sounds"
        Hint = "Nunber of sounds = 19"
        Items = "player/male/bump1.wav"$0D"player/male/death1.wav"$0D"player/m"
         "ale/death2.wav"$0D"player/male/death3.wav"$0D"player/male/death4.wav"
         $0D"player/male/drown1.wav"$0D"player/male/fall1.wav"$0D"player/male/"
         "fall2.wav"$0D"player/male/gurp1.wav"$0D"player/male/gurp2.wav"$0D"pl"
         "ayer/male/jump1.wav"$0D"player/male/pain25_1.wav"$0D"player/male/pai"
         "n25_2.wav"$0D"player/male/pain50_1.wav"$0D"player/male/pain50_2.wav"$0D
         "player/male/pain75_1.wav"$0D"player/male/pain75_2.wav"$0D"player/mal"
         "e/pain100_1.wav"$0D"player/male/pain100_2.wav"
        Values = "player/male/bump1.wav"$0D"player/male/death1.wav"$0D"player/"
         "male/death2.wav"$0D"player/male/death3.wav"$0D"player/male/death4.wa"
         "v"$0D"player/male/drown1.wav"$0D"player/male/fall1.wav"$0D"player/ma"
         "le/fall2.wav"$0D"player/male/gurp1.wav"$0D"player/male/gurp2.wav"$0D
         "player/male/jump1.wav"$0D"player/male/pain25_1.wav"$0D"player/male/p"
         "ain25_2.wav"$0D"player/male/pain50_1.wav"$0D"player/male/pain50_2.wa"
         "v"$0D"player/male/pain75_1.wav"$0D"player/male/pain75_2.wav"$0D"play"
         "er/male/pain100_1.wav"$0D"player/male/pain100_2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Misc_insane Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "insane/insane1.wav"$0D"insane/insane2.wav"$0D"insane/insane3."
         "wav"$0D"insane/insane4.wav"$0D"insane/insane5.wav"$0D"insane/insane6"
         ".wav"$0D"insane/insane7.wav"$0D"insane/insane8.wav"$0D"insane/insane"
         "9.wav"$0D"insane/insane10.wav"$0D"insane/insane11.wav"
        Values = "insane/insane1.wav"$0D"insane/insane2.wav"$0D"insane/insane3"
         ".wav"$0D"insane/insane4.wav"$0D"insane/insane5.wav"$0D"insane/insane"
         "6.wav"$0D"insane/insane7.wav"$0D"insane/insane8.wav"$0D"insane/insan"
         "e9.wav"$0D"insane/insane10.wav"$0D"insane/insane11.wav"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_berserk Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "berserk/attack.wav"$0D"berserk/berdeth2.wav"$0D"berserk/berid"
         "le1.wav"$0D"berserk/berpain2.wav"$0D"berserk/bersrch1.wav"$0D"berser"
         "k/death.wav"$0D"berserk/idle.wav"$0D"berserk/sight.wav"$0D"berserk/x"
         "fire.wav"
        Values = "berserk/attack.wav"$0D"berserk/berdeth2.wav"$0D"berserk/beri"
         "dle1.wav"$0D"berserk/berpain2.wav"$0D"berserk/bersrch1.wav"$0D"berse"
         "rk/death.wav"$0D"berserk/idle.wav"$0D"berserk/sight.wav"$0D"berserk/"
         "xfire.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_boss1 Sounds"
        Hint = "Nunber of sounds = 7"
        Items = "bosstank/btkdeth1.wav"$0D"bosstank/btkengn1.wav"$0D"bosstank/"
         "btkpain1.wav"$0D"bosstank/btkpain2.wav"$0D"bosstank/btkpain3.wav"$0D
         "bosstank/btkunqv1.wav"$0D"bosstank/btkunqv2.wav"
        Values = "bosstank/btkdeth1.wav"$0D"bosstank/btkengn1.wav"$0D"bosstank"
         "/btkpain1.wav"$0D"bosstank/btkpain2.wav"$0D"bosstank/btkpain3.wav"$0D
         "bosstank/btkunqv1.wav"$0D"bosstank/btkunqv2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_boss2 Sounds"
        Hint = "Nunber of sounds = 6"
        Items = "bosshovr/bhvdeth1.wav"$0D"bosshovr/bhvengn1.wav"$0D"bosshovr/"
         "bhvpain1.wav"$0D"bosshovr/bhvpain2.wav"$0D"bosshovr/bhvpain3.wav"$0D
         "bosshovr/bhvunqv1.wav"
        Values = "bosshovr/bhvdeth1.wav"$0D"bosshovr/bhvengn1.wav"$0D"bosshovr"
         "/bhvpain1.wav"$0D"bosshovr/bhvpain2.wav"$0D"bosshovr/bhvpain3.wav"$0D
         "bosshovr/bhvunqv1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_boss3 Sounds"
        Hint = "Nunber of sounds = 15"
        Items = "boss3/bs3atck1.wav"$0D"boss3/bs3atck2.wav"$0D"boss3/bs3deth1."
         "wav"$0D"boss3/bs3idle1.wav"$0D"boss3/bs3pain1.wav"$0D"boss3/bs3pain2"
         ".wav"$0D"boss3/bs3pain3.wav"$0D"boss3/bsp3srch1.wav"$0D"boss3/bsp3sr"
         "ch2.wav"$0D"boss3/bsp3srch3.wav"$0D"boss3/d_hit.wav"$0D"boss3/step1."
         "wav"$0D"boss3/step2.wav"$0D"boss3/w_loop.wav"$0D"boss3/xfire.wav"
        Values = "boss3/bs3atck1.wav"$0D"boss3/bs3atck2.wav"$0D"boss3/bs3deth1"
         ".wav"$0D"boss3/bs3idle1.wav"$0D"boss3/bs3pain1.wav"$0D"boss3/bs3pain"
         "2.wav"$0D"boss3/bs3pain3.wav"$0D"boss3/bsp3srch1.wav"$0D"boss3/bsp3s"
         "rch2.wav"$0D"boss3/bsp3srch3.wav"$0D"boss3/d_hit.wav"$0D"boss3/step1"
         ".wav"$0D"boss3/step2.wav"$0D"boss3/w_loop.wav"$0D"boss3/xfire.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_brain Sounds"
        Hint = "Nunber of sounds = 14"
        Items = "brain/brnatck1.wav"$0D"brain/brnatck2.wav"$0D"brain/brnatck3."
         "wav"$0D"brain/brndeth1.wav"$0D"brain/brnidle1.wav"$0D"brain/brnidle2"
         ".wav"$0D"brain/brnlens1.wav"$0D"brain/brnpain1.wav"$0D"brain/brnpain"
         "2.wav"$0D"brain/brnsght1.wav"$0D"brain/brnsrch1.wav"$0D"brain/melee1"
         ".wav"$0D"brain/melee2.wav"$0D"brain/melee3.wav"
        Values = "brain/brnatck1.wav"$0D"brain/brnatck2.wav"$0D"brain/brnatck3"
         ".wav"$0D"brain/brndeth1.wav"$0D"brain/brnidle1.wav"$0D"brain/brnidle"
         "2.wav"$0D"brain/brnlens1.wav"$0D"brain/brnpain1.wav"$0D"brain/brnpai"
         "n2.wav"$0D"brain/brnsght1.wav"$0D"brain/brnsrch1.wav"$0D"brain/melee"
         "1.wav"$0D"brain/melee2.wav"$0D"brain/melee3.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_chick Sounds"
        Hint = "Nunber of sounds = 15"
        Items = "chick/chkatck1.wav"$0D"chick/chkatck2.wav"$0D"chick/chkatck3."
         "wav"$0D"chick/chkatck4.wav"$0D"chick/chkatck5.wav"$0D"chick/chkdeth1"
         ".wav"$0D"chick/chkdeth2.wav"$0D"chick/chkfall1.wav"$0D"chick/chkidle"
         "1.wav"$0D"chick/chkidle2.wav"$0D"chick/chkpain1.wav"$0D"chick/chkpai"
         "n2.wav"$0D"chick/chkpain3.wav"$0D"chick/chksght1.wav"$0D"chick/chksr"
         "ch1.wav"
        Values = "chick/chkatck1.wav"$0D"chick/chkatck2.wav"$0D"chick/chkatck3"
         ".wav"$0D"chick/chkatck4.wav"$0D"chick/chkatck5.wav"$0D"chick/chkdeth"
         "1.wav"$0D"chick/chkdeth2.wav"$0D"chick/chkfall1.wav"$0D"chick/chkidl"
         "e1.wav"$0D"chick/chkidle2.wav"$0D"chick/chkpain1.wav"$0D"chick/chkpa"
         "in2.wav"$0D"chick/chkpain3.wav"$0D"chick/chksght1.wav"$0D"chick/chks"
         "rch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_flipper Sounds"
        Hint = "Nunber of sounds = 8"
        Items = "flipper/flpatck1.wav"$0D"flipper/flpatck2.wav"$0D"flipper/flp"
         "deth1.wav"$0D"flipper/flpidle1.wav"$0D"flipper/flppain1.wav"$0D"flip"
         "per/flppain2.wav"$0D"flipper/flpsght1.wav"$0D"flipper/flpsrch1.wav"
        Values = "flipper/flpatck1.wav"$0D"flipper/flpatck2.wav"$0D"flipper/fl"
         "pdeth1.wav"$0D"flipper/flpidle1.wav"$0D"flipper/flppain1.wav"$0D"fli"
         "pper/flppain2.wav"$0D"flipper/flpsght1.wav"$0D"flipper/flpsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_floater Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "floater/fltatck1.wav"$0D"floater/fltatck2.wav"$0D"floater/flt"
         "atck3.wav"$0D"floater/fltdeth1.wav"$0D"floater/fltidle1.wav"$0D"floa"
         "ter/fltpain1.wav"$0D"floater/fltpain2.wav"$0D"floater/fltsght1.wav"$0D
         "floater/fltsrch1.wav"
        Values = "floater/fltatck1.wav"$0D"floater/fltatck2.wav"$0D"floater/fl"
         "tatck3.wav"$0D"floater/fltdeth1.wav"$0D"floater/fltidle1.wav"$0D"flo"
         "ater/fltpain1.wav"$0D"floater/fltpain2.wav"$0D"floater/fltsght1.wav"$0D
         "floater/fltsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_flyer Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "flyer/flyatck1.wav"$0D"flyer/flyatck2.wav"$0D"flyer/flyatck3."
         "wav"$0D"flyer/flydeth1.wav"$0D"flyer/flyidle1.wav"$0D"flyer/flypain1"
         ".wav"$0D"flyer/flypain2.wav"$0D"flyer/flysght1.wav"$0D"flyer/flysrch"
         "1.wav"
        Values = "flyer/flyatck1.wav"$0D"flyer/flyatck2.wav"$0D"flyer/flyatck3"
         ".wav"$0D"flyer/flydeth1.wav"$0D"flyer/flyidle1.wav"$0D"flyer/flypain"
         "1.wav"$0D"flyer/flypain2.wav"$0D"flyer/flysght1.wav"$0D"flyer/flysrc"
         "h1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_gladiator Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "gladiator/death.wav"$0D"gladiator/glddeth2.wav"$0D"gladiator/"
         "gldidle1.wav"$0D"gladiator/gldpain2.wav"$0D"gladiator/gldsrch1.wav"$0D
         "gladiator/melee1.wav"$0D"gladiator/melee2.wav"$0D"gladiator/melee3.w"
         "av"$0D"gladiator/pain.wav"$0D"gladiator/railgun.wav"$0D"gladiator/si"
         "ght.wav"
        Values = "gladiator/death.wav"$0D"gladiator/glddeth2.wav"$0D"gladiator"
         "/gldidle1.wav"$0D"gladiator/gldpain2.wav"$0D"gladiator/gldsrch1.wav"$0D
         "gladiator/melee1.wav"$0D"gladiator/melee2.wav"$0D"gladiator/melee3.w"
         "av"$0D"gladiator/pain.wav"$0D"gladiator/railgun.wav"$0D"gladiator/si"
         "ght.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_gunner Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "gunner/death1.wav"$0D"gunner/gunatck1.wav"$0D"gunner/gunatck2"
         ".wav"$0D"gunner/gunatck3.wav"$0D"gunner/gunidle1.wav"$0D"gunner/gunp"
         "ain1.wav"$0D"gunner/gunpain2.wav"$0D"gunner/gunsrch1.wav"$0D"gunner/"
         "sight1.wav"
        Values = "gunner/death1.wav"$0D"gunner/gunatck1.wav"$0D"gunner/gunatck"
         "2.wav"$0D"gunner/gunatck3.wav"$0D"gunner/gunidle1.wav"$0D"gunner/gun"
         "pain1.wav"$0D"gunner/gunpain2.wav"$0D"gunner/gunsrch1.wav"$0D"gunner"
         "/sight1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_hover Sounds"
        Hint = "Nunber of sounds = 9"
        Items = "hover/hovatck1.wav"$0D"hover/hovdeth1.wav"$0D"hover/hovdeth2."
         "wav"$0D"hover/hovidle1.wav"$0D"hover/hovpain1.wav"$0D"hover/hovpain2"
         ".wav"$0D"hover/hovsght1.wav"$0D"hover/hovsrch1.wav"$0D"hover/hovsrch"
         "2.wav"
        Values = "hover/hovatck1.wav"$0D"hover/hovdeth1.wav"$0D"hover/hovdeth2"
         ".wav"$0D"hover/hovidle1.wav"$0D"hover/hovpain1.wav"$0D"hover/hovpain"
         "2.wav"$0D"hover/hovsght1.wav"$0D"hover/hovsrch1.wav"$0D"hover/hovsrc"
         "h2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_infantry Sounds"
        Hint = "Nunber of sounds = 12"
        Items = "infantry/infatck1.wav"$0D"infantry/infatck2.wav"$0D"infantry/"
         "infatck3.wav"$0D"infantry/infdeth1.wav"$0D"infantry/infdeth2.wav"$0D
         "infantry/infidle1.wav"$0D"infantry/inflies1.wav"$0D"infantry/infpain"
         "1.wav"$0D"infantry/infpain2.wav"$0D"infantry/infsght1.wav"$0D"infant"
         "ry/infsrch1.wav"$0D"infantry/melee2.wav"
        Values = "infantry/infatck1.wav"$0D"infantry/infatck2.wav"$0D"infantry"
         "/infatck3.wav"$0D"infantry/infdeth1.wav"$0D"infantry/infdeth2.wav"$0D
         "infantry/infidle1.wav"$0D"infantry/inflies1.wav"$0D"infantry/infpain"
         "1.wav"$0D"infantry/infpain2.wav"$0D"infantry/infsght1.wav"$0D"infant"
         "ry/infsrch1.wav"$0D"infantry/melee2.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_makron Sounds"
        Hint = "Nunber of sounds = 27"
        Items = "makron/bfg_fire.wav"$0D"makron/bfg_hum.wav"$0D"makron/bhit.wa"
         "v"$0D"makron/blaster.wav"$0D"makron/brain1.wav"$0D"makron/death.wav"$0D
         "makron/head1.wav"$0D"makron/head2.wav"$0D"makron/laf1.wav"$0D"makron"
         "/laf2.wav"$0D"makron/laf3.wav"$0D"makron/laf4.wav"$0D"makron/pain1.w"
         "av"$0D"makron/pain2.wav"$0D"makron/pain3.wav"$0D"makron/popup.wav"$0D
         "makron/rail_up.wav"$0D"makron/roar1.wav"$0D"makron/roar2.wav"$0D"mak"
         "ron/spine.wav"$0D"makron/step1.wav"$0D"makron/step2.wav"$0D"makron/v"
         "oice.wav"$0D"makron/voice1.wav"$0D"makron/voice2.wav"$0D"makron/voic"
         "e3.wav"$0D"makron/voice4.wav"
        Values = "makron/bfg_fire.wav"$0D"makron/bfg_hum.wav"$0D"makron/bhit.w"
         "av"$0D"makron/blaster.wav"$0D"makron/brain1.wav"$0D"makron/death.wav"
         $0D"makron/head1.wav"$0D"makron/head2.wav"$0D"makron/laf1.wav"$0D"mak"
         "ron/laf2.wav"$0D"makron/laf3.wav"$0D"makron/laf4.wav"$0D"makron/pain"
         "1.wav"$0D"makron/pain2.wav"$0D"makron/pain3.wav"$0D"makron/popup.wav"
         $0D"makron/rail_up.wav"$0D"makron/roar1.wav"$0D"makron/roar2.wav"$0D"m"
         "akron/spine.wav"$0D"makron/step1.wav"$0D"makron/step2.wav"$0D"makron"
         "/voice.wav"$0D"makron/voice1.wav"$0D"makron/voice2.wav"$0D"makron/vo"
         "ice3.wav"$0D"makron/voice4.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_medic Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "medic/idle.wav"$0D"medic/medatck1.wav"$0D"medic/medatck2.wav"$0D
         "medic/medatck3.wav"$0D"medic/medatck4.wav"$0D"medic/medatck5.wav"$0D
         "medic/meddeth1.wav"$0D"medic/medpain1.wav"$0D"medic/medpain2.wav"$0D
         "medic/medsght1.wav"$0D"medic/medsrch1.wav"
        Values = "medic/idle.wav"$0D"medic/medatck1.wav"$0D"medic/medatck2.wav"
         $0D"medic/medatck3.wav"$0D"medic/medatck4.wav"$0D"medic/medatck5.wav"$0D
         "medic/meddeth1.wav"$0D"medic/medpain1.wav"$0D"medic/medpain2.wav"$0D
         "medic/medsght1.wav"$0D"medic/medsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_mutant Sounds"
        Hint = "Nunber of sounds = 13"
        Items = "mutant/mutatck1.wav"$0D"mutant/mutatck2.wav"$0D"mutant/mutatc"
         "k3.wav"$0D"mutant/mutdeth1.wav"$0D"mutant/mutidle1.wav"$0D"mutant/mu"
         "tpain1.wav"$0D"mutant/mutpain2.wav"$0D"mutant/mutsght1.wav"$0D"mutan"
         "t/mutsrch1.wav"$0D"mutant/step1.wav"$0D"mutant/step2.wav"$0D"mutant/"
         "step3.wav"$0D"mutant/thud1.wav"
        Values = "mutant/mutatck1.wav"$0D"mutant/mutatck2.wav"$0D"mutant/mutat"
         "ck3.wav"$0D"mutant/mutdeth1.wav"$0D"mutant/mutidle1.wav"$0D"mutant/m"
         "utpain1.wav"$0D"mutant/mutpain2.wav"$0D"mutant/mutsght1.wav"$0D"muta"
         "nt/mutsrch1.wav"$0D"mutant/step1.wav"$0D"mutant/step2.wav"$0D"mutant"
         "/step3.wav"$0D"mutant/thud1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_parasite Sounds"
        Hint = "Nunber of sounds = 11"
        Items = "parasite/paratck1.wav"$0D"parasite/paratck2.wav"$0D"parasite/"
         "paratck3.wav"$0D"parasite/paratck4.wav"$0D"parasite/pardeth1.wav"$0D
         "parasite/paridle1.wav"$0D"parasite/paridle2.wav"$0D"parasite/parpain"
         "1.wav"$0D"parasite/parpain2.wav"$0D"parasite/parsght1.wav"$0D"parasi"
         "te/parsrch1.wav"
        Values = "parasite/paratck1.wav"$0D"parasite/paratck2.wav"$0D"parasite"
         "/paratck3.wav"$0D"parasite/paratck4.wav"$0D"parasite/pardeth1.wav"$0D
         "parasite/paridle1.wav"$0D"parasite/paridle2.wav"$0D"parasite/parpain"
         "1.wav"$0D"parasite/parpain2.wav"$0D"parasite/parsght1.wav"$0D"parasi"
         "te/parsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_soldier Sounds"
        Hint = "Nunber of sounds = 12"
        Items = "soldier/solatck1.wav"$0D"soldier/solatck2.wav"$0D"soldier/sol"
         "atck3.wav"$0D"soldier/soldeth1.wav"$0D"soldier/soldeth2.wav"$0D"sold"
         "ier/soldeth3.wav"$0D"soldier/solidle1.wav"$0D"soldier/solpain1.wav"$0D
         "soldier/solpain2.wav"$0D"soldier/solpain3.wav"$0D"soldier/solsght1.w"
         "av"$0D"soldier/solsrch1.wav"
        Values = "soldier/solatck1.wav"$0D"soldier/solatck2.wav"$0D"soldier/so"
         "latck3.wav"$0D"soldier/soldeth1.wav"$0D"soldier/soldeth2.wav"$0D"sol"
         "dier/soldeth3.wav"$0D"soldier/solidle1.wav"$0D"soldier/solpain1.wav"$0D
         "soldier/solpain2.wav"$0D"soldier/solpain3.wav"$0D"soldier/solsght1.w"
         "av"$0D"soldier/solsrch1.wav"
      }
      noise: =
      {
        Typ = "C"
        Txt = "Monster_tank Sounds"
        Hint = "Nunber of sounds = 18"
        Items = "tank/death.wav"$0D"tank/pain.wav"$0D"tank/rocket.wav"$0D"tank"
         "/sight1.wav"$0D"tank/step.wav"$0D"tank/thud.wav"$0D"tank/tnkatck1.wa"
         "v"$0D"tank/tnkatck3.wav"$0D"tank/tnkatck4.wav"$0D"tank/tnkatck5.wav"$0D
         "tank/tnkatk2a.wav"$0D"tank/tnkatk2b.wav"$0D"tank/tnkatk2c.wav"$0D"ta"
         "nk/tnkatk2d.wav"$0D"tank/tnkatk2e.wav"$0D"tank/tnkdeth2.wav"$0D"tank"
         "/tnkidle1.wav"$0D"tank/tnkpain2.wav"
        Values = "tank/death.wav"$0D"tank/pain.wav"$0D"tank/rocket.wav"$0D"tan"
         "k/sight1.wav"$0D"tank/step.wav"$0D"tank/thud.wav"$0D"tank/tnkatck1.w"
         "av"$0D"tank/tnkatck3.wav"$0D"tank/tnkatck4.wav"$0D"tank/tnkatck5.wav"
         $0D"tank/tnkatk2a.wav"$0D"tank/tnkatk2b.wav"$0D"tank/tnkatk2c.wav"$0D
         "tank/tnkatk2d.wav"$0D"tank/tnkatk2e.wav"$0D"tank/tnkdeth2.wav"$0D"ta"
         "nk/tnkidle1.wav"$0D"tank/tnkpain2.wav"
      }
    }
    t_spawner_form:form =
    {
      Caption = "Items Spawner"
      target: =
      {
        Typ = "C"
        Txt = "Weapons Classes"
        Items = "weapon_shotgun"$0D"weapon_supershotgun"$0D"weapon_machinegun"$0D
         "weapon_chaingun"$0D"weapon_grenadelauncher"$0D"weapon_rocketlauncher"
         $0D"weapon_hyperblaster"$0D"weapon_railgun"$0D"weapon_bfg"
        Values = "weapon_shotgun"$0D"weapon_supershotgun"$0D"weapon_machinegun"
         $0D"weapon_chaingun"$0D"weapon_grenadelauncher"$0D"weapon_rocketlaunc"
         "her"$0D"weapon_hyperblaster"$0D"weapon_railgun"$0D"weapon_bfg"
      }
      target: =
      {
        Typ = "C"
        Txt = "Ammo Classes"
        Items = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rocke"
         "ts"$0D"ammo_cells"$0D"ammo_slugs"
        Values = "ammo_shells"$0D"ammo_bullets"$0D"ammo_grenades"$0D"ammo_rock"
         "ets"$0D"ammo_cells"$0D"ammo_slugs"
      }
      target: =
      {
        Typ = "C"
        Txt = "Item Classes"
        Items = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_health_small"$0D
         "item_health"$0D"item_health_large"$0D"item_health_mega"$0D"item_invu"
         "lnerability"$0D"item_pack"$0D"item_power_screen"$0D"item_power_shiel"
         "d"$0D"item_quad"$0D"item_silencer"
        Values = "item_adrenaline"$0D"item_ancient_head"$0D"item_armor_shard"$0D
         "item_armor_body"$0D"item_armor_combat"$0D"item_armor_jacket"$0D"item"
         "_bandolier"$0D"item_breather"$0D"item_enviro"$0D"item_health_small"$0D
         "item_health"$0D"item_health_large"$0D"item_health_mega"$0D"item_invu"
         "lnerability"$0D"item_pack"$0D"item_power_screen"$0D"item_power_shiel"
         "d"$0D"item_quad"$0D"item_silencer"
      }
      target: =
      {
        Typ = "C"
        Txt = "Key Classes"
        Items = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"$0D
         "key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
        Values = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"
         $0D"key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
      }
      target: =
      {
        Typ = "C"
        Txt = "Misc Classes"
        Items = "misc_banner"$0D"misc_blackhole"$0D"misc_deadsoldier"$0D"misc_"
         "easterchick"$0D"misc_easterchick2"$0D"misc_eastertank"$0D"misc_explo"
         "box"$0D"misc_gib_arm"$0D"misc_gib_head"$0D"misc_gib_leg"$0D"misc_ins"
         "ane"$0D"misc_satellite_dish"$0D"misc_teleporter_dest"$0D"misc_bigvip"
         "er"
        Values = "misc_banner"$0D"misc_blackhole"$0D"misc_deadsoldier"$0D"misc"
         "_easterchick"$0D"misc_easterchick2"$0D"misc_eastertank"$0D"misc_expl"
         "obox"$0D"misc_gib_arm"$0D"misc_gib_head"$0D"misc_gib_leg"$0D"misc_in"
         "sane"$0D"misc_satellite_dish"$0D"misc_teleporter_dest"$0D"misc_bigvi"
         "per"
      }
      target: =
      {
        Typ = "C"
        Txt = "Monster Classes"
        Items = "monster_berserk"$0D"monster_boss2"$0D"monster_boss3_stand"$0D
         "monster_brain"$0D"monster_chick"$0D"monster_commander_body"$0D"monst"
         "er_flipper"$0D"monster_floater"$0D"monster_flyer"$0D"monster_gladiat"
         "or"$0D"monster_gunner"$0D"monster_hover"$0D"monster_infantry"$0D"mon"
         "ster_jorg"$0D"monster_medic"$0D"monster_mutant"$0D"monster_parasite"$0D
         "monster_soldier"$0D"monster_soldier_light"$0D"monster_soldier_ss"$0D
         "monster_supertank"$0D"monster_tank"$0D"monster_tank_commander"
        Values = "monster_berserk"$0D"monster_boss2"$0D"monster_boss3_stand"$0D
         "monster_brain"$0D"monster_chick"$0D"monster_commander_body"$0D"monst"
         "er_flipper"$0D"monster_floater"$0D"monster_flyer"$0D"monster_gladiat"
         "or"$0D"monster_gunner"$0D"monster_hover"$0D"monster_infantry"$0D"mon"
         "ster_jorg"$0D"monster_medic"$0D"monster_mutant"$0D"monster_parasite"$0D
         "monster_soldier"$0D"monster_soldier_light"$0D"monster_soldier_ss"$0D
         "monster_supertank"$0D"monster_tank"$0D"monster_tank_commander"
      }
    }
  }
  Entity forms.fctx =
  {
    t_noise:incl =
    {
      noise: =
      {
        Txt = ""
        Typ = "B"
        Form = "t_noise_form:form"
        Hint = "Available .WAV files"
        Cap = "sounds..."
      }
    }
    ammo_bullets:form =
    {
      Help = "This is the ammo for weapon_machinegun and weapon_chaingun."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/bullets/medium/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    ammo_cells:form =
    {
      Help = "This is the ammo for weapon_hyperblaster and weapon_bfg."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/cells/medium/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    ammo_grenades:form =
    {
      Help = "This is handthrown grenades and the ammo for weapon_grenadelaunc"
       "her."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/grenades/medium/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    ammo_rockets:form =
    {
      Help = "This is the ammo for weapon_rocketlauncher."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/rockets/medium/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    ammo_shells:form =
    {
      Help = "This is the ammo for weapon_shotgun and weapon_supershotgun."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/shells/medium/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    ammo_slugs:form =
    {
      Help = "This is the ammo for weapon_railgun."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/ammo/slugs/medium/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the ammo is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the a"
         "mmo is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " ammo is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the ammo is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The ammo_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    func_areaportal:form =
    {
      Help = "This is a non-visible object that divides the world into areas t"
       "hat are seperated when this portal is not activated. Usually enclosed "
       "in the middle of a door."
      style: =
      {
        Txt = "&"
        Hint = "set 1 next AP 2 etc. Note don't need to set this, when a full "
         "compile is done this is set ."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Targeted buy a func_door or func_door_rotating or func_door_se"
         "cret."
      }
    }
    func_button:form =
    {
      Help = "When a button is touched, it moves some distance in the directio"
       "n of it's angle, and then triggers all of it's targets."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_button will move on the XY plane. (Default="
         "0). (-1 is up, -2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the func_button will move in 3 dimensions, specified"
         " by pitch and yaw. Roll is ignored. Syntax is pitch yaw 0. (Default="
         "0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the func_button fires. ("
         "Default=0)."
      }
      health: =
      {
        Txt = "&"
        Hint = "When non-zero, makes the func_button shootable, and specifies "
         "hit points required before activating."$0D"A shootable func_button i"
         "s not pushable. (Default=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the f"
         "unc_button fires."
      }
      lip: =
      {
        Txt = "&"
        Hint = "When activated, the func_button will move [brush thickness]+[-"
         "2]-[lip value] units. (Default=4)."
      }
      message: =
      {
        Txt = "&"
        Hint = "Character string to print to the screen when the func_button f"
         "ires."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies sounds to be played when activated. (Default=0)."
        Items = "0) Audible"$0D"1) Silent"$0D"2) Steam Metal"$0D"3) Wooden Clu"
         "nk"$0D"4) Metallic Click"$0D"5) In-Out"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in units/second that the func_button moves. (Default=40)"
         "."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the func_button "
         "fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_button."$0D" A func_button with a ta"
         "rgetname cannot be pressed,"$0D"but it can be shot (if health>0) and"
         " it can be triggered with another triggering entity."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Time in seconds for the func_button to wait before it returns "
         "to its ready position."$0D"If wait=-1, the button will never return."
         " (Default=3)."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_button will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_button will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_button will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_button will be inhibited and not appear when deathmat"
         "ch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_clock:form =
    {
      Help = "Target a target_string with this. The default is to be a time of"
       " day clock."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        Txt = "&"
        Hint = "Sets the Number of seconds to count down/up. (Ex: 60 = 1 min)."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the count hits 0"
         " for TIMER DOWN or hits count # for TIMER UP."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "What the func_clock will look like."
        Items = "0) xx"$0D"1) xx.xx"$0D"2) xx.xx.xx"
        Values = "0"$0D"1"$0D"2"
      }
      target: =
      {
        Txt = "&"
        Hint = "This should be the targetname of a target_string."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Set this if it needs to be activated before it will start."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The func_clock will start at 0 and countup, when is reaches it"
         " set time the pathtarget will fire."
        Cap = "Timer Up"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The func_clock will start at is set time and countdown to 0, t"
         "hen the pathtarget will fire."
        Cap = "Timer Down"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "Use a trigger to start the func_clock."
        Cap = "Start Off"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "The func_clock will reset and count again."
        Cap = "Multi Use"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_clock will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_clock will be inhibited and not appear when skill=0."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_clock will be inhibited and not appear when skill=2 o"
         "r greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_clock will be inhibited and not appear when deathmatc"
         "h=1."
        Cap = "Not in Deathmatch"
      }
    }
    func_conveyor:form =
    {
      Help = "Conveyors are stationary brushes that move what's on them. The e"
       "ntity itself, as well as one side of the brush, must BOTH have one cur"
       "rent content activated."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_conveyor will move on the XY plane. (Defaul"
         "t=0)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in units/second that the func_conveyor moves. (Default=1"
         "00).Note that the FLOWING surface property has a set speed of 100 un"
         "its/second."$0D"If you want a faster or slower conveyor that also ap"
         "pears to move at the correct speed,"$0D"you'll have to scale the tex"
         "ture up (faster) or down (slower)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_conveyor."$0D"If START_ON is not set"
         " then the func_conveyor must be triggered to function."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The func_conveyor will be solid and visible and move objects w"
         "hen the map loads."$0D"If START_ON is not set, the func_conveyor wil"
         "l be nonsolid and invisible and will not move objects."
        Cap = "Start On"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The func_conveyor will be toggle on/off each time it is trigge"
         "red."
        Cap = "Toggle"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_conveyor will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_conveyor will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_conveyor will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_conveyor will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_door:form =
    {
      Help = "The standard entity for doors.."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_door will move on the XY plane. (Default=0)"
         ". (-1 is up, -2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the func_door will move in 3 dimensions, specified b"
         "y pitch and yaw. Roll is ignored. Syntax is pitch yaw 0. (Default=0 "
         "0 0)."
      }
      accel: =
      {
        Txt = "&"
        Hint = "Acceleration speed when activated, goes from stopped to speed "
         "(default=?)."
      }
      decel: =
      {
        Txt = "&"
        Hint = "Deceleration speed when deactivated, goes from speed to 0 (def"
         "ault=?)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Time before trigger in seconds."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Damage in hit points the func_door will do to an entity that b"
         "locks its movement. (Default=2)."
      }
      health: =
      {
        Txt = "&"
        Hint = "When greater than zero, makes the func_door shootable, and spe"
         "cifies hit points required before activating.(Default=0)."
      }
      lip: =
      {
        Txt = "&"
        Hint = "When activated, the func_door will move [brush thickness]+[-2]"
         "-[lip value] units. (Default=8)."
      }
      message: =
      {
        Txt = "&"
        Hint = "Character string to print to the screen when the player approa"
         "ches the func_door if its trigger is inactive."
      }
      sounds: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies sounds to be played when activated. (Default=0)."
        Items = "0) Audible"$0D"1) Silent"$0D"2) Light"$0D"3) Medium"$0D"4) He"
         "avy"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in units/second that the func_door moves. (Default=100)."
        Items = ""
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the func_door op"
         "ens."$0D"If the target is a func_areaportal, the areaportal will be "
         "triggered again when the func_door closes."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_door."$0D"A func_door with a targetn"
         "ame cannot be opened without another"$0D"triggering entity which tar"
         "gets it, but it can be shot (if health>0)."
      }
      team: =
      {
        Txt = "&"
        Hint = "Team name of the specific func_door."$0D"Func_door's with a id"
         "entical team names will move together, and will all stop if one is b"
         "locked."$0D"With some care concerning timing elements, a func_door m"
         "ay be teamed with a func_door_rotating."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Time in seconds for the func_door to wait before it returns to"
         " its closed position."$0D"If wait=-1, the door will never return. (D"
         "efault=3)."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The func_door will appear in its open position rather than its"
         " closed position."
        Cap = "Start Open"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "If you check this the door won't open if you get crushed in it"
         ". It will just keep pressing until you die."$0D0D"X7: nothing in the"
         " code for this spawnflag."
        Cap = "x"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The func_door will not bounce back open when blocked, and inst"
         "ead will continue to apply its dmg value every 0.1 seconds."
        Cap = "Crusher"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "The func_door will not be triggered by monsters."
        Cap = "No Monsters"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "The func_door will display a sequence of animated textures at "
         "the rate of 4 animations/second if an animated texture is applied to"
         " it."
        Cap = "Animated"
      }
      spawnflags: =
      {
        Typ = "X32"
        Txt = "&"
        Hint = "The func_door must be triggered to close as well as being trig"
         "gered to open."
        Cap = "Toggle"
      }
      spawnflags: =
      {
        Typ = "X64"
        Txt = "&"
        Hint = "The func_door will display a sequence of animated textures at "
         "the rate of 10 animations/second if an animated texture is applied t"
         "o it."
        Cap = "Animated Fast"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_door will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_door will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_door will be inhibited and not appear when skill=2 or"
         " greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_door will be inhibited and not appear when deathmatch"
         "=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_door_rotating:form =
    {
      Help = "You need to have an origin brush as part of this entity.  The ce"
       "nter of that brush will be the point around which it is rotated."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_door_rotating will move on the XY plane. (D"
         "efault=0). (-1 is up, -2 is down)."
      }
      distance: =
      {
        Txt = "&"
        Hint = "Size of the arc in degrees that the func_door_rotating will de"
         "scribe when moving. (Default=90)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Damage in hit points the func_door_rotating will do to an enti"
         "ty that blocks its movement. (Default=2)."
      }
      health: =
      {
        Txt = "&"
        Hint = "When greater than zero, makes the func_door_rotating shootable"
         ", and specifies hit points required before activating."
      }
      message: =
      {
        Txt = "&"
        Hint = "Character string to print to the screen when the player approa"
         "ches the func_door_rotating if its trigger is inactive."
      }
      sounds: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies sounds to be played when activated. (Default=0)."
        Items = "0) Audible"$0D"1) Silent"$0D"2) Light"$0D"3) Medium"$0D"4) He"
         "avy"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in degrees/second that the func_door_rotating moves. (De"
         "fault=100)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the func_door_ro"
         "tating opens."$0D"If the target is a func_areaportal, the areaportal"
         " will be triggered again when the func_door_rotating closes."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_door_rotating."$0D"A func_door_rotat"
         "ing with a targetname cannot be opened without another"$0D"triggerin"
         "g entity which targets it, but it can be shot (if health>0)."
      }
      team: =
      {
        Txt = "&"
        Hint = "Team name of the specific func_door_rotating."$0D"Func_door_ro"
         "tating's with a identical team names will move together,"$0D"and wil"
         "l all stop if one is blocked. With some care concerning timing eleme"
         "nts,"$0D"a func_door_rotating may be teamed with a func_door. "
      }
      wait: =
      {
        Txt = "&"
        Hint = "Time in seconds for the func_door_rotating to wait before it r"
         "eturns to its closed position."$0D"If wait=-1, the door will never r"
         "eturn. (Default=3)."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The func_door_rotating will appear in its open position rather"
         " than its closed position."
        Cap = "Start Open"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The func_door_rotating Reverses the direction of rotation."
        Cap = "Reverse"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The func_door_rotating will not bounce back open when blocked,"
         " and instead will continue to apply its dmg value every 0.1 seconds."
        Cap = "Crusher"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "The func_door_rotating will not be triggered by monsters."
        Cap = "No Monsters"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "The func_door_rotating will display a sequence of animated tex"
         "tures at the rate of 4 animations/second if an animated texture is a"
         "pplied to it."
        Cap = "Animated"
      }
      spawnflags: =
      {
        Typ = "X32"
        Txt = "&"
        Hint = "The func_door_rotating must be triggered to close as well as b"
         "eing triggered to open."
        Cap = "Toggle"
      }
      spawnflags: =
      {
        Typ = "X64"
        Txt = "&"
        Hint = "The func_door_rotating will rotate around the X-axis rather th"
         "an the Z-axis."
        Cap = "X Axis"
      }
      spawnflags: =
      {
        Typ = "X128"
        Txt = "&"
        Hint = "The func_door_rotating will rotate around the Y-axis rather th"
         "an the Z-axis."
        Cap = "Y Axis"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_door_rotating will be inhibited and not appear when s"
         "kill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_door_rotating will be inhibited and not appear when s"
         "kill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_door_rotating will be inhibited and not appear when s"
         "kill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_door_rotating will be inhibited and not appear when d"
         "eathmatch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_door_secret:form =
    {
      Help = "A secret door. Slides back and then to the side."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_door_secret will move on the XY plane. (Def"
         "ault=0). (-1 is up, -2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the func_door_secret will move in 3 dimensions, spec"
         "ified by pitch and yaw. Roll is ignored. Syntax is pitch yaw 0. (Def"
         "ault=0 0 0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Damage in hit points the func_door_secret will do to an entity"
         " that blocks its movement. (Default=2)."
      }
      message: =
      {
        Txt = "&"
        Hint = "Character string to print to the screen when the player approa"
         "ches the func_door_secret. Only when targeted."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the func_door_se"
         "cret opens."$0D"If the target is a func_areaportal, the areaportal w"
         "ill be triggered again when the func_door_secret closes."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_door_secret."$0D"A func_door_secret "
         "with a targetname cannot be opened without another triggering entity"
         " which targets it."$0D"If ALWAYS_SHOOT is set the func_door_secret s"
         "hot to open."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Time in seconds for the func_door_secret to wait before it ret"
         "urns to its closed position."$0D"If wait=-1, the door will never ret"
         "urn. (Default=5)."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The func_door_secret is shootable even if targeted."
        Cap = "Always Shoot"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The func_door_secret 1st move is left of arrow."
        Cap = "1st Left"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The func_door_secret 1st move is down from arrow."
        Cap = "1st Down"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_door_secret will be inhibited and not appear when ski"
         "ll=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_door_secret will be inhibited and not appear when ski"
         "ll=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_door_secret will be inhibited and not appear when ski"
         "ll=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_door_secret will be inhibited and not appear when dea"
         "thmatch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_explosive:form =
    {
      Help = "Use this for any brush that you want to explode or break apart, "
       "including windows."
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the func_explosive fires"
         ". (Default=0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "The amount of damage in hit points that the func_explosive wil"
         "l do at its origin when triggered."$0D"If dmg=0, no explosion effect"
         " or sound will occur. (Default=0)."
      }
      health: =
      {
        Txt = "&"
        Hint = "Specifies hit points before the func_explosive will fire. (Def"
         "ault=100)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the f"
         "unc_explosive fires."
      }
      mass: =
      {
        Txt = "&"
        Hint = "The amount of debris to spawn when the func_explosive fires. ("
         "Default=75) - MAX 800."
      }
      message: =
      {
        Txt = "&"
        Hint = "Character string to print to the screen when the func_explosiv"
         "e fires. Can't be targeted."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the func_explosi"
         "ve fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Specific name of the func_explosive."$0D"A func_explosive with"
         " a targetname cannot be damaged by weapon fire,"$0D"but instead must"
         " be triggered by another triggering entity,"$0D"UNLESS the TRIGGER_S"
         "PAWN flag is set."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The func_explosive must be called by another entity before it "
         "appears in the map."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The func_explosive will display a sequence of animated texture"
         "s at the rate of 4 animations/second if an animated texture is appli"
         "ed to it."
        Cap = "Animated"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The func_explosive will display a sequence of animated texture"
         "s at the rate of 10 animations/second if an animated texture is appl"
         "ied to it."
        Cap = "Animated Fast"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_explosive will be inhibited and not appear when skill"
         "=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_explosive will be inhibited and not appear when skill"
         "=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_explosive will be inhibited and not appear when skill"
         "=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_explosive will be inhibited and not appear when death"
         "match=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_group:form =
    {
      Help = "Used to group brushes together just for editor convenience."
    }
    func_killbox:form =
    {
      Help = "Kills everything inside when fired, irrespective of protection."
      targetname: =
      {
        Txt = "&"
        Hint = "The name of the specific func_killbox."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_killbox will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_killbox will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_killbox will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_killbox will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    func_object:form =
    {
      Help = "This is solid bmodel that will fall if it's support is removed."
      dmg: =
      {
        Txt = "&"
        Hint = "Damage in hit points the func_object will do to an entity that"
         " blocks its movement. (Default=2)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_object."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The func_object must be called by another entity before it app"
         "ears in the map."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The func_object will display a sequence of animated textures a"
         "t the rate of 4 animations/second if an animated texture is applied "
         "to it."
        Cap = "Animated"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The func_object will display a sequence of animated textures a"
         "t the rate of 10 animations/second if an animated texture is applied"
         " to it."
        Cap = "Animated Fast"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_object will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_object will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_object will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_object will be inhibited and not appear when deathmat"
         "ch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_plat:form =
    {
      Help = "Plats are always drawn in the extended position, so they will li"
       "ght correctly.If the plat is the target of another trigger or button, "
       "it will start out disabled in the extended position until it is trigge"
       "r, when it will lower and become a normal plat."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_plat will move on the XY plane. (-1 is up, "
         "-2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the func_plat will move in 3 dimensions, specified b"
         "y pitch and yaw. Roll is ignored. Syntax is pitch yaw 0."
      }
      accel: =
      {
        Txt = "&"
        Hint = "Acceleration speed when activated, goes from stopped to speed "
         "(Default=500)."
      }
      decel: =
      {
        Txt = "&"
        Hint = "Deceleration speed when deactivated, goes from speed to 0 (def"
         "ault=?)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Damage in hit points the func_plat will do to an entity that b"
         "locks its movement. (Default=2)."
      }
      lip: =
      {
        Txt = "&"
        Hint = "Lip remaining at end of func_plat move (Default=8)."
      }
      height: =
      {
        Txt = "&"
        Hint = "If the height key is set, that will determine the amount the f"
         "unc_plat moves,"$0D"instead of being implicitly determoveinfoned by "
         "the model's height."
      }
      sounds: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sound it makes while moving."
        Items = "1) Base Fast"$0D"2) Chain Slow"
        Values = "1"$0D"2"
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in units/second that the func_plat moves. (Default=150)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "If set, no touch field will be spawned and a remote button or "
         "trigger field activates the func_plat."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "If you check this, the func_plat will trigger a the bottom and"
         " move up & down."
        Cap = "Platform low trigger"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_plat will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_plat will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_plat will be inhibited and not appear when skill=2 or"
         " greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_plat will be inhibited and not appear when deathmatch"
         "=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_rotating:form =
    {
      Help = "You need to have an origin brush as part of this entity. The cen"
       "ter of that brush will be the point around which it is rotated."
      dmg: =
      {
        Txt = "&"
        Hint = "Damage in hit points the func_rotating will do to an entity th"
         "at blocks its movement. (Default=2)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in degrees/second that the func_rotating turns. (Default"
         "=100)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_rotating. When triggered, it will to"
         "ggle on/off."
      }
      team: =
      {
        Txt = "&"
        Hint = "Team name of the specific func_rotating."$0D"Func_rotating's w"
         "ith a identical team names will turn together, and will all stop if "
         "one is blocked."$0D"With some care concerning timing elements, a fun"
         "c_rotating may be teamed with a func_train."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Sets the func_rotating to be active when the map loads."
        Cap = "Start On"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The func_rotating Reverses the direction of rotation."
        Cap = "Reverse"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The func_rotating will rotate around the X-axis rather than th"
         "e Z-axis."
        Cap = "X  Axis"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "The func_rotating will rotate around the Y-axis rather than th"
         "e Z-axis."
        Cap = "Y Axis"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "The func_rotating will apply its dmg value every 0.1 seconds b"
         "y simply coming into contact with it - blocking it isn't necessary."
        Cap = "Pain on Touch"
      }
      spawnflags: =
      {
        Typ = "X32"
        Txt = "&"
        Hint = "The func_rotating will stop moving instead of pushing entities"
         "."
        Cap = "Stop"
      }
      spawnflags: =
      {
        Typ = "X64"
        Txt = "&"
        Hint = "The func_rotating will display a sequence of animated textures"
         " at the rate of 4 animations/second if an animated texture is applie"
         "d to it."
        Cap = "Animated"
      }
      spawnflags: =
      {
        Typ = "X128"
        Txt = "&"
        Hint = "The func_rotating will display a sequence of animated textures"
         " at the rate of 10 animations/second if an animated texture is appli"
         "ed to it."
        Cap = "Animated Fast"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_rotating will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_rotating will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_rotating will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_rotating will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_timer:form =
    {
      Help = "A timer. When the time is up, the timer triggers all of its targ"
       "ets, and then starts over. These can be used but not touched."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the func_timer will fire"
         " after being triggered. (Default=0)."
      }
      pausetime: =
      {
        Txt = "&"
        Hint = "Specifies an initial delay before firing."$0D"Similar to delay"
         ", but only used when the START_ON spawnflag is set."
      }
      random: =
      {
        Txt = "&"
        Hint = "Specifies a +/- variance modifier to the wait value."$0D"The v"
         "alue of random must always be less than the value of wait. (Default="
         "0)."
      }
      target: =
      {
        Txt = "&"
        Hint = "The targetname of the entity the func_timer is to trigger."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_timer."$0D"The func_timer toggles on"
         "/off each time it is triggered."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Specifies the time is seconds between firings. Modified by ran"
         "dom. (Default=1)."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Sets the func_timer to be active when the map loads."
        Cap = "Start On"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_timer will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_timer will be inhibited and not appear when skill=0."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_timer will be inhibited and not appear when skill=2 o"
         "r greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_timer will be inhibited and not appear when deathmatc"
         "h=1."
        Cap = "Not in Deathmatch"
      }
    }
    func_train:form =
    {
      Help = "Trains are moving platforms that players can ride."
      dmg: =
      {
        Txt = "&"
        Hint = "The damage inflicted by the func_train on entities that block "
         "its progress."$0D"Ignored if BLOCK_STOPS is set. (Default=2)."
      }
      noise: =
      {
        Typ = "EP"
        Hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
        BasePath = "$Game\baseq2\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
      }
      noise: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available .WAV files"
        form = "t_noise_form:form"
        Cap = "sounds..."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in units/second that the func_train moves. (Default=100)"
         "."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the first path_corner on the func_train 's route"
         "."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the func_train."$0D"Unnamed func_train will always sta"
         "rt on, regardless of the START_ON setting."
      }
      team: =
      {
        Txt = "&"
        Hint = "Team name of the func_train."$0D"Trains with an identical team"
         " name will move together, and will all stop if one is blocked."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "By default a func_train with a targetname will only start movi"
         "ng when triggered by another entity."$0D"If you set the START_ON spa"
         "wnflag then the func_train will start moving when the level starts."
        Cap = "Start On"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "If set, allows the func_train to be toggled on/off multiple ti"
         "mes."
        Cap = "Toggle"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The The func_train will stop completely when an entity is bloc"
         "king its way."$0D"The blocking entity will not take damage, even if "
         "a positive dmg value is used."
        Cap = "Block Stops"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_train will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_train will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_train will be inhibited and not appear when skill=2 o"
         "r greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_train will be inhibited and not appear when deathmatc"
         "h=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_wall:form =
    {
      Help = "This is Quake2 func_wall brush model."
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_wall."$0D"When triggered, it will to"
         "ggle on/off."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The func_wall must be called by another entity before it appea"
         "rs in the map."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The func_wall can be toggled on and off."
        Cap = "Toggle"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "Sets func_wall to be active when the map loads. TOGGLE must be"
         " set also."
        Cap = "Start On"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "The func_wall will display a sequence of animated textures at "
         "the rate of 4 animations/second if an animated texture is applied to"
         " it."
        Cap = "Animated"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "The func_wall will display a sequence of animated textures at "
         "the rate of 10 animations/second if an animated texture is applied t"
         "o it."
        Cap = "Animated Fast"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_wall will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_wall will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_wall will be inhibited and not appear when skill=2 or"
         " greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_wall will be inhibited and not appear when deathmatch"
         "=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    func_water:form =
    {
      Help = "FUNC_WATER is a moveable water brush.  It must be targeted to op"
       "erate."
      angle: =
      {
        Txt = "&"
        Hint = "Direction the func_water will move on the XY plane. (-1 is up,"
         " -2 is down). (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Direction the func_water will move in 3 dimensions, specified "
         "by pitch and yaw. Roll is ignored. Syntax is pitch yaw 0. (Default=0"
         " 0 0)."
      }
      lip: =
      {
        Txt = "&"
        Hint = "When activated, the func_water will move [brush thickness]+[-2"
         "]-[lip value] units. (Default=0)."
      }
      sounds: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies sounds to be played while the func_water is moving."
        Items = "1) No Sound"$0D"2) Water"$0D"3) Lava"
        Values = "1"$0D"2"$0D"3"
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed in units/second that the func_water moves. (Default=25)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the func_water m"
         "oves."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific func_water."
      }
      team: =
      {
        Txt = "&"
        Hint = "Team name of the specific func_water."$0D"Func_water's with a "
         "identical team names will move together, and if solid, will all stop"
         " if one is blocked."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Time in seconds for the func_water to wait before it returns t"
         "o its "$22"closed"$22" position."$0D"If wait=-1, the func_water must"
         " be retriggered in order for it to close. (Default=-1)."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The func_water will appear in its "$22"open"$22" position rath"
         "er than its "$22"closed"$22" position."
        Cap = "Start Open"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The func_water will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The func_water will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The func_water will be inhibited and not appear when skill=2 o"
         "r greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The func_water will be inhibited and not appear when deathmatc"
         "h=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    item_adrenaline:form =
    {
      Help = "Gives +1 to maximum health."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/adrenal/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_ancient_head:form =
    {
      Help = "Special item that gives +2 to maximum health."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/c_head/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_armor_body:form =
    {
      Help = "Adds 100 to your armor."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/body/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_armor_combat:form =
    {
      Help = "Adds 50 to your armor."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/combat/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_armor_jacket:form =
    {
      Help = "Adds 25 to your armor"
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/jacket/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_armor_shard:form =
    {
      Help = "Adds 2 to your armor."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/shard/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_bandolier:form =
    {
      Help = "Increases your carrying Capacity for all ammunition except grena"
       "des & rockets."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/band/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X256"
        Cap = "Not in Easy"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_breather:form =
    {
      Help = "This provides oxygen when submerged in liquids."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/breather/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_enviro:form =
    {
      Help = "This provides protection from harmful fluids."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/enviro/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_health:form =
    {
      Help = "Gives 10 health points."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/healing/medium/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_health_large:form =
    {
      Help = "Gives 25 Large Health points."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/healing/large/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_health_mega:form =
    {
      Help = "Gives 100 extra Health points, wears off after a short time."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/mega_h/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_health_small:form =
    {
      Help = "Gives 2 health points."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/healing/stimpack/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_invulnerability:form =
    {
      Help = "Renders you temporarily indestructible."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/invulner/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_pack:form =
    {
      Help = "This allows you to carry more on your back."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/pack/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_power_screen:form =
    {
      Help = "Gives you 200 armor towards energy weapons."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/screen/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_power_shield:form =
    {
      Help = "Provides improved protection against power weapons."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/armor/shield/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_quad:form =
    {
      Help = "Temporarily multiplies all your weapon's strengths by four."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/quaddama/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    item_silencer:form =
    {
      Help = "Silences the discharge of any weapon."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/silencer/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the item is touched by the player. (Default=0"
         ")."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the i"
         "tem is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " item is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the item is touc"
         "hed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific item entity. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Hint = "The item_* entity will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Hint = "The item_* entity will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    info_notnull:form =
    {
      Help = "Used as a positional target for lightning. Place this at the tip"
       " of of a turret_breach."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Only relevant if the info_notnull is used as a teleporter destinatio"
         "n."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Only relevant if the info_notn"
         "ull is used as a teleporter destination."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific info_notnull."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "Info_notnull will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "Info_notnull will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "Info_notnull will be inhibited and not appear when skill=2 or "
         "greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "Info_notnull will be inhibited and not appear when deathmatch="
         "1."
        Cap = "Not in Deathmatch"
      }
    }
    info_null:form =
    {
      Help = "Used as a positional target for spotlights, etc."
      bbox = '-8 -8 -8 8 8 8'
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific info_null."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "Info_null will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "Info_null will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "Info_null will be inhibited and not appear when skill=2 or gre"
         "ater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "Info_null will be inhibited and not appear when deathmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    info_player_coop:form =
    {
      Help = "Potential spawning position for coop games."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "players/female/tris.md2"
      mdlskin = "players/female/brianna.pcx"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name used for changing from other maps."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "This info_player_coop will be inhibited and not appear when sk"
         "ill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "This info_player_coop will be inhibited and not appear when sk"
         "ill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "This info_player_coop will be inhibited and not appear when sk"
         "ill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "This info_player_coop will be inhibited and not appear when de"
         "athmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    info_player_deathmatch:form =
    {
      Help = "Potential spawning position for deathmatch games."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/objects/dmspot/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific info_player_deathmatch."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "This info_player_deathmatch will be inhibited and not appear w"
         "hen skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "This info_player_deathmatch will be inhibited and not appear w"
         "hen skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "This info_player_deathmatch will be inhibited and not appear w"
         "hen skill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "This info_player_deathmatch will be inhibited and not appear w"
         "hen deathmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    info_player_intermission:form =
    {
      Help = "The end of Level , end of Match, intermission point will be at o"
       "ne of these."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_flareg/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific info_player_intermission."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "This info_player_intermission will be inhibited and not appear"
         " when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "This info_player_intermission will be inhibited and not appear"
         " when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "This info_player_intermission will be inhibited and not appear"
         " when skill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "This info_player_intermission will be inhibited and not appear"
         " when deathmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    info_player_start:form =
    {
      Help = "The normal starting point for a level."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "players/male/tris.md2"
      mdlskin = "players/male/cipher.pcx"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific info_player_start."$0D"When loading a map"
         " with multiple info_player_starts from the console,"$0D"the start th"
         "at the player will spawn at will be the first unnamed start found in"
         " the map file."$0D"If all starts are named, it will be the first sta"
         "rt found."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "This info_player_start will be inhibited and not appear when s"
         "kill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "This info_player_start will be inhibited and not appear when s"
         "kill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "This info_player_start will be inhibited and not appear when s"
         "kill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "This info_player_start will be inhibited and not appear when d"
         "eathmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    key_airstrike_target:form =
    {
      Help = "Air Strike Marker."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/target/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    key_blue_key:form =
    {
      Help = "Blue Key."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/key/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    key_commander_head:form =
    {
      Help = "Tank Commander's Head."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/monsters/commandr/head/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    key_data_cd:form =
    {
      Help = "Data CD Key."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/data_cd/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    key_data_spinner:form =
    {
      Help = "Data Spinner Key."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/spinner/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    key_pass:form =
    {
      Help = "Security Pass Key."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/pass/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    key_power_cube:form =
    {
      Help = "Power Cube."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/power/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0). Whe"
         "n No Touch is checked"
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The key_power_cube entity must be called by another entity bef"
         "ore it appears in the map."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The key_power_cube entity cannot be picked up by the player, a"
         "nd as a result it will exhibit a "$22"solid"$22" bounding box."
        Cap = "No Touch"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    key_pyramid:form =
    {
      Help = "Pyramid Key."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/pyramid/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    key_red_key:form =
    {
      Help = "Red Key."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/items/keys/red_key/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the key is touched by the player. (Default=0)"
         "."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the k"
         "ey is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " key is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the key is touch"
         "ed by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific key entity."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The key_* entity will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    light:form =
    {
      Help = "Invisible Light Source."
      bbox = '-8 -8 -8 8 8 8'
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Specifies light color in relative RGB Values. (Default=1 1 1)."
         " any # can be negative for mixed light/darkness"
      }
      _color: =
      {
        Txt = "&"
        Hint = "Specifies light color in relative RGB Values. (Default=1 1 1)."
         " any # can be negative for mixed light/darkness"
      }
      _cone: =
      {
        Txt = "&"
        Hint = "Specifies size of spotlight cone arc, in degrees. Range is 10-"
         "90. (Default=10)."$0D"Ignored if no target set."
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies light brightness level. (Default=300). # can be nega"
         "tive, casting darkness"
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies lightstyle Type. (Default=0)."$0D"Ignored when death"
         "match=1."$0D"styles 32-62 are assigned by the light program for swit"
         "chable lights."$0D"63 is for testing."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity the light aims at. If the light has a"
         " target set, it is a spotlight. info_null to make a spotlight."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific light."$0D"Lights with targetnames are pr"
         "esent as entities at runtime, and are therefore edicts."$0D"Addition"
         "ally, each uniquely named light is considered as a unique lightstyle"
         " during the radiosity compile process."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Sets the light to be inactive when the map loads."
        Cap = "Start Off"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "Light will be inhibited and not appear when skill=0. Only rele"
         "vant for lights with a targetname."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "Light will be inhibited and not appear when skill=1. Only rele"
         "vant for lights with a targetname."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "Light will be inhibited and not appear when skill=2 or greater"
         ". Only relevant for lights with a targetname."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _angfade: =
      {
        Txt = "&"
        Hint = "_angfade>fade on angled surfaces (0.8) light angle attenuation"
      }
      _fade: =
      {
        Txt = "&"
        Hint = "_fade>fade dist (less=further)(0.65) light distance attenuatio"
         "n"
      }
      _falloff: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "_falloff>falloff ratio"
        Items = "0) Linear"$0D"1) Inverse"$0D"2) Inverse-square"
        Values = "0"$0D"1"$0D"2"
      }
      _focus: =
      {
        Txt = "&"
        Hint = "cone attenuation for spotlights (12)"
      }
      _spotangle: =
      {
        Txt = "&"
        Hint = "aim spots by yaw(0-360) & pitch(-90-90) = (0 -90)"
      }
      _spotpoint: =
      {
        Txt = "&"
        Hint = "aim spotlights at global coordinate point XYZ"
      }
      _spotvector: =
      {
        Txt = "&"
        Hint = "aim spotlights by direction vector XYZ"
      }
    }
    light_mine1:form =
    {
      Help = "Dusty Fluorescent Fixture entity from the mine levels."
      bbox = '-2 -2 -12 2 2 12'
      mdl = "models/objects/minelite/light1/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the model facing direction on the XY plane. (Default"
         "=0)."$0D"Has no effect on the actual light."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the model facing direction in 3 dimensions, defined "
         "by pitch, yaw, and roll. (Default=0 0 0)."$0D"Has no effect on the a"
         "ctual light."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Specifies light color in relative RGB Values. (Default=1 1 1)."
      }
      _color: =
      {
        Txt = "&"
        Hint = "Specifies light color in relative RGB Values. (Default=1 1 1)."
      }
      _cone: =
      {
        Txt = "&"
        Hint = "Specifies size of spotlight cone arc, in degrees. Range is 10-"
         "90. (Default=10)."$0D"Ignored if no target set."
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies light brightness level. (Default=300)."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies lightstyle Type. (Default=0)."$0D"Ignored when death"
         "match=1."$0D"styles 32-62 are assigned by the light program for swit"
         "chable lights."$0D"63 is for testing."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "If targeted, the light will toggle between on and off. Must ha"
         "ve a "$22"light entitie"$22" with the same targetname to work."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The light_mine1 "$22"model"$22" will be inhibited and not appe"
         "ar when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The light_mine1 "$22"model"$22" will be inhibited and not appe"
         "ar when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The light_mine1 "$22"model"$22" will be inhibited and not appe"
         "ar when skill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The light_mine1 "$22"model"$22" will be inhibited and not appe"
         "ar when deathmatch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _angfade: =
      {
        Txt = "&"
        Hint = "_angfade>fade on angled surfaces (0.8)"
      }
      _fade: =
      {
        Txt = "&"
        Hint = "_fade>fade dist (less=further)(0.65)"
      }
      _falloff: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "_falloff>falloff ratio"
        Items = "0) Linear"$0D"1) Inverse"$0D"2) Inverse-square"
        Values = "0"$0D"1"$0D"2"
      }
      _focus: =
      {
        Txt = "&"
        Hint = "_focus>fade cone edge (12)"
      }
      _spotangle: =
      {
        Txt = "&"
        Hint = "_spotangle>aim yaw(0-360)/pitch(-90-90)= (0 -90)"
      }
      _spotpoint: =
      {
        Txt = "&"
        Hint = "_spotpoint>spot XYZ point"
      }
      _spotvector: =
      {
        Txt = "&"
        Hint = "_spotvector>spot XYZ vector"
      }
    }
    light_mine2:form =
    {
      Help = "Clean Fluorescent Fixture entity from the mine levels."
      bbox = '-2 -2 -12 2 2 12'
      mdl = "models/objects/minelite/light2/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the model facing direction on the XY plane. (Default"
         "=0)."$0D"Has no effect on the actual light."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the model facing direction in 3 dimensions, defined "
         "by pitch, yaw, and roll. (Default=0 0 0)."$0D"Has no effect on the a"
         "ctual light."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Specifies light color in relative RGB Values. (Default=1 1 1)."
      }
      _color: =
      {
        Txt = "&"
        Hint = "Specifies light color in relative RGB Values. (Default=1 1 1)."
      }
      _cone: =
      {
        Txt = "&"
        Hint = "Specifies size of spotlight cone arc, in degrees. Range is 10-"
         "90. (Default=10)."$0D"Ignored if no target set."
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies light brightness level. (Default=300)."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies lightstyle Type. (Default=0)."$0D"Ignored when death"
         "match=1."$0D"styles 32-62 are assigned by the light program for swit"
         "chable lights."$0D"63 is for testing."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "If targeted, the light will toggle between on and off. Must ha"
         "ve a "$22"light entitie"$22" with the same targetname to work."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The light_mine2 "$22"model"$22" will be inhibited and not appe"
         "ar when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The light_mine2  "$22"model"$22" will be inhibited and not app"
         "ear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The light_mine2 "$22"model"$22" will be inhibited and not appe"
         "ar when skill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The light_mine2 "$22"model"$22" will be inhibited and not appe"
         "ar when deathmatch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _angfade: =
      {
        Txt = "&"
        Hint = "_angfade>fade on angled surfaces (0.8)"
      }
      _fade: =
      {
        Txt = "&"
        Hint = "_fade>fade dist (less=further)(0.65)"
      }
      _falloff: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "_falloff>falloff ratio"
        Items = "0) Linear"$0D"1) Inverse"$0D"2) Inverse-square"
        Values = "0"$0D"1"$0D"2"
      }
      _focus: =
      {
        Txt = "&"
        Hint = "_focus>fade cone edge (12)"
      }
      _spotangle: =
      {
        Txt = "&"
        Hint = "_spotangle>aim yaw(0-360)/pitch(-90-90)= (0 -90)"
      }
      _spotpoint: =
      {
        Txt = "&"
        Hint = "_spotpoint>spot XYZ point"
      }
      _spotvector: =
      {
        Txt = "&"
        Hint = "_spotvector>spot XYZ vector"
      }
    }
    misc_actor:form =
    {
      Help = "This isn't functional yet."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "players/cyborg/tris.md2"
      mdlskin = "players/cyborg/ps9000.pcx"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the actor on the XY plane. (Defa"
         "ult=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the actor in 3 dimensions as def"
         "ined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the actor will move to when ang"
         "ered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the actor's deat"
         "h."
      }
      health: =
      {
        txt = "&"
        Hint = "Specifies the number of hit points required to kill the actor."
         "(Default=100)."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the actor upon his de"
         "ath."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the a"
         "ctor's death."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "Target and entity to be triggered."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the actor will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific actor."
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The misc_actor won't appear in the map until his targetname is"
         " called."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_actor will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_actor will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_actor will be inhibited and not appear when skill=2 o"
         "r greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Cap = "Not in Deathmatch"
      }
    }
    misc_banner:form =
    {
      Help = "The origin is the bottom of the banner. The banner is 128 units "
       "tall."
      bbox = '-4 -4 0 4 4 246'
      mdl = "models/objects/banner/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_banner. Use this to make it disappea"
         "r by making it triggered by killtarget."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_banner will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_banner will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_banner will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_banner will be inhibited and not appear when deathmat"
         "ch=1."
        Cap = "Not in Deathmatch"
      }
    }
    misc_blackhole:form =
    {
      Help = "This just spins, and is huge."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/black/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the misc_blackhole. When triggered the misc_blackhole "
         "will be removed from the map."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_blackhole will be inhibited and not appear when skill"
         "=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_blackhole will be inhibited and not appear when skill"
         "=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_blackhole will be inhibited and not appear when skill"
         "=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_blackhole will be inhibited and not appear when death"
         "match=1."
        Cap = "Not in Deathmatch"
      }
    }
    misc_deadsoldier:form =
    {
      Help = "This is the Dead player model, there are 6 different death style"
       "s."
      bbox = '-16 -16 0 16 16 16'
      mdl = "models/deadbods/dude/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The misc_deadsoldier is lying on his back."
        Cap = "On Back"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The misc_deadsoldier is lying on his stomach."
        Cap = "On Stomach"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The misc_deadsoldier is headless and lying on his back."
        Cap = "On Back, DeCapitated"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "The misc_deadsoldier is curled in the fetal position."
        Cap = "Fetal Position"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "The misc_deadsoldier is headless and sitting."
        Cap = "Sitting, DeCapitated"
      }
      spawnflags: =
      {
        Typ = "X32"
        Txt = "&"
        Hint = "The misc_deadsoldier is on his back with limbs hanging."
        Cap = "Impaled"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_deadsoldier will be inhibited and not appear when ski"
         "ll=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_deadsoldier will be inhibited and not appear when ski"
         "ll=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_deadsoldier will be inhibited and not appear when ski"
         "ll=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Cap = "Not in Deathmatch"
      }
    }
    misc_easterchick:form =
    {
      Help = "This is Iron Maiden sitting down (Just for looks)."
      bbox = '-32 -32 0 32 32 32'
      mdl = "models/monsters/bitch/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use if the monster is to be killtarget."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_easterchick will be inhibited and not appear when ski"
         "ll=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_easterchick will be inhibited and not appear when ski"
         "ll=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_easterchick will be inhibited and not appear when ski"
         "ll=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    misc_easterchick2:form =
    {
      Help = "This is Iron Maiden a little different (Just for looks)."
      bbox = '-32 -32 0 32 32 32'
      mdl = "models/monsters/bitch/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use if the monster is to be killtarget."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_easterchick2 will be inhibited and not appear when sk"
         "ill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_easterchick2 will be inhibited and not appear when sk"
         "ill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_easterchick2 will be inhibited and not appear when sk"
         "ill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    misc_eastertank:form =
    {
      Help = "The Tank Sitting Down (Just for Looks)."
      bbox = '-32 -32 -16 32 32 32'
      mdl = "models/monsters/tank/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use if the monster is to be killtarget"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_eastertank will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_eastertank will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_eastertank will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    misc_explobox:form =
    {
      Help = "Large Exploding Barrel."
      bbox = '-16 -16 0 16 16 40'
      mdl = "models/objects/barrels/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the amount of damage hit points the misc_explobox wi"
         "ll generate when it is destroyed. (Default=150)."
      }
      health: =
      {
        Txt = "&"
        Hint = "Damage sustained by the misc_explobox before destruction. (Def"
         "ault=10)."
      }
      mass: =
      {
        Txt = "&"
        Hint = "The weight of misc_explobox. Heavier barrels are pushed slower"
         ". (Default=400)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the misc_explobo"
         "x explods."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Specific name of the misc_explobox."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_explobox will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_explobox will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_explobox will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Cap = "Not in Deathmatch"
      }
    }
    misc_gib_arm:form =
    {
      Help = "Intended for use with the target_spawner."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/gibs/arm/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_gib_arm will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_gib_arm will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_gib_arm will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_gib_arm will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    misc_gib_head:form =
    {
      Help = "Intended for use with the target_spawner."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/gibs/head/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_gib_head will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_gib_head will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_gib_head will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_gib_head will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    misc_gib_leg:form =
    {
      Help = "Intended for use with the target_spawner."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/gibs/leg/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_gib_leg will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_gib_leg will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_gib_leg will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_gib_leg will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    misc_insane:form =
    {
      Help = "This is the Soldier gone mad."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/insane/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the insane guy on the XY plane. "
         "(Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the insane guy in 3 dimensions, "
         "defined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the insane guy will move to whe"
         "n triggered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the insane guy's"
         " death."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the insane guy upon h"
         "is death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the i"
         "nsane guy's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the insane guy will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific insane guy."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The misc_insane won't move to his point_combat until he sees t"
         "he player, or until the player injures him."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The misc_insane won't appear in the map until his targetname i"
         "s called."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The misc_insane crawls instead of walks."
        Cap = "Crawl"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "The misc_insane is in an immobile crucified position."
        Cap = "Crucified"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "The misc_insane will stand in place and never walk around."
        Cap = "Stand Ground"
      }
      spawnflags: =
      {
        Typ = "X32"
        Txt = "&"
        Hint = "The misc_insane will never drop to his knees."
        Cap = "Always Stand"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_insane will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_insane will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_insane will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Cap = "Not in Deathmatch"
      }
    }
    misc_satellite_dish:form =
    {
      Help = "You can either place this in a map on its own or you can trigger"
       " it."
      bbox = '-64 -64 0 64 64 128'
      mdl = "models/objects/satellite/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Specific name of the misc_satellite_dish. Should only be trigg"
         "ered once."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_satellite_dish will be inhibited and not appear when "
         "skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_satellite_dish will be inhibited and not appear when "
         "skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_satellite_dish will be inhibited and not appear when "
         "skill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_satellite_dish will be inhibited and not appear when "
         "deathmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    misc_strogg_ship:form =
    {
      Help = "This is a Strogg ship for the flybys."
      bbox = '-16 -16 0 16 16 32'
      mdl = "models/ships/strogg1/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies the speed of the misc_strogg_ship, in units/sec. (De"
         "fault=300)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the first path_corner in a path_corner sequence "
         "that the misc_strogg_ship will follow."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_strogg_ship. Must be triggered in or"
         "der work."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_strogg_ship will be inhibited and not appear when ski"
         "ll=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_strogg_ship will be inhibited and not appear when ski"
         "ll=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_strogg_ship will be inhibited and not appear when ski"
         "ll=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_strogg_ship will be inhibited and not appear when dea"
         "thmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    misc_teleporter:form =
    {
      Help = "Stepping onto this disc will teleport players to the targeted mi"
       "sc_teleporter_dest object."
      bbox = '-32 -32 -24 32 32 16'
      mdl = "models/objects/dmspot/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity the teleporter will use as a destinat"
         "ion."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_teleporter. Make it disappear by mak"
         "ing it triggered by killtarget."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_teleporter will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_teleporter will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_teleporter will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_teleporter will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    misc_teleporter_dest:form =
    {
      Help = "Point misc_teleporter at these."
      bbox = '-32 -32 -24 32 32 16'
      mdl = "models/objects/dmspot/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_teleporter_dest."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_teleporter_dest will be inhibited and not appear when"
         " skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_teleporter_dest will be inhibited and not appear when"
         " skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_teleporter_dest will be inhibited and not appear when"
         " skill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_teleporter_dest will be inhibited and not appear when"
         " deathmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    misc_viper:form =
    {
      Help = "This is the Viper for the flyby bombing."
      bbox = '-16 -16 0 16 16 32'
      mdl = "models/ships/viper/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies the speed of the misc_viper, in units/sec. (Default="
         "300)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the first path_corner in a path_corner sequence "
         "that the misc_viper will follow."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_viper. Must be triggered in order to"
         " work."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_viper will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_viper will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_viper will be inhibited and not appear when skill=2 o"
         "r greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_viper will be inhibited and not appear when deathmatc"
         "h=1."
        Cap = "Not in Deathmatch"
      }
    }
    misc_bigviper:form =
    {
      Help = "This is a large stationary viper as seen in Paul's intro."
      bbox = '-176 -120 -24 176 120 72'
      mdl = "models/ships/bigviper/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_bigviper. Make it disappear by makin"
         "g it triggered by killtarget."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_bigviper will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_bigviper will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_bigviper will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_bigviper will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    misc_viper_bomb:form =
    {
      Help = "This is the bomb use for Airstrike."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/objects/bomb/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the amount of damage hit points the misc_viper_bomb "
         "will generate at its origin. (Default=1000)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the v"
         "iper bomb explodes."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the viper bomb e"
         "xplodes."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific misc_viper_bomb. Must be triggered in ord"
         "er to work."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The misc_viper_bomb will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The misc_viper_bomb will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The misc_viper_bomb will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The misc_viper_bomb will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    monster_berserk:form =
    {
      Help = "This is the Berserker."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/berserk/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_boss2:form =
    {
      Help = "This is the flying Boss (Hornet)."
      bbox = '-56 -56 0 56 56 80'
      mdl = "models/monsters/boss2/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_boss3_stand:form =
    {
      help = "Stationnary Makron and cycles in one place until triggered, then"
       " teleports away."
      bbox = '-32 -32 0 32 32 90'
      mdl = "models/monsters/boss3/rider/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the Monster Stationnary Makron o"
         "n the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the Monster Stationnary Makron i"
         "n 3 dimensions as defined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Place the trigger so that just as you see him, he teleports aw"
         "ay."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_brain:form =
    {
      Help = "This is the Brains."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/brain/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_chick:form =
    {
      Help = "This is the Iron Maiden (Chick)."
      bbox = '-16 -16 0 16 16 56'
      mdl = "models/monsters/bitch/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon her "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_commander_body:form =
    {
      Help = "This is the DeCapitated Tank Commander."
      bbox = '-32 -32 0 32 32 48'
      mdl = "models/monsters/commandr/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the DeCapitated Tank Commander o"
         "n the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the DeCapitated Tank Commander i"
         "n 3 dimensions as defined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "When triggered, it will move for a couple of seconds."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_flipper:form =
    {
      Help = "This is the Barracuda Shark."
      bbox = '-16 -16 -12 16 16 32'
      mdl = "models/monsters/flipper/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_floater:form =
    {
      Help = "This is the Technician."
      bbox = '-24 -24 -24 24 24 32'
      mdl = "models/monsters/float/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_flyer:form =
    {
      Help = "This is the Flyer, armed with Laser Blasters."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/flyer/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_gladiator:form =
    {
      Help = "This is the Gladiator."
      bbox = '-32 -32 -24 32 32 64'
      mdl = "models/monsters/gladiatr/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_gunner:form =
    {
      Help = "This is the Gunner, armed with a Chain Gun and a Grenade Launche"
       "r."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/gunner/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_hover:form =
    {
      Help = "This is the Icarus."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/hover/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_infantry:form =
    {
      Help = "This is the Enforcer, armed with a Chain Gun."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/infantry/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_jorg:form =
    {
      Help = "This is the Jorg. When you kill him, you'll meet Makron."
      bbox = '-80 -80 0 80 80 140'
      mdl = "models/monsters/boss3/jorg/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_makron:form =
    {
      Help = "This is the Makron (no Spawn function)"
      bbox = '-30 -30 0 30 30 90'
      mdl = "models/monsters/boss3/rider/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_medic:form =
    {
      help = "This is the Medic."
      bbox = '-24 -24 -24 24 24 32'
      mdl = "models/monsters/medic/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_mutant:form =
    {
      Help = "This is the Mutant."
      bbox = '-32 -32 -24 32 32 48'
      mdl = "models/monsters/mutant/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_parasite:form =
    {
      Help = "This is the Parasite."
      bbox = '-16 -16 -24 16 16 24'
      mdl = "models/monsters/parasite/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_soldier:form =
    {
      Help = "This is the Guard, armed with a Machine Gun."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldier/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_soldier_light:form =
    {
      Help = "This is the Guard, armed with a Blaster."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldier/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_soldier_ss:form =
    {
      Help = "This is the Guard, armed with a Shot Gun."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/soldier/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_supertank:form =
    {
      Help = "This is the Super Tank."
      bbox = '-64 -64 0 64 64 112'
      mdl = "models/monsters/boss1/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_tank:form =
    {
      Help = "This is the Tank."
      bbox = '-32 -32 -16 32 32 72'
      mdl = "models/monsters/tank/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    monster_tank_commander:form =
    {
      Help = "This is the Tank Commander."
      bbox = '-32 -32 -16 32 32 72'
      mdl = "models/monsters/tank/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster on the XY plane. (De"
         "fault=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the monster in 3 dimensions as d"
         "efined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      combattarget: =
      {
        Txt = "&"
        Hint = "Targetname of the point_combat the monster will move to when a"
         "ngered."
      }
      deathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered upon the monster's de"
         "ath."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map upon the m"
         "onster's death."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the path_corner the monster will move to."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The monster won't appear in the map until his targetname is ca"
         "lled."
        Cap = "Trigger Spawn"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    path_corner:form =
    {
      Help = "Path_corner is a point something travels to."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."$0D
         "Only relevant if the path_corner is used as a teleporter destination"
         "."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."$0D"Only relevant if the path_corn"
         "er is used as a teleporter destination."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the p"
         "ath_corner is used."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the path_corner "
         "is used."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the next path_corner in the path."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific path_corner."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Specifies the amount of time in seconds that an entity which u"
         "ses the path_corner"$0D"will pause before proceeding to the next pat"
         "h_corner in the sequence."$0D"If wait=(-1), the entity will not proc"
         "eed unless it is triggered to move again. (Default=0)."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "An entity set to move to this path_corner will appear there im"
         "mediately rather than moving there in its normal manner."
        Cap = "Teleport"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The path_corner will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The path_corner will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The path_corner will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The path_corner will be inhibited and not appear when deathmat"
         "ch=1."
        Cap = "Not in Deathmatch"
      }
    }
    point_combat:form =
    {
      Help = "Makes this the target of a monster and it will head here when fi"
       "rst activated before going after the activator.  If hold is selected, "
       "it will stay here."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the p"
         "oint_combat is used."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the point_combat"
         " is used."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the next point_combat in the path."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific point_combat."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The monster or actor which uses the point_combat will stand in"
         " place and not run around."
        Cap = "Hold"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The point_combat will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The point_combat will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The point_combat will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The point_combat will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_actor:form =
    {
      Help = "Use this with the misc_actor."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction in 3 dimensions, defined by pitch"
         ", yaw, and roll. (Default=0 0 0)."
      }
      height: =
      {
        Txt = "&"
        Hint = "Specifies the vertical velocity in units/second given to the m"
         "isc_actor which uses the target_actor. (Default=200)."
      }
      message: =
      {
        Txt = "&"
        Hint = "Message to be printed to the screen when the target_actor is u"
         "sed."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity the misc_actor will act upon when the"
         " target_actor is used."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies the horizontal velocity in units/second given to the"
         " misc_actor which uses the target_actor. (Default=200)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the next target_actor/path_corner in the path."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_actor."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Specifies the amount of time in seconds that the misc_actor wh"
         "ich uses the target_actor"$0D"will pause before proceeding to the ne"
         "xt target_actor/path_corner in the sequence."$0D"If wait=(-1), the m"
         "isc_actor will not proceed unless it is triggered to move again. (De"
         "fault=0)."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The target_actor will cause the misc_actor to jump."
        Cap = "Jump"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The target_actor will cause the misc_actor to shoot once at it"
         "s pathtarget."
        Cap = "Shoot"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The target_actor will cause the misc_actor to shoot and attemp"
         "t to kill its pathtarget."
        Cap = "Attack"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "The target_actor will cause the misc_actor to stand in place a"
         "nd not run around."
        Cap = "Hold"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_actor will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_actor will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_actor will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_actor will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_blaster:form =
    {
      Help = "Fires a blaster bolt in the set direction when triggered."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/laser/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies an aiming direction on the XY plane. (-1 is up, -2 i"
         "s down) (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies an aiming direction in 3 dimensions, defined by pitc"
         "h and yaw (roll is ignored). (Default=0 0 0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the number of damage hit points the blaster will do "
         "with each hit. (Default=15)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies speed in units/second of the blaster bolt. (Default="
         "1000)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_blaster."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The target_blaster will produce the blaster bolt but not the b"
         "laster trail."
        Cap = "No Trail"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "Same as NO_TRAIL except that dynamic lighting effects will als"
         "o not be produced."
        Cap = "No Effects"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_blaster will be inhibited and not appear when skill"
         "=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_blaster will be inhibited and not appear when skill"
         "=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_blaster will be inhibited and not appear when skill"
         "=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_blaster will be inhibited and not appear when death"
         "match=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_changelevel:form =
    {
      Help = "Changes level to map when fired."$0D"Set 'map' value to 'mapname"
       "$playername' where playername equals the targetname of a corresponding"
       " info_player_start in the next map."$0D"To play a cinematic before sta"
       "rting the level, the 'map' value should be 'cinemeatic.cin+mapname$pla"
       "yername'."$0D"Note that a playername is not required if the correspond"
       "ing info_player_start doesn't have a targetname."$0D"If you want this "
       "to be designated as the last level of a unit, place an asterix (*) bef"
       "ore the map name."
      bbox = '-8 -8 -8 8 8 8'
      map: =
      {
        Txt = "&"
        Hint = "Name of the next map, demo, cinematic, or image to load."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_changelevel."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Don't show intermission screen."$0D"Note: this S-Flag is in so"
         "me of the Stock SP maps."
        Cap = "No Intermission"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_changelevel will be inhibited and not appear when s"
         "kill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_changelevel will be inhibited and not appear when s"
         "kill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_changelevel will be inhibited and not appear when s"
         "kill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_changelevel will be inhibited and not appear when d"
         "eathmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_character:form =
    {
      Help = "You must use the num_0 texture from the 'extra' texture folder."
      count: =
      {
        Txt = "&"
        Hint = "This is the position in the string (starts at 1)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_character."
      }
      team: =
      {
        Txt = "&"
        Hint = "This must be the same as the team (Arg) for the target_string."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_character will be inhibited and not appear when ski"
         "ll=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_character will be inhibited and not appear when ski"
         "ll=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_character will be inhibited and not appear when ski"
         "ll=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_character will be inhibited and not appear when dea"
         "thmatch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Typ = ""
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    target_crosslevel_target:form =
    {
      Help = "Triggered by a trigger_crosslevel elsewhere within a unit.  If m"
       "ultiple triggers are checked, all must be true."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the target_crosslevel_ta"
         "rget will fire after being triggered. (Default=1)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "arget_crosslevel_target fires."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to trigger."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_crosslevel_target."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Sets the first of 8 possible flags used when Triggered by a ta"
         "rget_crosslevel_trigger elsewhere within a unit."
        Cap = "Trigger 1"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "Sets the second of 8 possible flags used when Triggered by a t"
         "arget_crosslevel_trigger elsewhere within a unit."
        Cap = "Trigger 2"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "Sets the third of 8 possible flags used when Triggered by a ta"
         "rget_crosslevel_trigger elsewhere within a unit."
        Cap = "Trigger 3"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "Sets the fourth of 8 possible flags used when Triggered by a t"
         "arget_crosslevel_trigger elsewhere within a unit."
        Cap = "Trigger 4"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "Sets the fifth of 8 possible flags used when Triggered by a ta"
         "rget_crosslevel_trigger elsewhere within a unit."
        Cap = "Trigger 5"
      }
      spawnflags: =
      {
        Typ = "X32"
        Txt = "&"
        Hint = "Sets the sixth of 8 possible flags used when Triggered by a ta"
         "rget_crosslevel_trigger elsewhere within a unit."
        Cap = "Trigger 6"
      }
      spawnflags: =
      {
        Typ = "X64"
        Txt = "&"
        Hint = "Sets the seventh of 8 possible flags used when Triggered by a "
         "target_crosslevel_trigger elsewhere within a unit."
        Cap = "Trigger 7"
      }
      spawnflags: =
      {
        Typ = "X128"
        Txt = "&"
        Hint = "Sets the eighth of 8 possible flags used when Triggered by a t"
         "arget_crosslevel_trigger elsewhere within a unit."
        Cap = "Trigger 8"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_crosslevel_target will be inhibited and not appear "
         "when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_crosslevel_target will be inhibited and not appear "
         "when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_crosslevel_target will be inhibited and not appear "
         "when skill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_crosslevel_target will be inhibited and not appear "
         "when deathmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_crosslevel_trigger:form =
    {
      Help = "Once this trigger is touched/used, any target_crosslevel_target "
       "with the same trigger number is automatically fired."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the target_crosslevel_tr"
         "igger will fire after being triggered. (Default=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "arget_crosslevel_trigger fires."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " target_crosslevel_trigger fires."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the target_cross"
         "level_trigger fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_crosslevel_trigger."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Sets the first of 8 possible flags read on map load for the pu"
         "rpose of triggering a target_crosslevel_target."
        Cap = "Trigger 1"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "Sets the second of 8 possible flags read on map load for the p"
         "urpose of triggering a target_crosslevel_target."
        Cap = "Trigger 2"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "Sets the third of 8 possible flags read on map load for the pu"
         "rpose of triggering a target_crosslevel_target."
        Cap = "Trigger 3"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "Sets the fourth of 8 possible flags read on map load for the p"
         "urpose of triggering a target_crosslevel_target."
        Cap = "Trigger 4"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "Sets the fifth of 8 possible flags read on map load for the pu"
         "rpose of triggering a target_crosslevel_target."
        Cap = "Trigger 5"
      }
      spawnflags: =
      {
        Typ = "X32"
        Txt = "&"
        Hint = "Sets the sixth of 8 possible flags read on map load for the pu"
         "rpose of triggering a target_crosslevel_target."
        Cap = "Trigger 6"
      }
      spawnflags: =
      {
        Typ = "X64"
        Txt = "&"
        Hint = "Sets the seventh of 8 possible flags read on map load for the "
         "purpose of triggering a target_crosslevel_target."
        Cap = "Trigger 7"
      }
      spawnflags: =
      {
        Typ = "X128"
        Txt = "&"
        Hint = "Sets the eighth of 8 possible flags read on map load for the p"
         "urpose of triggering a target_crosslevel_target."
        Cap = "Trigger 8"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_crosslevel_trigger will be inhibited and not appear"
         " when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_crosslevel_trigger will be inhibited and not appear"
         " when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_crosslevel_trigger will be inhibited and not appear"
         " when skill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_crosslevel_trigger will be inhibited and not appear"
         " when deathmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_earthquake:form =
    {
      Help = "When triggered, this initiates a level-wide earthquake.  All pla"
       "yers and monsters are affected."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        Txt = "&"
        Hint = "Duration of the quake (Default=5)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Severity of the quake (Default=200)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_earthquake."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_earthquake will be inhibited and not appear when sk"
         "ill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_earthquake will be inhibited and not appear when sk"
         "ill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_earthquake will be inhibited and not appear when sk"
         "ill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_earthquake will be inhibited and not appear when de"
         "athmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_explosion:form =
    {
      Help = "Spawns an explosion temporary entity when used."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/explode/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the target_explosion wil"
         "l fire after being triggered. (Default=0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the amount of damage hit points the target_explosion"
         " will generate at its origin. (Default=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "arget_explosion fires."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to trigger when the target_explosion "
         "fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_explosion."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_explosion will be inhibited and not appear when ski"
         "ll=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_explosion will be inhibited and not appear when ski"
         "ll=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_explosion will be inhibited and not appear when ski"
         "ll=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_explosion will be inhibited and not appear when dea"
         "thmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_goal:form =
    {
      Help = "Counts a goal completed."
      bbox = '-8 -8 -8 8 8 8'
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " target_goal fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_goal."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_goal will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_goal will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_goal will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_goal will be inhibited and not appear when deathmat"
         "ch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_help:form =
    {
      Help = "When fired, the "$22"message"$22" key becomes the current person"
       "al computer string, and the message light will be set on all clients s"
       "tatus bars."
      bbox = '-8 -8 -8 8 8 8'
      message: =
      {
        Txt = "&"
        Hint = "Specifies the message that will appear in the F1 computer scre"
         "en."$0D"Message appears in the Secondary Objective window unless PRI"
         "MARY_OBJECTIVE is set."$0D"Use \n to jump to next line."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_help."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Specifies the message will appear in the Primary Objective win"
         "dow rather than the Secondary Objective window."
        Cap = "Primary Objective"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_help will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_help will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_help will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_help will be inhibited and not appear when deathmat"
         "ch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_laser:form =
    {
      Help = "When triggered, fires a laser. You can either set a target or a "
       "direction."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/laser/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies an aiming direction on the XY plane. (-1 is up, -2 i"
         "s down). (Default=0)."$0D"Ignored if target is used."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies an aiming direction in 3 dimensions, defined by pitc"
         "h and yaw (roll is ignored). (Default=0 0 0)."$0D"Ignored if target "
         "is used."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the number of damage hit points the laser will do ev"
         "ery 0.1 seconds. (Default=100)."$0D"If set to a negative value, the "
         "laser will give health."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity the laser will fire at."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_laser."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The laser will be active when the map loads."
        Cap = "Start On"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "Set the Laser color to Red."
        Cap = "Red"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "Set the Laser color to Green."
        Cap = "Green"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "Set the Laser color to Blue."
        Cap = "Blue"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "Set the Laser color to Yellow."
        Cap = "Yellow"
      }
      spawnflags: =
      {
        Typ = "X32"
        Txt = "&"
        Hint = "Set the Laser color to Orange."
        Cap = "Orange"
      }
      spawnflags: =
      {
        Typ = "X64"
        Txt = "&"
        Hint = "Doubles the diameter of the beam."
        Cap = "Fat"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_laser will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_laser will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_laser will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_laser will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_lightramp:form =
    {
      Help = "This makes the light fade in/out."
      bbox = '-8 -8 -8 8 8 8'
      message: =
      {
        Txt = "&"
        Hint = "Sets the light levels of the targeted lights. Light levels are"
         " defined by characters a-z."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Amount of time in seconds from the starting message value to t"
         "he ending value."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the light entity (or entities) to target."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_lightramp. Lightramps must be trig"
         "gered in order to function."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Allows the lightramp to be triggered multiple times,"$0D"with "
         "every other firing resulting in the reverse effect (as an example,"$0D
         "lights that fade in on the first trigger will fade out on the second"
         " trigger)."
        Cap = "Toggle"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_lightramp will be inhibited and not appear when ski"
         "ll=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_lightramp will be inhibited and not appear when ski"
         "ll=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_lightramp will be inhibited and not appear when ski"
         "ll=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_lightramp will be inhibited and not appear when dea"
         "thmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_secret:form =
    {
      Help = "Counts a secret found."
      bbox = '-8 -8 -8 8 8 8'
      message: =
      {
        Txt = "&"
        Hint = "Character string to print to the screen when the target_secret"
         " fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_secret."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_secret will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_secret will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_secret will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_secret will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_spawner:form =
    {
      Help = "Set target to the Type of entity you want spawned. Useful for sp"
       "awning monsters and gibs."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the direction on the XY plane that the spawner will "
         "throw its spawned item. (-1 is up, -2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the direction in 3 dimensions, defined by pitch and "
         "yaw (roll is ignored) that the spawner will throw its spawned item. "
         "(Default=0 0 0)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Specifies the speed in units/second that the spawner will thro"
         "w its spawned item."
      }
      target: =
      {
        Txt = "&"
        Hint = "Specifies the classname of the item to spawn."
      }
      target: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_spawner_form:form"
        Cap = "classname spawn...."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_spawner."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "Identical to SIGHT, except that the code will not call any idl"
         "e sounds."$0D"Use when spawning a Monster."
        Cap = "Ambush"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The monster won't attack until angered or he has line-of-sight"
         " to his enemy."$0D"Use when spawning a Monster."
        Cap = "Sight"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_spawner will be inhibited and not appear when skill"
         "=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_spawner will be inhibited and not appear when skill"
         "=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_spawner will be inhibited and not appear when skill"
         "=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_spawner will be inhibited and not appear when death"
         "match=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_speaker:form =
    {
      Help = "Normal sounds play each time the target is used. The reliable fl"
       "ag can be set for crucial voiceovers."
      bbox = '-8 -8 -8 8 8 8'
      attenuation: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies how the played sound will attenuate with distance fr"
         "om the speaker origin."$0D"Attenuation=3 will be used if LOOPED_ON o"
         "r LOOPED_OFF are set."
        Items = "1) None, send to whole level"$0D"2) Normal fighting sounds"$0D"3) "
         "Idle sound level"$0D"4) Ambient sound level"
        Values = "1"$0D"2"$0D"3"$0D"4"
      }
      noise: =
      {
        Typ = "EP"
        Hint = "wav file to play."$0D0D"The file selection button ... to the r"
         "ight"$0D"lets you pick the sound you want by clicking on it."$0D"Cre"
         "ate a sub-folder named 'sound' in your tmpQuArk folder"$0D"and place"
         " your .wav files there. You can also create"$0D"sub-folders within t"
         "he 'sound' folder to group your files."$0D0D"Right clicking on the s"
         "ound file will let you play it."$0D"The path is set so it will work "
         "if put into a .pak file."
        BasePath = "$Game\baseq2\sound"
        CutPath = "$Game\?\?\"
        DefExt = "wav"
        DirSep = "/"
        Txt = "&"
      }
      noise: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available .WAV files"
        form = "t_noise_form:form"
        Cap = "sounds..."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific speaker."
      }
      volume: =
      {
        Txt = "&"
        Hint = "Volume levels can be Values of 0.0 to 1.0. 1.0 being the loude"
         "st."$0D"If volume is left blank then the default volume is set to 1."
         " A volume of .1 will barely be audible."$0D"If there are multiple ta"
         "rget_speaker entities with the same sound playing at the same time t"
         "hen"$0D"the volume will increase beyond normal but excessive target_"
         "speakers will do nothing beyond a certain point."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The speaker will loop its sound and is active when the map loa"
         "ds."
        Cap = "Looped On"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The speaker will loop its sound and is inactive when the map l"
         "oads."
        Cap = "Looped Off"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The speaker will override all other sounds that may be playing"
         "."
        Cap = "Reliable"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_speaker will be inhibited and not appear when skill"
         "=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_speaker will be inhibited and not appear when skill"
         "=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_speaker will be inhibited and not appear when skill"
         "=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_speaker will be inhibited and not appear when death"
         "match=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_splash:form =
    {
      Help = "Creates a particle splash effect when triggered."
      bbox = '-8 -8 -8 8 8 8'
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the direction on the XY plane that the target_splash"
         " will throw its pixels. (-1 is up, -2 is down)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the direction in 3 dimensions, defined by pitch and "
         "yaw (roll is ignored) that the target_splash will throw its pixels. "
         "(Default=0 0 0)."
      }
      count: =
      {
        Txt = "&"
        Hint = "Specifies the number of pixels in each splash, from 1-255. (De"
         "fault=20)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the amount of damage hit points the target_splash wi"
         "ll generate at its origin. (Default=0)."
      }
      sounds: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies pixel color and effects of the splash. (Default=2 Bl"
         "ue Water)."
        Items = "1) Sparks"$0D"2) Blue Water"$0D"3) Brown Water"$0D"4) Slime"$0D
         "5) Lava"$0D"6) Blood"
        Values = "1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_splash. Use a func_timer with this"
         "."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_splash will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_splash will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_splash will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_splash will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_string:form =
    {
      Help = "This is the relay between a func_clock and the target_characters"
       " that act as the display."
      bbox = '-8 -8 -8 8 8 8'
      targetname: =
      {
        Txt = "&"
        Hint = "Make this the target of a func_clock."
      }
      team: =
      {
        Txt = "&"
        Hint = "This must be the same as the team (Arg) for the target_charact"
         "er's."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_string will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_string will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_string will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_string will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    target_temp_entity:form =
    {
      Help = "Fire an origin based temp entity event to the clients."
      bbox = '-8 -8 -8 8 8 8'
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Specifies the effect Type used. 17,18,20,21,or 22; anything el"
         "se will crash Quake2."
        Items = "17) Rocket Exp Water"$0D"18) Grenade Exp Water"$0D"20) BFG Ex"
         "plosion"$0D"21) BFG Big Explosion"$0D"22) Boss Teleport"
        Values = "17"$0D"18"$0D"20"$0D"21"$0D"22"
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific target_temp_entity."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The target_temp_entity will be inhibited and not appear when s"
         "kill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The target_temp_entity will be inhibited and not appear when s"
         "kill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The target_temp_entity will be inhibited and not appear when s"
         "kill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The target_temp_entity will be inhibited and not appear when d"
         "eathmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_always:form =
    {
      Help = "This trigger will always fire.  It is activated by the world."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the trigger_always will "
         "fire. (Default=0.2)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_always fires."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger_alwa"
         "ys fires."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_always will be inhibited and not appear when skill"
         "=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_always will be inhibited and not appear when skill"
         "=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_always will be inhibited and not appear when skill"
         "=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_always will be inhibited and not appear when death"
         "match=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_counter:form =
    {
      Help = "Acts as an intermediary for an action that takes multiple inputs"
       "."
      bbox = '-8 -8 -8 8 8 8'
      count: =
      {
        Txt = "&"
        Hint = "Number of targets before triggering. (Default=2)."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the trigger_always will "
         "fire.(Default=0.2)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_counter fires."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger_counter fires."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger_coun"
         "ter fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_counter."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "If no message is not set, it will print "$22"1 more.. "$22" et"
         "c when triggered and "$22"sequence complete"$22" when finished."
        Cap = "No Message"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_counter will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_counter will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_counter will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_counter will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_elevator:form =
    {
      Help = "Use this if you need an elevator that stops at different heights"
      bbox = '-8 -8 -8 8 8 8'
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when this trigger_ele"
         "vator fires. This must be a func_train."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_elevator."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_elevator will be inhibited and not appear when ski"
         "ll=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_elevator will be inhibited and not appear when ski"
         "ll=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_elevator will be inhibited and not appear when ski"
         "ll=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_elevator will be inhibited and not appear when dea"
         "thmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_gravity:form =
    {
      Help = "Changes the touching entites gravity to the value of "$22"gravit"
       "y"$22"."
      gravity: =
      {
        Txt = "&"
        Hint = "1.0 is standard gravity for the level."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_gravity. Use this to make it disa"
         "ppear by making it triggered by killtarget."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_gravity will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_gravity will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_gravity will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_gravity will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_hurt:form =
    {
      Help = "Any entity that touches this will be hurt.  It does dmg points o"
       "f damage each server frame."
      dmg: =
      {
        Txt = "&"
        Hint = "Specifies the number of damage hit points the trigger_hurt wil"
         "l do every 0.1 seconds. (Default=5)."$0D"If set to a negative value,"
         " the trigger_hurt will give health. (whole numbers only)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_hurt."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The trigger_hurt is inactive when the map loads and must be ta"
         "rgeted to activate it."
        Cap = "Start Off"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The trigger_hurt can be toggled on and off."
        Cap = "Toggle"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "No sounds will be played when the trigger_hurt is acting upon "
         "the player."
        Cap = "Silent"
      }
      spawnflags: =
      {
        Typ = "X8"
        Txt = "&"
        Hint = "The trigger_hurt will affect players with GOD mode on."
        Cap = "No Protection"
      }
      spawnflags: =
      {
        Typ = "X16"
        Txt = "&"
        Hint = "The trigger_hurt will deal its damage more slowly."
        Cap = "Slow"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_hurt will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_hurt will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_hurt will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_hurt will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_key:form =
    {
      Help = "A relay trigger that only fires it's targets if player has the p"
       "roper key.  Use - item - to specify the required key."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the trigger_key will fir"
         "e after being triggered. Default=0."
      }
      item: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Classname of the entity required to trigger the trigger_key. f"
         "or example - key_blue_key."
        Items = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"$0D
         "key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
        Values = "key_airstrike_target"$0D"key_blue_key"$0D"key_commander_head"
         $0D"key_data_cd"$0D"key_data_spinner"$0D"key_pass"$0D"key_power_cube"$0D
         "key_pyramid"$0D"key_red_key"
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_key fires."
      }
      message: =
      {
        Txt = "&"
        Hint = "Character string to be printed to the screen when the trigger_"
         "key fires."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger_key "
         "fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_key. Usually a trigger_multiple i"
         "s used."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_key will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_key will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_key will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_key will be inhibited and not appear when deathmat"
         "ch=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_monsterjump:form =
    {
      Help = "Walking monsters that touch this will jump in the direction of t"
       "he trigger's angle."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the direction angle on the XY plane that the trigger"
         "_monsterjump will cause monsters to jump. (Default=0)."
      }
      height: =
      {
        Txt = "&"
        Hint = "Vertical velocity in units/sec that monsters will be thrown up"
         "wards. (Default=200)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Horizontal velocity in units/sec that monsters will be thrown,"
         " in the direction specified by angle. (Default=200)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_monsterjump will be inhibited and not appear when "
         "skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_monsterjump will be inhibited and not appear when "
         "skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_monsterjump will be inhibited and not appear when "
         "skill=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_monsterjump will be inhibited and not appear when "
         "deathmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_multiple:form =
    {
      Help = "Variable sized repeatable trigger.  Must be targeted at one or m"
       "ore entities."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle on the XY plane of the trigger. If "
         "non-zero, the trigger will only fire if the activator's facing angle"
         " is within 90 degrees of the trigger's facing angle."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the trigger will fire af"
         "ter being triggered. (Default=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_multiple fires."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger fires. Use \n for line breaks."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Set - sounds - to one of the following, only hear when there i"
         "s a message."
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) Large Switch"$0D"3) Silent"
        Values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_multiple. Each time the trigger's"
         " targetname is called and the trigger is already active, the trigger"
         " will fire."
      }
      wait: =
      {
        Txt = "&"
        Hint = "Specifies the minimum time in seconds between one firing of th"
         "e trigger and the next. A value of -1 will limit the trigger to only"
         " one firing. (Default=0.2)."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The trigger_multiple will fire if a monster is present within "
         "its field."
        Cap = "Monster"
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The trigger_multiple will not fire if a player is present with"
         "in its field."
        Cap = "Not Player"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The trigger_multiple is inactive when the map loads and must b"
         "e targeted to activate it."
        Cap = "Triggered"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_multiple will be inhibited and not appear when ski"
         "ll=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_multiple will be inhibited and not appear when ski"
         "ll=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_multiple will be inhibited and not appear when ski"
         "ll=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_multiple will be inhibited and not appear when dea"
         "thmatch=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_once:form =
    {
      Help = "Triggers once, then removes itself.  You must set the key - targ"
       "et - to the name of another object in the level that has a matching - "
       "targetname - ."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle on the XY plane of the trigger. If "
         "non-zero, the trigger will only fire if the activator's facing angle"
         " is within 90 degrees of the trigger's facing angle."
      }
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the trigger will fire af"
         "ter being triggered. (Default=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_once fires."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " trigger fires. Use \n for line breaks."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      sounds: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Set - sounds - to one of the following, only hear when there i"
         "s a massage."
        Items = "0) Beep Beep"$0D"1) Secret"$0D"2) Large Switch"$0D"3) Silent"
        Values = "0"$0D"1"$0D"2"$0D"3"
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the trigger fire"
         "s."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_once. If the trigger's targetname"
         " is called and the trigger is already active, the trigger will fire."
      }
      spawnflags: =
      {
        Typ = "X2"
        Txt = "&"
        Hint = "The trigger_once will not fire if a player is present within i"
         "ts field."
        Cap = "Not Player"
      }
      spawnflags: =
      {
        Typ = "X4"
        Txt = "&"
        Hint = "The trigger_once is inactive when the map loads and must be ta"
         "rgeted to activate it."
        Cap = "Triggered"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_once will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_once will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_once will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_once will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_push:form =
    {
      Help = "Pushes the player."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the direction angle on the XY plane that the trigger"
         "_push will throw other entities. (Default=0). (-1 is up, -2 is down)"
         "."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the direction angle in 3 dimensions that the trigger"
         "_push will throw other entities, defined by pitch, yaw, and roll. (D"
         "efault=0 0 0)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Velocity in [units/sec]*10 that the affected entity will be th"
         "rown."$0D"Maximum speed allowed by the executable is 4096 units/sec,"
         $0D"so the standard game default value of 1000 is obviously quite goo"
         "fed up."$0D"Set to something more logical. (Default=1000)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_push."
      }
      spawnflags: =
      {
        Typ = "X1"
        Txt = "&"
        Hint = "The trigger_push will remove itself after its first use."
        Cap = "Push Once"
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_push will be inhibited and not appear when skill=0"
         "."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_push will be inhibited and not appear when skill=1"
         "."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_push will be inhibited and not appear when skill=2"
         " or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_push will be inhibited and not appear when deathma"
         "tch=1."
        Cap = "Not in Deathmatch"
      }
    }
    trigger_relay:form =
    {
      Help = "This fixed size trigger cannot be touched, it can only be fired "
       "by other events."
      bbox = '-8 -8 -8 8 8 8'
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before the relay will fire afte"
         "r being triggered. (Default=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the t"
         "rigger_relay fires."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " relay fires."
      }
      pathtarget: =
      {
        Txt = "&"
        Hint = "If target is a trigger_elevator, specifies the path_corner the"
         " targeted func_train is to move to."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the relay fires."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific trigger_relay."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The trigger_relay will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The trigger_relay will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The trigger_relay will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The trigger_relay will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
    }
    turret_base:form =
    {
      Help = "This portion of the turret changes yaw only. MUST be teamed with"
       " a turret_breach."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the turret_base on the XY plane."
         " (Default=0)."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific turret_base."
      }
      team: =
      {
        Txt = "&"
        Hint = "Value shared by the corresponding turret_breach."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The turret_base will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The turret_base will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The turret_base will be inhibited and not appear when skill=2 "
         "or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The turret_base will be inhibited and not appear when deathmat"
         "ch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Txt = "&"
        Typ = "LN"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    turret_breach:form =
    {
      Help = "This portion of the turret can change both pitch and yaw.  The m"
       "odel should be made with a flat pitch."
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the turret on the XY plane."$0D"T"
         "he turret_breach should be constructed so that its intended "$22"fro"
         "nt"$22" faces 0"$0D"The value of angle determines the direction the "
         "front will face when the map is loaded. (Default=0)."
      }
      dmg: =
      {
        Txt = "&"
        Hint = "Damage done to the entity blocking the turret's rotation, in h"
         "ealth points/0.1 second. (Default=10)."
      }
      maxpitch: =
      {
        Txt = "&"
        Hint = "Maximum allowable pitch angle. (Default=30)."
      }
      minpitch: =
      {
        Txt = "&"
        Hint = "Minimum allowable pitch angle. (Default=-30)."
      }
      maxyaw: =
      {
        Txt = "&"
        Hint = "Maximum allowable yaw angle. (Default=360)."
      }
      minyaw: =
      {
        Txt = "&"
        Hint = "Minimum allowable yaw angle. (Default=0)."
      }
      speed: =
      {
        Txt = "&"
        Hint = "Speed of pitch and yaw rotations in degrees/second. (Default=5"
         "0)."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of an info_notnull, so placed as to determine the w"
         "eapon firing origin distance from the breach's origin. Every turret "
         "must target an info_notnull in order to function."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific turret_breach. The target of the turret_d"
         "river."
      }
      team: =
      {
        Txt = "&"
        Hint = "Value shared by the corresponding turret_base."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The turret_breach will be inhibited and not appear when skill="
         "0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The turret_breach will be inhibited and not appear when skill="
         "1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The turret_breach will be inhibited and not appear when skill="
         "2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The turret_breach will be inhibited and not appear when deathm"
         "atch=1."
        Cap = "Not in Deathmatch"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Surface Lighting"
        Hint = "ArghRad allows brush-model entities to cast light from their s"
         "urfaces."$0D"The propereties of all the bmodel's light-emitting surf"
         "aces can be modified by adding lighting keywords to the entity."$0D"T"
         "his first group of options are affected by -nobmodlight."
      }
      _color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Sets the RGB color of the bmodel's surface lighting, overridin"
         "g the original texture colors."$0D"Colors similar to the originals t"
         "end to look best."
      }
      _color: =
      {
        Txt = "&"
      }
      _distance: =
      {
        Txt = "&"
        Hint = "Sets a cutoff distance at which the surface lights abruptly st"
         "op shining."$0D"It can be used strategically to speed compiling, and"
         " reduce "$22"face with too many lightstyles"$22" errors."
      }
      _focus: =
      {
        Txt = "&"
        Hint = "Scales how quickly the surface light fades as its cast-off ang"
         "le decreases from perpendicular to parallel."$0D"Values less than 1 "
         "fade slower, spreading out more."$0D"Values greater than 1 fade fast"
         "er, spreading out less."
      }
      light: =
      {
        Txt = "&"
        Hint = "Sets the brightness of the bmodel's surface lighting, overridi"
         "ng the surfaces' own light Values."
      }
      _lightmin: =
      {
        Txt = "&"
        Hint = "This setting affects the bmodel's appearance, not the light it"
         " casts."$0D"It adds the specified brightness to the bmodel's light-e"
         "mitting surfaces."$0D"This can make dim surface lights appear to glo"
         "w brighter."
      }
      _lightswitch: =
      {
        Txt = "&"
        Hint = "Allows the bmodel's surface lights to be triggered."$0D"This r"
         "equires an additional, separate triggered light entity."$0D"Set the "
         "bmodel's _lightswitch value to the targetname of that light."$0D"The"
         " bmodel's lighting will then be set to the same trigger."
      }
      style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "Sets the bmodel's surface lighting to the specified lightstyle"
         ". (Default=0)."$0D"Ignored when deathmatch=1."$0D"styles 32-62 are a"
         "ssigned by the light program for switchable lights."$0D"63 is for te"
         "sting."
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      Title: =
      {
        Typ = "S"
        Txt = "BModel Appearance"
        Hint = "ArghRad also adds several new settings for bmodels that modify"
         " its overall appearance & behavior."$0D"These options are NOT affect"
         "ed by -nobmodlight."
      }
      _ambient: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "red green blue - Three separate brightness Values for red, gre"
         "en, and blue ambient lighting (NOT a standard rgb color)."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "brightness - A single brightness value for plain white ambient"
         " light."
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces. (0.0 - 2.0 scale)"
      }
      _minlighta: =
      {
        Txt = "&"
        Hint = "Applies a mottled light effect of the specified brightness to "
         "all of the bmodel's surfaces."$0D"Brightness is a standard "$22"abso"
         "lute"$22" level (easier than Qrad3 _minlight's 0-2 scale)."
      }
      _lightorigin: =
      {
        Txt = "&"
        Hint = "Temporarily moves the bmodel to the specified coordinate durin"
         "g the lighting calculations."$0D"It can be used to light, and cast l"
         "ight from, this bmodel somewhere other than where it's placed in the"
         " map."$0D"BModels with origin brushes are moved using the origin bru"
         "sh's center, otherwise the bmodel's minimum x,y,z coordinate is used"
         "."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
    }
    turret_driver:form =
    {
      Help = "Must NOT be on the team with the rest of the turret parts.  Inst"
       "ead it must target the turret_breach."
      bbox = '-16 -16 -24 16 16 32'
      mdl = "models/monsters/infantry/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the Turret Driver on the XY plan"
         "e. (Default=0)."
      }
      angles: =
      {
        Txt = "&"
        Hint = "Specifies the facing angle of the Turret Driver in 3 dimension"
         "s as defined by pitch, yaw, and roll. (Default=0 0 0)."
      }
      item: =
      {
        Txt = "&"
        Hint = "Classname of the entity to be spawned by the monster upon his "
         "death."
      }
      item: =
      {
        Typ = "B"
        Txt = ""
        Hint = "Available Classname Spawn"
        Form = "t_item_form:form"
        Cap = "classname spawn...."
      }
      target: =
      {
        Txt = "&"
        Hint = "This must be the Targetname of the turret_breach."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Name of the specific monster."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when skill=2 or g"
         "reater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The monster will be inhibited and not appear when deathmatch=1"
         "."
        Cap = "Not in Deathmatch"
      }
    }
    viewthing:form =
    {
      Help = "Just for debugging level (DON'T USE)."
      bbox = '-8 -8 -8 8 8 8'
      mdl = "models/objects/banner/tris.md2"
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a facing direction on the XY plane. (Default=0)."
      }
      target: =
      {
        Txt = "&"
        Hint = "."
      }
      targetname: =
      {
        Txt = "&"
        Hint = ""
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X256"
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X512"
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X1024"
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Txt = "&"
        Typ = "X2048"
        Cap = "Not in Deathmatch"
      }
    }
    weapon_bfg:form =
    {
      Help = "This is the BFG -Big Freaking Gun- (10th weapon) uses ammo_cells"
       "."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_bfg/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    weapon_chaingun:form =
    {
      Help = "This is the big MachineGun (5th weapon) uses ammo_bullets."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_chain/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    weapon_grenadelauncher:form =
    {
      Help = "This is the Grenade Launcher (6th weapon) uses ammo_grenades."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_launch/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    weapon_hyperblaster:form =
    {
      Help = "This is the Hyper Blaster (8th weapon) uses ammo_cells."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_hyperb/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    weapon_machinegun:form =
    {
      Help = "This is the small MachineGun (4th weapon) uses ammo_bullets."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_machn/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    weapon_railgun:form =
    {
      Help = "This is the RailGun (9th weapon) uses ammo_slugs."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_rail/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    weapon_rocketlauncher:form =
    {
      Help = "This is the Rocket Launcher (7th weapon) uses ammo_rockets."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_rocket/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    weapon_shotgun:form =
    {
      Help = "This is the small ShotGun (2nd weapon) uses ammo_shells."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_shotg/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    weapon_supershotgun:form =
    {
      Help = "This is the big ShotGun (3rd weapon) uses ammo_shells."
      bbox = '-16 -16 -16 16 16 16'
      mdl = "models/weapons/g_shotg2/tris.md2"
      delay: =
      {
        Txt = "&"
        Hint = "Specifies the delay in seconds before target, killtarget and m"
         "essage will fire after the weapon is touched by the player. (Default"
         "=0)."
      }
      killtarget: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be removed from the map when the w"
         "eapon is touched by the player."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the character string to print to the screen when the"
         " weapon is touched by the player."
      }
      target: =
      {
        Txt = "&"
        Hint = "Targetname of the entity to be triggered when the weapon is to"
         "uched by the player."
      }
      targetname: =
      {
        Txt = "&"
        Hint = "Use this to make it disappear by making it triggered by killta"
         "rget."
      }
      team: =
      {
        Txt = "&"
        Hint = "Use for changing Weapons Ammo & Powerups spawning."
      }
      spawnflags: =
      {
        Typ = "X256"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=0."
        Cap = "Not in Easy"
      }
      spawnflags: =
      {
        Typ = "X512"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=1."
        Cap = "Not in Normal"
      }
      spawnflags: =
      {
        Typ = "X1024"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when skil"
         "l=2 or greater."
        Cap = "Not in Hard"
      }
      spawnflags: =
      {
        Typ = "X2048"
        Txt = "&"
        Hint = "The weapon_* entity will be inhibited and not appear when deat"
         "hmatch=1."
        Cap = "Not in Deathmatch"
      }
      _minlight: =
      {
        Txt = "&"
        Hint = "Minimum light (optional)."
      }
    }
    worldspawn:form =
    {
      Help = "Only used for the world."
      gravity: =
      {
        Txt = "&"
        Hint = "Specifies the gravity of map. (Default=800)."
      }
      message: =
      {
        Txt = "&"
        Hint = "Specifies the title of the map."
      }
      nextmap: =
      {
        Txt = "&"
        Hint = "Specifies the name of the next map to be loaded when timelimit"
         " or fraglimit is reached; ignored when deathmatch=0."
      }
      sky: =
      {
        Typ = "EP"
        Txt = "&"
        Hint = "Specifies the name of the environment map to be used. (Default"
         "= unit1_ )."
        BasePath = "$Game\baseq2\env"
        CutPath = "$Game\?\?\"
        DefExt = "pcx"
        DirSep = "/"
      }
      sky: =
      {
        Typ = "C"
        Txt = " "
        Hint = "Pick one of the Quake 2 unit*, space1 Skies."
        Items = "1) unit1_"$0D"2) unit2_"$0D"3) unit3_"$0D"4) unit4_"$0D"5) un"
         "it5_"$0D"6) unit6_"$0D"7) unit7_"$0D"8) unit8_"$0D"9) unit9_"$0D"10)"
         " space1"
        Values = "unit1_"$0D"unit2_"$0D"unit3_"$0D"unit4_"$0D"unit5_"$0D"unit6"
         "_"$0D"unit7_"$0D"unit8_"$0D"unit9_"$0D"space1"
      }
      skyaxis: =
      {
        Txt = "&"
        Hint = "Specifies the axis the sky will rotate around. Ignored if skyr"
         "otate is not set. ex: 0 0 1."
      }
      skyrotate: =
      {
        Txt = "&"
        Hint = "Sets the speed of a rotating sky in degrees/second."
      }
      sounds: =
      {
        Txt = "&"
        Typ = "C"
        Hint = "Specifies the CD track to be played."
        Items = "1) not used, data"$0D"2) Operation Overlord"$0D"3) Rage"$0D"4"
         ") Kill Ratio"$0D"5) March of the Stroggs"$0D"6) The Underworld"$0D"7"
         ") Quad Machine"$0D"8) Big Gun"$0D"9) Descent Into Cerberon"$0D"10) C"
         "limb"$0D"11) Showdown"
        Values = "1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"10"$0D
         "11"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      angle: =
      {
        Txt = "&"
        Hint = "Specifies a direction on the XY plane."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies alternate form, separate RGB brightness."
        Typ = "LN"
      }
      light: =
      {
        Txt = "&"
        Hint = "Specifies ambient brightness to #."
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "The ambient light color RGB."
        Typ = "LN"
      }
      _ambient: =
      {
        Txt = "&"
        Hint = "The amount of ambient light."
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sky_ambient: =
      {
        Txt = "&"
        Hint = "The amount of sky_ambient light (brightness 0-255)."
      }
      _sky_surface: =
      {
        Txt = "&"
        Hint = "The amount of sky surface light (brightness)."
      }
      _sun_ambient: =
      {
        Txt = "&"
        Hint = "This controls the amount of diffuse light in shadows,"$0D"if s"
         "et to 0, shadows will be completely unlit (good Values are 50-200)."$0D
         "Alternatively, you can also set three seperate Values: red, green an"
         "d blue."$0D"(Only works with certain compilers, like ArghRad)"
        Typ = "LN"
      }
      _sun_ambient: =
      {
        Txt = "&"
        Hint = "This controls the amount of diffuse light in shadows,"$0D"if s"
         "et to 0, shadows will be completely unlit (good Values are 50-200)."$0D
         "Alternatively, you can also set three seperate Values: red, green an"
         "d blue."$0D"(Only works with certain compilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun_angle: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle by yaw/pitch."$0D"(Only works with certain c"
         "ompilers, like ArghRad)"
      }
      _sun_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun1's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun_color: =
      {
        Txt = "&"
        Hint = "Controls sun1's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun_diffade: =
      {
        Txt = "&"
        Hint = "Sets sun1's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun_diffuse: =
      {
        Txt = "&"
        Hint = "Sets sun1's diffuse light brightness."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun1's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun_light: =
      {
        Txt = "&"
        Hint = "The amount of light sun1 should produce (800 is a nice value)."
         $0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun_style: =
      {
        Typ = "C"
        Txt = "&"
        Hint = "The style for the light."$0D"(Only works with certain compiler"
         "s, like ArghRad)"
        Items = "0) Normal"$0D"1) Flicker (first variety)"$0D"2) Slow Strong S"
         "trobe"$0D"3) Candle (first variety)"$0D"4) Fast Strobe"$0D"5) Gentle"
         " Pulse"$0D"6) Flicker (second variety)"$0D"7) Candle (second variety"
         ")"$0D"8) Candle (third variety)"$0D"9) Slow Strobe (fourth variety)"$0D
         "10) Flourescent Flicker"$0D"11) Slow Pulse (never to full)"
        Values = "0"$0D"1"$0D"2"$0D"3"$0D"4"$0D"5"$0D"6"$0D"7"$0D"8"$0D"9"$0D"1"
         "0"$0D"11"
      }
      _sun_surface: =
      {
        Txt = "&"
        Hint = "These set the brightness of the normal sky surface light. This"
         " allows both normal surface light and sunlight to shine from the sam"
         "e surfaces (this tends to look better than _sky_ambient)."$0D"bright"
         "ness - A single brightness level."$0D"red green blue - Three separat"
         "e brightness Values for red, green, and blue lighting (normally not "
         "a standard RGB color)."$0D"(Only works with certain compilers, like "
         "ArghRad)"
      }
      _sun_target: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun_vector: =
      {
        Txt = "&"
        Hint = "Sets sun1's angle by a vector."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun2_angle: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle by yaw/pitch."$0D"(Only works with certain c"
         "ompilers, like ArghRad)"
      }
      _sun2_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun2's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun2_color: =
      {
        Txt = "&"
        Hint = "Controls sun2's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun2_diffade: =
      {
        Txt = "&"
        Hint = "Sets sun2's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun2_diffuse: =
      {
        Txt = "&"
        Hint = "Sets sun2's diffuse light brightness."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun2_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun2's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun2_light: =
      {
        Txt = "&"
        Hint = "The amount of light sun2 should produce (800 is a nice value)."
         $0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun2_target: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun2: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun2_vector: =
      {
        Txt = "&"
        Hint = "Sets sun2's angle by a vector."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun3_angle: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle by yaw/pitch."$0D"(Only works with certain c"
         "ompilers, like ArghRad)"
      }
      _sun3_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun3's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun3_color: =
      {
        Txt = "&"
        Hint = "Controls sun3's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun3_diffade: =
      {
        Txt = "&"
        Hint = "Sets sun3's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun3_diffuse: =
      {
        Txt = "&"
        Hint = "Sets sun3's diffuse light brightness."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun3_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun3's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun3_light: =
      {
        Txt = "&"
        Hint = "The amount of light sun3 should produce (800 is a nice value)."
         $0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun3_target: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun3: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle letting it point to a target, like a spotlig"
         "ht."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun3_vector: =
      {
        Txt = "&"
        Hint = "Sets sun3's angle by a vector."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      Sep: =
      {
        Typ = "S"
        Txt = ""
      }
      _sun4_angle: =
      {
        Txt = "&"
        Hint = "Set sun4's angle by yaw/pitch."$0D"(Only works with certain co"
         "mpilers, like ArghRad)"
      }
      _sun4_color: =
      {
        Typ = "LN"
        Txt = "&"
        Hint = "Controls sun4's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun4_color: =
      {
        Txt = "&"
        Hint = "Controls sun4's colour."$0D"(Only works with certain compilers"
         ", like ArghRad)"
      }
      _sun4_diffade: =
      {
        Txt = "&"
        Hint = "Set sun4's diffuse light attenuation."$0D"(Only works with cer"
         "tain compilers, like ArghRad)"
      }
      _sun4_diffuse: =
      {
        Txt = "&"
        Hint = "Set sun4's diffuse light brightness."$0D"(Only works with cert"
         "ain compilers, like ArghRad)"
      }
      _sun4_difwait: =
      {
        Txt = "&"
        Hint = "Sets sun4's diffuse light attenuation."$0D"(Only works with ce"
         "rtain compilers, like ArghRad)"
      }
      _sun4_light: =
      {
        Txt = "&"
        Hint = "The amount of light the sun4 should produce (800 is a nice val"
         "ue)."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun4_target: =
      {
        Txt = "&"
        Hint = "Set sun4's angle letting it point to a target, like a spotligh"
         "t."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun4: =
      {
        Txt = "&"
        Hint = "Set sun4's angle letting it point to a target, like a spotligh"
         "t."$0D"(Only works with certain compilers, like ArghRad)"
      }
      _sun4_vector: =
      {
        Txt = "&"
        Hint = "Set sun4's angle by a vector."$0D"(Only works with certain com"
         "pilers, like ArghRad)"
      }
    }
  }
}
